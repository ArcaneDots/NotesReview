{"version":3,"file":"ui.b96252d0.js","sources":["../../js/ui/map.js","../../js/ui/list.js","../../templates/dynamic/note.hbs?raw","../../js/ui/ui.js"],"sourcesContent":["import COLORS from '../../../assets/markers/colors.json';\n\nimport Leaflet from '../leaflet.js';\nimport { STATUS } from '../query.js';\n\nimport * as Handlebars from 'handlebars';\nimport t from '../../templates/dynamic/comment.hbs?raw';\nconst template = Handlebars.compile(t);\n\nexport default class Map {\n  constructor() {\n    this.map = new Leaflet('map-container');\n    this.container = document.getElementById('note-container');\n\n    this.active = null;\n\n    this.cluster = L.markerClusterGroup({\n      maxClusterRadius: 40,\n      showCoverageOnHover: false\n    });\n    this.map.addLayer(this.cluster);\n    this.markers = [];\n\n    this.halo = L.circleMarker([0, 0]);\n    this.map.addLayer(this.halo);\n\n    this.features = L.geoJSON();\n    this.map.addLayer(this.features);\n\n    this.map.onClick(() => this.clear());\n  }\n\n  /**\n    * Add a note to the marker layer\n    *\n    * @function\n    * @param {Note} note\n    * @param {Query} query\n    * @returns {Promise}\n    */\n  add(note, query) {\n    let icon;\n    if (query.data.status === STATUS.ALL) {\n      icon = note.status === STATUS.OPEN ? 'markers/green.svg' : 'markers/red.svg';\n    } else {\n      icon = `markers/${note.color}.svg`;\n    }\n\n    const marker = L.marker(note.coordinates, {\n      icon: new L.divIcon({\n        html: `<img alt=\"\" src=\"${icon}\">`,\n        iconSize: [25, 40],// [width, height]\n        iconAnchor: [25 / 2, 40], // [width / 2, height]\n        popupAnchor: [0, -30],\n        className: 'marker-icon'\n      })\n    });\n\n    marker.on('click', () => {\n      if (this.active === note) {\n        return;\n      }\n\n      this.clear();\n      this.active = note;\n\n      this.container.innerHTML = template(note, {\n        allowedProtoProperties: {\n          actions: true,\n          badges: true\n        }\n      });\n\n      setTimeout(() => {\n        this.container.classList.remove('out-of-view');\n      }, 100);\n\n      // Show halo with the correct style at the position of the note\n      this.halo = L.circleMarker(note.coordinates, {\n        color: COLORS[note.color].fill,\n        weight: 1\n      });\n      this.map.addLayer(this.halo);\n\n      // If an element is linked in the note text, show the geometry of it on the map\n      const { linked } = note;\n      if (linked) {\n        const overpass = `\n          [out:json];\n          ${linked.type}(id:${linked.id});\n          convert Feature ::=::,::id=id(),::geom=geom();\n          out geom tags;`;\n\n        fetch('https://overpass-api.de/api/interpreter', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: new URLSearchParams({\n            'data': overpass\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(`Error while fetching Overpass API: ${response.status} ${response.statusText}`);\n          }\n        }).then(json => {\n          if (!('elements' in json) || json.elements.length === 0) {\n            return;\n          }\n\n          const [ element ] = json.elements;\n          // TODO: Points are ignored because they use a similar marker to the other markers by default which might lead to confusion\n          if (element.geometry.type !== 'Point') {\n            this.features.addData(element);\n          }\n        });\n      }\n    });\n\n    this.markers.push(marker);\n  }\n\n  /**\n    * Remove temporary layers from the map and reset values\n    *\n    * @function\n    * @returns {void}\n    */\n  clear() {\n    this.active = null;\n    this.halo.remove();\n    this.features.clearLayers();\n    this.container.classList.add('out-of-view');\n  }\n\n  /**\n    * Display all notes on the map and zoom the map to show them all\n    *\n    * @function\n    * @param {Boolean} reload Indicates that this function has been called by a reload function\n    * @returns {void}\n    */\n  apply(reload) {\n    this.map.resize();\n\n    this.clear();\n    this.cluster.clearLayers();\n    this.cluster.addLayers(this.markers);\n\n    // TODO: Leave this choice to the user by implementing a button which offers to zoom to contain all features\n    if (!reload && this.markers.length > 0) {\n      this.map.flyToBounds(this.cluster.getBounds(), 1);\n    }\n\n    this.markers = [];\n  }\n}\n","import * as Handlebars from 'handlebars';\nimport t from '../../templates/dynamic/note.hbs?raw';\nconst template = Handlebars.compile(t);\n\nexport default class List {\n  constructor() {\n    this.fragment = new DocumentFragment();\n    this.children = [];\n  }\n\n  /**\n    * Add a note to the list as a card\n    *\n    * @function\n    * @param {Note} note\n    * @returns {Promise}\n    */\n  add(note) {\n    const div = document.createElement('div');\n    div.classList.add('column', 'col-4', 'col-md-6', 'col-sm-12', 'p-1');\n    div.innerHTML = template(note, {\n      allowedProtoProperties: {\n        actions: true,\n        badges: true\n      }\n    });\n    this.fragment.appendChild(div);\n  }\n\n  /**\n    * Shows all notes\n    *\n    * @function\n    * @todo Use {@link https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment/replaceChildren} if this becomes more established\n    * @returns {void}\n    */\n  apply() {\n    const container = document.getElementById('list');\n    while (container.lastChild) {\n      container.removeChild(container.lastChild);\n    }\n    document.getElementById('list').appendChild(this.fragment);\n  }\n}\n","export default \"<div class=\\\"card\\\" data-note-id=\\\"{{id}}\\\">\\n  <div class=\\\"card-header\\\">\\n    {{{badges.user}}}\\n    {{{badges.age}}}\\n    {{{badges.comments}}}\\n    {{{badges.country}}}\\n    {{{badges.report}}}\\n  </div>\\n\\n  <div class=\\\"card-body text-break\\\">\\n    {{{comments.0.html}}}\\n  </div>\\n\\n  <div class=\\\"card-footer\\\">\\n    {{> actions actions}}\\n  </div>\\n</div>\\n\"","import { STATUS } from '../query.js';\nimport MapView from './map.js';\nimport ListView from './list.js';\n\nconst Views = {\n  map: new MapView(),\n  list: new ListView()\n};\n\nexport default class UI {\n  /**\n    * Constructor for controlling the view (e.g. a map or a list)\n    *\n    * @constructor\n    * @param {View} view\n    */\n  constructor(view) {\n    this.notes = [];\n    this.query = null;\n    this.view = view;\n  }\n\n  set view(view) {\n    const values = Object.keys(Views);\n    if (!values.includes(view)) {\n      throw new TypeError(`Argument must be one of ${values.join(', ')}`);\n    }\n    this._view = {\n      name: view,\n      handler: Views[view]\n    };\n    this.reload();\n  }\n\n  get view() {\n    return this._view.name;\n  }\n\n  /**\n    * Delegate the information to all views\n    *\n    * @function\n    * @param {Array} notes\n    * @param {Query} query\n    * @param {Boolean} reload\n    * @returns {Promise}\n    */\n  show(notes, query, reload) {\n    this.query = query;\n    this.notes = notes;\n\n    const amount = notes.length;\n    const average = notes.reduce((accumulator, current) => accumulator + current.created.getTime(), 0) / amount;\n\n    notes.forEach(note => {\n      if (this.isNoteVisible(note, query)) {\n        this._view.handler.add(note, query);\n      }\n    });\n    this._view.handler.apply(reload);\n\n    return Promise.resolve({\n      amount,\n      average: new Date(average)\n    });\n  }\n\n  /**\n    * Check whether a note can be shown\n    *\n    * @function\n    * @param {Note} note Single note which should be checked.\n    * @param {Query} query The query which was used in order to find the note\n    * @returns {Boolean}\n    */\n  isNoteVisible(note, query) {\n    return (query.data.status === STATUS.OPEN ? note.status === STATUS.OPEN : true) &&\n           (query.data.status === STATUS.CLOSED ? note.status === STATUS.CLOSED : true);\n  }\n\n  /**\n    * Searches for the note with the specified id and returns it\n    *\n    * @function\n    * @param {Number} id\n    * @returns {Note}\n    */\n  get(id) {\n    return this.notes.find(note => note.id === id);\n  }\n\n  /**\n    * Updates a single note with new data\n    *\n    * @function\n    * @param {Number} id\n    * @param {Note} note\n    * @returns {Promise}\n    */\n  update(id, note) {\n    const index = this.notes.findIndex(element => element.id === id);\n    if (index === -1) {\n      throw new Error(`The note with the id ${id} could not be found in the array`);\n    }\n    this.notes[index] = note;\n    return this.reload();\n  }\n\n  /**\n    * Reload the notes because another event happened like a changed filter\n    *\n    * @function\n    * @returns {Promise}\n    */\n  reload() {\n    return this.show(this.notes, this.query, true);\n  }\n}\n"],"names":["template","Handlebars.compile","t","Views","map","[object Object]","Leaflet","container","document","getElementById","active","cluster","L","markerClusterGroup","maxClusterRadius","showCoverageOnHover","addLayer","this","markers","halo","circleMarker","features","geoJSON","onClick","clear","note","query","icon","data","status","STATUS","ALL","OPEN","color","marker","coordinates","divIcon","html","iconSize","iconAnchor","popupAnchor","className","on","innerHTML","allowedProtoProperties","actions","badges","classList","remove","COLORS","fill","weight","linked","overpass","type","id","method","headers","Content-Type","body","URLSearchParams","then","response","ok","json","Error","statusText","elements","length","element","geometry","addData","push","clearLayers","add","reload","resize","addLayers","flyToBounds","getBounds","list","fragment","DocumentFragment","children","div","createElement","appendChild","lastChild","removeChild","view","notes","values","Object","keys","includes","TypeError","join","_view","name","handler","amount","average","reduce","accumulator","current","created","getTime","forEach","isNoteVisible","apply","Promise","resolve","Date","CLOSED","find","index","findIndex","show"],"mappings":"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"}
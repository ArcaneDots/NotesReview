import{L as e,i as t}from"./index.404a2fb5.js";import{h as s}from"./vendor.cd34abf3.js";var n='<div class="card" data-note-id="{{id}}">\n  <div class="card-header">\n    {{{badges.user}}}\n    {{{badges.age}}}\n    {{{badges.comments}}}\n    {{#list}}{{{badges.country}}}{{/list}}\n    {{{badges.report}}}\n  </div>\n\n  <div class="card-body text-break">\n    {{{comment}}}\n  </div>\n\n  <div class="card-footer">\n    {{#each actions}}\n      {{#if link}}\n      <a class="btn btn-primary btn-sm my-1 {{class}}" href="{{link}}"\n        {{#remote}}target="remote"{{else}}target="_blank" rel="noopener"{{/remote}}>\n        <svg class="icon"><use xlink:href="#icon-{{icon}}"></use></svg>\n        {{text}}\n      </a>\n      {{else}}\n      <button class="btn btn-primary btn-sm my-1 {{class}}">\n        <svg class="icon"><use xlink:href="#icon-{{icon}}"></use></svg>\n        {{text}}\n      </button>\n      {{/if}}\n    {{/each}}\n  </div>\n</div>\n';const r=s.compile(n);const i=s.compile(n);const a={map:new class{constructor(){this.cluster=L.markerClusterGroup({maxClusterRadius:40}),this.markers=[],this.map=new e("map"),this.map.addLayer(this.cluster)}add(e,t){let s;s=t.closed?"open"===e.status?"markers/green.svg":"markers/red.svg":`markers/${e.color}.svg`;const n=L.marker(e.coordinates,{icon:new L.divIcon({html:`<img alt="" src="${s}" class="marker-icon">`,iconSize:[25,40],iconAnchor:[12.5,40],popupAnchor:[0,-30],className:"marker-icon"})});n.bindPopup(r({id:e.id,badges:e.badges,comment:e.comments[0].html,actions:e.actions}),{maxWidth:e.comments[0].images.length>1?document.getElementById("map").offsetWidth-200:350}),this.markers.push(n)}apply(e){this.map.resize(),this.cluster.clearLayers(),this.cluster.addLayers(this.markers),!e&&this.markers.length>0&&this.map.flyToBounds(this.cluster.getBounds(),1),this.markers=[]}},list:new class{constructor(){this.fragment=new DocumentFragment,this.children=[]}add(e){const t=document.createElement("div");t.classList.add("column","col-4","col-md-6","col-sm-12","p-1"),t.innerHTML=i({list:!0,id:e.id,badges:e.badges,comment:e.comments[0].html,actions:e.actions}),this.fragment.appendChild(t)}apply(){const e=document.getElementById("list");for(;e.lastChild;)e.removeChild(e.lastChild);document.getElementById("list").appendChild(this.fragment)}}};export default class{constructor(e){this.notes=[],this.query=null,this.view=e}set view(e){const t=Object.keys(a);if(!t.includes(e))throw new TypeError(`Argument must be one of ${t.join(", ")}`);this._view={name:e,handler:a[e]},this.reload()}get view(){return this._view.name}show(e,s,n){this.query=s,e=e.filter((e=>t(e,s))),this.notes=e;const r=e.length,i=e.reduce(((e,t)=>e+t.created.getTime()),0)/r;return e.forEach((e=>{this._view.handler.add(e,s)})),this._view.handler.apply(n),Promise.resolve({amount:r,average:new Date(i)})}get(e){return this.notes.find((t=>t.id===e))}update(e,t){const s=this.notes.findIndex((t=>t.id===e));if(-1===s)throw new Error(`The note with the id ${e} could not be found in the array`);return this.notes[s]=t,this.reload()}reload(){return this.show(this.notes,this.query,!0)}}

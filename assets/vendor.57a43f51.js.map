{"version":3,"file":"vendor.57a43f51.js","sources":["../../../node_modules/abortcontroller-polyfill/dist/abortcontroller-polyfill-only.js","../../../node_modules/jshashes/hashes.js","../../../node_modules/ohauth/index.js","../../../node_modules/resolve-url/resolve-url.js","../../../node_modules/store/src/util.js","../../../node_modules/store/src/store-engine.js","../../../node_modules/store/storages/localStorage.js","../../../node_modules/store/storages/oldFF-globalStorage.js","../../../node_modules/store/storages/oldIE-userDataStorage.js","../../../node_modules/store/storages/cookieStorage.js","../../../node_modules/store/storages/sessionStorage.js","../../../node_modules/store/storages/memoryStorage.js","../../../node_modules/store/storages/all.js","../../../node_modules/store/plugins/lib/json2.js","../../../node_modules/store/plugins/json2.js","../../../node_modules/store/dist/store.legacy.js","../../../node_modules/osm-auth/index.js","../../../node_modules/handlebars/dist/cjs/handlebars/utils.js","../../../node_modules/handlebars/dist/cjs/handlebars/exception.js","../../../node_modules/handlebars/dist/cjs/handlebars/helpers/block-helper-missing.js","../../../node_modules/handlebars/dist/cjs/handlebars/helpers/each.js","../../../node_modules/handlebars/dist/cjs/handlebars/helpers/helper-missing.js","../../../node_modules/handlebars/dist/cjs/handlebars/helpers/if.js","../../../node_modules/handlebars/dist/cjs/handlebars/helpers/log.js","../../../node_modules/handlebars/dist/cjs/handlebars/helpers/lookup.js","../../../node_modules/handlebars/dist/cjs/handlebars/helpers/with.js","../../../node_modules/handlebars/dist/cjs/handlebars/helpers.js","../../../node_modules/handlebars/dist/cjs/handlebars/decorators/inline.js","../../../node_modules/handlebars/dist/cjs/handlebars/decorators.js","../../../node_modules/handlebars/dist/cjs/handlebars/logger.js","../../../node_modules/handlebars/dist/cjs/handlebars/internal/create-new-lookup-object.js","../../../node_modules/handlebars/dist/cjs/handlebars/internal/proto-access.js","../../../node_modules/handlebars/dist/cjs/handlebars/base.js","../../../node_modules/handlebars/dist/cjs/handlebars/safe-string.js","../../../node_modules/handlebars/dist/cjs/handlebars/internal/wrapHelper.js","../../../node_modules/handlebars/dist/cjs/handlebars/runtime.js","../../../node_modules/handlebars/dist/cjs/handlebars/no-conflict.js","../../../node_modules/handlebars/dist/cjs/handlebars.runtime.js","../../../node_modules/handlebars/dist/cjs/handlebars/compiler/ast.js","../../../node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js","../../../node_modules/handlebars/dist/cjs/handlebars/compiler/visitor.js","../../../node_modules/handlebars/dist/cjs/handlebars/compiler/whitespace-control.js","../../../node_modules/handlebars/dist/cjs/handlebars/compiler/helpers.js","../../../node_modules/handlebars/dist/cjs/handlebars/compiler/base.js","../../../node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js","../../../node_modules/handlebars/dist/cjs/handlebars/compiler/code-gen.js","../../../node_modules/handlebars/dist/cjs/handlebars/compiler/javascript-compiler.js","../../../node_modules/handlebars/dist/cjs/handlebars.js","../../../node_modules/@mapbox/tilebelt/index.js","../../../node_modules/@mapbox/point-geometry/index.js","../../../node_modules/@mapbox/vector-tile/lib/vectortilefeature.js","../../../node_modules/@mapbox/vector-tile/lib/vectortilelayer.js","../../../node_modules/@mapbox/vector-tile/lib/vectortile.js","../../../node_modules/@mapbox/vector-tile/index.js","../../../node_modules/ieee754/index.js","../../../node_modules/pbf/index.js","../../../node_modules/quickselect/quickselect.js","../../../node_modules/rbush/index.js","../../../node_modules/lineclip/index.js","../../../node_modules/which-polygon/index.js","../../../node_modules/@ideditor/country-coder/dist/country-coder.mjs","../../../node_modules/anchorme/dist/node/tlds.js","../../../node_modules/anchorme/dist/node/dictionary.js","../../../node_modules/anchorme/dist/node/transform.js","../../../node_modules/anchorme/dist/node/regex.js","../../../node_modules/anchorme/dist/node/utils.js","../../../node_modules/anchorme/dist/node/index.js"],"sourcesContent":["(function (factory) {\n  typeof define === 'function' && define.amd ? define(factory) :\n  factory();\n}((function () { 'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n    return function _createSuperInternal() {\n      var Super = _getPrototypeOf(Derived),\n          result;\n\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _getPrototypeOf(this).constructor;\n\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n\n      return _possibleConstructorReturn(this, result);\n    };\n  }\n\n  function _superPropBase(object, property) {\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n      object = _getPrototypeOf(object);\n      if (object === null) break;\n    }\n\n    return object;\n  }\n\n  function _get(target, property, receiver) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n      _get = Reflect.get;\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = _superPropBase(target, property);\n\n        if (!base) return;\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n\n        if (desc.get) {\n          return desc.get.call(receiver);\n        }\n\n        return desc.value;\n      };\n    }\n\n    return _get(target, property, receiver || target);\n  }\n\n  var Emitter = /*#__PURE__*/function () {\n    function Emitter() {\n      _classCallCheck(this, Emitter);\n\n      Object.defineProperty(this, 'listeners', {\n        value: {},\n        writable: true,\n        configurable: true\n      });\n    }\n\n    _createClass(Emitter, [{\n      key: \"addEventListener\",\n      value: function addEventListener(type, callback, options) {\n        if (!(type in this.listeners)) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push({\n          callback: callback,\n          options: options\n        });\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(type, callback) {\n        if (!(type in this.listeners)) {\n          return;\n        }\n\n        var stack = this.listeners[type];\n\n        for (var i = 0, l = stack.length; i < l; i++) {\n          if (stack[i].callback === callback) {\n            stack.splice(i, 1);\n            return;\n          }\n        }\n      }\n    }, {\n      key: \"dispatchEvent\",\n      value: function dispatchEvent(event) {\n        if (!(event.type in this.listeners)) {\n          return;\n        }\n\n        var stack = this.listeners[event.type];\n        var stackToCall = stack.slice();\n\n        for (var i = 0, l = stackToCall.length; i < l; i++) {\n          var listener = stackToCall[i];\n\n          try {\n            listener.callback.call(this, event);\n          } catch (e) {\n            Promise.resolve().then(function () {\n              throw e;\n            });\n          }\n\n          if (listener.options && listener.options.once) {\n            this.removeEventListener(event.type, listener.callback);\n          }\n        }\n\n        return !event.defaultPrevented;\n      }\n    }]);\n\n    return Emitter;\n  }();\n\n  var AbortSignal = /*#__PURE__*/function (_Emitter) {\n    _inherits(AbortSignal, _Emitter);\n\n    var _super = _createSuper(AbortSignal);\n\n    function AbortSignal() {\n      var _this;\n\n      _classCallCheck(this, AbortSignal);\n\n      _this = _super.call(this); // Some versions of babel does not transpile super() correctly for IE <= 10, if the parent\n      // constructor has failed to run, then \"this.listeners\" will still be undefined and then we call\n      // the parent constructor directly instead as a workaround. For general details, see babel bug:\n      // https://github.com/babel/babel/issues/3041\n      // This hack was added as a fix for the issue described here:\n      // https://github.com/Financial-Times/polyfill-library/pull/59#issuecomment-477558042\n\n      if (!_this.listeners) {\n        Emitter.call(_assertThisInitialized(_this));\n      } // Compared to assignment, Object.defineProperty makes properties non-enumerable by default and\n      // we want Object.keys(new AbortController().signal) to be [] for compat with the native impl\n\n\n      Object.defineProperty(_assertThisInitialized(_this), 'aborted', {\n        value: false,\n        writable: true,\n        configurable: true\n      });\n      Object.defineProperty(_assertThisInitialized(_this), 'onabort', {\n        value: null,\n        writable: true,\n        configurable: true\n      });\n      return _this;\n    }\n\n    _createClass(AbortSignal, [{\n      key: \"toString\",\n      value: function toString() {\n        return '[object AbortSignal]';\n      }\n    }, {\n      key: \"dispatchEvent\",\n      value: function dispatchEvent(event) {\n        if (event.type === 'abort') {\n          this.aborted = true;\n\n          if (typeof this.onabort === 'function') {\n            this.onabort.call(this, event);\n          }\n        }\n\n        _get(_getPrototypeOf(AbortSignal.prototype), \"dispatchEvent\", this).call(this, event);\n      }\n    }]);\n\n    return AbortSignal;\n  }(Emitter);\n  var AbortController = /*#__PURE__*/function () {\n    function AbortController() {\n      _classCallCheck(this, AbortController);\n\n      // Compared to assignment, Object.defineProperty makes properties non-enumerable by default and\n      // we want Object.keys(new AbortController()) to be [] for compat with the native impl\n      Object.defineProperty(this, 'signal', {\n        value: new AbortSignal(),\n        writable: true,\n        configurable: true\n      });\n    }\n\n    _createClass(AbortController, [{\n      key: \"abort\",\n      value: function abort() {\n        var event;\n\n        try {\n          event = new Event('abort');\n        } catch (e) {\n          if (typeof document !== 'undefined') {\n            if (!document.createEvent) {\n              // For Internet Explorer 8:\n              event = document.createEventObject();\n              event.type = 'abort';\n            } else {\n              // For Internet Explorer 11:\n              event = document.createEvent('Event');\n              event.initEvent('abort', false, false);\n            }\n          } else {\n            // Fallback where document isn't available:\n            event = {\n              type: 'abort',\n              bubbles: false,\n              cancelable: false\n            };\n          }\n        }\n\n        this.signal.dispatchEvent(event);\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return '[object AbortController]';\n      }\n    }]);\n\n    return AbortController;\n  }();\n\n  if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n    // These are necessary to make sure that we get correct output for:\n    // Object.prototype.toString.call(new AbortController())\n    AbortController.prototype[Symbol.toStringTag] = 'AbortController';\n    AbortSignal.prototype[Symbol.toStringTag] = 'AbortSignal';\n  }\n\n  function polyfillNeeded(self) {\n    if (self.__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL) {\n      console.log('__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL=true is set, will force install polyfill');\n      return true;\n    } // Note that the \"unfetch\" minimal fetch polyfill defines fetch() without\n    // defining window.Request, and this polyfill need to work on top of unfetch\n    // so the below feature detection needs the !self.AbortController part.\n    // The Request.prototype check is also needed because Safari versions 11.1.2\n    // up to and including 12.1.x has a window.AbortController present but still\n    // does NOT correctly implement abortable fetch:\n    // https://bugs.webkit.org/show_bug.cgi?id=174980#c2\n\n\n    return typeof self.Request === 'function' && !self.Request.prototype.hasOwnProperty('signal') || !self.AbortController;\n  }\n\n  (function (self) {\n\n    if (!polyfillNeeded(self)) {\n      return;\n    }\n\n    self.AbortController = AbortController;\n    self.AbortSignal = AbortSignal;\n  })(typeof self !== 'undefined' ? self : global);\n\n})));\n","/**\n * jshashes - https://github.com/h2non/jshashes\n * Released under the \"New BSD\" license\n *\n * Algorithms specification:\n *\n * MD5 - http://www.ietf.org/rfc/rfc1321.txt\n * RIPEMD-160 - http://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n * SHA1   - http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n * SHA256 - http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n * SHA512 - http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n * HMAC - http://www.ietf.org/rfc/rfc2104.txt\n */\n(function() {\n  var Hashes;\n\n  function utf8Encode(str) {\n    var x, y, output = '',\n      i = -1,\n      l;\n\n    if (str && str.length) {\n      l = str.length;\n      while ((i += 1) < l) {\n        /* Decode utf-16 surrogate pairs */\n        x = str.charCodeAt(i);\n        y = i + 1 < l ? str.charCodeAt(i + 1) : 0;\n        if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {\n          x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n          i += 1;\n        }\n        /* Encode output as utf-8 */\n        if (x <= 0x7F) {\n          output += String.fromCharCode(x);\n        } else if (x <= 0x7FF) {\n          output += String.fromCharCode(0xC0 | ((x >>> 6) & 0x1F),\n            0x80 | (x & 0x3F));\n        } else if (x <= 0xFFFF) {\n          output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\n            0x80 | ((x >>> 6) & 0x3F),\n            0x80 | (x & 0x3F));\n        } else if (x <= 0x1FFFFF) {\n          output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\n            0x80 | ((x >>> 12) & 0x3F),\n            0x80 | ((x >>> 6) & 0x3F),\n            0x80 | (x & 0x3F));\n        }\n      }\n    }\n    return output;\n  }\n\n  function utf8Decode(str) {\n    var i, ac, c1, c2, c3, arr = [],\n      l;\n    i = ac = c1 = c2 = c3 = 0;\n\n    if (str && str.length) {\n      l = str.length;\n      str += '';\n\n      while (i < l) {\n        c1 = str.charCodeAt(i);\n        ac += 1;\n        if (c1 < 128) {\n          arr[ac] = String.fromCharCode(c1);\n          i += 1;\n        } else if (c1 > 191 && c1 < 224) {\n          c2 = str.charCodeAt(i + 1);\n          arr[ac] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n          i += 2;\n        } else {\n          c2 = str.charCodeAt(i + 1);\n          c3 = str.charCodeAt(i + 2);\n          arr[ac] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n          i += 3;\n        }\n      }\n    }\n    return arr.join('');\n  }\n\n  /**\n   * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n   * to work around bugs in some JS interpreters.\n   */\n\n  function safe_add(x, y) {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n      msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return (msw << 16) | (lsw & 0xFFFF);\n  }\n\n  /**\n   * Bitwise rotate a 32-bit number to the left.\n   */\n\n  function bit_rol(num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt));\n  }\n\n  /**\n   * Convert a raw string to a hex string\n   */\n\n  function rstr2hex(input, hexcase) {\n    var hex_tab = hexcase ? '0123456789ABCDEF' : '0123456789abcdef',\n      output = '',\n      x, i = 0,\n      l = input.length;\n    for (; i < l; i += 1) {\n      x = input.charCodeAt(i);\n      output += hex_tab.charAt((x >>> 4) & 0x0F) + hex_tab.charAt(x & 0x0F);\n    }\n    return output;\n  }\n\n  /**\n   * Encode a string as utf-16\n   */\n\n  function str2rstr_utf16le(input) {\n    var i, l = input.length,\n      output = '';\n    for (i = 0; i < l; i += 1) {\n      output += String.fromCharCode(input.charCodeAt(i) & 0xFF, (input.charCodeAt(i) >>> 8) & 0xFF);\n    }\n    return output;\n  }\n\n  function str2rstr_utf16be(input) {\n    var i, l = input.length,\n      output = '';\n    for (i = 0; i < l; i += 1) {\n      output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF, input.charCodeAt(i) & 0xFF);\n    }\n    return output;\n  }\n\n  /**\n   * Convert an array of big-endian words to a string\n   */\n\n  function binb2rstr(input) {\n    var i, l = input.length * 32,\n      output = '';\n    for (i = 0; i < l; i += 8) {\n      output += String.fromCharCode((input[i >> 5] >>> (24 - i % 32)) & 0xFF);\n    }\n    return output;\n  }\n\n  /**\n   * Convert an array of little-endian words to a string\n   */\n\n  function binl2rstr(input) {\n    var i, l = input.length * 32,\n      output = '';\n    for (i = 0; i < l; i += 8) {\n      output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\n    }\n    return output;\n  }\n\n  /**\n   * Convert a raw string to an array of little-endian words\n   * Characters >255 have their high-byte silently ignored.\n   */\n\n  function rstr2binl(input) {\n    var i, l = input.length * 8,\n      output = Array(input.length >> 2),\n      lo = output.length;\n    for (i = 0; i < lo; i += 1) {\n      output[i] = 0;\n    }\n    for (i = 0; i < l; i += 8) {\n      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\n    }\n    return output;\n  }\n\n  /**\n   * Convert a raw string to an array of big-endian words\n   * Characters >255 have their high-byte silently ignored.\n   */\n\n  function rstr2binb(input) {\n    var i, l = input.length * 8,\n      output = Array(input.length >> 2),\n      lo = output.length;\n    for (i = 0; i < lo; i += 1) {\n      output[i] = 0;\n    }\n    for (i = 0; i < l; i += 8) {\n      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);\n    }\n    return output;\n  }\n\n  /**\n   * Convert a raw string to an arbitrary string encoding\n   */\n\n  function rstr2any(input, encoding) {\n    var divisor = encoding.length,\n      remainders = Array(),\n      i, q, x, ld, quotient, dividend, output, full_length;\n\n    /* Convert to an array of 16-bit big-endian values, forming the dividend */\n    dividend = Array(Math.ceil(input.length / 2));\n    ld = dividend.length;\n    for (i = 0; i < ld; i += 1) {\n      dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\n    }\n\n    /**\n     * Repeatedly perform a long division. The binary array forms the dividend,\n     * the length of the encoding is the divisor. Once computed, the quotient\n     * forms the dividend for the next step. We stop when the dividend is zerHashes.\n     * All remainders are stored for later use.\n     */\n    while (dividend.length > 0) {\n      quotient = Array();\n      x = 0;\n      for (i = 0; i < dividend.length; i += 1) {\n        x = (x << 16) + dividend[i];\n        q = Math.floor(x / divisor);\n        x -= q * divisor;\n        if (quotient.length > 0 || q > 0) {\n          quotient[quotient.length] = q;\n        }\n      }\n      remainders[remainders.length] = x;\n      dividend = quotient;\n    }\n\n    /* Convert the remainders to the output string */\n    output = '';\n    for (i = remainders.length - 1; i >= 0; i--) {\n      output += encoding.charAt(remainders[i]);\n    }\n\n    /* Append leading zero equivalents */\n    full_length = Math.ceil(input.length * 8 / (Math.log(encoding.length) / Math.log(2)));\n    for (i = output.length; i < full_length; i += 1) {\n      output = encoding[0] + output;\n    }\n    return output;\n  }\n\n  /**\n   * Convert a raw string to a base-64 string\n   */\n\n  function rstr2b64(input, b64pad) {\n    var tab = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n      output = '',\n      len = input.length,\n      i, j, triplet;\n    b64pad = b64pad || '=';\n    for (i = 0; i < len; i += 3) {\n      triplet = (input.charCodeAt(i) << 16) | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0) | (i + 2 < len ? input.charCodeAt(i + 2) : 0);\n      for (j = 0; j < 4; j += 1) {\n        if (i * 8 + j * 6 > input.length * 8) {\n          output += b64pad;\n        } else {\n          output += tab.charAt((triplet >>> 6 * (3 - j)) & 0x3F);\n        }\n      }\n    }\n    return output;\n  }\n\n  Hashes = {\n    /**\n     * @property {String} version\n     * @readonly\n     */\n    VERSION: '1.0.6',\n    /**\n     * @member Hashes\n     * @class Base64\n     * @constructor\n     */\n    Base64: function() {\n      // private properties\n      var tab = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n        pad = '=', // default pad according with the RFC standard\n        url = false, // URL encoding support @todo\n        utf8 = true; // by default enable UTF-8 support encoding\n\n      // public method for encoding\n      this.encode = function(input) {\n        var i, j, triplet,\n          output = '',\n          len = input.length;\n\n        pad = pad || '=';\n        input = (utf8) ? utf8Encode(input) : input;\n\n        for (i = 0; i < len; i += 3) {\n          triplet = (input.charCodeAt(i) << 16) | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0) | (i + 2 < len ? input.charCodeAt(i + 2) : 0);\n          for (j = 0; j < 4; j += 1) {\n            if (i * 8 + j * 6 > len * 8) {\n              output += pad;\n            } else {\n              output += tab.charAt((triplet >>> 6 * (3 - j)) & 0x3F);\n            }\n          }\n        }\n        return output;\n      };\n\n      // public method for decoding\n      this.decode = function(input) {\n        // var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var i, o1, o2, o3, h1, h2, h3, h4, bits, ac,\n          dec = '',\n          arr = [];\n        if (!input) {\n          return input;\n        }\n\n        i = ac = 0;\n        input = input.replace(new RegExp('\\\\' + pad, 'gi'), ''); // use '='\n        //input += '';\n\n        do { // unpack four hexets into three octets using index points in b64\n          h1 = tab.indexOf(input.charAt(i += 1));\n          h2 = tab.indexOf(input.charAt(i += 1));\n          h3 = tab.indexOf(input.charAt(i += 1));\n          h4 = tab.indexOf(input.charAt(i += 1));\n\n          bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\n\n          o1 = bits >> 16 & 0xff;\n          o2 = bits >> 8 & 0xff;\n          o3 = bits & 0xff;\n          ac += 1;\n\n          if (h3 === 64) {\n            arr[ac] = String.fromCharCode(o1);\n          } else if (h4 === 64) {\n            arr[ac] = String.fromCharCode(o1, o2);\n          } else {\n            arr[ac] = String.fromCharCode(o1, o2, o3);\n          }\n        } while (i < input.length);\n\n        dec = arr.join('');\n        dec = (utf8) ? utf8Decode(dec) : dec;\n\n        return dec;\n      };\n\n      // set custom pad string\n      this.setPad = function(str) {\n        pad = str || pad;\n        return this;\n      };\n      // set custom tab string characters\n      this.setTab = function(str) {\n        tab = str || tab;\n        return this;\n      };\n      this.setUTF8 = function(bool) {\n        if (typeof bool === 'boolean') {\n          utf8 = bool;\n        }\n        return this;\n      };\n    },\n\n    /**\n     * CRC-32 calculation\n     * @member Hashes\n     * @method CRC32\n     * @static\n     * @param {String} str Input String\n     * @return {String}\n     */\n    CRC32: function(str) {\n      var crc = 0,\n        x = 0,\n        y = 0,\n        table, i, iTop;\n      str = utf8Encode(str);\n\n      table = [\n        '00000000 77073096 EE0E612C 990951BA 076DC419 706AF48F E963A535 9E6495A3 0EDB8832 ',\n        '79DCB8A4 E0D5E91E 97D2D988 09B64C2B 7EB17CBD E7B82D07 90BF1D91 1DB71064 6AB020F2 F3B97148 ',\n        '84BE41DE 1ADAD47D 6DDDE4EB F4D4B551 83D385C7 136C9856 646BA8C0 FD62F97A 8A65C9EC 14015C4F ',\n        '63066CD9 FA0F3D63 8D080DF5 3B6E20C8 4C69105E D56041E4 A2677172 3C03E4D1 4B04D447 D20D85FD ',\n        'A50AB56B 35B5A8FA 42B2986C DBBBC9D6 ACBCF940 32D86CE3 45DF5C75 DCD60DCF ABD13D59 26D930AC ',\n        '51DE003A C8D75180 BFD06116 21B4F4B5 56B3C423 CFBA9599 B8BDA50F 2802B89E 5F058808 C60CD9B2 ',\n        'B10BE924 2F6F7C87 58684C11 C1611DAB B6662D3D 76DC4190 01DB7106 98D220BC EFD5102A 71B18589 ',\n        '06B6B51F 9FBFE4A5 E8B8D433 7807C9A2 0F00F934 9609A88E E10E9818 7F6A0DBB 086D3D2D 91646C97 ',\n        'E6635C01 6B6B51F4 1C6C6162 856530D8 F262004E 6C0695ED 1B01A57B 8208F4C1 F50FC457 65B0D9C6 ',\n        '12B7E950 8BBEB8EA FCB9887C 62DD1DDF 15DA2D49 8CD37CF3 FBD44C65 4DB26158 3AB551CE A3BC0074 ',\n        'D4BB30E2 4ADFA541 3DD895D7 A4D1C46D D3D6F4FB 4369E96A 346ED9FC AD678846 DA60B8D0 44042D73 ',\n        '33031DE5 AA0A4C5F DD0D7CC9 5005713C 270241AA BE0B1010 C90C2086 5768B525 206F85B3 B966D409 ',\n        'CE61E49F 5EDEF90E 29D9C998 B0D09822 C7D7A8B4 59B33D17 2EB40D81 B7BD5C3B C0BA6CAD EDB88320 ',\n        '9ABFB3B6 03B6E20C 74B1D29A EAD54739 9DD277AF 04DB2615 73DC1683 E3630B12 94643B84 0D6D6A3E ',\n        '7A6A5AA8 E40ECF0B 9309FF9D 0A00AE27 7D079EB1 F00F9344 8708A3D2 1E01F268 6906C2FE F762575D ',\n        '806567CB 196C3671 6E6B06E7 FED41B76 89D32BE0 10DA7A5A 67DD4ACC F9B9DF6F 8EBEEFF9 17B7BE43 ',\n        '60B08ED5 D6D6A3E8 A1D1937E 38D8C2C4 4FDFF252 D1BB67F1 A6BC5767 3FB506DD 48B2364B D80D2BDA ',\n        'AF0A1B4C 36034AF6 41047A60 DF60EFC3 A867DF55 316E8EEF 4669BE79 CB61B38C BC66831A 256FD2A0 ',\n        '5268E236 CC0C7795 BB0B4703 220216B9 5505262F C5BA3BBE B2BD0B28 2BB45A92 5CB36A04 C2D7FFA7 ',\n        'B5D0CF31 2CD99E8B 5BDEAE1D 9B64C2B0 EC63F226 756AA39C 026D930A 9C0906A9 EB0E363F 72076785 ',\n        '05005713 95BF4A82 E2B87A14 7BB12BAE 0CB61B38 92D28E9B E5D5BE0D 7CDCEFB7 0BDBDF21 86D3D2D4 ',\n        'F1D4E242 68DDB3F8 1FDA836E 81BE16CD F6B9265B 6FB077E1 18B74777 88085AE6 FF0F6A70 66063BCA ',\n        '11010B5C 8F659EFF F862AE69 616BFFD3 166CCF45 A00AE278 D70DD2EE 4E048354 3903B3C2 A7672661 ',\n        'D06016F7 4969474D 3E6E77DB AED16A4A D9D65ADC 40DF0B66 37D83BF0 A9BCAE53 DEBB9EC5 47B2CF7F ',\n        '30B5FFE9 BDBDF21C CABAC28A 53B39330 24B4A3A6 BAD03605 CDD70693 54DE5729 23D967BF B3667A2E ',\n        'C4614AB8 5D681B02 2A6F2B94 B40BBE37 C30C8EA1 5A05DF1B 2D02EF8D'\n      ].join('');\n\n      crc = crc ^ (-1);\n      for (i = 0, iTop = str.length; i < iTop; i += 1) {\n        y = (crc ^ str.charCodeAt(i)) & 0xFF;\n        x = '0x' + table.substr(y * 9, 8);\n        crc = (crc >>> 8) ^ x;\n      }\n      // always return a positive number (that's what >>> 0 does)\n      return (crc ^ (-1)) >>> 0;\n    },\n    /**\n     * @member Hashes\n     * @class MD5\n     * @constructor\n     * @param {Object} [config]\n     *\n     * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n     * Digest Algorithm, as defined in RFC 1321.\n     * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n     * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n     * See <http://pajhome.org.uk/crypt/md5> for more infHashes.\n     */\n    MD5: function(options) {\n      /**\n       * Private config properties. You may need to tweak these to be compatible with\n       * the server-side, but the defaults work in most cases.\n       * See {@link Hashes.MD5#method-setUpperCase} and {@link Hashes.SHA1#method-setUpperCase}\n       */\n      var hexcase = (options && typeof options.uppercase === 'boolean') ? options.uppercase : false, // hexadecimal output case format. false - lowercase; true - uppercase\n        b64pad = (options && typeof options.pad === 'string') ? options.pad : '=', // base-64 pad character. Defaults to '=' for strict RFC compliance\n        utf8 = (options && typeof options.utf8 === 'boolean') ? options.utf8 : true; // enable/disable utf8 encoding\n\n      // privileged (public) methods\n      this.hex = function(s) {\n        return rstr2hex(rstr(s, utf8), hexcase);\n      };\n      this.b64 = function(s) {\n        return rstr2b64(rstr(s), b64pad);\n      };\n      this.any = function(s, e) {\n        return rstr2any(rstr(s, utf8), e);\n      };\n      this.raw = function(s) {\n        return rstr(s, utf8);\n      };\n      this.hex_hmac = function(k, d) {\n        return rstr2hex(rstr_hmac(k, d), hexcase);\n      };\n      this.b64_hmac = function(k, d) {\n        return rstr2b64(rstr_hmac(k, d), b64pad);\n      };\n      this.any_hmac = function(k, d, e) {\n        return rstr2any(rstr_hmac(k, d), e);\n      };\n      /**\n       * Perform a simple self-test to see if the VM is working\n       * @return {String} Hexadecimal hash sample\n       */\n      this.vm_test = function() {\n        return hex('abc').toLowerCase() === '900150983cd24fb0d6963f7d28e17f72';\n      };\n      /**\n       * Enable/disable uppercase hexadecimal returned string\n       * @param {Boolean}\n       * @return {Object} this\n       */\n      this.setUpperCase = function(a) {\n        if (typeof a === 'boolean') {\n          hexcase = a;\n        }\n        return this;\n      };\n      /**\n       * Defines a base64 pad string\n       * @param {String} Pad\n       * @return {Object} this\n       */\n      this.setPad = function(a) {\n        b64pad = a || b64pad;\n        return this;\n      };\n      /**\n       * Defines a base64 pad string\n       * @param {Boolean}\n       * @return {Object} [this]\n       */\n      this.setUTF8 = function(a) {\n        if (typeof a === 'boolean') {\n          utf8 = a;\n        }\n        return this;\n      };\n\n      // private methods\n\n      /**\n       * Calculate the MD5 of a raw string\n       */\n\n      function rstr(s) {\n        s = (utf8) ? utf8Encode(s) : s;\n        return binl2rstr(binl(rstr2binl(s), s.length * 8));\n      }\n\n      /**\n       * Calculate the HMAC-MD5, of a key and some data (raw strings)\n       */\n\n      function rstr_hmac(key, data) {\n        var bkey, ipad, opad, hash, i;\n\n        key = (utf8) ? utf8Encode(key) : key;\n        data = (utf8) ? utf8Encode(data) : data;\n        bkey = rstr2binl(key);\n        if (bkey.length > 16) {\n          bkey = binl(bkey, key.length * 8);\n        }\n\n        ipad = Array(16), opad = Array(16);\n        for (i = 0; i < 16; i += 1) {\n          ipad[i] = bkey[i] ^ 0x36363636;\n          opad[i] = bkey[i] ^ 0x5C5C5C5C;\n        }\n        hash = binl(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n        return binl2rstr(binl(opad.concat(hash), 512 + 128));\n      }\n\n      /**\n       * Calculate the MD5 of an array of little-endian words, and a bit length.\n       */\n\n      function binl(x, len) {\n        var i, olda, oldb, oldc, oldd,\n          a = 1732584193,\n          b = -271733879,\n          c = -1732584194,\n          d = 271733878;\n\n        /* append padding */\n        x[len >> 5] |= 0x80 << ((len) % 32);\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n        for (i = 0; i < x.length; i += 16) {\n          olda = a;\n          oldb = b;\n          oldc = c;\n          oldd = d;\n\n          a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\n          d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n          c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n          b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n          a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n          d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n          c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n          b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n          a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n          d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n          c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n          b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n          a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n          d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n          c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n          b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n          a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n          d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n          c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n          b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\n          a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n          d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n          c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n          b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n          a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n          d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n          c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n          b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n          a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n          d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n          c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n          b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n          a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n          d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n          c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n          b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n          a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n          d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n          c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n          b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n          a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n          d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\n          c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n          b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n          a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n          d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n          c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n          b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n          a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\n          d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n          c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n          b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n          a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n          d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n          c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n          b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n          a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n          d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n          c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n          b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n          a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n          d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n          c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n          b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n          a = safe_add(a, olda);\n          b = safe_add(b, oldb);\n          c = safe_add(c, oldc);\n          d = safe_add(d, oldd);\n        }\n        return Array(a, b, c, d);\n      }\n\n      /**\n       * These functions implement the four basic operations the algorithm uses.\n       */\n\n      function md5_cmn(q, a, b, x, s, t) {\n        return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\n      }\n\n      function md5_ff(a, b, c, d, x, s, t) {\n        return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n      }\n\n      function md5_gg(a, b, c, d, x, s, t) {\n        return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n      }\n\n      function md5_hh(a, b, c, d, x, s, t) {\n        return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n      }\n\n      function md5_ii(a, b, c, d, x, s, t) {\n        return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n      }\n    },\n    /**\n     * @member Hashes\n     * @class Hashes.SHA1\n     * @param {Object} [config]\n     * @constructor\n     *\n     * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined in FIPS 180-1\n     * Version 2.2 Copyright Paul Johnston 2000 - 2009.\n     * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n     * See http://pajhome.org.uk/crypt/md5 for details.\n     */\n    SHA1: function(options) {\n      /**\n       * Private config properties. You may need to tweak these to be compatible with\n       * the server-side, but the defaults work in most cases.\n       * See {@link Hashes.MD5#method-setUpperCase} and {@link Hashes.SHA1#method-setUpperCase}\n       */\n      var hexcase = (options && typeof options.uppercase === 'boolean') ? options.uppercase : false, // hexadecimal output case format. false - lowercase; true - uppercase\n        b64pad = (options && typeof options.pad === 'string') ? options.pad : '=', // base-64 pad character. Defaults to '=' for strict RFC compliance\n        utf8 = (options && typeof options.utf8 === 'boolean') ? options.utf8 : true; // enable/disable utf8 encoding\n\n      // public methods\n      this.hex = function(s) {\n        return rstr2hex(rstr(s, utf8), hexcase);\n      };\n      this.b64 = function(s) {\n        return rstr2b64(rstr(s, utf8), b64pad);\n      };\n      this.any = function(s, e) {\n        return rstr2any(rstr(s, utf8), e);\n      };\n      this.raw = function(s) {\n        return rstr(s, utf8);\n      };\n      this.hex_hmac = function(k, d) {\n        return rstr2hex(rstr_hmac(k, d));\n      };\n      this.b64_hmac = function(k, d) {\n        return rstr2b64(rstr_hmac(k, d), b64pad);\n      };\n      this.any_hmac = function(k, d, e) {\n        return rstr2any(rstr_hmac(k, d), e);\n      };\n      /**\n       * Perform a simple self-test to see if the VM is working\n       * @return {String} Hexadecimal hash sample\n       * @public\n       */\n      this.vm_test = function() {\n        return hex('abc').toLowerCase() === '900150983cd24fb0d6963f7d28e17f72';\n      };\n      /**\n       * @description Enable/disable uppercase hexadecimal returned string\n       * @param {boolean}\n       * @return {Object} this\n       * @public\n       */\n      this.setUpperCase = function(a) {\n        if (typeof a === 'boolean') {\n          hexcase = a;\n        }\n        return this;\n      };\n      /**\n       * @description Defines a base64 pad string\n       * @param {string} Pad\n       * @return {Object} this\n       * @public\n       */\n      this.setPad = function(a) {\n        b64pad = a || b64pad;\n        return this;\n      };\n      /**\n       * @description Defines a base64 pad string\n       * @param {boolean}\n       * @return {Object} this\n       * @public\n       */\n      this.setUTF8 = function(a) {\n        if (typeof a === 'boolean') {\n          utf8 = a;\n        }\n        return this;\n      };\n\n      // private methods\n\n      /**\n       * Calculate the SHA-512 of a raw string\n       */\n\n      function rstr(s) {\n        s = (utf8) ? utf8Encode(s) : s;\n        return binb2rstr(binb(rstr2binb(s), s.length * 8));\n      }\n\n      /**\n       * Calculate the HMAC-SHA1 of a key and some data (raw strings)\n       */\n\n      function rstr_hmac(key, data) {\n        var bkey, ipad, opad, i, hash;\n        key = (utf8) ? utf8Encode(key) : key;\n        data = (utf8) ? utf8Encode(data) : data;\n        bkey = rstr2binb(key);\n\n        if (bkey.length > 16) {\n          bkey = binb(bkey, key.length * 8);\n        }\n        ipad = Array(16), opad = Array(16);\n        for (i = 0; i < 16; i += 1) {\n          ipad[i] = bkey[i] ^ 0x36363636;\n          opad[i] = bkey[i] ^ 0x5C5C5C5C;\n        }\n        hash = binb(ipad.concat(rstr2binb(data)), 512 + data.length * 8);\n        return binb2rstr(binb(opad.concat(hash), 512 + 160));\n      }\n\n      /**\n       * Calculate the SHA-1 of an array of big-endian words, and a bit length\n       */\n\n      function binb(x, len) {\n        var i, j, t, olda, oldb, oldc, oldd, olde,\n          w = Array(80),\n          a = 1732584193,\n          b = -271733879,\n          c = -1732584194,\n          d = 271733878,\n          e = -1009589776;\n\n        /* append padding */\n        x[len >> 5] |= 0x80 << (24 - len % 32);\n        x[((len + 64 >> 9) << 4) + 15] = len;\n\n        for (i = 0; i < x.length; i += 16) {\n          olda = a;\n          oldb = b;\n          oldc = c;\n          oldd = d;\n          olde = e;\n\n          for (j = 0; j < 80; j += 1) {\n            if (j < 16) {\n              w[j] = x[i + j];\n            } else {\n              w[j] = bit_rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            t = safe_add(safe_add(bit_rol(a, 5), sha1_ft(j, b, c, d)),\n              safe_add(safe_add(e, w[j]), sha1_kt(j)));\n            e = d;\n            d = c;\n            c = bit_rol(b, 30);\n            b = a;\n            a = t;\n          }\n\n          a = safe_add(a, olda);\n          b = safe_add(b, oldb);\n          c = safe_add(c, oldc);\n          d = safe_add(d, oldd);\n          e = safe_add(e, olde);\n        }\n        return Array(a, b, c, d, e);\n      }\n\n      /**\n       * Perform the appropriate triplet combination function for the current\n       * iteration\n       */\n\n      function sha1_ft(t, b, c, d) {\n        if (t < 20) {\n          return (b & c) | ((~b) & d);\n        }\n        if (t < 40) {\n          return b ^ c ^ d;\n        }\n        if (t < 60) {\n          return (b & c) | (b & d) | (c & d);\n        }\n        return b ^ c ^ d;\n      }\n\n      /**\n       * Determine the appropriate additive constant for the current iteration\n       */\n\n      function sha1_kt(t) {\n        return (t < 20) ? 1518500249 : (t < 40) ? 1859775393 :\n          (t < 60) ? -1894007588 : -899497514;\n      }\n    },\n    /**\n     * @class Hashes.SHA256\n     * @param {config}\n     *\n     * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined in FIPS 180-2\n     * Version 2.2 Copyright Angel Marin, Paul Johnston 2000 - 2009.\n     * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n     * See http://pajhome.org.uk/crypt/md5 for details.\n     * Also http://anmar.eu.org/projects/jssha2/\n     */\n    SHA256: function(options) {\n      /**\n       * Private properties configuration variables. You may need to tweak these to be compatible with\n       * the server-side, but the defaults work in most cases.\n       * @see this.setUpperCase() method\n       * @see this.setPad() method\n       */\n      var hexcase = (options && typeof options.uppercase === 'boolean') ? options.uppercase : false, // hexadecimal output case format. false - lowercase; true - uppercase  */\n        b64pad = (options && typeof options.pad === 'string') ? options.pad : '=',\n        /* base-64 pad character. Default '=' for strict RFC compliance   */\n        utf8 = (options && typeof options.utf8 === 'boolean') ? options.utf8 : true,\n        /* enable/disable utf8 encoding */\n        sha256_K;\n\n      /* privileged (public) methods */\n      this.hex = function(s) {\n        return rstr2hex(rstr(s, utf8));\n      };\n      this.b64 = function(s) {\n        return rstr2b64(rstr(s, utf8), b64pad);\n      };\n      this.any = function(s, e) {\n        return rstr2any(rstr(s, utf8), e);\n      };\n      this.raw = function(s) {\n        return rstr(s, utf8);\n      };\n      this.hex_hmac = function(k, d) {\n        return rstr2hex(rstr_hmac(k, d));\n      };\n      this.b64_hmac = function(k, d) {\n        return rstr2b64(rstr_hmac(k, d), b64pad);\n      };\n      this.any_hmac = function(k, d, e) {\n        return rstr2any(rstr_hmac(k, d), e);\n      };\n      /**\n       * Perform a simple self-test to see if the VM is working\n       * @return {String} Hexadecimal hash sample\n       * @public\n       */\n      this.vm_test = function() {\n        return hex('abc').toLowerCase() === '900150983cd24fb0d6963f7d28e17f72';\n      };\n      /**\n       * Enable/disable uppercase hexadecimal returned string\n       * @param {boolean}\n       * @return {Object} this\n       * @public\n       */\n      this.setUpperCase = function(a) {\n        if (typeof a === 'boolean') {\n          hexcase = a;\n        }\n        return this;\n      };\n      /**\n       * @description Defines a base64 pad string\n       * @param {string} Pad\n       * @return {Object} this\n       * @public\n       */\n      this.setPad = function(a) {\n        b64pad = a || b64pad;\n        return this;\n      };\n      /**\n       * Defines a base64 pad string\n       * @param {boolean}\n       * @return {Object} this\n       * @public\n       */\n      this.setUTF8 = function(a) {\n        if (typeof a === 'boolean') {\n          utf8 = a;\n        }\n        return this;\n      };\n\n      // private methods\n\n      /**\n       * Calculate the SHA-512 of a raw string\n       */\n\n      function rstr(s, utf8) {\n        s = (utf8) ? utf8Encode(s) : s;\n        return binb2rstr(binb(rstr2binb(s), s.length * 8));\n      }\n\n      /**\n       * Calculate the HMAC-sha256 of a key and some data (raw strings)\n       */\n\n      function rstr_hmac(key, data) {\n        key = (utf8) ? utf8Encode(key) : key;\n        data = (utf8) ? utf8Encode(data) : data;\n        var hash, i = 0,\n          bkey = rstr2binb(key),\n          ipad = Array(16),\n          opad = Array(16);\n\n        if (bkey.length > 16) {\n          bkey = binb(bkey, key.length * 8);\n        }\n\n        for (; i < 16; i += 1) {\n          ipad[i] = bkey[i] ^ 0x36363636;\n          opad[i] = bkey[i] ^ 0x5C5C5C5C;\n        }\n\n        hash = binb(ipad.concat(rstr2binb(data)), 512 + data.length * 8);\n        return binb2rstr(binb(opad.concat(hash), 512 + 256));\n      }\n\n      /*\n       * Main sha256 function, with its support functions\n       */\n\n      function sha256_S(X, n) {\n        return (X >>> n) | (X << (32 - n));\n      }\n\n      function sha256_R(X, n) {\n        return (X >>> n);\n      }\n\n      function sha256_Ch(x, y, z) {\n        return ((x & y) ^ ((~x) & z));\n      }\n\n      function sha256_Maj(x, y, z) {\n        return ((x & y) ^ (x & z) ^ (y & z));\n      }\n\n      function sha256_Sigma0256(x) {\n        return (sha256_S(x, 2) ^ sha256_S(x, 13) ^ sha256_S(x, 22));\n      }\n\n      function sha256_Sigma1256(x) {\n        return (sha256_S(x, 6) ^ sha256_S(x, 11) ^ sha256_S(x, 25));\n      }\n\n      function sha256_Gamma0256(x) {\n        return (sha256_S(x, 7) ^ sha256_S(x, 18) ^ sha256_R(x, 3));\n      }\n\n      function sha256_Gamma1256(x) {\n        return (sha256_S(x, 17) ^ sha256_S(x, 19) ^ sha256_R(x, 10));\n      }\n\n      function sha256_Sigma0512(x) {\n        return (sha256_S(x, 28) ^ sha256_S(x, 34) ^ sha256_S(x, 39));\n      }\n\n      function sha256_Sigma1512(x) {\n        return (sha256_S(x, 14) ^ sha256_S(x, 18) ^ sha256_S(x, 41));\n      }\n\n      function sha256_Gamma0512(x) {\n        return (sha256_S(x, 1) ^ sha256_S(x, 8) ^ sha256_R(x, 7));\n      }\n\n      function sha256_Gamma1512(x) {\n        return (sha256_S(x, 19) ^ sha256_S(x, 61) ^ sha256_R(x, 6));\n      }\n\n      sha256_K = [\n        1116352408, 1899447441, -1245643825, -373957723, 961987163, 1508970993, -1841331548, -1424204075, -670586216, 310598401, 607225278, 1426881987,\n        1925078388, -2132889090, -1680079193, -1046744716, -459576895, -272742522,\n        264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, -1740746414, -1473132947, -1341970488, -1084653625, -958395405, -710438585,\n        113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291,\n        1695183700, 1986661051, -2117940946, -1838011259, -1564481375, -1474664885, -1035236496, -949202525, -778901479, -694614492, -200395387, 275423344,\n        430227734, 506948616, 659060556, 883997877, 958139571, 1322822218,\n        1537002063, 1747873779, 1955562222, 2024104815, -2067236844, -1933114872, -1866530822, -1538233109, -1090935817, -965641998\n      ];\n\n      function binb(m, l) {\n        var HASH = [1779033703, -1150833019, 1013904242, -1521486534,\n          1359893119, -1694144372, 528734635, 1541459225\n        ];\n        var W = new Array(64);\n        var a, b, c, d, e, f, g, h;\n        var i, j, T1, T2;\n\n        /* append padding */\n        m[l >> 5] |= 0x80 << (24 - l % 32);\n        m[((l + 64 >> 9) << 4) + 15] = l;\n\n        for (i = 0; i < m.length; i += 16) {\n          a = HASH[0];\n          b = HASH[1];\n          c = HASH[2];\n          d = HASH[3];\n          e = HASH[4];\n          f = HASH[5];\n          g = HASH[6];\n          h = HASH[7];\n\n          for (j = 0; j < 64; j += 1) {\n            if (j < 16) {\n              W[j] = m[j + i];\n            } else {\n              W[j] = safe_add(safe_add(safe_add(sha256_Gamma1256(W[j - 2]), W[j - 7]),\n                sha256_Gamma0256(W[j - 15])), W[j - 16]);\n            }\n\n            T1 = safe_add(safe_add(safe_add(safe_add(h, sha256_Sigma1256(e)), sha256_Ch(e, f, g)),\n              sha256_K[j]), W[j]);\n            T2 = safe_add(sha256_Sigma0256(a), sha256_Maj(a, b, c));\n            h = g;\n            g = f;\n            f = e;\n            e = safe_add(d, T1);\n            d = c;\n            c = b;\n            b = a;\n            a = safe_add(T1, T2);\n          }\n\n          HASH[0] = safe_add(a, HASH[0]);\n          HASH[1] = safe_add(b, HASH[1]);\n          HASH[2] = safe_add(c, HASH[2]);\n          HASH[3] = safe_add(d, HASH[3]);\n          HASH[4] = safe_add(e, HASH[4]);\n          HASH[5] = safe_add(f, HASH[5]);\n          HASH[6] = safe_add(g, HASH[6]);\n          HASH[7] = safe_add(h, HASH[7]);\n        }\n        return HASH;\n      }\n\n    },\n\n    /**\n     * @class Hashes.SHA512\n     * @param {config}\n     *\n     * A JavaScript implementation of the Secure Hash Algorithm, SHA-512, as defined in FIPS 180-2\n     * Version 2.2 Copyright Anonymous Contributor, Paul Johnston 2000 - 2009.\n     * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n     * See http://pajhome.org.uk/crypt/md5 for details.\n     */\n    SHA512: function(options) {\n      /**\n       * Private properties configuration variables. You may need to tweak these to be compatible with\n       * the server-side, but the defaults work in most cases.\n       * @see this.setUpperCase() method\n       * @see this.setPad() method\n       */\n      var hexcase = (options && typeof options.uppercase === 'boolean') ? options.uppercase : false,\n        /* hexadecimal output case format. false - lowercase; true - uppercase  */\n        b64pad = (options && typeof options.pad === 'string') ? options.pad : '=',\n        /* base-64 pad character. Default '=' for strict RFC compliance   */\n        utf8 = (options && typeof options.utf8 === 'boolean') ? options.utf8 : true,\n        /* enable/disable utf8 encoding */\n        sha512_k;\n\n      /* privileged (public) methods */\n      this.hex = function(s) {\n        return rstr2hex(rstr(s));\n      };\n      this.b64 = function(s) {\n        return rstr2b64(rstr(s), b64pad);\n      };\n      this.any = function(s, e) {\n        return rstr2any(rstr(s), e);\n      };\n      this.raw = function(s) {\n        return rstr(s, utf8);\n      };\n      this.hex_hmac = function(k, d) {\n        return rstr2hex(rstr_hmac(k, d));\n      };\n      this.b64_hmac = function(k, d) {\n        return rstr2b64(rstr_hmac(k, d), b64pad);\n      };\n      this.any_hmac = function(k, d, e) {\n        return rstr2any(rstr_hmac(k, d), e);\n      };\n      /**\n       * Perform a simple self-test to see if the VM is working\n       * @return {String} Hexadecimal hash sample\n       * @public\n       */\n      this.vm_test = function() {\n        return hex('abc').toLowerCase() === '900150983cd24fb0d6963f7d28e17f72';\n      };\n      /**\n       * @description Enable/disable uppercase hexadecimal returned string\n       * @param {boolean}\n       * @return {Object} this\n       * @public\n       */\n      this.setUpperCase = function(a) {\n        if (typeof a === 'boolean') {\n          hexcase = a;\n        }\n        return this;\n      };\n      /**\n       * @description Defines a base64 pad string\n       * @param {string} Pad\n       * @return {Object} this\n       * @public\n       */\n      this.setPad = function(a) {\n        b64pad = a || b64pad;\n        return this;\n      };\n      /**\n       * @description Defines a base64 pad string\n       * @param {boolean}\n       * @return {Object} this\n       * @public\n       */\n      this.setUTF8 = function(a) {\n        if (typeof a === 'boolean') {\n          utf8 = a;\n        }\n        return this;\n      };\n\n      /* private methods */\n\n      /**\n       * Calculate the SHA-512 of a raw string\n       */\n\n      function rstr(s) {\n        s = (utf8) ? utf8Encode(s) : s;\n        return binb2rstr(binb(rstr2binb(s), s.length * 8));\n      }\n      /*\n       * Calculate the HMAC-SHA-512 of a key and some data (raw strings)\n       */\n\n      function rstr_hmac(key, data) {\n        key = (utf8) ? utf8Encode(key) : key;\n        data = (utf8) ? utf8Encode(data) : data;\n\n        var hash, i = 0,\n          bkey = rstr2binb(key),\n          ipad = Array(32),\n          opad = Array(32);\n\n        if (bkey.length > 32) {\n          bkey = binb(bkey, key.length * 8);\n        }\n\n        for (; i < 32; i += 1) {\n          ipad[i] = bkey[i] ^ 0x36363636;\n          opad[i] = bkey[i] ^ 0x5C5C5C5C;\n        }\n\n        hash = binb(ipad.concat(rstr2binb(data)), 1024 + data.length * 8);\n        return binb2rstr(binb(opad.concat(hash), 1024 + 512));\n      }\n\n      /**\n       * Calculate the SHA-512 of an array of big-endian dwords, and a bit length\n       */\n\n      function binb(x, len) {\n        var j, i, l,\n          W = new Array(80),\n          hash = new Array(16),\n          //Initial hash values\n          H = [\n            new int64(0x6a09e667, -205731576),\n            new int64(-1150833019, -2067093701),\n            new int64(0x3c6ef372, -23791573),\n            new int64(-1521486534, 0x5f1d36f1),\n            new int64(0x510e527f, -1377402159),\n            new int64(-1694144372, 0x2b3e6c1f),\n            new int64(0x1f83d9ab, -79577749),\n            new int64(0x5be0cd19, 0x137e2179)\n          ],\n          T1 = new int64(0, 0),\n          T2 = new int64(0, 0),\n          a = new int64(0, 0),\n          b = new int64(0, 0),\n          c = new int64(0, 0),\n          d = new int64(0, 0),\n          e = new int64(0, 0),\n          f = new int64(0, 0),\n          g = new int64(0, 0),\n          h = new int64(0, 0),\n          //Temporary variables not specified by the document\n          s0 = new int64(0, 0),\n          s1 = new int64(0, 0),\n          Ch = new int64(0, 0),\n          Maj = new int64(0, 0),\n          r1 = new int64(0, 0),\n          r2 = new int64(0, 0),\n          r3 = new int64(0, 0);\n\n        if (sha512_k === undefined) {\n          //SHA512 constants\n          sha512_k = [\n            new int64(0x428a2f98, -685199838), new int64(0x71374491, 0x23ef65cd),\n            new int64(-1245643825, -330482897), new int64(-373957723, -2121671748),\n            new int64(0x3956c25b, -213338824), new int64(0x59f111f1, -1241133031),\n            new int64(-1841331548, -1357295717), new int64(-1424204075, -630357736),\n            new int64(-670586216, -1560083902), new int64(0x12835b01, 0x45706fbe),\n            new int64(0x243185be, 0x4ee4b28c), new int64(0x550c7dc3, -704662302),\n            new int64(0x72be5d74, -226784913), new int64(-2132889090, 0x3b1696b1),\n            new int64(-1680079193, 0x25c71235), new int64(-1046744716, -815192428),\n            new int64(-459576895, -1628353838), new int64(-272742522, 0x384f25e3),\n            new int64(0xfc19dc6, -1953704523), new int64(0x240ca1cc, 0x77ac9c65),\n            new int64(0x2de92c6f, 0x592b0275), new int64(0x4a7484aa, 0x6ea6e483),\n            new int64(0x5cb0a9dc, -1119749164), new int64(0x76f988da, -2096016459),\n            new int64(-1740746414, -295247957), new int64(-1473132947, 0x2db43210),\n            new int64(-1341970488, -1728372417), new int64(-1084653625, -1091629340),\n            new int64(-958395405, 0x3da88fc2), new int64(-710438585, -1828018395),\n            new int64(0x6ca6351, -536640913), new int64(0x14292967, 0xa0e6e70),\n            new int64(0x27b70a85, 0x46d22ffc), new int64(0x2e1b2138, 0x5c26c926),\n            new int64(0x4d2c6dfc, 0x5ac42aed), new int64(0x53380d13, -1651133473),\n            new int64(0x650a7354, -1951439906), new int64(0x766a0abb, 0x3c77b2a8),\n            new int64(-2117940946, 0x47edaee6), new int64(-1838011259, 0x1482353b),\n            new int64(-1564481375, 0x4cf10364), new int64(-1474664885, -1136513023),\n            new int64(-1035236496, -789014639), new int64(-949202525, 0x654be30),\n            new int64(-778901479, -688958952), new int64(-694614492, 0x5565a910),\n            new int64(-200395387, 0x5771202a), new int64(0x106aa070, 0x32bbd1b8),\n            new int64(0x19a4c116, -1194143544), new int64(0x1e376c08, 0x5141ab53),\n            new int64(0x2748774c, -544281703), new int64(0x34b0bcb5, -509917016),\n            new int64(0x391c0cb3, -976659869), new int64(0x4ed8aa4a, -482243893),\n            new int64(0x5b9cca4f, 0x7763e373), new int64(0x682e6ff3, -692930397),\n            new int64(0x748f82ee, 0x5defb2fc), new int64(0x78a5636f, 0x43172f60),\n            new int64(-2067236844, -1578062990), new int64(-1933114872, 0x1a6439ec),\n            new int64(-1866530822, 0x23631e28), new int64(-1538233109, -561857047),\n            new int64(-1090935817, -1295615723), new int64(-965641998, -479046869),\n            new int64(-903397682, -366583396), new int64(-779700025, 0x21c0c207),\n            new int64(-354779690, -840897762), new int64(-176337025, -294727304),\n            new int64(0x6f067aa, 0x72176fba), new int64(0xa637dc5, -1563912026),\n            new int64(0x113f9804, -1090974290), new int64(0x1b710b35, 0x131c471b),\n            new int64(0x28db77f5, 0x23047d84), new int64(0x32caab7b, 0x40c72493),\n            new int64(0x3c9ebe0a, 0x15c9bebc), new int64(0x431d67c4, -1676669620),\n            new int64(0x4cc5d4be, -885112138), new int64(0x597f299c, -60457430),\n            new int64(0x5fcb6fab, 0x3ad6faec), new int64(0x6c44198c, 0x4a475817)\n          ];\n        }\n\n        for (i = 0; i < 80; i += 1) {\n          W[i] = new int64(0, 0);\n        }\n\n        // append padding to the source string. The format is described in the FIPS.\n        x[len >> 5] |= 0x80 << (24 - (len & 0x1f));\n        x[((len + 128 >> 10) << 5) + 31] = len;\n        l = x.length;\n        for (i = 0; i < l; i += 32) { //32 dwords is the block size\n          int64copy(a, H[0]);\n          int64copy(b, H[1]);\n          int64copy(c, H[2]);\n          int64copy(d, H[3]);\n          int64copy(e, H[4]);\n          int64copy(f, H[5]);\n          int64copy(g, H[6]);\n          int64copy(h, H[7]);\n\n          for (j = 0; j < 16; j += 1) {\n            W[j].h = x[i + 2 * j];\n            W[j].l = x[i + 2 * j + 1];\n          }\n\n          for (j = 16; j < 80; j += 1) {\n            //sigma1\n            int64rrot(r1, W[j - 2], 19);\n            int64revrrot(r2, W[j - 2], 29);\n            int64shr(r3, W[j - 2], 6);\n            s1.l = r1.l ^ r2.l ^ r3.l;\n            s1.h = r1.h ^ r2.h ^ r3.h;\n            //sigma0\n            int64rrot(r1, W[j - 15], 1);\n            int64rrot(r2, W[j - 15], 8);\n            int64shr(r3, W[j - 15], 7);\n            s0.l = r1.l ^ r2.l ^ r3.l;\n            s0.h = r1.h ^ r2.h ^ r3.h;\n\n            int64add4(W[j], s1, W[j - 7], s0, W[j - 16]);\n          }\n\n          for (j = 0; j < 80; j += 1) {\n            //Ch\n            Ch.l = (e.l & f.l) ^ (~e.l & g.l);\n            Ch.h = (e.h & f.h) ^ (~e.h & g.h);\n\n            //Sigma1\n            int64rrot(r1, e, 14);\n            int64rrot(r2, e, 18);\n            int64revrrot(r3, e, 9);\n            s1.l = r1.l ^ r2.l ^ r3.l;\n            s1.h = r1.h ^ r2.h ^ r3.h;\n\n            //Sigma0\n            int64rrot(r1, a, 28);\n            int64revrrot(r2, a, 2);\n            int64revrrot(r3, a, 7);\n            s0.l = r1.l ^ r2.l ^ r3.l;\n            s0.h = r1.h ^ r2.h ^ r3.h;\n\n            //Maj\n            Maj.l = (a.l & b.l) ^ (a.l & c.l) ^ (b.l & c.l);\n            Maj.h = (a.h & b.h) ^ (a.h & c.h) ^ (b.h & c.h);\n\n            int64add5(T1, h, s1, Ch, sha512_k[j], W[j]);\n            int64add(T2, s0, Maj);\n\n            int64copy(h, g);\n            int64copy(g, f);\n            int64copy(f, e);\n            int64add(e, d, T1);\n            int64copy(d, c);\n            int64copy(c, b);\n            int64copy(b, a);\n            int64add(a, T1, T2);\n          }\n          int64add(H[0], H[0], a);\n          int64add(H[1], H[1], b);\n          int64add(H[2], H[2], c);\n          int64add(H[3], H[3], d);\n          int64add(H[4], H[4], e);\n          int64add(H[5], H[5], f);\n          int64add(H[6], H[6], g);\n          int64add(H[7], H[7], h);\n        }\n\n        //represent the hash as an array of 32-bit dwords\n        for (i = 0; i < 8; i += 1) {\n          hash[2 * i] = H[i].h;\n          hash[2 * i + 1] = H[i].l;\n        }\n        return hash;\n      }\n\n      //A constructor for 64-bit numbers\n\n      function int64(h, l) {\n        this.h = h;\n        this.l = l;\n        //this.toString = int64toString;\n      }\n\n      //Copies src into dst, assuming both are 64-bit numbers\n\n      function int64copy(dst, src) {\n        dst.h = src.h;\n        dst.l = src.l;\n      }\n\n      //Right-rotates a 64-bit number by shift\n      //Won't handle cases of shift>=32\n      //The function revrrot() is for that\n\n      function int64rrot(dst, x, shift) {\n        dst.l = (x.l >>> shift) | (x.h << (32 - shift));\n        dst.h = (x.h >>> shift) | (x.l << (32 - shift));\n      }\n\n      //Reverses the dwords of the source and then rotates right by shift.\n      //This is equivalent to rotation by 32+shift\n\n      function int64revrrot(dst, x, shift) {\n        dst.l = (x.h >>> shift) | (x.l << (32 - shift));\n        dst.h = (x.l >>> shift) | (x.h << (32 - shift));\n      }\n\n      //Bitwise-shifts right a 64-bit number by shift\n      //Won't handle shift>=32, but it's never needed in SHA512\n\n      function int64shr(dst, x, shift) {\n        dst.l = (x.l >>> shift) | (x.h << (32 - shift));\n        dst.h = (x.h >>> shift);\n      }\n\n      //Adds two 64-bit numbers\n      //Like the original implementation, does not rely on 32-bit operations\n\n      function int64add(dst, x, y) {\n        var w0 = (x.l & 0xffff) + (y.l & 0xffff);\n        var w1 = (x.l >>> 16) + (y.l >>> 16) + (w0 >>> 16);\n        var w2 = (x.h & 0xffff) + (y.h & 0xffff) + (w1 >>> 16);\n        var w3 = (x.h >>> 16) + (y.h >>> 16) + (w2 >>> 16);\n        dst.l = (w0 & 0xffff) | (w1 << 16);\n        dst.h = (w2 & 0xffff) | (w3 << 16);\n      }\n\n      //Same, except with 4 addends. Works faster than adding them one by one.\n\n      function int64add4(dst, a, b, c, d) {\n        var w0 = (a.l & 0xffff) + (b.l & 0xffff) + (c.l & 0xffff) + (d.l & 0xffff);\n        var w1 = (a.l >>> 16) + (b.l >>> 16) + (c.l >>> 16) + (d.l >>> 16) + (w0 >>> 16);\n        var w2 = (a.h & 0xffff) + (b.h & 0xffff) + (c.h & 0xffff) + (d.h & 0xffff) + (w1 >>> 16);\n        var w3 = (a.h >>> 16) + (b.h >>> 16) + (c.h >>> 16) + (d.h >>> 16) + (w2 >>> 16);\n        dst.l = (w0 & 0xffff) | (w1 << 16);\n        dst.h = (w2 & 0xffff) | (w3 << 16);\n      }\n\n      //Same, except with 5 addends\n\n      function int64add5(dst, a, b, c, d, e) {\n        var w0 = (a.l & 0xffff) + (b.l & 0xffff) + (c.l & 0xffff) + (d.l & 0xffff) + (e.l & 0xffff),\n          w1 = (a.l >>> 16) + (b.l >>> 16) + (c.l >>> 16) + (d.l >>> 16) + (e.l >>> 16) + (w0 >>> 16),\n          w2 = (a.h & 0xffff) + (b.h & 0xffff) + (c.h & 0xffff) + (d.h & 0xffff) + (e.h & 0xffff) + (w1 >>> 16),\n          w3 = (a.h >>> 16) + (b.h >>> 16) + (c.h >>> 16) + (d.h >>> 16) + (e.h >>> 16) + (w2 >>> 16);\n        dst.l = (w0 & 0xffff) | (w1 << 16);\n        dst.h = (w2 & 0xffff) | (w3 << 16);\n      }\n    },\n    /**\n     * @class Hashes.RMD160\n     * @constructor\n     * @param {Object} [config]\n     *\n     * A JavaScript implementation of the RIPEMD-160 Algorithm\n     * Version 2.2 Copyright Jeremy Lin, Paul Johnston 2000 - 2009.\n     * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n     * See http://pajhome.org.uk/crypt/md5 for details.\n     * Also http://www.ocf.berkeley.edu/~jjlin/jsotp/\n     */\n    RMD160: function(options) {\n      /**\n       * Private properties configuration variables. You may need to tweak these to be compatible with\n       * the server-side, but the defaults work in most cases.\n       * @see this.setUpperCase() method\n       * @see this.setPad() method\n       */\n      var hexcase = (options && typeof options.uppercase === 'boolean') ? options.uppercase : false,\n        /* hexadecimal output case format. false - lowercase; true - uppercase  */\n        b64pad = (options && typeof options.pad === 'string') ? options.pa : '=',\n        /* base-64 pad character. Default '=' for strict RFC compliance   */\n        utf8 = (options && typeof options.utf8 === 'boolean') ? options.utf8 : true,\n        /* enable/disable utf8 encoding */\n        rmd160_r1 = [\n          0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n          7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n          3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n          1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n          4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n        ],\n        rmd160_r2 = [\n          5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n          6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n          15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n          8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n          12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n        ],\n        rmd160_s1 = [\n          11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n          7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n          11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n          11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n          9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n        ],\n        rmd160_s2 = [\n          8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n          9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n          9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n          15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n          8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n        ];\n\n      /* privileged (public) methods */\n      this.hex = function(s) {\n        return rstr2hex(rstr(s, utf8));\n      };\n      this.b64 = function(s) {\n        return rstr2b64(rstr(s, utf8), b64pad);\n      };\n      this.any = function(s, e) {\n        return rstr2any(rstr(s, utf8), e);\n      };\n      this.raw = function(s) {\n        return rstr(s, utf8);\n      };\n      this.hex_hmac = function(k, d) {\n        return rstr2hex(rstr_hmac(k, d));\n      };\n      this.b64_hmac = function(k, d) {\n        return rstr2b64(rstr_hmac(k, d), b64pad);\n      };\n      this.any_hmac = function(k, d, e) {\n        return rstr2any(rstr_hmac(k, d), e);\n      };\n      /**\n       * Perform a simple self-test to see if the VM is working\n       * @return {String} Hexadecimal hash sample\n       * @public\n       */\n      this.vm_test = function() {\n        return hex('abc').toLowerCase() === '900150983cd24fb0d6963f7d28e17f72';\n      };\n      /**\n       * @description Enable/disable uppercase hexadecimal returned string\n       * @param {boolean}\n       * @return {Object} this\n       * @public\n       */\n      this.setUpperCase = function(a) {\n        if (typeof a === 'boolean') {\n          hexcase = a;\n        }\n        return this;\n      };\n      /**\n       * @description Defines a base64 pad string\n       * @param {string} Pad\n       * @return {Object} this\n       * @public\n       */\n      this.setPad = function(a) {\n        if (typeof a !== 'undefined') {\n          b64pad = a;\n        }\n        return this;\n      };\n      /**\n       * @description Defines a base64 pad string\n       * @param {boolean}\n       * @return {Object} this\n       * @public\n       */\n      this.setUTF8 = function(a) {\n        if (typeof a === 'boolean') {\n          utf8 = a;\n        }\n        return this;\n      };\n\n      /* private methods */\n\n      /**\n       * Calculate the rmd160 of a raw string\n       */\n\n      function rstr(s) {\n        s = (utf8) ? utf8Encode(s) : s;\n        return binl2rstr(binl(rstr2binl(s), s.length * 8));\n      }\n\n      /**\n       * Calculate the HMAC-rmd160 of a key and some data (raw strings)\n       */\n\n      function rstr_hmac(key, data) {\n        key = (utf8) ? utf8Encode(key) : key;\n        data = (utf8) ? utf8Encode(data) : data;\n        var i, hash,\n          bkey = rstr2binl(key),\n          ipad = Array(16),\n          opad = Array(16);\n\n        if (bkey.length > 16) {\n          bkey = binl(bkey, key.length * 8);\n        }\n\n        for (i = 0; i < 16; i += 1) {\n          ipad[i] = bkey[i] ^ 0x36363636;\n          opad[i] = bkey[i] ^ 0x5C5C5C5C;\n        }\n        hash = binl(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n        return binl2rstr(binl(opad.concat(hash), 512 + 160));\n      }\n\n      /**\n       * Convert an array of little-endian words to a string\n       */\n\n      function binl2rstr(input) {\n        var i, output = '',\n          l = input.length * 32;\n        for (i = 0; i < l; i += 8) {\n          output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\n        }\n        return output;\n      }\n\n      /**\n       * Calculate the RIPE-MD160 of an array of little-endian words, and a bit length.\n       */\n\n      function binl(x, len) {\n        var T, j, i, l,\n          h0 = 0x67452301,\n          h1 = 0xefcdab89,\n          h2 = 0x98badcfe,\n          h3 = 0x10325476,\n          h4 = 0xc3d2e1f0,\n          A1, B1, C1, D1, E1,\n          A2, B2, C2, D2, E2;\n\n        /* append padding */\n        x[len >> 5] |= 0x80 << (len % 32);\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\n        l = x.length;\n\n        for (i = 0; i < l; i += 16) {\n          A1 = A2 = h0;\n          B1 = B2 = h1;\n          C1 = C2 = h2;\n          D1 = D2 = h3;\n          E1 = E2 = h4;\n          for (j = 0; j <= 79; j += 1) {\n            T = safe_add(A1, rmd160_f(j, B1, C1, D1));\n            T = safe_add(T, x[i + rmd160_r1[j]]);\n            T = safe_add(T, rmd160_K1(j));\n            T = safe_add(bit_rol(T, rmd160_s1[j]), E1);\n            A1 = E1;\n            E1 = D1;\n            D1 = bit_rol(C1, 10);\n            C1 = B1;\n            B1 = T;\n            T = safe_add(A2, rmd160_f(79 - j, B2, C2, D2));\n            T = safe_add(T, x[i + rmd160_r2[j]]);\n            T = safe_add(T, rmd160_K2(j));\n            T = safe_add(bit_rol(T, rmd160_s2[j]), E2);\n            A2 = E2;\n            E2 = D2;\n            D2 = bit_rol(C2, 10);\n            C2 = B2;\n            B2 = T;\n          }\n\n          T = safe_add(h1, safe_add(C1, D2));\n          h1 = safe_add(h2, safe_add(D1, E2));\n          h2 = safe_add(h3, safe_add(E1, A2));\n          h3 = safe_add(h4, safe_add(A1, B2));\n          h4 = safe_add(h0, safe_add(B1, C2));\n          h0 = T;\n        }\n        return [h0, h1, h2, h3, h4];\n      }\n\n      // specific algorithm methods\n\n      function rmd160_f(j, x, y, z) {\n        return (0 <= j && j <= 15) ? (x ^ y ^ z) :\n          (16 <= j && j <= 31) ? (x & y) | (~x & z) :\n          (32 <= j && j <= 47) ? (x | ~y) ^ z :\n          (48 <= j && j <= 63) ? (x & z) | (y & ~z) :\n          (64 <= j && j <= 79) ? x ^ (y | ~z) :\n          'rmd160_f: j out of range';\n      }\n\n      function rmd160_K1(j) {\n        return (0 <= j && j <= 15) ? 0x00000000 :\n          (16 <= j && j <= 31) ? 0x5a827999 :\n          (32 <= j && j <= 47) ? 0x6ed9eba1 :\n          (48 <= j && j <= 63) ? 0x8f1bbcdc :\n          (64 <= j && j <= 79) ? 0xa953fd4e :\n          'rmd160_K1: j out of range';\n      }\n\n      function rmd160_K2(j) {\n        return (0 <= j && j <= 15) ? 0x50a28be6 :\n          (16 <= j && j <= 31) ? 0x5c4dd124 :\n          (32 <= j && j <= 47) ? 0x6d703ef3 :\n          (48 <= j && j <= 63) ? 0x7a6d76e9 :\n          (64 <= j && j <= 79) ? 0x00000000 :\n          'rmd160_K2: j out of range';\n      }\n    }\n  };\n\n  // exposes Hashes\n  (function(window, undefined) {\n    var freeExports = false;\n    if (typeof exports === 'object') {\n      freeExports = exports;\n      if (exports && typeof global === 'object' && global && global === global.global) {\n        window = global;\n      }\n    }\n\n    if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n      // define as an anonymous module, so, through path mapping, it can be aliased\n      define(function() {\n        return Hashes;\n      });\n    } else if (freeExports) {\n      // in Node.js or RingoJS v0.8.0+\n      if (typeof module === 'object' && module && module.exports === freeExports) {\n        module.exports = Hashes;\n      }\n      // in Narwhal or RingoJS v0.7.0-\n      else {\n        freeExports.Hashes = Hashes;\n      }\n    } else {\n      // in a browser or Rhino\n      window.Hashes = Hashes;\n    }\n  }(this));\n}()); // IIFE\n","'use strict';\n\nvar hashes = require('jshashes'),\n    sha1 = new hashes.SHA1();\n\n\n// # xtend\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction xtend() {\n    var target = {};\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\n\n\nvar ohauth = {};\n\nohauth.qsString = function(obj) {\n    return Object.keys(obj).sort().map(function(key) {\n        return ohauth.percentEncode(key) + '=' +\n            ohauth.percentEncode(obj[key]);\n    }).join('&');\n};\n\nohauth.stringQs = function(str) {\n    return str.split('&').filter(function (pair) {\n        return pair !== '';\n    }).reduce(function(obj, pair){\n        var parts = pair.split('=');\n        obj[decodeURIComponent(parts[0])] = (null === parts[1]) ?\n            '' : decodeURIComponent(parts[1]);\n        return obj;\n    }, {});\n};\n\nohauth.rawxhr = function(method, url, data, headers, callback) {\n    var xhr = new XMLHttpRequest(),\n        twoHundred = /^20\\d$/;\n    xhr.onreadystatechange = function() {\n        if (4 === xhr.readyState && 0 !== xhr.status) {\n            if (twoHundred.test(xhr.status)) callback(null, xhr);\n            else return callback(xhr, null);\n        }\n    };\n    xhr.onerror = function(e) { return callback(e, null); };\n    xhr.open(method, url, true);\n    for (var h in headers) xhr.setRequestHeader(h, headers[h]);\n    xhr.send(data);\n    return xhr;\n};\n\nohauth.xhr = function(method, url, auth, data, options, callback) {\n    var headers = (options && options.header) || {\n        'Content-Type': 'application/x-www-form-urlencoded'\n    };\n    headers.Authorization = 'OAuth ' + ohauth.authHeader(auth);\n    return ohauth.rawxhr(method, url, data, headers, callback);\n};\n\nohauth.nonce = function() {\n    for (var o = ''; o.length < 6;) {\n        o += '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'[Math.floor(Math.random() * 61)];\n    }\n    return o;\n};\n\nohauth.authHeader = function(obj) {\n    return Object.keys(obj).sort().map(function(key) {\n        return encodeURIComponent(key) + '=\"' + encodeURIComponent(obj[key]) + '\"';\n    }).join(', ');\n};\n\nohauth.timestamp = function() { return ~~((+new Date()) / 1000); };\n\nohauth.percentEncode = function(s) {\n    return encodeURIComponent(s)\n        .replace(/\\!/g, '%21').replace(/\\'/g, '%27')\n        .replace(/\\*/g, '%2A').replace(/\\(/g, '%28').replace(/\\)/g, '%29');\n};\n\nohauth.baseString = function(method, url, params) {\n    if (params.oauth_signature) delete params.oauth_signature;\n    return [\n        method,\n        ohauth.percentEncode(url),\n        ohauth.percentEncode(ohauth.qsString(params))].join('&');\n};\n\nohauth.signature = function(oauth_secret, token_secret, baseString) {\n    return sha1.b64_hmac(\n        ohauth.percentEncode(oauth_secret) + '&' +\n        ohauth.percentEncode(token_secret),\n        baseString);\n};\n\n/**\n * Takes an options object for configuration (consumer_key,\n * consumer_secret, version, signature_method, token, token_secret)\n * and returns a function that generates the Authorization header\n * for given data.\n *\n * The returned function takes these parameters:\n * - method: GET/POST/...\n * - uri: full URI with protocol, port, path and query string\n * - extra_params: any extra parameters (that are passed in the POST data),\n *   can be an object or a from-urlencoded string.\n *\n * Returned function returns full OAuth header with \"OAuth\" string in it.\n */\n\nohauth.headerGenerator = function(options) {\n    options = options || {};\n    var consumer_key = options.consumer_key || '',\n        consumer_secret = options.consumer_secret || '',\n        signature_method = options.signature_method || 'HMAC-SHA1',\n        version = options.version || '1.0',\n        token = options.token || '',\n        token_secret = options.token_secret || '';\n\n    return function(method, uri, extra_params) {\n        method = method.toUpperCase();\n        if (typeof extra_params === 'string' && extra_params.length > 0) {\n            extra_params = ohauth.stringQs(extra_params);\n        }\n\n        var uri_parts = uri.split('?', 2),\n        base_uri = uri_parts[0];\n\n        var query_params = uri_parts.length === 2 ?\n            ohauth.stringQs(uri_parts[1]) : {};\n\n        var oauth_params = {\n            oauth_consumer_key: consumer_key,\n            oauth_signature_method: signature_method,\n            oauth_version: version,\n            oauth_timestamp: ohauth.timestamp(),\n            oauth_nonce: ohauth.nonce()\n        };\n\n        if (token) oauth_params.oauth_token = token;\n\n        var all_params = xtend({}, oauth_params, query_params, extra_params),\n            base_str = ohauth.baseString(method, base_uri, all_params);\n\n        oauth_params.oauth_signature = ohauth.signature(consumer_secret, token_secret, base_str);\n\n        return 'OAuth ' + ohauth.authHeader(oauth_params);\n    };\n};\n\nmodule.exports = ohauth;\n","// Copyright 2014 Simon Lydell\r\n// X11 (“MIT”) Licensed. (See LICENSE.)\r\n\r\nvoid (function(root, factory) {\r\n  if (typeof define === \"function\" && define.amd) {\r\n    define(factory)\r\n  } else if (typeof exports === \"object\") {\r\n    module.exports = factory()\r\n  } else {\r\n    root.resolveUrl = factory()\r\n  }\r\n}(this, function() {\r\n\r\n  function resolveUrl(/* ...urls */) {\r\n    var numUrls = arguments.length\r\n\r\n    if (numUrls === 0) {\r\n      throw new Error(\"resolveUrl requires at least one argument; got none.\")\r\n    }\r\n\r\n    var base = document.createElement(\"base\")\r\n    base.href = arguments[0]\r\n\r\n    if (numUrls === 1) {\r\n      return base.href\r\n    }\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0]\r\n    head.insertBefore(base, head.firstChild)\r\n\r\n    var a = document.createElement(\"a\")\r\n    var resolved\r\n\r\n    for (var index = 1; index < numUrls; index++) {\r\n      a.href = arguments[index]\r\n      resolved = a.href\r\n      base.href = resolved\r\n    }\r\n\r\n    head.removeChild(base)\r\n\r\n    return resolved\r\n  }\r\n\r\n  return resolveUrl\r\n\r\n}));\r\n","var assign = make_assign()\nvar create = make_create()\nvar trim = make_trim()\nvar Global = (typeof window !== 'undefined' ? window : global)\n\nmodule.exports = {\n\tassign: assign,\n\tcreate: create,\n\ttrim: trim,\n\tbind: bind,\n\tslice: slice,\n\teach: each,\n\tmap: map,\n\tpluck: pluck,\n\tisList: isList,\n\tisFunction: isFunction,\n\tisObject: isObject,\n\tGlobal: Global\n}\n\nfunction make_assign() {\n\tif (Object.assign) {\n\t\treturn Object.assign\n\t} else {\n\t\treturn function shimAssign(obj, props1, props2, etc) {\n\t\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t\teach(Object(arguments[i]), function(val, key) {\n\t\t\t\t\tobj[key] = val\n\t\t\t\t})\n\t\t\t}\t\t\t\n\t\t\treturn obj\n\t\t}\n\t}\n}\n\nfunction make_create() {\n\tif (Object.create) {\n\t\treturn function create(obj, assignProps1, assignProps2, etc) {\n\t\t\tvar assignArgsList = slice(arguments, 1)\n\t\t\treturn assign.apply(this, [Object.create(obj)].concat(assignArgsList))\n\t\t}\n\t} else {\n\t\tfunction F() {} // eslint-disable-line no-inner-declarations\n\t\treturn function create(obj, assignProps1, assignProps2, etc) {\n\t\t\tvar assignArgsList = slice(arguments, 1)\n\t\t\tF.prototype = obj\n\t\t\treturn assign.apply(this, [new F()].concat(assignArgsList))\n\t\t}\n\t}\n}\n\nfunction make_trim() {\n\tif (String.prototype.trim) {\n\t\treturn function trim(str) {\n\t\t\treturn String.prototype.trim.call(str)\n\t\t}\n\t} else {\n\t\treturn function trim(str) {\n\t\t\treturn str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '')\n\t\t}\n\t}\n}\n\nfunction bind(obj, fn) {\n\treturn function() {\n\t\treturn fn.apply(obj, Array.prototype.slice.call(arguments, 0))\n\t}\n}\n\nfunction slice(arr, index) {\n\treturn Array.prototype.slice.call(arr, index || 0)\n}\n\nfunction each(obj, fn) {\n\tpluck(obj, function(val, key) {\n\t\tfn(val, key)\n\t\treturn false\n\t})\n}\n\nfunction map(obj, fn) {\n\tvar res = (isList(obj) ? [] : {})\n\tpluck(obj, function(v, k) {\n\t\tres[k] = fn(v, k)\n\t\treturn false\n\t})\n\treturn res\n}\n\nfunction pluck(obj, fn) {\n\tif (isList(obj)) {\n\t\tfor (var i=0; i<obj.length; i++) {\n\t\t\tif (fn(obj[i], i)) {\n\t\t\t\treturn obj[i]\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor (var key in obj) {\n\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\tif (fn(obj[key], key)) {\n\t\t\t\t\treturn obj[key]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction isList(val) {\n\treturn (val != null && typeof val != 'function' && typeof val.length == 'number')\n}\n\nfunction isFunction(val) {\n\treturn val && {}.toString.call(val) === '[object Function]'\n}\n\nfunction isObject(val) {\n\treturn val && {}.toString.call(val) === '[object Object]'\n}\n","var util = require('./util')\nvar slice = util.slice\nvar pluck = util.pluck\nvar each = util.each\nvar bind = util.bind\nvar create = util.create\nvar isList = util.isList\nvar isFunction = util.isFunction\nvar isObject = util.isObject\n\nmodule.exports = {\n\tcreateStore: createStore\n}\n\nvar storeAPI = {\n\tversion: '2.0.12',\n\tenabled: false,\n\t\n\t// get returns the value of the given key. If that value\n\t// is undefined, it returns optionalDefaultValue instead.\n\tget: function(key, optionalDefaultValue) {\n\t\tvar data = this.storage.read(this._namespacePrefix + key)\n\t\treturn this._deserialize(data, optionalDefaultValue)\n\t},\n\n\t// set will store the given value at key and returns value.\n\t// Calling set with value === undefined is equivalent to calling remove.\n\tset: function(key, value) {\n\t\tif (value === undefined) {\n\t\t\treturn this.remove(key)\n\t\t}\n\t\tthis.storage.write(this._namespacePrefix + key, this._serialize(value))\n\t\treturn value\n\t},\n\n\t// remove deletes the key and value stored at the given key.\n\tremove: function(key) {\n\t\tthis.storage.remove(this._namespacePrefix + key)\n\t},\n\n\t// each will call the given callback once for each key-value pair\n\t// in this store.\n\teach: function(callback) {\n\t\tvar self = this\n\t\tthis.storage.each(function(val, namespacedKey) {\n\t\t\tcallback.call(self, self._deserialize(val), (namespacedKey || '').replace(self._namespaceRegexp, ''))\n\t\t})\n\t},\n\n\t// clearAll will remove all the stored key-value pairs in this store.\n\tclearAll: function() {\n\t\tthis.storage.clearAll()\n\t},\n\n\t// additional functionality that can't live in plugins\n\t// ---------------------------------------------------\n\n\t// hasNamespace returns true if this store instance has the given namespace.\n\thasNamespace: function(namespace) {\n\t\treturn (this._namespacePrefix == '__storejs_'+namespace+'_')\n\t},\n\n\t// createStore creates a store.js instance with the first\n\t// functioning storage in the list of storage candidates,\n\t// and applies the the given mixins to the instance.\n\tcreateStore: function() {\n\t\treturn createStore.apply(this, arguments)\n\t},\n\t\n\taddPlugin: function(plugin) {\n\t\tthis._addPlugin(plugin)\n\t},\n\t\n\tnamespace: function(namespace) {\n\t\treturn createStore(this.storage, this.plugins, namespace)\n\t}\n}\n\nfunction _warn() {\n\tvar _console = (typeof console == 'undefined' ? null : console)\n\tif (!_console) { return }\n\tvar fn = (_console.warn ? _console.warn : _console.log)\n\tfn.apply(_console, arguments)\n}\n\nfunction createStore(storages, plugins, namespace) {\n\tif (!namespace) {\n\t\tnamespace = ''\n\t}\n\tif (storages && !isList(storages)) {\n\t\tstorages = [storages]\n\t}\n\tif (plugins && !isList(plugins)) {\n\t\tplugins = [plugins]\n\t}\n\n\tvar namespacePrefix = (namespace ? '__storejs_'+namespace+'_' : '')\n\tvar namespaceRegexp = (namespace ? new RegExp('^'+namespacePrefix) : null)\n\tvar legalNamespaces = /^[a-zA-Z0-9_\\-]*$/ // alpha-numeric + underscore and dash\n\tif (!legalNamespaces.test(namespace)) {\n\t\tthrow new Error('store.js namespaces can only have alphanumerics + underscores and dashes')\n\t}\n\t\n\tvar _privateStoreProps = {\n\t\t_namespacePrefix: namespacePrefix,\n\t\t_namespaceRegexp: namespaceRegexp,\n\n\t\t_testStorage: function(storage) {\n\t\t\ttry {\n\t\t\t\tvar testStr = '__storejs__test__'\n\t\t\t\tstorage.write(testStr, testStr)\n\t\t\t\tvar ok = (storage.read(testStr) === testStr)\n\t\t\t\tstorage.remove(testStr)\n\t\t\t\treturn ok\n\t\t\t} catch(e) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t},\n\n\t\t_assignPluginFnProp: function(pluginFnProp, propName) {\n\t\t\tvar oldFn = this[propName]\n\t\t\tthis[propName] = function pluginFn() {\n\t\t\t\tvar args = slice(arguments, 0)\n\t\t\t\tvar self = this\n\n\t\t\t\t// super_fn calls the old function which was overwritten by\n\t\t\t\t// this mixin.\n\t\t\t\tfunction super_fn() {\n\t\t\t\t\tif (!oldFn) { return }\n\t\t\t\t\teach(arguments, function(arg, i) {\n\t\t\t\t\t\targs[i] = arg\n\t\t\t\t\t})\n\t\t\t\t\treturn oldFn.apply(self, args)\n\t\t\t\t}\n\n\t\t\t\t// Give mixing function access to super_fn by prefixing all mixin function\n\t\t\t\t// arguments with super_fn.\n\t\t\t\tvar newFnArgs = [super_fn].concat(args)\n\n\t\t\t\treturn pluginFnProp.apply(self, newFnArgs)\n\t\t\t}\n\t\t},\n\n\t\t_serialize: function(obj) {\n\t\t\treturn JSON.stringify(obj)\n\t\t},\n\n\t\t_deserialize: function(strVal, defaultVal) {\n\t\t\tif (!strVal) { return defaultVal }\n\t\t\t// It is possible that a raw string value has been previously stored\n\t\t\t// in a storage without using store.js, meaning it will be a raw\n\t\t\t// string value instead of a JSON serialized string. By defaulting\n\t\t\t// to the raw string value in case of a JSON parse error, we allow\n\t\t\t// for past stored values to be forwards-compatible with store.js\n\t\t\tvar val = ''\n\t\t\ttry { val = JSON.parse(strVal) }\n\t\t\tcatch(e) { val = strVal }\n\n\t\t\treturn (val !== undefined ? val : defaultVal)\n\t\t},\n\t\t\n\t\t_addStorage: function(storage) {\n\t\t\tif (this.enabled) { return }\n\t\t\tif (this._testStorage(storage)) {\n\t\t\t\tthis.storage = storage\n\t\t\t\tthis.enabled = true\n\t\t\t}\n\t\t},\n\n\t\t_addPlugin: function(plugin) {\n\t\t\tvar self = this\n\n\t\t\t// If the plugin is an array, then add all plugins in the array.\n\t\t\t// This allows for a plugin to depend on other plugins.\n\t\t\tif (isList(plugin)) {\n\t\t\t\teach(plugin, function(plugin) {\n\t\t\t\t\tself._addPlugin(plugin)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Keep track of all plugins we've seen so far, so that we\n\t\t\t// don't add any of them twice.\n\t\t\tvar seenPlugin = pluck(this.plugins, function(seenPlugin) {\n\t\t\t\treturn (plugin === seenPlugin)\n\t\t\t})\n\t\t\tif (seenPlugin) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.plugins.push(plugin)\n\n\t\t\t// Check that the plugin is properly formed\n\t\t\tif (!isFunction(plugin)) {\n\t\t\t\tthrow new Error('Plugins must be function values that return objects')\n\t\t\t}\n\n\t\t\tvar pluginProperties = plugin.call(this)\n\t\t\tif (!isObject(pluginProperties)) {\n\t\t\t\tthrow new Error('Plugins must return an object of function properties')\n\t\t\t}\n\n\t\t\t// Add the plugin function properties to this store instance.\n\t\t\teach(pluginProperties, function(pluginFnProp, propName) {\n\t\t\t\tif (!isFunction(pluginFnProp)) {\n\t\t\t\t\tthrow new Error('Bad plugin property: '+propName+' from plugin '+plugin.name+'. Plugins should only return functions.')\n\t\t\t\t}\n\t\t\t\tself._assignPluginFnProp(pluginFnProp, propName)\n\t\t\t})\n\t\t},\n\t\t\n\t\t// Put deprecated properties in the private API, so as to not expose it to accidential\n\t\t// discovery through inspection of the store object.\n\t\t\n\t\t// Deprecated: addStorage\n\t\taddStorage: function(storage) {\n\t\t\t_warn('store.addStorage(storage) is deprecated. Use createStore([storages])')\n\t\t\tthis._addStorage(storage)\n\t\t}\n\t}\n\n\tvar store = create(_privateStoreProps, storeAPI, {\n\t\tplugins: []\n\t})\n\tstore.raw = {}\n\teach(store, function(prop, propName) {\n\t\tif (isFunction(prop)) {\n\t\t\tstore.raw[propName] = bind(store, prop)\t\t\t\n\t\t}\n\t})\n\teach(storages, function(storage) {\n\t\tstore._addStorage(storage)\n\t})\n\teach(plugins, function(plugin) {\n\t\tstore._addPlugin(plugin)\n\t})\n\treturn store\n}\n","var util = require('../src/util')\nvar Global = util.Global\n\nmodule.exports = {\n\tname: 'localStorage',\n\tread: read,\n\twrite: write,\n\teach: each,\n\tremove: remove,\n\tclearAll: clearAll,\n}\n\nfunction localStorage() {\n\treturn Global.localStorage\n}\n\nfunction read(key) {\n\treturn localStorage().getItem(key)\n}\n\nfunction write(key, data) {\n\treturn localStorage().setItem(key, data)\n}\n\nfunction each(fn) {\n\tfor (var i = localStorage().length - 1; i >= 0; i--) {\n\t\tvar key = localStorage().key(i)\n\t\tfn(read(key), key)\n\t}\n}\n\nfunction remove(key) {\n\treturn localStorage().removeItem(key)\n}\n\nfunction clearAll() {\n\treturn localStorage().clear()\n}\n","// oldFF-globalStorage provides storage for Firefox\n// versions 6 and 7, where no localStorage, etc\n// is available.\n\nvar util = require('../src/util')\nvar Global = util.Global\n\nmodule.exports = {\n\tname: 'oldFF-globalStorage',\n\tread: read,\n\twrite: write,\n\teach: each,\n\tremove: remove,\n\tclearAll: clearAll,\n}\n\nvar globalStorage = Global.globalStorage\n\nfunction read(key) {\n\treturn globalStorage[key]\n}\n\nfunction write(key, data) {\n\tglobalStorage[key] = data\n}\n\nfunction each(fn) {\n\tfor (var i = globalStorage.length - 1; i >= 0; i--) {\n\t\tvar key = globalStorage.key(i)\n\t\tfn(globalStorage[key], key)\n\t}\n}\n\nfunction remove(key) {\n\treturn globalStorage.removeItem(key)\n}\n\nfunction clearAll() {\n\teach(function(key, _) {\n\t\tdelete globalStorage[key]\n\t})\n}\n","// oldIE-userDataStorage provides storage for Internet Explorer\n// versions 6 and 7, where no localStorage, sessionStorage, etc\n// is available.\n\nvar util = require('../src/util')\nvar Global = util.Global\n\nmodule.exports = {\n\tname: 'oldIE-userDataStorage',\n\twrite: write,\n\tread: read,\n\teach: each,\n\tremove: remove,\n\tclearAll: clearAll,\n}\n\nvar storageName = 'storejs'\nvar doc = Global.document\nvar _withStorageEl = _makeIEStorageElFunction()\nvar disable = (Global.navigator ? Global.navigator.userAgent : '').match(/ (MSIE 8|MSIE 9|MSIE 10)\\./) // MSIE 9.x, MSIE 10.x\n\nfunction write(unfixedKey, data) {\n\tif (disable) { return }\n\tvar fixedKey = fixKey(unfixedKey)\n\t_withStorageEl(function(storageEl) {\n\t\tstorageEl.setAttribute(fixedKey, data)\n\t\tstorageEl.save(storageName)\n\t})\n}\n\nfunction read(unfixedKey) {\n\tif (disable) { return }\n\tvar fixedKey = fixKey(unfixedKey)\n\tvar res = null\n\t_withStorageEl(function(storageEl) {\n\t\tres = storageEl.getAttribute(fixedKey)\n\t})\n\treturn res\n}\n\nfunction each(callback) {\n\t_withStorageEl(function(storageEl) {\n\t\tvar attributes = storageEl.XMLDocument.documentElement.attributes\n\t\tfor (var i=attributes.length-1; i>=0; i--) {\n\t\t\tvar attr = attributes[i]\n\t\t\tcallback(storageEl.getAttribute(attr.name), attr.name)\n\t\t}\n\t})\n}\n\nfunction remove(unfixedKey) {\n\tvar fixedKey = fixKey(unfixedKey)\n\t_withStorageEl(function(storageEl) {\n\t\tstorageEl.removeAttribute(fixedKey)\n\t\tstorageEl.save(storageName)\n\t})\n}\n\nfunction clearAll() {\n\t_withStorageEl(function(storageEl) {\n\t\tvar attributes = storageEl.XMLDocument.documentElement.attributes\n\t\tstorageEl.load(storageName)\n\t\tfor (var i=attributes.length-1; i>=0; i--) {\n\t\t\tstorageEl.removeAttribute(attributes[i].name)\n\t\t}\n\t\tstorageEl.save(storageName)\n\t})\n}\n\n// Helpers\n//////////\n\n// In IE7, keys cannot start with a digit or contain certain chars.\n// See https://github.com/marcuswestin/store.js/issues/40\n// See https://github.com/marcuswestin/store.js/issues/83\nvar forbiddenCharsRegex = new RegExp(\"[!\\\"#$%&'()*+,/\\\\\\\\:;<=>?@[\\\\]^`{|}~]\", \"g\")\nfunction fixKey(key) {\n\treturn key.replace(/^\\d/, '___$&').replace(forbiddenCharsRegex, '___')\n}\n\nfunction _makeIEStorageElFunction() {\n\tif (!doc || !doc.documentElement || !doc.documentElement.addBehavior) {\n\t\treturn null\n\t}\n\tvar scriptTag = 'script',\n\t\tstorageOwner,\n\t\tstorageContainer,\n\t\tstorageEl\n\n\t// Since #userData storage applies only to specific paths, we need to\n\t// somehow link our data to a specific path.  We choose /favicon.ico\n\t// as a pretty safe option, since all browsers already make a request to\n\t// this URL anyway and being a 404 will not hurt us here.  We wrap an\n\t// iframe pointing to the favicon in an ActiveXObject(htmlfile) object\n\t// (see: http://msdn.microsoft.com/en-us/library/aa752574(v=VS.85).aspx)\n\t// since the iframe access rules appear to allow direct access and\n\t// manipulation of the document element, even for a 404 page.  This\n\t// document can be used instead of the current document (which would\n\t// have been limited to the current path) to perform #userData storage.\n\ttry {\n\t\t/* global ActiveXObject */\n\t\tstorageContainer = new ActiveXObject('htmlfile')\n\t\tstorageContainer.open()\n\t\tstorageContainer.write('<'+scriptTag+'>document.w=window</'+scriptTag+'><iframe src=\"/favicon.ico\"></iframe>')\n\t\tstorageContainer.close()\n\t\tstorageOwner = storageContainer.w.frames[0].document\n\t\tstorageEl = storageOwner.createElement('div')\n\t} catch(e) {\n\t\t// somehow ActiveXObject instantiation failed (perhaps some special\n\t\t// security settings or otherwse), fall back to per-path storage\n\t\tstorageEl = doc.createElement('div')\n\t\tstorageOwner = doc.body\n\t}\n\n\treturn function(storeFunction) {\n\t\tvar args = [].slice.call(arguments, 0)\n\t\targs.unshift(storageEl)\n\t\t// See http://msdn.microsoft.com/en-us/library/ms531081(v=VS.85).aspx\n\t\t// and http://msdn.microsoft.com/en-us/library/ms531424(v=VS.85).aspx\n\t\tstorageOwner.appendChild(storageEl)\n\t\tstorageEl.addBehavior('#default#userData')\n\t\tstorageEl.load(storageName)\n\t\tstoreFunction.apply(this, args)\n\t\tstorageOwner.removeChild(storageEl)\n\t\treturn\n\t}\n}\n","// cookieStorage is useful Safari private browser mode, where localStorage\n// doesn't work but cookies do. This implementation is adopted from\n// https://developer.mozilla.org/en-US/docs/Web/API/Storage/LocalStorage\n\nvar util = require('../src/util')\nvar Global = util.Global\nvar trim = util.trim\n\nmodule.exports = {\n\tname: 'cookieStorage',\n\tread: read,\n\twrite: write,\n\teach: each,\n\tremove: remove,\n\tclearAll: clearAll,\n}\n\nvar doc = Global.document\n\nfunction read(key) {\n\tif (!key || !_has(key)) { return null }\n\tvar regexpStr = \"(?:^|.*;\\\\s*)\" +\n\t\tescape(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") +\n\t\t\"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"\n\treturn unescape(doc.cookie.replace(new RegExp(regexpStr), \"$1\"))\n}\n\nfunction each(callback) {\n\tvar cookies = doc.cookie.split(/; ?/g)\n\tfor (var i = cookies.length - 1; i >= 0; i--) {\n\t\tif (!trim(cookies[i])) {\n\t\t\tcontinue\n\t\t}\n\t\tvar kvp = cookies[i].split('=')\n\t\tvar key = unescape(kvp[0])\n\t\tvar val = unescape(kvp[1])\n\t\tcallback(val, key)\n\t}\n}\n\nfunction write(key, data) {\n\tif(!key) { return }\n\tdoc.cookie = escape(key) + \"=\" + escape(data) + \"; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/\"\n}\n\nfunction remove(key) {\n\tif (!key || !_has(key)) {\n\t\treturn\n\t}\n\tdoc.cookie = escape(key) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\"\n}\n\nfunction clearAll() {\n\teach(function(_, key) {\n\t\tremove(key)\n\t})\n}\n\nfunction _has(key) {\n\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(doc.cookie)\n}\n","var util = require('../src/util')\nvar Global = util.Global\n\nmodule.exports = {\n\tname: 'sessionStorage',\n\tread: read,\n\twrite: write,\n\teach: each,\n\tremove: remove,\n\tclearAll: clearAll\n}\n\nfunction sessionStorage() {\n\treturn Global.sessionStorage\n}\n\nfunction read(key) {\n\treturn sessionStorage().getItem(key)\n}\n\nfunction write(key, data) {\n\treturn sessionStorage().setItem(key, data)\n}\n\nfunction each(fn) {\n\tfor (var i = sessionStorage().length - 1; i >= 0; i--) {\n\t\tvar key = sessionStorage().key(i)\n\t\tfn(read(key), key)\n\t}\n}\n\nfunction remove(key) {\n\treturn sessionStorage().removeItem(key)\n}\n\nfunction clearAll() {\n\treturn sessionStorage().clear()\n}\n","// memoryStorage is a useful last fallback to ensure that the store\n// is functions (meaning store.get(), store.set(), etc will all function).\n// However, stored values will not persist when the browser navigates to\n// a new page or reloads the current page.\n\nmodule.exports = {\n\tname: 'memoryStorage',\n\tread: read,\n\twrite: write,\n\teach: each,\n\tremove: remove,\n\tclearAll: clearAll,\n}\n\nvar memoryStorage = {}\n\nfunction read(key) {\n\treturn memoryStorage[key]\n}\n\nfunction write(key, data) {\n\tmemoryStorage[key] = data\n}\n\nfunction each(callback) {\n\tfor (var key in memoryStorage) {\n\t\tif (memoryStorage.hasOwnProperty(key)) {\n\t\t\tcallback(memoryStorage[key], key)\n\t\t}\n\t}\n}\n\nfunction remove(key) {\n\tdelete memoryStorage[key]\n}\n\nfunction clearAll(key) {\n\tmemoryStorage = {}\n}\n","module.exports = [\n\t// Listed in order of usage preference\n\trequire('./localStorage'),\n\trequire('./oldFF-globalStorage'),\n\trequire('./oldIE-userDataStorage'),\n\trequire('./cookieStorage'),\n\trequire('./sessionStorage'),\n\trequire('./memoryStorage')\n]\n","/* eslint-disable */\n\n//  json2.js\n//  2016-10-28\n//  Public Domain.\n//  NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n//  See http://www.JSON.org/js.html\n//  This code should be minified before deployment.\n//  See http://javascript.crockford.com/jsmin.html\n\n//  USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n//  NOT CONTROL.\n\n//  This file creates a global JSON object containing two methods: stringify\n//  and parse. This file provides the ES5 JSON capability to ES3 systems.\n//  If a project might run on IE8 or earlier, then this file should be included.\n//  This file does nothing on ES5 systems.\n\n//      JSON.stringify(value, replacer, space)\n//          value       any JavaScript value, usually an object or array.\n//          replacer    an optional parameter that determines how object\n//                      values are stringified for objects. It can be a\n//                      function or an array of strings.\n//          space       an optional parameter that specifies the indentation\n//                      of nested structures. If it is omitted, the text will\n//                      be packed without extra whitespace. If it is a number,\n//                      it will specify the number of spaces to indent at each\n//                      level. If it is a string (such as \"\\t\" or \"&nbsp;\"),\n//                      it contains the characters used to indent at each level.\n//          This method produces a JSON text from a JavaScript value.\n//          When an object value is found, if the object contains a toJSON\n//          method, its toJSON method will be called and the result will be\n//          stringified. A toJSON method does not serialize: it returns the\n//          value represented by the name/value pair that should be serialized,\n//          or undefined if nothing should be serialized. The toJSON method\n//          will be passed the key associated with the value, and this will be\n//          bound to the value.\n\n//          For example, this would serialize Dates as ISO strings.\n\n//              Date.prototype.toJSON = function (key) {\n//                  function f(n) {\n//                      // Format integers to have at least two digits.\n//                      return (n < 10)\n//                          ? \"0\" + n\n//                          : n;\n//                  }\n//                  return this.getUTCFullYear()   + \"-\" +\n//                       f(this.getUTCMonth() + 1) + \"-\" +\n//                       f(this.getUTCDate())      + \"T\" +\n//                       f(this.getUTCHours())     + \":\" +\n//                       f(this.getUTCMinutes())   + \":\" +\n//                       f(this.getUTCSeconds())   + \"Z\";\n//              };\n\n//          You can provide an optional replacer method. It will be passed the\n//          key and value of each member, with this bound to the containing\n//          object. The value that is returned from your method will be\n//          serialized. If your method returns undefined, then the member will\n//          be excluded from the serialization.\n\n//          If the replacer parameter is an array of strings, then it will be\n//          used to select the members to be serialized. It filters the results\n//          such that only members with keys listed in the replacer array are\n//          stringified.\n\n//          Values that do not have JSON representations, such as undefined or\n//          functions, will not be serialized. Such values in objects will be\n//          dropped; in arrays they will be replaced with null. You can use\n//          a replacer function to replace those with JSON values.\n\n//          JSON.stringify(undefined) returns undefined.\n\n//          The optional space parameter produces a stringification of the\n//          value that is filled with line breaks and indentation to make it\n//          easier to read.\n\n//          If the space parameter is a non-empty string, then that string will\n//          be used for indentation. If the space parameter is a number, then\n//          the indentation will be that many spaces.\n\n//          Example:\n\n//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}]);\n//          // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\n//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}], null, \"\\t\");\n//          // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\n//          text = JSON.stringify([new Date()], function (key, value) {\n//              return this[key] instanceof Date\n//                  ? \"Date(\" + this[key] + \")\"\n//                  : value;\n//          });\n//          // text is '[\"Date(---current time---)\"]'\n\n//      JSON.parse(text, reviver)\n//          This method parses a JSON text to produce an object or array.\n//          It can throw a SyntaxError exception.\n\n//          The optional reviver parameter is a function that can filter and\n//          transform the results. It receives each of the keys and values,\n//          and its return value is used instead of the original value.\n//          If it returns what it received, then the structure is not modified.\n//          If it returns undefined then the member is deleted.\n\n//          Example:\n\n//          // Parse the text. Values that look like ISO date strings will\n//          // be converted to Date objects.\n\n//          myData = JSON.parse(text, function (key, value) {\n//              var a;\n//              if (typeof value === \"string\") {\n//                  a =\n//   /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n//                  if (a) {\n//                      return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n//                          +a[5], +a[6]));\n//                  }\n//              }\n//              return value;\n//          });\n\n//          myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n//              var d;\n//              if (typeof value === \"string\" &&\n//                      value.slice(0, 5) === \"Date(\" &&\n//                      value.slice(-1) === \")\") {\n//                  d = new Date(value.slice(5, -1));\n//                  if (d) {\n//                      return d;\n//                  }\n//              }\n//              return value;\n//          });\n\n//  This is a reference implementation. You are free to copy, modify, or\n//  redistribute.\n\n/*jslint\n    eval, for, this\n*/\n\n/*property\n    JSON, apply, call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n    lastIndex, length, parse, prototype, push, replace, slice, stringify,\n    test, toJSON, toString, valueOf\n*/\n\n\n// Create a JSON object only if one does not already exist. We create the\n// methods in a closure to avoid creating global variables.\n\nif (typeof JSON !== \"object\") {\n    JSON = {};\n}\n\n(function () {\n    \"use strict\";\n\n    var rx_one = /^[\\],:{}\\s]*$/;\n    var rx_two = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n    var rx_three = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n    var rx_four = /(?:^|:|,)(?:\\s*\\[)+/g;\n    var rx_escapable = /[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n    var rx_dangerous = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\n    function f(n) {\n        // Format integers to have at least two digits.\n        return n < 10\n            ? \"0\" + n\n            : n;\n    }\n\n    function this_value() {\n        return this.valueOf();\n    }\n\n    if (typeof Date.prototype.toJSON !== \"function\") {\n\n        Date.prototype.toJSON = function () {\n\n            return isFinite(this.valueOf())\n                ? this.getUTCFullYear() + \"-\" +\n                        f(this.getUTCMonth() + 1) + \"-\" +\n                        f(this.getUTCDate()) + \"T\" +\n                        f(this.getUTCHours()) + \":\" +\n                        f(this.getUTCMinutes()) + \":\" +\n                        f(this.getUTCSeconds()) + \"Z\"\n                : null;\n        };\n\n        Boolean.prototype.toJSON = this_value;\n        Number.prototype.toJSON = this_value;\n        String.prototype.toJSON = this_value;\n    }\n\n    var gap;\n    var indent;\n    var meta;\n    var rep;\n\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n        rx_escapable.lastIndex = 0;\n        return rx_escapable.test(string)\n            ? \"\\\"\" + string.replace(rx_escapable, function (a) {\n                var c = meta[a];\n                return typeof c === \"string\"\n                    ? c\n                    : \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n            }) + \"\\\"\"\n            : \"\\\"\" + string + \"\\\"\";\n    }\n\n\n    function str(key, holder) {\n\n// Produce a string from holder[key].\n\n        var i;          // The loop counter.\n        var k;          // The member key.\n        var v;          // The member value.\n        var length;\n        var mind = gap;\n        var partial;\n        var value = holder[key];\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n        if (value && typeof value === \"object\" &&\n                typeof value.toJSON === \"function\") {\n            value = value.toJSON(key);\n        }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n        if (typeof rep === \"function\") {\n            value = rep.call(holder, key, value);\n        }\n\n// What happens next depends on the value's type.\n\n        switch (typeof value) {\n        case \"string\":\n            return quote(value);\n\n        case \"number\":\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n            return isFinite(value)\n                ? String(value)\n                : \"null\";\n\n        case \"boolean\":\n        case \"null\":\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce \"null\". The case is included here in\n// the remote chance that this gets fixed someday.\n\n            return String(value);\n\n// If the type is \"object\", we might be dealing with an object or an array or\n// null.\n\n        case \"object\":\n\n// Due to a specification blunder in ECMAScript, typeof null is \"object\",\n// so watch out for that case.\n\n            if (!value) {\n                return \"null\";\n            }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n            gap += indent;\n            partial = [];\n\n// Is the value an array?\n\n            if (Object.prototype.toString.apply(value) === \"[object Array]\") {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || \"null\";\n                }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n                v = partial.length === 0\n                    ? \"[]\"\n                    : gap\n                        ? \"[\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"]\"\n                        : \"[\" + partial.join(\",\") + \"]\";\n                gap = mind;\n                return v;\n            }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n            if (rep && typeof rep === \"object\") {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    if (typeof rep[i] === \"string\") {\n                        k = rep[i];\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (\n                                gap\n                                    ? \": \"\n                                    : \":\"\n                            ) + v);\n                        }\n                    }\n                }\n            } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (\n                                gap\n                                    ? \": \"\n                                    : \":\"\n                            ) + v);\n                        }\n                    }\n                }\n            }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n            v = partial.length === 0\n                ? \"{}\"\n                : gap\n                    ? \"{\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"}\"\n                    : \"{\" + partial.join(\",\") + \"}\";\n            gap = mind;\n            return v;\n        }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    if (typeof JSON.stringify !== \"function\") {\n        meta = {    // table of character substitutions\n            \"\\b\": \"\\\\b\",\n            \"\\t\": \"\\\\t\",\n            \"\\n\": \"\\\\n\",\n            \"\\f\": \"\\\\f\",\n            \"\\r\": \"\\\\r\",\n            \"\\\"\": \"\\\\\\\"\",\n            \"\\\\\": \"\\\\\\\\\"\n        };\n        JSON.stringify = function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n            var i;\n            gap = \"\";\n            indent = \"\";\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n            if (typeof space === \"number\") {\n                for (i = 0; i < space; i += 1) {\n                    indent += \" \";\n                }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n            } else if (typeof space === \"string\") {\n                indent = space;\n            }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n            rep = replacer;\n            if (replacer && typeof replacer !== \"function\" &&\n                    (typeof replacer !== \"object\" ||\n                    typeof replacer.length !== \"number\")) {\n                throw new Error(\"JSON.stringify\");\n            }\n\n// Make a fake root object containing our value under the key of \"\".\n// Return the result of stringifying the value.\n\n            return str(\"\", {\"\": value});\n        };\n    }\n\n\n// If the JSON object does not yet have a parse method, give it one.\n\n    if (typeof JSON.parse !== \"function\") {\n        JSON.parse = function (text, reviver) {\n\n// The parse method takes a text and an optional reviver function, and returns\n// a JavaScript value if the text is a valid JSON text.\n\n            var j;\n\n            function walk(holder, key) {\n\n// The walk method is used to recursively walk the resulting structure so\n// that modifications can be made.\n\n                var k;\n                var v;\n                var value = holder[key];\n                if (value && typeof value === \"object\") {\n                    for (k in value) {\n                        if (Object.prototype.hasOwnProperty.call(value, k)) {\n                            v = walk(value, k);\n                            if (v !== undefined) {\n                                value[k] = v;\n                            } else {\n                                delete value[k];\n                            }\n                        }\n                    }\n                }\n                return reviver.call(holder, key, value);\n            }\n\n\n// Parsing happens in four stages. In the first stage, we replace certain\n// Unicode characters with escape sequences. JavaScript handles many characters\n// incorrectly, either silently deleting them, or treating them as line endings.\n\n            text = String(text);\n            rx_dangerous.lastIndex = 0;\n            if (rx_dangerous.test(text)) {\n                text = text.replace(rx_dangerous, function (a) {\n                    return \"\\\\u\" +\n                            (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n                });\n            }\n\n// In the second stage, we run the text against regular expressions that look\n// for non-JSON patterns. We are especially concerned with \"()\" and \"new\"\n// because they can cause invocation, and \"=\" because it can cause mutation.\n// But just to be safe, we want to reject all unexpected forms.\n\n// We split the second stage into 4 regexp operations in order to work around\n// crippling inefficiencies in IE's and Safari's regexp engines. First we\n// replace the JSON backslash pairs with \"@\" (a non-JSON character). Second, we\n// replace all simple value tokens with \"]\" characters. Third, we delete all\n// open brackets that follow a colon or comma or that begin the text. Finally,\n// we look to see that the remaining characters are only whitespace or \"]\" or\n// \",\" or \":\" or \"{\" or \"}\". If that is so, then the text is safe for eval.\n\n            if (\n                rx_one.test(\n                    text\n                        .replace(rx_two, \"@\")\n                        .replace(rx_three, \"]\")\n                        .replace(rx_four, \"\")\n                )\n            ) {\n\n// In the third stage we use the eval function to compile the text into a\n// JavaScript structure. The \"{\" operator is subject to a syntactic ambiguity\n// in JavaScript: it can begin a block or an object literal. We wrap the text\n// in parens to eliminate the ambiguity.\n\n                j = eval(\"(\" + text + \")\");\n\n// In the optional fourth stage, we recursively walk the new structure, passing\n// each name/value pair to a reviver function for possible transformation.\n\n                return (typeof reviver === \"function\")\n                    ? walk({\"\": j}, \"\")\n                    : j;\n            }\n\n// If the text is not JSON parseable, then a SyntaxError is thrown.\n\n            throw new SyntaxError(\"JSON.parse\");\n        };\n    }\n}());","module.exports = json2Plugin\n\nfunction json2Plugin() {\n\trequire('./lib/json2')\n\treturn {}\n}\n","var engine = require('../src/store-engine')\n\nvar storages = require('../storages/all')\nvar plugins = [require('../plugins/json2')]\n\nmodule.exports = engine.createStore(storages, plugins)\n","'use strict';\n\nvar ohauth = require('ohauth');\nvar resolveUrl = require('resolve-url');\nvar store = require('store');\n\n\n// # xtend\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction xtend() {\n    var target = {};\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\n\n\n// # osm-auth\n//\n// This code is only compatible with IE10+ because the [XDomainRequest](http://bit.ly/LfO7xo)\n// object, IE<10's idea of [CORS](http://en.wikipedia.org/wiki/Cross-origin_resource_sharing),\n// does not support custom headers, which this uses everywhere.\nmodule.exports = function(o) {\n\n    var oauth = {};\n\n    // authenticated users will also have a request token secret, but it's\n    // not used in transactions with the server\n    oauth.authenticated = function() {\n        return !!(token('oauth_token') && token('oauth_token_secret'));\n    };\n\n    oauth.logout = function() {\n        token('oauth_token', '');\n        token('oauth_token_secret', '');\n        token('oauth_request_token_secret', '');\n        return oauth;\n    };\n\n    // TODO: detect lack of click event\n    oauth.authenticate = function(callback) {\n        if (oauth.authenticated()) return callback();\n\n        oauth.logout();\n\n        // ## Getting a request token\n        var params = timenonce(getAuth(o)),\n            url = o.url + '/oauth/request_token';\n\n        params.oauth_signature = ohauth.signature(\n            o.oauth_secret, '',\n            ohauth.baseString('POST', url, params));\n\n        if (!o.singlepage) {\n            // Create a 600x550 popup window in the center of the screen\n            var w = 600, h = 550,\n                settings = [\n                    ['width', w], ['height', h],\n                    ['left', screen.width / 2 - w / 2],\n                    ['top', screen.height / 2 - h / 2]].map(function(x) {\n                        return x.join('=');\n                    }).join(','),\n                popup = window.open('about:blank', 'oauth_window', settings);\n\n            oauth.popupWindow = popup;\n\n            if (!popup) {\n                var error = new Error('Popup was blocked');\n                error.status = 'popup-blocked';\n                throw error;\n            }\n        }\n\n        // Request a request token. When this is complete, the popup\n        // window is redirected to OSM's authorization page.\n        ohauth.xhr('POST', url, params, null, {}, reqTokenDone);\n        o.loading();\n\n        function reqTokenDone(err, xhr) {\n            o.done();\n            if (err) return callback(err);\n            var resp = ohauth.stringQs(xhr.response);\n            token('oauth_request_token_secret', resp.oauth_token_secret);\n            var authorize_url = o.url + '/oauth/authorize?' + ohauth.qsString({\n                oauth_token: resp.oauth_token,\n                oauth_callback: resolveUrl(o.landing)\n            });\n\n            if (o.singlepage) {\n                location.href = authorize_url;\n            } else {\n                popup.location = authorize_url;\n            }\n        }\n\n        // Called by a function in a landing page, in the popup window. The\n        // window closes itself.\n        window.authComplete = function(token) {\n            var oauth_token = ohauth.stringQs(token.split('?')[1]);\n            get_access_token(oauth_token.oauth_token);\n            delete window.authComplete;\n        };\n\n        // ## Getting an request token\n        //\n        // At this point we have an `oauth_token`, brought in from a function\n        // call on a landing page popup.\n        function get_access_token(oauth_token) {\n            var url = o.url + '/oauth/access_token',\n                params = timenonce(getAuth(o)),\n                request_token_secret = token('oauth_request_token_secret');\n            params.oauth_token = oauth_token;\n            params.oauth_signature = ohauth.signature(\n                o.oauth_secret,\n                request_token_secret,\n                ohauth.baseString('POST', url, params));\n\n            // ## Getting an access token\n            //\n            // The final token required for authentication. At this point\n            // we have a `request token secret`\n            ohauth.xhr('POST', url, params, null, {}, accessTokenDone);\n            o.loading();\n        }\n\n        function accessTokenDone(err, xhr) {\n            o.done();\n            if (err) return callback(err);\n            var access_token = ohauth.stringQs(xhr.response);\n            token('oauth_token', access_token.oauth_token);\n            token('oauth_token_secret', access_token.oauth_token_secret);\n            callback(null, oauth);\n        }\n    };\n\n    oauth.bringPopupWindowToFront = function() {\n        var brougtPopupToFront = false;\n        try {\n            // This may cause a cross-origin error:\n            // `DOMException: Blocked a frame with origin \"...\" from accessing a cross-origin frame.`\n            if (oauth.popupWindow && !oauth.popupWindow.closed) {\n                oauth.popupWindow.focus();\n                brougtPopupToFront = true;\n            }\n        } catch (err) {\n            // Bringing popup window to front failed (probably because of the cross-origin error mentioned above)\n        }\n        return brougtPopupToFront;\n    };\n\n    oauth.bootstrapToken = function(oauth_token, callback) {\n        // ## Getting an request token\n        // At this point we have an `oauth_token`, brought in from a function\n        // call on a landing page popup.\n        function get_access_token(oauth_token) {\n            var url = o.url + '/oauth/access_token',\n                params = timenonce(getAuth(o)),\n                request_token_secret = token('oauth_request_token_secret');\n            params.oauth_token = oauth_token;\n            params.oauth_signature = ohauth.signature(\n                o.oauth_secret,\n                request_token_secret,\n                ohauth.baseString('POST', url, params));\n\n            // ## Getting an access token\n            // The final token required for authentication. At this point\n            // we have a `request token secret`\n            ohauth.xhr('POST', url, params, null, {}, accessTokenDone);\n            o.loading();\n        }\n\n        function accessTokenDone(err, xhr) {\n            o.done();\n            if (err) return callback(err);\n            var access_token = ohauth.stringQs(xhr.response);\n            token('oauth_token', access_token.oauth_token);\n            token('oauth_token_secret', access_token.oauth_token_secret);\n            callback(null, oauth);\n        }\n\n        get_access_token(oauth_token);\n    };\n\n    // # xhr\n    //\n    // A single XMLHttpRequest wrapper that does authenticated calls if the\n    // user has logged in.\n    oauth.xhr = function(options, callback) {\n        if (!oauth.authenticated()) {\n            if (o.auto) {\n                return oauth.authenticate(run);\n            } else {\n                callback('not authenticated', null);\n                return;\n            }\n        } else {\n            return run();\n        }\n\n        function run() {\n            var params = timenonce(getAuth(o)),\n                oauth_token_secret = token('oauth_token_secret'),\n                url = (options.prefix !== false) ? o.url + options.path : options.path,\n                url_parts = url.replace(/#.*$/, '').split('?', 2),\n                base_url = url_parts[0],\n                query = (url_parts.length === 2) ? url_parts[1] : '';\n\n            // https://tools.ietf.org/html/rfc5849#section-3.4.1.3.1\n            if ((!options.options || !options.options.header ||\n                options.options.header['Content-Type'] === 'application/x-www-form-urlencoded') &&\n                options.content) {\n                params = xtend(params, ohauth.stringQs(options.content));\n            }\n\n            params.oauth_token = token('oauth_token');\n            params.oauth_signature = ohauth.signature(\n                o.oauth_secret,\n                oauth_token_secret,\n                ohauth.baseString(options.method, base_url, xtend(params, ohauth.stringQs(query)))\n            );\n\n            return ohauth.xhr(options.method, url, params, options.content, options.options, done);\n        }\n\n        function done(err, xhr) {\n            if (err) return callback(err);\n            else if (xhr.responseXML) return callback(err, xhr.responseXML);\n            else return callback(err, xhr.response);\n        }\n    };\n\n    // pre-authorize this object, if we can just get a token and token_secret\n    // from the start\n    oauth.preauth = function(c) {\n        if (!c) return;\n        if (c.oauth_token) token('oauth_token', c.oauth_token);\n        if (c.oauth_token_secret) token('oauth_token_secret', c.oauth_token_secret);\n        return oauth;\n    };\n\n    oauth.options = function(_) {\n        if (!arguments.length) return o;\n\n        o = _;\n        o.url = o.url || 'https://www.openstreetmap.org';\n        o.landing = o.landing || 'land.html';\n        o.singlepage = o.singlepage || false;\n\n        // Optional loading and loading-done functions for nice UI feedback.\n        // by default, no-ops\n        o.loading = o.loading || function() {};\n        o.done = o.done || function() {};\n\n        return oauth.preauth(o);\n    };\n\n    // 'stamp' an authentication object from `getAuth()`\n    // with a [nonce](http://en.wikipedia.org/wiki/Cryptographic_nonce)\n    // and timestamp\n    function timenonce(o) {\n        o.oauth_timestamp = ohauth.timestamp();\n        o.oauth_nonce = ohauth.nonce();\n        return o;\n    }\n\n    // get/set tokens. These are prefixed with the base URL so that `osm-auth`\n    // can be used with multiple APIs and the keys in `localStorage`\n    // will not clash\n    var token;\n\n    if (store.enabled) {\n        token = function (x, y) {\n            if (arguments.length === 1) return store.get(o.url + x);\n            else if (arguments.length === 2) return store.set(o.url + x, y);\n        };\n    } else {\n        var storage = {};\n        token = function (x, y) {\n            if (arguments.length === 1) return storage[o.url + x];\n            else if (arguments.length === 2) return storage[o.url + x] = y;\n        };\n    }\n\n    // Get an authentication object. If you just add and remove properties\n    // from a single object, you'll need to use `delete` to make sure that\n    // it doesn't contain undesired properties for authentication\n    function getAuth(o) {\n        return {\n            oauth_consumer_key: o.oauth_consumer_key,\n            oauth_signature_method: 'HMAC-SHA1'\n        };\n    }\n\n    // potentially pre-authorize\n    oauth.options(o);\n\n    return oauth;\n};","'use strict';\n\nexports.__esModule = true;\nexports.extend = extend;\nexports.indexOf = indexOf;\nexports.escapeExpression = escapeExpression;\nexports.isEmpty = isEmpty;\nexports.createFrame = createFrame;\nexports.blockParams = blockParams;\nexports.appendContextPath = appendContextPath;\nvar escape = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nvar badChars = /[&<>\"'`=]/g,\n    possible = /[&<>\"'`=]/;\n\nfunction escapeChar(chr) {\n  return escape[chr];\n}\n\nfunction extend(obj /* , ...source */) {\n  for (var i = 1; i < arguments.length; i++) {\n    for (var key in arguments[i]) {\n      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nvar toString = Object.prototype.toString;\n\nexports.toString = toString;\n// Sourced from lodash\n// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n/* eslint-disable func-style */\nvar isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\n// fallback for older versions of Chrome and Safari\n/* istanbul ignore next */\nif (isFunction(/x/)) {\n  exports.isFunction = isFunction = function (value) {\n    return typeof value === 'function' && toString.call(value) === '[object Function]';\n  };\n}\nexports.isFunction = isFunction;\n\n/* eslint-enable func-style */\n\n/* istanbul ignore next */\nvar isArray = Array.isArray || function (value) {\n  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;\n};\n\nexports.isArray = isArray;\n// Older IE versions do not directly support indexOf so we must implement our own, sadly.\n\nfunction indexOf(array, value) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction escapeExpression(string) {\n  if (typeof string !== 'string') {\n    // don't escape SafeStrings, since they're already safe\n    if (string && string.toHTML) {\n      return string.toHTML();\n    } else if (string == null) {\n      return '';\n    } else if (!string) {\n      return string + '';\n    }\n\n    // Force a string conversion as this will be done by the append regardless and\n    // the regex test will do this transparently behind the scenes, causing issues if\n    // an object's to string has escaped characters in it.\n    string = '' + string;\n  }\n\n  if (!possible.test(string)) {\n    return string;\n  }\n  return string.replace(badChars, escapeChar);\n}\n\nfunction isEmpty(value) {\n  if (!value && value !== 0) {\n    return true;\n  } else if (isArray(value) && value.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction createFrame(object) {\n  var frame = extend({}, object);\n  frame._parent = object;\n  return frame;\n}\n\nfunction blockParams(params, ids) {\n  params.path = ids;\n  return params;\n}\n\nfunction appendContextPath(contextPath, id) {\n  return (contextPath ? contextPath + '.' : '') + id;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL3V0aWxzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxJQUFNLE1BQU0sR0FBRztBQUNiLEtBQUcsRUFBRSxPQUFPO0FBQ1osS0FBRyxFQUFFLE1BQU07QUFDWCxLQUFHLEVBQUUsTUFBTTtBQUNYLEtBQUcsRUFBRSxRQUFRO0FBQ2IsS0FBRyxFQUFFLFFBQVE7QUFDYixLQUFHLEVBQUUsUUFBUTtBQUNiLEtBQUcsRUFBRSxRQUFRO0NBQ2QsQ0FBQzs7QUFFRixJQUFNLFFBQVEsR0FBRyxZQUFZO0lBQzNCLFFBQVEsR0FBRyxXQUFXLENBQUM7O0FBRXpCLFNBQVMsVUFBVSxDQUFDLEdBQUcsRUFBRTtBQUN2QixTQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUNwQjs7QUFFTSxTQUFTLE1BQU0sQ0FBQyxHQUFHLG9CQUFvQjtBQUM1QyxPQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUN6QyxTQUFLLElBQUksR0FBRyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUM1QixVQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLEVBQUU7QUFDM0QsV0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztPQUM5QjtLQUNGO0dBQ0Y7O0FBRUQsU0FBTyxHQUFHLENBQUM7Q0FDWjs7QUFFTSxJQUFJLFFBQVEsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQzs7Ozs7O0FBS2hELElBQUksVUFBVSxHQUFHLG9CQUFTLEtBQUssRUFBRTtBQUMvQixTQUFPLE9BQU8sS0FBSyxLQUFLLFVBQVUsQ0FBQztDQUNwQyxDQUFDOzs7QUFHRixJQUFJLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRTtBQUNuQixVQU9PLFVBQVUsR0FQakIsVUFBVSxHQUFHLFVBQVMsS0FBSyxFQUFFO0FBQzNCLFdBQ0UsT0FBTyxLQUFLLEtBQUssVUFBVSxJQUMzQixRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLG1CQUFtQixDQUM1QztHQUNILENBQUM7Q0FDSDtRQUNRLFVBQVUsR0FBVixVQUFVOzs7OztBQUlaLElBQU0sT0FBTyxHQUNsQixLQUFLLENBQUMsT0FBTyxJQUNiLFVBQVMsS0FBSyxFQUFFO0FBQ2QsU0FBTyxLQUFLLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxHQUNyQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLGdCQUFnQixHQUN6QyxLQUFLLENBQUM7Q0FDWCxDQUFDOzs7OztBQUdHLFNBQVMsT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUU7QUFDcEMsT0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUNoRCxRQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLEVBQUU7QUFDdEIsYUFBTyxDQUFDLENBQUM7S0FDVjtHQUNGO0FBQ0QsU0FBTyxDQUFDLENBQUMsQ0FBQztDQUNYOztBQUVNLFNBQVMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFO0FBQ3ZDLE1BQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFOztBQUU5QixRQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsTUFBTSxFQUFFO0FBQzNCLGFBQU8sTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0tBQ3hCLE1BQU0sSUFBSSxNQUFNLElBQUksSUFBSSxFQUFFO0FBQ3pCLGFBQU8sRUFBRSxDQUFDO0tBQ1gsTUFBTSxJQUFJLENBQUMsTUFBTSxFQUFFO0FBQ2xCLGFBQU8sTUFBTSxHQUFHLEVBQUUsQ0FBQztLQUNwQjs7Ozs7QUFLRCxVQUFNLEdBQUcsRUFBRSxHQUFHLE1BQU0sQ0FBQztHQUN0Qjs7QUFFRCxNQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRTtBQUMxQixXQUFPLE1BQU0sQ0FBQztHQUNmO0FBQ0QsU0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQztDQUM3Qzs7QUFFTSxTQUFTLE9BQU8sQ0FBQyxLQUFLLEVBQUU7QUFDN0IsTUFBSSxDQUFDLEtBQUssSUFBSSxLQUFLLEtBQUssQ0FBQyxFQUFFO0FBQ3pCLFdBQU8sSUFBSSxDQUFDO0dBQ2IsTUFBTSxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtBQUMvQyxXQUFPLElBQUksQ0FBQztHQUNiLE1BQU07QUFDTCxXQUFPLEtBQUssQ0FBQztHQUNkO0NBQ0Y7O0FBRU0sU0FBUyxXQUFXLENBQUMsTUFBTSxFQUFFO0FBQ2xDLE1BQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDL0IsT0FBSyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7QUFDdkIsU0FBTyxLQUFLLENBQUM7Q0FDZDs7QUFFTSxTQUFTLFdBQVcsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFO0FBQ3ZDLFFBQU0sQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDO0FBQ2xCLFNBQU8sTUFBTSxDQUFDO0NBQ2Y7O0FBRU0sU0FBUyxpQkFBaUIsQ0FBQyxXQUFXLEVBQUUsRUFBRSxFQUFFO0FBQ2pELFNBQU8sQ0FBQyxXQUFXLEdBQUcsV0FBVyxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUEsR0FBSSxFQUFFLENBQUM7Q0FDcEQiLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBlc2NhcGUgPSB7XG4gICcmJzogJyZhbXA7JyxcbiAgJzwnOiAnJmx0OycsXG4gICc+JzogJyZndDsnLFxuICAnXCInOiAnJnF1b3Q7JyxcbiAgXCInXCI6ICcmI3gyNzsnLFxuICAnYCc6ICcmI3g2MDsnLFxuICAnPSc6ICcmI3gzRDsnXG59O1xuXG5jb25zdCBiYWRDaGFycyA9IC9bJjw+XCInYD1dL2csXG4gIHBvc3NpYmxlID0gL1smPD5cIidgPV0vO1xuXG5mdW5jdGlvbiBlc2NhcGVDaGFyKGNocikge1xuICByZXR1cm4gZXNjYXBlW2Nocl07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleHRlbmQob2JqIC8qICwgLi4uc291cmNlICovKSB7XG4gIGZvciAobGV0IGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgZm9yIChsZXQga2V5IGluIGFyZ3VtZW50c1tpXSkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhcmd1bWVudHNbaV0sIGtleSkpIHtcbiAgICAgICAgb2JqW2tleV0gPSBhcmd1bWVudHNbaV1ba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5leHBvcnQgbGV0IHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxuLy8gU291cmNlZCBmcm9tIGxvZGFzaFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2Jlc3RpZWpzL2xvZGFzaC9ibG9iL21hc3Rlci9MSUNFTlNFLnR4dFxuLyogZXNsaW50LWRpc2FibGUgZnVuYy1zdHlsZSAqL1xubGV0IGlzRnVuY3Rpb24gPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nO1xufTtcbi8vIGZhbGxiYWNrIGZvciBvbGRlciB2ZXJzaW9ucyBvZiBDaHJvbWUgYW5kIFNhZmFyaVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmlmIChpc0Z1bmN0aW9uKC94LykpIHtcbiAgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgICAgdG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09ICdbb2JqZWN0IEZ1bmN0aW9uXSdcbiAgICApO1xuICB9O1xufVxuZXhwb3J0IHsgaXNGdW5jdGlvbiB9O1xuLyogZXNsaW50LWVuYWJsZSBmdW5jLXN0eWxlICovXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5leHBvcnQgY29uc3QgaXNBcnJheSA9XG4gIEFycmF5LmlzQXJyYXkgfHxcbiAgZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0J1xuICAgICAgPyB0b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gJ1tvYmplY3QgQXJyYXldJ1xuICAgICAgOiBmYWxzZTtcbiAgfTtcblxuLy8gT2xkZXIgSUUgdmVyc2lvbnMgZG8gbm90IGRpcmVjdGx5IHN1cHBvcnQgaW5kZXhPZiBzbyB3ZSBtdXN0IGltcGxlbWVudCBvdXIgb3duLCBzYWRseS5cbmV4cG9ydCBmdW5jdGlvbiBpbmRleE9mKGFycmF5LCB2YWx1ZSkge1xuICBmb3IgKGxldCBpID0gMCwgbGVuID0gYXJyYXkubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoYXJyYXlbaV0gPT09IHZhbHVlKSB7XG4gICAgICByZXR1cm4gaTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIC0xO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXNjYXBlRXhwcmVzc2lvbihzdHJpbmcpIHtcbiAgaWYgKHR5cGVvZiBzdHJpbmcgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgZXNjYXBlIFNhZmVTdHJpbmdzLCBzaW5jZSB0aGV5J3JlIGFscmVhZHkgc2FmZVxuICAgIGlmIChzdHJpbmcgJiYgc3RyaW5nLnRvSFRNTCkge1xuICAgICAgcmV0dXJuIHN0cmluZy50b0hUTUwoKTtcbiAgICB9IGVsc2UgaWYgKHN0cmluZyA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfSBlbHNlIGlmICghc3RyaW5nKSB7XG4gICAgICByZXR1cm4gc3RyaW5nICsgJyc7XG4gICAgfVxuXG4gICAgLy8gRm9yY2UgYSBzdHJpbmcgY29udmVyc2lvbiBhcyB0aGlzIHdpbGwgYmUgZG9uZSBieSB0aGUgYXBwZW5kIHJlZ2FyZGxlc3MgYW5kXG4gICAgLy8gdGhlIHJlZ2V4IHRlc3Qgd2lsbCBkbyB0aGlzIHRyYW5zcGFyZW50bHkgYmVoaW5kIHRoZSBzY2VuZXMsIGNhdXNpbmcgaXNzdWVzIGlmXG4gICAgLy8gYW4gb2JqZWN0J3MgdG8gc3RyaW5nIGhhcyBlc2NhcGVkIGNoYXJhY3RlcnMgaW4gaXQuXG4gICAgc3RyaW5nID0gJycgKyBzdHJpbmc7XG4gIH1cblxuICBpZiAoIXBvc3NpYmxlLnRlc3Qoc3RyaW5nKSkge1xuICAgIHJldHVybiBzdHJpbmc7XG4gIH1cbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKGJhZENoYXJzLCBlc2NhcGVDaGFyKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRW1wdHkodmFsdWUpIHtcbiAgaWYgKCF2YWx1ZSAmJiB2YWx1ZSAhPT0gMCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGlzQXJyYXkodmFsdWUpICYmIHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRnJhbWUob2JqZWN0KSB7XG4gIGxldCBmcmFtZSA9IGV4dGVuZCh7fSwgb2JqZWN0KTtcbiAgZnJhbWUuX3BhcmVudCA9IG9iamVjdDtcbiAgcmV0dXJuIGZyYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYmxvY2tQYXJhbXMocGFyYW1zLCBpZHMpIHtcbiAgcGFyYW1zLnBhdGggPSBpZHM7XG4gIHJldHVybiBwYXJhbXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhcHBlbmRDb250ZXh0UGF0aChjb250ZXh0UGF0aCwgaWQpIHtcbiAgcmV0dXJuIChjb250ZXh0UGF0aCA/IGNvbnRleHRQYXRoICsgJy4nIDogJycpICsgaWQ7XG59XG4iXX0=\n","'use strict';\n\nexports.__esModule = true;\nvar errorProps = ['description', 'fileName', 'lineNumber', 'endLineNumber', 'message', 'name', 'number', 'stack'];\n\nfunction Exception(message, node) {\n  var loc = node && node.loc,\n      line = undefined,\n      endLineNumber = undefined,\n      column = undefined,\n      endColumn = undefined;\n\n  if (loc) {\n    line = loc.start.line;\n    endLineNumber = loc.end.line;\n    column = loc.start.column;\n    endColumn = loc.end.column;\n\n    message += ' - ' + line + ':' + column;\n  }\n\n  var tmp = Error.prototype.constructor.call(this, message);\n\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (var idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n\n  /* istanbul ignore else */\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Exception);\n  }\n\n  try {\n    if (loc) {\n      this.lineNumber = line;\n      this.endLineNumber = endLineNumber;\n\n      // Work around issue under safari where we can't directly set the column value\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(this, 'column', {\n          value: column,\n          enumerable: true\n        });\n        Object.defineProperty(this, 'endColumn', {\n          value: endColumn,\n          enumerable: true\n        });\n      } else {\n        this.column = column;\n        this.endColumn = endColumn;\n      }\n    }\n  } catch (nop) {\n    /* Ignore if the browser is very particular */\n  }\n}\n\nException.prototype = new Error();\n\nexports['default'] = Exception;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2V4Y2VwdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFNLFVBQVUsR0FBRyxDQUNqQixhQUFhLEVBQ2IsVUFBVSxFQUNWLFlBQVksRUFDWixlQUFlLEVBQ2YsU0FBUyxFQUNULE1BQU0sRUFDTixRQUFRLEVBQ1IsT0FBTyxDQUNSLENBQUM7O0FBRUYsU0FBUyxTQUFTLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRTtBQUNoQyxNQUFJLEdBQUcsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLEdBQUc7TUFDeEIsSUFBSSxZQUFBO01BQ0osYUFBYSxZQUFBO01BQ2IsTUFBTSxZQUFBO01BQ04sU0FBUyxZQUFBLENBQUM7O0FBRVosTUFBSSxHQUFHLEVBQUU7QUFDUCxRQUFJLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7QUFDdEIsaUJBQWEsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQztBQUM3QixVQUFNLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7QUFDMUIsYUFBUyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDOztBQUUzQixXQUFPLElBQUksS0FBSyxHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsTUFBTSxDQUFDO0dBQ3hDOztBQUVELE1BQUksR0FBRyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7OztBQUcxRCxPQUFLLElBQUksR0FBRyxHQUFHLENBQUMsRUFBRSxHQUFHLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsRUFBRTtBQUNoRCxRQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0dBQzlDOzs7QUFHRCxNQUFJLEtBQUssQ0FBQyxpQkFBaUIsRUFBRTtBQUMzQixTQUFLLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0dBQzFDOztBQUVELE1BQUk7QUFDRixRQUFJLEdBQUcsRUFBRTtBQUNQLFVBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO0FBQ3ZCLFVBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDOzs7O0FBSW5DLFVBQUksTUFBTSxDQUFDLGNBQWMsRUFBRTtBQUN6QixjQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxRQUFRLEVBQUU7QUFDcEMsZUFBSyxFQUFFLE1BQU07QUFDYixvQkFBVSxFQUFFLElBQUk7U0FDakIsQ0FBQyxDQUFDO0FBQ0gsY0FBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsV0FBVyxFQUFFO0FBQ3ZDLGVBQUssRUFBRSxTQUFTO0FBQ2hCLG9CQUFVLEVBQUUsSUFBSTtTQUNqQixDQUFDLENBQUM7T0FDSixNQUFNO0FBQ0wsWUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7QUFDckIsWUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7T0FDNUI7S0FDRjtHQUNGLENBQUMsT0FBTyxHQUFHLEVBQUU7O0dBRWI7Q0FDRjs7QUFFRCxTQUFTLENBQUMsU0FBUyxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7O3FCQUVuQixTQUFTIiwiZmlsZSI6ImV4Y2VwdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGVycm9yUHJvcHMgPSBbXG4gICdkZXNjcmlwdGlvbicsXG4gICdmaWxlTmFtZScsXG4gICdsaW5lTnVtYmVyJyxcbiAgJ2VuZExpbmVOdW1iZXInLFxuICAnbWVzc2FnZScsXG4gICduYW1lJyxcbiAgJ251bWJlcicsXG4gICdzdGFjaydcbl07XG5cbmZ1bmN0aW9uIEV4Y2VwdGlvbihtZXNzYWdlLCBub2RlKSB7XG4gIGxldCBsb2MgPSBub2RlICYmIG5vZGUubG9jLFxuICAgIGxpbmUsXG4gICAgZW5kTGluZU51bWJlcixcbiAgICBjb2x1bW4sXG4gICAgZW5kQ29sdW1uO1xuXG4gIGlmIChsb2MpIHtcbiAgICBsaW5lID0gbG9jLnN0YXJ0LmxpbmU7XG4gICAgZW5kTGluZU51bWJlciA9IGxvYy5lbmQubGluZTtcbiAgICBjb2x1bW4gPSBsb2Muc3RhcnQuY29sdW1uO1xuICAgIGVuZENvbHVtbiA9IGxvYy5lbmQuY29sdW1uO1xuXG4gICAgbWVzc2FnZSArPSAnIC0gJyArIGxpbmUgKyAnOicgKyBjb2x1bW47XG4gIH1cblxuICBsZXQgdG1wID0gRXJyb3IucHJvdG90eXBlLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgbWVzc2FnZSk7XG5cbiAgLy8gVW5mb3J0dW5hdGVseSBlcnJvcnMgYXJlIG5vdCBlbnVtZXJhYmxlIGluIENocm9tZSAoYXQgbGVhc3QpLCBzbyBgZm9yIHByb3AgaW4gdG1wYCBkb2Vzbid0IHdvcmsuXG4gIGZvciAobGV0IGlkeCA9IDA7IGlkeCA8IGVycm9yUHJvcHMubGVuZ3RoOyBpZHgrKykge1xuICAgIHRoaXNbZXJyb3JQcm9wc1tpZHhdXSA9IHRtcFtlcnJvclByb3BzW2lkeF1dO1xuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7XG4gICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgRXhjZXB0aW9uKTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgaWYgKGxvYykge1xuICAgICAgdGhpcy5saW5lTnVtYmVyID0gbGluZTtcbiAgICAgIHRoaXMuZW5kTGluZU51bWJlciA9IGVuZExpbmVOdW1iZXI7XG5cbiAgICAgIC8vIFdvcmsgYXJvdW5kIGlzc3VlIHVuZGVyIHNhZmFyaSB3aGVyZSB3ZSBjYW4ndCBkaXJlY3RseSBzZXQgdGhlIGNvbHVtbiB2YWx1ZVxuICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsICdjb2x1bW4nLCB7XG4gICAgICAgICAgdmFsdWU6IGNvbHVtbixcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgJ2VuZENvbHVtbicsIHtcbiAgICAgICAgICB2YWx1ZTogZW5kQ29sdW1uLFxuICAgICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNvbHVtbiA9IGNvbHVtbjtcbiAgICAgICAgdGhpcy5lbmRDb2x1bW4gPSBlbmRDb2x1bW47XG4gICAgICB9XG4gICAgfVxuICB9IGNhdGNoIChub3ApIHtcbiAgICAvKiBJZ25vcmUgaWYgdGhlIGJyb3dzZXIgaXMgdmVyeSBwYXJ0aWN1bGFyICovXG4gIH1cbn1cblxuRXhjZXB0aW9uLnByb3RvdHlwZSA9IG5ldyBFcnJvcigpO1xuXG5leHBvcnQgZGVmYXVsdCBFeGNlcHRpb247XG4iXX0=\n","'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('../utils');\n\nexports['default'] = function (instance) {\n  instance.registerHelper('blockHelperMissing', function (context, options) {\n    var inverse = options.inverse,\n        fn = options.fn;\n\n    if (context === true) {\n      return fn(this);\n    } else if (context === false || context == null) {\n      return inverse(this);\n    } else if (_utils.isArray(context)) {\n      if (context.length > 0) {\n        if (options.ids) {\n          options.ids = [options.name];\n        }\n\n        return instance.helpers.each(context, options);\n      } else {\n        return inverse(this);\n      }\n    } else {\n      if (options.data && options.ids) {\n        var data = _utils.createFrame(options.data);\n        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.name);\n        options = { data: data };\n      }\n\n      return fn(context, options);\n    }\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvYmxvY2staGVscGVyLW1pc3NpbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztxQkFBd0QsVUFBVTs7cUJBRW5ELFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsb0JBQW9CLEVBQUUsVUFBUyxPQUFPLEVBQUUsT0FBTyxFQUFFO0FBQ3ZFLFFBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPO1FBQzNCLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDOztBQUVsQixRQUFJLE9BQU8sS0FBSyxJQUFJLEVBQUU7QUFDcEIsYUFBTyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDakIsTUFBTSxJQUFJLE9BQU8sS0FBSyxLQUFLLElBQUksT0FBTyxJQUFJLElBQUksRUFBRTtBQUMvQyxhQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUN0QixNQUFNLElBQUksZUFBUSxPQUFPLENBQUMsRUFBRTtBQUMzQixVQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO0FBQ3RCLFlBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUNmLGlCQUFPLENBQUMsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzlCOztBQUVELGVBQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO09BQ2hELE1BQU07QUFDTCxlQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztPQUN0QjtLQUNGLE1BQU07QUFDTCxVQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUMvQixZQUFJLElBQUksR0FBRyxtQkFBWSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDckMsWUFBSSxDQUFDLFdBQVcsR0FBRyx5QkFDakIsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQ3hCLE9BQU8sQ0FBQyxJQUFJLENBQ2IsQ0FBQztBQUNGLGVBQU8sR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQztPQUMxQjs7QUFFRCxhQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7S0FDN0I7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJibG9jay1oZWxwZXItbWlzc2luZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFwcGVuZENvbnRleHRQYXRoLCBjcmVhdGVGcmFtZSwgaXNBcnJheSB9IGZyb20gJy4uL3V0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2Jsb2NrSGVscGVyTWlzc2luZycsIGZ1bmN0aW9uKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBsZXQgaW52ZXJzZSA9IG9wdGlvbnMuaW52ZXJzZSxcbiAgICAgIGZuID0gb3B0aW9ucy5mbjtcblxuICAgIGlmIChjb250ZXh0ID09PSB0cnVlKSB7XG4gICAgICByZXR1cm4gZm4odGhpcyk7XG4gICAgfSBlbHNlIGlmIChjb250ZXh0ID09PSBmYWxzZSB8fCBjb250ZXh0ID09IG51bGwpIHtcbiAgICAgIHJldHVybiBpbnZlcnNlKHRoaXMpO1xuICAgIH0gZWxzZSBpZiAoaXNBcnJheShjb250ZXh0KSkge1xuICAgICAgaWYgKGNvbnRleHQubGVuZ3RoID4gMCkge1xuICAgICAgICBpZiAob3B0aW9ucy5pZHMpIHtcbiAgICAgICAgICBvcHRpb25zLmlkcyA9IFtvcHRpb25zLm5hbWVdO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGluc3RhbmNlLmhlbHBlcnMuZWFjaChjb250ZXh0LCBvcHRpb25zKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBpbnZlcnNlKHRoaXMpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAob3B0aW9ucy5kYXRhICYmIG9wdGlvbnMuaWRzKSB7XG4gICAgICAgIGxldCBkYXRhID0gY3JlYXRlRnJhbWUob3B0aW9ucy5kYXRhKTtcbiAgICAgICAgZGF0YS5jb250ZXh0UGF0aCA9IGFwcGVuZENvbnRleHRQYXRoKFxuICAgICAgICAgIG9wdGlvbnMuZGF0YS5jb250ZXh0UGF0aCxcbiAgICAgICAgICBvcHRpb25zLm5hbWVcbiAgICAgICAgKTtcbiAgICAgICAgb3B0aW9ucyA9IHsgZGF0YTogZGF0YSB9O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZm4oY29udGV4dCwgb3B0aW9ucyk7XG4gICAgfVxuICB9KTtcbn1cbiJdfQ==\n","'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utils = require('../utils');\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nexports['default'] = function (instance) {\n  instance.registerHelper('each', function (context, options) {\n    if (!options) {\n      throw new _exception2['default']('Must pass iterator to #each');\n    }\n\n    var fn = options.fn,\n        inverse = options.inverse,\n        i = 0,\n        ret = '',\n        data = undefined,\n        contextPath = undefined;\n\n    if (options.data && options.ids) {\n      contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n    }\n\n    if (_utils.isFunction(context)) {\n      context = context.call(this);\n    }\n\n    if (options.data) {\n      data = _utils.createFrame(options.data);\n    }\n\n    function execIteration(field, index, last) {\n      if (data) {\n        data.key = field;\n        data.index = index;\n        data.first = index === 0;\n        data.last = !!last;\n\n        if (contextPath) {\n          data.contextPath = contextPath + field;\n        }\n      }\n\n      ret = ret + fn(context[field], {\n        data: data,\n        blockParams: _utils.blockParams([context[field], field], [contextPath + field, null])\n      });\n    }\n\n    if (context && typeof context === 'object') {\n      if (_utils.isArray(context)) {\n        for (var j = context.length; i < j; i++) {\n          if (i in context) {\n            execIteration(i, i, i === context.length - 1);\n          }\n        }\n      } else if (global.Symbol && context[global.Symbol.iterator]) {\n        var newContext = [];\n        var iterator = context[global.Symbol.iterator]();\n        for (var it = iterator.next(); !it.done; it = iterator.next()) {\n          newContext.push(it.value);\n        }\n        context = newContext;\n        for (var j = context.length; i < j; i++) {\n          execIteration(i, i, i === context.length - 1);\n        }\n      } else {\n        (function () {\n          var priorKey = undefined;\n\n          Object.keys(context).forEach(function (key) {\n            // We're running the iterations one step out of sync so we can detect\n            // the last iteration without have to scan the object twice and create\n            // an itermediate keys array.\n            if (priorKey !== undefined) {\n              execIteration(priorKey, i - 1);\n            }\n            priorKey = key;\n            i++;\n          });\n          if (priorKey !== undefined) {\n            execIteration(priorKey, i - 1, true);\n          }\n        })();\n      }\n    }\n\n    if (i === 0) {\n      ret = inverse(this);\n    }\n\n    return ret;\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvZWFjaC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O3FCQU1PLFVBQVU7O3lCQUNLLGNBQWM7Ozs7cUJBRXJCLFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFVBQVMsT0FBTyxFQUFFLE9BQU8sRUFBRTtBQUN6RCxRQUFJLENBQUMsT0FBTyxFQUFFO0FBQ1osWUFBTSwyQkFBYyw2QkFBNkIsQ0FBQyxDQUFDO0tBQ3BEOztBQUVELFFBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQyxFQUFFO1FBQ2pCLE9BQU8sR0FBRyxPQUFPLENBQUMsT0FBTztRQUN6QixDQUFDLEdBQUcsQ0FBQztRQUNMLEdBQUcsR0FBRyxFQUFFO1FBQ1IsSUFBSSxZQUFBO1FBQ0osV0FBVyxZQUFBLENBQUM7O0FBRWQsUUFBSSxPQUFPLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxHQUFHLEVBQUU7QUFDL0IsaUJBQVcsR0FDVCx5QkFBa0IsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztLQUNyRTs7QUFFRCxRQUFJLGtCQUFXLE9BQU8sQ0FBQyxFQUFFO0FBQ3ZCLGFBQU8sR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzlCOztBQUVELFFBQUksT0FBTyxDQUFDLElBQUksRUFBRTtBQUNoQixVQUFJLEdBQUcsbUJBQVksT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ2xDOztBQUVELGFBQVMsYUFBYSxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFO0FBQ3pDLFVBQUksSUFBSSxFQUFFO0FBQ1IsWUFBSSxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUM7QUFDakIsWUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7QUFDbkIsWUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLEtBQUssQ0FBQyxDQUFDO0FBQ3pCLFlBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQzs7QUFFbkIsWUFBSSxXQUFXLEVBQUU7QUFDZixjQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsR0FBRyxLQUFLLENBQUM7U0FDeEM7T0FDRjs7QUFFRCxTQUFHLEdBQ0QsR0FBRyxHQUNILEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDakIsWUFBSSxFQUFFLElBQUk7QUFDVixtQkFBVyxFQUFFLG1CQUNYLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssQ0FBQyxFQUN2QixDQUFDLFdBQVcsR0FBRyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQzVCO09BQ0YsQ0FBQyxDQUFDO0tBQ047O0FBRUQsUUFBSSxPQUFPLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO0FBQzFDLFVBQUksZUFBUSxPQUFPLENBQUMsRUFBRTtBQUNwQixhQUFLLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUN2QyxjQUFJLENBQUMsSUFBSSxPQUFPLEVBQUU7QUFDaEIseUJBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsS0FBSyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1dBQy9DO1NBQ0Y7T0FDRixNQUFNLElBQUksTUFBTSxDQUFDLE1BQU0sSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRTtBQUMzRCxZQUFNLFVBQVUsR0FBRyxFQUFFLENBQUM7QUFDdEIsWUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQztBQUNuRCxhQUFLLElBQUksRUFBRSxHQUFHLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxHQUFHLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRTtBQUM3RCxvQkFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDM0I7QUFDRCxlQUFPLEdBQUcsVUFBVSxDQUFDO0FBQ3JCLGFBQUssSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQ3ZDLHVCQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEtBQUssT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztTQUMvQztPQUNGLE1BQU07O0FBQ0wsY0FBSSxRQUFRLFlBQUEsQ0FBQzs7QUFFYixnQkFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxHQUFHLEVBQUk7Ozs7QUFJbEMsZ0JBQUksUUFBUSxLQUFLLFNBQVMsRUFBRTtBQUMxQiwyQkFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7YUFDaEM7QUFDRCxvQkFBUSxHQUFHLEdBQUcsQ0FBQztBQUNmLGFBQUMsRUFBRSxDQUFDO1dBQ0wsQ0FBQyxDQUFDO0FBQ0gsY0FBSSxRQUFRLEtBQUssU0FBUyxFQUFFO0FBQzFCLHlCQUFhLENBQUMsUUFBUSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7V0FDdEM7O09BQ0Y7S0FDRjs7QUFFRCxRQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDWCxTQUFHLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3JCOztBQUVELFdBQU8sR0FBRyxDQUFDO0dBQ1osQ0FBQyxDQUFDO0NBQ0oiLCJmaWxlIjoiZWFjaC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGFwcGVuZENvbnRleHRQYXRoLFxuICBibG9ja1BhcmFtcyxcbiAgY3JlYXRlRnJhbWUsXG4gIGlzQXJyYXksXG4gIGlzRnVuY3Rpb25cbn0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IEV4Y2VwdGlvbiBmcm9tICcuLi9leGNlcHRpb24nO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnN0YW5jZSkge1xuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcignZWFjaCcsIGZ1bmN0aW9uKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBpZiAoIW9wdGlvbnMpIHtcbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ011c3QgcGFzcyBpdGVyYXRvciB0byAjZWFjaCcpO1xuICAgIH1cblxuICAgIGxldCBmbiA9IG9wdGlvbnMuZm4sXG4gICAgICBpbnZlcnNlID0gb3B0aW9ucy5pbnZlcnNlLFxuICAgICAgaSA9IDAsXG4gICAgICByZXQgPSAnJyxcbiAgICAgIGRhdGEsXG4gICAgICBjb250ZXh0UGF0aDtcblxuICAgIGlmIChvcHRpb25zLmRhdGEgJiYgb3B0aW9ucy5pZHMpIHtcbiAgICAgIGNvbnRleHRQYXRoID1cbiAgICAgICAgYXBwZW5kQ29udGV4dFBhdGgob3B0aW9ucy5kYXRhLmNvbnRleHRQYXRoLCBvcHRpb25zLmlkc1swXSkgKyAnLic7XG4gICAgfVxuXG4gICAgaWYgKGlzRnVuY3Rpb24oY29udGV4dCkpIHtcbiAgICAgIGNvbnRleHQgPSBjb250ZXh0LmNhbGwodGhpcyk7XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMuZGF0YSkge1xuICAgICAgZGF0YSA9IGNyZWF0ZUZyYW1lKG9wdGlvbnMuZGF0YSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZXhlY0l0ZXJhdGlvbihmaWVsZCwgaW5kZXgsIGxhc3QpIHtcbiAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgIGRhdGEua2V5ID0gZmllbGQ7XG4gICAgICAgIGRhdGEuaW5kZXggPSBpbmRleDtcbiAgICAgICAgZGF0YS5maXJzdCA9IGluZGV4ID09PSAwO1xuICAgICAgICBkYXRhLmxhc3QgPSAhIWxhc3Q7XG5cbiAgICAgICAgaWYgKGNvbnRleHRQYXRoKSB7XG4gICAgICAgICAgZGF0YS5jb250ZXh0UGF0aCA9IGNvbnRleHRQYXRoICsgZmllbGQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0ID1cbiAgICAgICAgcmV0ICtcbiAgICAgICAgZm4oY29udGV4dFtmaWVsZF0sIHtcbiAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgIGJsb2NrUGFyYW1zOiBibG9ja1BhcmFtcyhcbiAgICAgICAgICAgIFtjb250ZXh0W2ZpZWxkXSwgZmllbGRdLFxuICAgICAgICAgICAgW2NvbnRleHRQYXRoICsgZmllbGQsIG51bGxdXG4gICAgICAgICAgKVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoY29udGV4dCAmJiB0eXBlb2YgY29udGV4dCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGlmIChpc0FycmF5KGNvbnRleHQpKSB7XG4gICAgICAgIGZvciAobGV0IGogPSBjb250ZXh0Lmxlbmd0aDsgaSA8IGo7IGkrKykge1xuICAgICAgICAgIGlmIChpIGluIGNvbnRleHQpIHtcbiAgICAgICAgICAgIGV4ZWNJdGVyYXRpb24oaSwgaSwgaSA9PT0gY29udGV4dC5sZW5ndGggLSAxKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoZ2xvYmFsLlN5bWJvbCAmJiBjb250ZXh0W2dsb2JhbC5TeW1ib2wuaXRlcmF0b3JdKSB7XG4gICAgICAgIGNvbnN0IG5ld0NvbnRleHQgPSBbXTtcbiAgICAgICAgY29uc3QgaXRlcmF0b3IgPSBjb250ZXh0W2dsb2JhbC5TeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgICAgIGZvciAobGV0IGl0ID0gaXRlcmF0b3IubmV4dCgpOyAhaXQuZG9uZTsgaXQgPSBpdGVyYXRvci5uZXh0KCkpIHtcbiAgICAgICAgICBuZXdDb250ZXh0LnB1c2goaXQudmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRleHQgPSBuZXdDb250ZXh0O1xuICAgICAgICBmb3IgKGxldCBqID0gY29udGV4dC5sZW5ndGg7IGkgPCBqOyBpKyspIHtcbiAgICAgICAgICBleGVjSXRlcmF0aW9uKGksIGksIGkgPT09IGNvbnRleHQubGVuZ3RoIC0gMSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBwcmlvcktleTtcblxuICAgICAgICBPYmplY3Qua2V5cyhjb250ZXh0KS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgICAgLy8gV2UncmUgcnVubmluZyB0aGUgaXRlcmF0aW9ucyBvbmUgc3RlcCBvdXQgb2Ygc3luYyBzbyB3ZSBjYW4gZGV0ZWN0XG4gICAgICAgICAgLy8gdGhlIGxhc3QgaXRlcmF0aW9uIHdpdGhvdXQgaGF2ZSB0byBzY2FuIHRoZSBvYmplY3QgdHdpY2UgYW5kIGNyZWF0ZVxuICAgICAgICAgIC8vIGFuIGl0ZXJtZWRpYXRlIGtleXMgYXJyYXkuXG4gICAgICAgICAgaWYgKHByaW9yS2V5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGV4ZWNJdGVyYXRpb24ocHJpb3JLZXksIGkgLSAxKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcHJpb3JLZXkgPSBrZXk7XG4gICAgICAgICAgaSsrO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHByaW9yS2V5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBleGVjSXRlcmF0aW9uKHByaW9yS2V5LCBpIC0gMSwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgcmV0ID0gaW52ZXJzZSh0aGlzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmV0O1xuICB9KTtcbn1cbiJdfQ==\n","'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nexports['default'] = function (instance) {\n  instance.registerHelper('helperMissing', function () /* [args, ]options */{\n    if (arguments.length === 1) {\n      // A missing field in a {{foo}} construct.\n      return undefined;\n    } else {\n      // Someone is actually trying to call something, blow up.\n      throw new _exception2['default']('Missing helper: \"' + arguments[arguments.length - 1].name + '\"');\n    }\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvaGVscGVyLW1pc3NpbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozt5QkFBc0IsY0FBYzs7OztxQkFFckIsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxlQUFlLEVBQUUsaUNBQWdDO0FBQ3ZFLFFBQUksU0FBUyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7O0FBRTFCLGFBQU8sU0FBUyxDQUFDO0tBQ2xCLE1BQU07O0FBRUwsWUFBTSwyQkFDSixtQkFBbUIsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUNqRSxDQUFDO0tBQ0g7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJoZWxwZXItbWlzc2luZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeGNlcHRpb24gZnJvbSAnLi4vZXhjZXB0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2hlbHBlck1pc3NpbmcnLCBmdW5jdGlvbigvKiBbYXJncywgXW9wdGlvbnMgKi8pIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgLy8gQSBtaXNzaW5nIGZpZWxkIGluIGEge3tmb299fSBjb25zdHJ1Y3QuXG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTb21lb25lIGlzIGFjdHVhbGx5IHRyeWluZyB0byBjYWxsIHNvbWV0aGluZywgYmxvdyB1cC5cbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oXG4gICAgICAgICdNaXNzaW5nIGhlbHBlcjogXCInICsgYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXS5uYW1lICsgJ1wiJ1xuICAgICAgKTtcbiAgICB9XG4gIH0pO1xufVxuIl19\n","'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utils = require('../utils');\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nexports['default'] = function (instance) {\n  instance.registerHelper('if', function (conditional, options) {\n    if (arguments.length != 2) {\n      throw new _exception2['default']('#if requires exactly one argument');\n    }\n    if (_utils.isFunction(conditional)) {\n      conditional = conditional.call(this);\n    }\n\n    // Default behavior is to render the positive path if the value is truthy and not empty.\n    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n    if (!options.hash.includeZero && !conditional || _utils.isEmpty(conditional)) {\n      return options.inverse(this);\n    } else {\n      return options.fn(this);\n    }\n  });\n\n  instance.registerHelper('unless', function (conditional, options) {\n    if (arguments.length != 2) {\n      throw new _exception2['default']('#unless requires exactly one argument');\n    }\n    return instance.helpers['if'].call(this, conditional, {\n      fn: options.inverse,\n      inverse: options.fn,\n      hash: options.hash\n    });\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvaWYuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztxQkFBb0MsVUFBVTs7eUJBQ3hCLGNBQWM7Ozs7cUJBRXJCLFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLFVBQVMsV0FBVyxFQUFFLE9BQU8sRUFBRTtBQUMzRCxRQUFJLFNBQVMsQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO0FBQ3pCLFlBQU0sMkJBQWMsbUNBQW1DLENBQUMsQ0FBQztLQUMxRDtBQUNELFFBQUksa0JBQVcsV0FBVyxDQUFDLEVBQUU7QUFDM0IsaUJBQVcsR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3RDOzs7OztBQUtELFFBQUksQUFBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLENBQUMsV0FBVyxJQUFLLGVBQVEsV0FBVyxDQUFDLEVBQUU7QUFDdkUsYUFBTyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzlCLE1BQU07QUFDTCxhQUFPLE9BQU8sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDekI7R0FDRixDQUFDLENBQUM7O0FBRUgsVUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsVUFBUyxXQUFXLEVBQUUsT0FBTyxFQUFFO0FBQy9ELFFBQUksU0FBUyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7QUFDekIsWUFBTSwyQkFBYyx1Q0FBdUMsQ0FBQyxDQUFDO0tBQzlEO0FBQ0QsV0FBTyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsV0FBVyxFQUFFO0FBQ3BELFFBQUUsRUFBRSxPQUFPLENBQUMsT0FBTztBQUNuQixhQUFPLEVBQUUsT0FBTyxDQUFDLEVBQUU7QUFDbkIsVUFBSSxFQUFFLE9BQU8sQ0FBQyxJQUFJO0tBQ25CLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6ImlmLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNFbXB0eSwgaXNGdW5jdGlvbiB9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCBFeGNlcHRpb24gZnJvbSAnLi4vZXhjZXB0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2lmJywgZnVuY3Rpb24oY29uZGl0aW9uYWwsIG9wdGlvbnMpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCAhPSAyKSB7XG4gICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCcjaWYgcmVxdWlyZXMgZXhhY3RseSBvbmUgYXJndW1lbnQnKTtcbiAgICB9XG4gICAgaWYgKGlzRnVuY3Rpb24oY29uZGl0aW9uYWwpKSB7XG4gICAgICBjb25kaXRpb25hbCA9IGNvbmRpdGlvbmFsLmNhbGwodGhpcyk7XG4gICAgfVxuXG4gICAgLy8gRGVmYXVsdCBiZWhhdmlvciBpcyB0byByZW5kZXIgdGhlIHBvc2l0aXZlIHBhdGggaWYgdGhlIHZhbHVlIGlzIHRydXRoeSBhbmQgbm90IGVtcHR5LlxuICAgIC8vIFRoZSBgaW5jbHVkZVplcm9gIG9wdGlvbiBtYXkgYmUgc2V0IHRvIHRyZWF0IHRoZSBjb25kdGlvbmFsIGFzIHB1cmVseSBub3QgZW1wdHkgYmFzZWQgb24gdGhlXG4gICAgLy8gYmVoYXZpb3Igb2YgaXNFbXB0eS4gRWZmZWN0aXZlbHkgdGhpcyBkZXRlcm1pbmVzIGlmIDAgaXMgaGFuZGxlZCBieSB0aGUgcG9zaXRpdmUgcGF0aCBvciBuZWdhdGl2ZS5cbiAgICBpZiAoKCFvcHRpb25zLmhhc2guaW5jbHVkZVplcm8gJiYgIWNvbmRpdGlvbmFsKSB8fCBpc0VtcHR5KGNvbmRpdGlvbmFsKSkge1xuICAgICAgcmV0dXJuIG9wdGlvbnMuaW52ZXJzZSh0aGlzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG9wdGlvbnMuZm4odGhpcyk7XG4gICAgfVxuICB9KTtcblxuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcigndW5sZXNzJywgZnVuY3Rpb24oY29uZGl0aW9uYWwsIG9wdGlvbnMpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCAhPSAyKSB7XG4gICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCcjdW5sZXNzIHJlcXVpcmVzIGV4YWN0bHkgb25lIGFyZ3VtZW50Jyk7XG4gICAgfVxuICAgIHJldHVybiBpbnN0YW5jZS5oZWxwZXJzWydpZiddLmNhbGwodGhpcywgY29uZGl0aW9uYWwsIHtcbiAgICAgIGZuOiBvcHRpb25zLmludmVyc2UsXG4gICAgICBpbnZlcnNlOiBvcHRpb25zLmZuLFxuICAgICAgaGFzaDogb3B0aW9ucy5oYXNoXG4gICAgfSk7XG4gIH0pO1xufVxuIl19\n","'use strict';\n\nexports.__esModule = true;\n\nexports['default'] = function (instance) {\n  instance.registerHelper('log', function () /* message, options */{\n    var args = [undefined],\n        options = arguments[arguments.length - 1];\n    for (var i = 0; i < arguments.length - 1; i++) {\n      args.push(arguments[i]);\n    }\n\n    var level = 1;\n    if (options.hash.level != null) {\n      level = options.hash.level;\n    } else if (options.data && options.data.level != null) {\n      level = options.data.level;\n    }\n    args[0] = level;\n\n    instance.log.apply(instance, args);\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvbG9nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQWUsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsa0NBQWlDO0FBQzlELFFBQUksSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDO1FBQ3BCLE9BQU8sR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUM1QyxTQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7QUFDN0MsVUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUN6Qjs7QUFFRCxRQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7QUFDZCxRQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksRUFBRTtBQUM5QixXQUFLLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7S0FDNUIsTUFBTSxJQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxFQUFFO0FBQ3JELFdBQUssR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztLQUM1QjtBQUNELFFBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUM7O0FBRWhCLFlBQVEsQ0FBQyxHQUFHLE1BQUEsQ0FBWixRQUFRLEVBQVEsSUFBSSxDQUFDLENBQUM7R0FDdkIsQ0FBQyxDQUFDO0NBQ0oiLCJmaWxlIjoibG9nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2xvZycsIGZ1bmN0aW9uKC8qIG1lc3NhZ2UsIG9wdGlvbnMgKi8pIHtcbiAgICBsZXQgYXJncyA9IFt1bmRlZmluZWRdLFxuICAgICAgb3B0aW9ucyA9IGFyZ3VtZW50c1thcmd1bWVudHMubGVuZ3RoIC0gMV07XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICBhcmdzLnB1c2goYXJndW1lbnRzW2ldKTtcbiAgICB9XG5cbiAgICBsZXQgbGV2ZWwgPSAxO1xuICAgIGlmIChvcHRpb25zLmhhc2gubGV2ZWwgIT0gbnVsbCkge1xuICAgICAgbGV2ZWwgPSBvcHRpb25zLmhhc2gubGV2ZWw7XG4gICAgfSBlbHNlIGlmIChvcHRpb25zLmRhdGEgJiYgb3B0aW9ucy5kYXRhLmxldmVsICE9IG51bGwpIHtcbiAgICAgIGxldmVsID0gb3B0aW9ucy5kYXRhLmxldmVsO1xuICAgIH1cbiAgICBhcmdzWzBdID0gbGV2ZWw7XG5cbiAgICBpbnN0YW5jZS5sb2coLi4uYXJncyk7XG4gIH0pO1xufVxuIl19\n","'use strict';\n\nexports.__esModule = true;\n\nexports['default'] = function (instance) {\n  instance.registerHelper('lookup', function (obj, field, options) {\n    if (!obj) {\n      // Note for 5.0: Change to \"obj == null\" in 5.0\n      return obj;\n    }\n    return options.lookupProperty(obj, field);\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvbG9va3VwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQWUsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsVUFBUyxHQUFHLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRTtBQUM5RCxRQUFJLENBQUMsR0FBRyxFQUFFOztBQUVSLGFBQU8sR0FBRyxDQUFDO0tBQ1o7QUFDRCxXQUFPLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0dBQzNDLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6Imxvb2t1cC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCdsb29rdXAnLCBmdW5jdGlvbihvYmosIGZpZWxkLCBvcHRpb25zKSB7XG4gICAgaWYgKCFvYmopIHtcbiAgICAgIC8vIE5vdGUgZm9yIDUuMDogQ2hhbmdlIHRvIFwib2JqID09IG51bGxcIiBpbiA1LjBcbiAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIHJldHVybiBvcHRpb25zLmxvb2t1cFByb3BlcnR5KG9iaiwgZmllbGQpO1xuICB9KTtcbn1cbiJdfQ==\n","'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utils = require('../utils');\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nexports['default'] = function (instance) {\n  instance.registerHelper('with', function (context, options) {\n    if (arguments.length != 2) {\n      throw new _exception2['default']('#with requires exactly one argument');\n    }\n    if (_utils.isFunction(context)) {\n      context = context.call(this);\n    }\n\n    var fn = options.fn;\n\n    if (!_utils.isEmpty(context)) {\n      var data = options.data;\n      if (options.data && options.ids) {\n        data = _utils.createFrame(options.data);\n        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]);\n      }\n\n      return fn(context, {\n        data: data,\n        blockParams: _utils.blockParams([context], [data && data.contextPath])\n      });\n    } else {\n      return options.inverse(this);\n    }\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvd2l0aC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O3FCQU1PLFVBQVU7O3lCQUNLLGNBQWM7Ozs7cUJBRXJCLFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFVBQVMsT0FBTyxFQUFFLE9BQU8sRUFBRTtBQUN6RCxRQUFJLFNBQVMsQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO0FBQ3pCLFlBQU0sMkJBQWMscUNBQXFDLENBQUMsQ0FBQztLQUM1RDtBQUNELFFBQUksa0JBQVcsT0FBTyxDQUFDLEVBQUU7QUFDdkIsYUFBTyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDOUI7O0FBRUQsUUFBSSxFQUFFLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQzs7QUFFcEIsUUFBSSxDQUFDLGVBQVEsT0FBTyxDQUFDLEVBQUU7QUFDckIsVUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztBQUN4QixVQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUMvQixZQUFJLEdBQUcsbUJBQVksT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2pDLFlBQUksQ0FBQyxXQUFXLEdBQUcseUJBQ2pCLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUN4QixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUNmLENBQUM7T0FDSDs7QUFFRCxhQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUU7QUFDakIsWUFBSSxFQUFFLElBQUk7QUFDVixtQkFBVyxFQUFFLG1CQUFZLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO09BQ2hFLENBQUMsQ0FBQztLQUNKLE1BQU07QUFDTCxhQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDOUI7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJ3aXRoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgYXBwZW5kQ29udGV4dFBhdGgsXG4gIGJsb2NrUGFyYW1zLFxuICBjcmVhdGVGcmFtZSxcbiAgaXNFbXB0eSxcbiAgaXNGdW5jdGlvblxufSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgRXhjZXB0aW9uIGZyb20gJy4uL2V4Y2VwdGlvbic7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCd3aXRoJywgZnVuY3Rpb24oY29udGV4dCwgb3B0aW9ucykge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoICE9IDIpIHtcbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJyN3aXRoIHJlcXVpcmVzIGV4YWN0bHkgb25lIGFyZ3VtZW50Jyk7XG4gICAgfVxuICAgIGlmIChpc0Z1bmN0aW9uKGNvbnRleHQpKSB7XG4gICAgICBjb250ZXh0ID0gY29udGV4dC5jYWxsKHRoaXMpO1xuICAgIH1cblxuICAgIGxldCBmbiA9IG9wdGlvbnMuZm47XG5cbiAgICBpZiAoIWlzRW1wdHkoY29udGV4dCkpIHtcbiAgICAgIGxldCBkYXRhID0gb3B0aW9ucy5kYXRhO1xuICAgICAgaWYgKG9wdGlvbnMuZGF0YSAmJiBvcHRpb25zLmlkcykge1xuICAgICAgICBkYXRhID0gY3JlYXRlRnJhbWUob3B0aW9ucy5kYXRhKTtcbiAgICAgICAgZGF0YS5jb250ZXh0UGF0aCA9IGFwcGVuZENvbnRleHRQYXRoKFxuICAgICAgICAgIG9wdGlvbnMuZGF0YS5jb250ZXh0UGF0aCxcbiAgICAgICAgICBvcHRpb25zLmlkc1swXVxuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZm4oY29udGV4dCwge1xuICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICBibG9ja1BhcmFtczogYmxvY2tQYXJhbXMoW2NvbnRleHRdLCBbZGF0YSAmJiBkYXRhLmNvbnRleHRQYXRoXSlcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gb3B0aW9ucy5pbnZlcnNlKHRoaXMpO1xuICAgIH1cbiAgfSk7XG59XG4iXX0=\n","'use strict';\n\nexports.__esModule = true;\nexports.registerDefaultHelpers = registerDefaultHelpers;\nexports.moveHelperToHooks = moveHelperToHooks;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _helpersBlockHelperMissing = require('./helpers/block-helper-missing');\n\nvar _helpersBlockHelperMissing2 = _interopRequireDefault(_helpersBlockHelperMissing);\n\nvar _helpersEach = require('./helpers/each');\n\nvar _helpersEach2 = _interopRequireDefault(_helpersEach);\n\nvar _helpersHelperMissing = require('./helpers/helper-missing');\n\nvar _helpersHelperMissing2 = _interopRequireDefault(_helpersHelperMissing);\n\nvar _helpersIf = require('./helpers/if');\n\nvar _helpersIf2 = _interopRequireDefault(_helpersIf);\n\nvar _helpersLog = require('./helpers/log');\n\nvar _helpersLog2 = _interopRequireDefault(_helpersLog);\n\nvar _helpersLookup = require('./helpers/lookup');\n\nvar _helpersLookup2 = _interopRequireDefault(_helpersLookup);\n\nvar _helpersWith = require('./helpers/with');\n\nvar _helpersWith2 = _interopRequireDefault(_helpersWith);\n\nfunction registerDefaultHelpers(instance) {\n  _helpersBlockHelperMissing2['default'](instance);\n  _helpersEach2['default'](instance);\n  _helpersHelperMissing2['default'](instance);\n  _helpersIf2['default'](instance);\n  _helpersLog2['default'](instance);\n  _helpersLookup2['default'](instance);\n  _helpersWith2['default'](instance);\n}\n\nfunction moveHelperToHooks(instance, helperName, keepHelper) {\n  if (instance.helpers[helperName]) {\n    instance.hooks[helperName] = instance.helpers[helperName];\n    if (!keepHelper) {\n      delete instance.helpers[helperName];\n    }\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O3lDQUF1QyxnQ0FBZ0M7Ozs7MkJBQzlDLGdCQUFnQjs7OztvQ0FDUCwwQkFBMEI7Ozs7eUJBQ3JDLGNBQWM7Ozs7MEJBQ2IsZUFBZTs7Ozs2QkFDWixrQkFBa0I7Ozs7MkJBQ3BCLGdCQUFnQjs7OztBQUVsQyxTQUFTLHNCQUFzQixDQUFDLFFBQVEsRUFBRTtBQUMvQyx5Q0FBMkIsUUFBUSxDQUFDLENBQUM7QUFDckMsMkJBQWEsUUFBUSxDQUFDLENBQUM7QUFDdkIsb0NBQXNCLFFBQVEsQ0FBQyxDQUFDO0FBQ2hDLHlCQUFXLFFBQVEsQ0FBQyxDQUFDO0FBQ3JCLDBCQUFZLFFBQVEsQ0FBQyxDQUFDO0FBQ3RCLDZCQUFlLFFBQVEsQ0FBQyxDQUFDO0FBQ3pCLDJCQUFhLFFBQVEsQ0FBQyxDQUFDO0NBQ3hCOztBQUVNLFNBQVMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUU7QUFDbEUsTUFBSSxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUFFO0FBQ2hDLFlBQVEsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUMxRCxRQUFJLENBQUMsVUFBVSxFQUFFO0FBQ2YsYUFBTyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0tBQ3JDO0dBQ0Y7Q0FDRiIsImZpbGUiOiJoZWxwZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJlZ2lzdGVyQmxvY2tIZWxwZXJNaXNzaW5nIGZyb20gJy4vaGVscGVycy9ibG9jay1oZWxwZXItbWlzc2luZyc7XG5pbXBvcnQgcmVnaXN0ZXJFYWNoIGZyb20gJy4vaGVscGVycy9lYWNoJztcbmltcG9ydCByZWdpc3RlckhlbHBlck1pc3NpbmcgZnJvbSAnLi9oZWxwZXJzL2hlbHBlci1taXNzaW5nJztcbmltcG9ydCByZWdpc3RlcklmIGZyb20gJy4vaGVscGVycy9pZic7XG5pbXBvcnQgcmVnaXN0ZXJMb2cgZnJvbSAnLi9oZWxwZXJzL2xvZyc7XG5pbXBvcnQgcmVnaXN0ZXJMb29rdXAgZnJvbSAnLi9oZWxwZXJzL2xvb2t1cCc7XG5pbXBvcnQgcmVnaXN0ZXJXaXRoIGZyb20gJy4vaGVscGVycy93aXRoJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyRGVmYXVsdEhlbHBlcnMoaW5zdGFuY2UpIHtcbiAgcmVnaXN0ZXJCbG9ja0hlbHBlck1pc3NpbmcoaW5zdGFuY2UpO1xuICByZWdpc3RlckVhY2goaW5zdGFuY2UpO1xuICByZWdpc3RlckhlbHBlck1pc3NpbmcoaW5zdGFuY2UpO1xuICByZWdpc3RlcklmKGluc3RhbmNlKTtcbiAgcmVnaXN0ZXJMb2coaW5zdGFuY2UpO1xuICByZWdpc3Rlckxvb2t1cChpbnN0YW5jZSk7XG4gIHJlZ2lzdGVyV2l0aChpbnN0YW5jZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtb3ZlSGVscGVyVG9Ib29rcyhpbnN0YW5jZSwgaGVscGVyTmFtZSwga2VlcEhlbHBlcikge1xuICBpZiAoaW5zdGFuY2UuaGVscGVyc1toZWxwZXJOYW1lXSkge1xuICAgIGluc3RhbmNlLmhvb2tzW2hlbHBlck5hbWVdID0gaW5zdGFuY2UuaGVscGVyc1toZWxwZXJOYW1lXTtcbiAgICBpZiAoIWtlZXBIZWxwZXIpIHtcbiAgICAgIGRlbGV0ZSBpbnN0YW5jZS5oZWxwZXJzW2hlbHBlck5hbWVdO1xuICAgIH1cbiAgfVxufVxuIl19\n","'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('../utils');\n\nexports['default'] = function (instance) {\n  instance.registerDecorator('inline', function (fn, props, container, options) {\n    var ret = fn;\n    if (!props.partials) {\n      props.partials = {};\n      ret = function (context, options) {\n        // Create a new partials stack frame prior to exec.\n        var original = container.partials;\n        container.partials = _utils.extend({}, original, props.partials);\n        var ret = fn(context, options);\n        container.partials = original;\n        return ret;\n      };\n    }\n\n    props.partials[options.args[0]] = options.fn;\n\n    return ret;\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2RlY29yYXRvcnMvaW5saW5lLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQXVCLFVBQVU7O3FCQUVsQixVQUFTLFFBQVEsRUFBRTtBQUNoQyxVQUFRLENBQUMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLFVBQVMsRUFBRSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFO0FBQzNFLFFBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQztBQUNiLFFBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFO0FBQ25CLFdBQUssQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0FBQ3BCLFNBQUcsR0FBRyxVQUFTLE9BQU8sRUFBRSxPQUFPLEVBQUU7O0FBRS9CLFlBQUksUUFBUSxHQUFHLFNBQVMsQ0FBQyxRQUFRLENBQUM7QUFDbEMsaUJBQVMsQ0FBQyxRQUFRLEdBQUcsY0FBTyxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMxRCxZQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQy9CLGlCQUFTLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztBQUM5QixlQUFPLEdBQUcsQ0FBQztPQUNaLENBQUM7S0FDSDs7QUFFRCxTQUFLLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDOztBQUU3QyxXQUFPLEdBQUcsQ0FBQztHQUNaLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6ImlubGluZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4dGVuZCB9IGZyb20gJy4uL3V0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJEZWNvcmF0b3IoJ2lubGluZScsIGZ1bmN0aW9uKGZuLCBwcm9wcywgY29udGFpbmVyLCBvcHRpb25zKSB7XG4gICAgbGV0IHJldCA9IGZuO1xuICAgIGlmICghcHJvcHMucGFydGlhbHMpIHtcbiAgICAgIHByb3BzLnBhcnRpYWxzID0ge307XG4gICAgICByZXQgPSBmdW5jdGlvbihjb250ZXh0LCBvcHRpb25zKSB7XG4gICAgICAgIC8vIENyZWF0ZSBhIG5ldyBwYXJ0aWFscyBzdGFjayBmcmFtZSBwcmlvciB0byBleGVjLlxuICAgICAgICBsZXQgb3JpZ2luYWwgPSBjb250YWluZXIucGFydGlhbHM7XG4gICAgICAgIGNvbnRhaW5lci5wYXJ0aWFscyA9IGV4dGVuZCh7fSwgb3JpZ2luYWwsIHByb3BzLnBhcnRpYWxzKTtcbiAgICAgICAgbGV0IHJldCA9IGZuKGNvbnRleHQsIG9wdGlvbnMpO1xuICAgICAgICBjb250YWluZXIucGFydGlhbHMgPSBvcmlnaW5hbDtcbiAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcHJvcHMucGFydGlhbHNbb3B0aW9ucy5hcmdzWzBdXSA9IG9wdGlvbnMuZm47XG5cbiAgICByZXR1cm4gcmV0O1xuICB9KTtcbn1cbiJdfQ==\n","'use strict';\n\nexports.__esModule = true;\nexports.registerDefaultDecorators = registerDefaultDecorators;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _decoratorsInline = require('./decorators/inline');\n\nvar _decoratorsInline2 = _interopRequireDefault(_decoratorsInline);\n\nfunction registerDefaultDecorators(instance) {\n  _decoratorsInline2['default'](instance);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2RlY29yYXRvcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Z0NBQTJCLHFCQUFxQjs7OztBQUV6QyxTQUFTLHlCQUF5QixDQUFDLFFBQVEsRUFBRTtBQUNsRCxnQ0FBZSxRQUFRLENBQUMsQ0FBQztDQUMxQiIsImZpbGUiOiJkZWNvcmF0b3JzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJlZ2lzdGVySW5saW5lIGZyb20gJy4vZGVjb3JhdG9ycy9pbmxpbmUnO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXJEZWZhdWx0RGVjb3JhdG9ycyhpbnN0YW5jZSkge1xuICByZWdpc3RlcklubGluZShpbnN0YW5jZSk7XG59XG4iXX0=\n","'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('./utils');\n\nvar logger = {\n  methodMap: ['debug', 'info', 'warn', 'error'],\n  level: 'info',\n\n  // Maps a given level value to the `methodMap` indexes above.\n  lookupLevel: function lookupLevel(level) {\n    if (typeof level === 'string') {\n      var levelMap = _utils.indexOf(logger.methodMap, level.toLowerCase());\n      if (levelMap >= 0) {\n        level = levelMap;\n      } else {\n        level = parseInt(level, 10);\n      }\n    }\n\n    return level;\n  },\n\n  // Can be overridden in the host environment\n  log: function log(level) {\n    level = logger.lookupLevel(level);\n\n    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) {\n      var method = logger.methodMap[level];\n      // eslint-disable-next-line no-console\n      if (!console[method]) {\n        method = 'log';\n      }\n\n      for (var _len = arguments.length, message = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        message[_key - 1] = arguments[_key];\n      }\n\n      console[method].apply(console, message); // eslint-disable-line no-console\n    }\n  }\n};\n\nexports['default'] = logger;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2xvZ2dlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O3FCQUF3QixTQUFTOztBQUVqQyxJQUFJLE1BQU0sR0FBRztBQUNYLFdBQVMsRUFBRSxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQztBQUM3QyxPQUFLLEVBQUUsTUFBTTs7O0FBR2IsYUFBVyxFQUFFLHFCQUFTLEtBQUssRUFBRTtBQUMzQixRQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTtBQUM3QixVQUFJLFFBQVEsR0FBRyxlQUFRLE1BQU0sQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7QUFDOUQsVUFBSSxRQUFRLElBQUksQ0FBQyxFQUFFO0FBQ2pCLGFBQUssR0FBRyxRQUFRLENBQUM7T0FDbEIsTUFBTTtBQUNMLGFBQUssR0FBRyxRQUFRLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO09BQzdCO0tBQ0Y7O0FBRUQsV0FBTyxLQUFLLENBQUM7R0FDZDs7O0FBR0QsS0FBRyxFQUFFLGFBQVMsS0FBSyxFQUFjO0FBQy9CLFNBQUssR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDOztBQUVsQyxRQUNFLE9BQU8sT0FBTyxLQUFLLFdBQVcsSUFDOUIsTUFBTSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxFQUN6QztBQUNBLFVBQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7O0FBRXJDLFVBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7QUFDcEIsY0FBTSxHQUFHLEtBQUssQ0FBQztPQUNoQjs7d0NBWG1CLE9BQU87QUFBUCxlQUFPOzs7QUFZM0IsYUFBTyxDQUFDLE1BQU0sT0FBQyxDQUFmLE9BQU8sRUFBWSxPQUFPLENBQUMsQ0FBQztLQUM3QjtHQUNGO0NBQ0YsQ0FBQzs7cUJBRWEsTUFBTSIsImZpbGUiOiJsb2dnZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbmRleE9mIH0gZnJvbSAnLi91dGlscyc7XG5cbmxldCBsb2dnZXIgPSB7XG4gIG1ldGhvZE1hcDogWydkZWJ1ZycsICdpbmZvJywgJ3dhcm4nLCAnZXJyb3InXSxcbiAgbGV2ZWw6ICdpbmZvJyxcblxuICAvLyBNYXBzIGEgZ2l2ZW4gbGV2ZWwgdmFsdWUgdG8gdGhlIGBtZXRob2RNYXBgIGluZGV4ZXMgYWJvdmUuXG4gIGxvb2t1cExldmVsOiBmdW5jdGlvbihsZXZlbCkge1xuICAgIGlmICh0eXBlb2YgbGV2ZWwgPT09ICdzdHJpbmcnKSB7XG4gICAgICBsZXQgbGV2ZWxNYXAgPSBpbmRleE9mKGxvZ2dlci5tZXRob2RNYXAsIGxldmVsLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgaWYgKGxldmVsTWFwID49IDApIHtcbiAgICAgICAgbGV2ZWwgPSBsZXZlbE1hcDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldmVsID0gcGFyc2VJbnQobGV2ZWwsIDEwKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbGV2ZWw7XG4gIH0sXG5cbiAgLy8gQ2FuIGJlIG92ZXJyaWRkZW4gaW4gdGhlIGhvc3QgZW52aXJvbm1lbnRcbiAgbG9nOiBmdW5jdGlvbihsZXZlbCwgLi4ubWVzc2FnZSkge1xuICAgIGxldmVsID0gbG9nZ2VyLmxvb2t1cExldmVsKGxldmVsKTtcblxuICAgIGlmIChcbiAgICAgIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgbG9nZ2VyLmxvb2t1cExldmVsKGxvZ2dlci5sZXZlbCkgPD0gbGV2ZWxcbiAgICApIHtcbiAgICAgIGxldCBtZXRob2QgPSBsb2dnZXIubWV0aG9kTWFwW2xldmVsXTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBpZiAoIWNvbnNvbGVbbWV0aG9kXSkge1xuICAgICAgICBtZXRob2QgPSAnbG9nJztcbiAgICAgIH1cbiAgICAgIGNvbnNvbGVbbWV0aG9kXSguLi5tZXNzYWdlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBsb2dnZXI7XG4iXX0=\n","'use strict';\n\nexports.__esModule = true;\nexports.createNewLookupObject = createNewLookupObject;\n\nvar _utils = require('../utils');\n\n/**\n * Create a new object with \"null\"-prototype to avoid truthy results on prototype properties.\n * The resulting object can be used with \"object[property]\" to check if a property exists\n * @param {...object} sources a varargs parameter of source objects that will be merged\n * @returns {object}\n */\n\nfunction createNewLookupObject() {\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  return _utils.extend.apply(undefined, [Object.create(null)].concat(sources));\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2ludGVybmFsL2NyZWF0ZS1uZXctbG9va3VwLW9iamVjdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztxQkFBdUIsVUFBVTs7Ozs7Ozs7O0FBUTFCLFNBQVMscUJBQXFCLEdBQWE7b0NBQVQsT0FBTztBQUFQLFdBQU87OztBQUM5QyxTQUFPLGdDQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQUssT0FBTyxFQUFDLENBQUM7Q0FDaEQiLCJmaWxlIjoiY3JlYXRlLW5ldy1sb29rdXAtb2JqZWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXh0ZW5kIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG4vKipcbiAqIENyZWF0ZSBhIG5ldyBvYmplY3Qgd2l0aCBcIm51bGxcIi1wcm90b3R5cGUgdG8gYXZvaWQgdHJ1dGh5IHJlc3VsdHMgb24gcHJvdG90eXBlIHByb3BlcnRpZXMuXG4gKiBUaGUgcmVzdWx0aW5nIG9iamVjdCBjYW4gYmUgdXNlZCB3aXRoIFwib2JqZWN0W3Byb3BlcnR5XVwiIHRvIGNoZWNrIGlmIGEgcHJvcGVydHkgZXhpc3RzXG4gKiBAcGFyYW0gey4uLm9iamVjdH0gc291cmNlcyBhIHZhcmFyZ3MgcGFyYW1ldGVyIG9mIHNvdXJjZSBvYmplY3RzIHRoYXQgd2lsbCBiZSBtZXJnZWRcbiAqIEByZXR1cm5zIHtvYmplY3R9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOZXdMb29rdXBPYmplY3QoLi4uc291cmNlcykge1xuICByZXR1cm4gZXh0ZW5kKE9iamVjdC5jcmVhdGUobnVsbCksIC4uLnNvdXJjZXMpO1xufVxuIl19\n","'use strict';\n\nexports.__esModule = true;\nexports.createProtoAccessControl = createProtoAccessControl;\nexports.resultIsAllowed = resultIsAllowed;\nexports.resetLoggedProperties = resetLoggedProperties;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nvar _createNewLookupObject = require('./create-new-lookup-object');\n\nvar _logger = require('../logger');\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar loggedProperties = Object.create(null);\n\nfunction createProtoAccessControl(runtimeOptions) {\n  var defaultMethodWhiteList = Object.create(null);\n  defaultMethodWhiteList['constructor'] = false;\n  defaultMethodWhiteList['__defineGetter__'] = false;\n  defaultMethodWhiteList['__defineSetter__'] = false;\n  defaultMethodWhiteList['__lookupGetter__'] = false;\n\n  var defaultPropertyWhiteList = Object.create(null);\n  // eslint-disable-next-line no-proto\n  defaultPropertyWhiteList['__proto__'] = false;\n\n  return {\n    properties: {\n      whitelist: _createNewLookupObject.createNewLookupObject(defaultPropertyWhiteList, runtimeOptions.allowedProtoProperties),\n      defaultValue: runtimeOptions.allowProtoPropertiesByDefault\n    },\n    methods: {\n      whitelist: _createNewLookupObject.createNewLookupObject(defaultMethodWhiteList, runtimeOptions.allowedProtoMethods),\n      defaultValue: runtimeOptions.allowProtoMethodsByDefault\n    }\n  };\n}\n\nfunction resultIsAllowed(result, protoAccessControl, propertyName) {\n  if (typeof result === 'function') {\n    return checkWhiteList(protoAccessControl.methods, propertyName);\n  } else {\n    return checkWhiteList(protoAccessControl.properties, propertyName);\n  }\n}\n\nfunction checkWhiteList(protoAccessControlForType, propertyName) {\n  if (protoAccessControlForType.whitelist[propertyName] !== undefined) {\n    return protoAccessControlForType.whitelist[propertyName] === true;\n  }\n  if (protoAccessControlForType.defaultValue !== undefined) {\n    return protoAccessControlForType.defaultValue;\n  }\n  logUnexpecedPropertyAccessOnce(propertyName);\n  return false;\n}\n\nfunction logUnexpecedPropertyAccessOnce(propertyName) {\n  if (loggedProperties[propertyName] !== true) {\n    loggedProperties[propertyName] = true;\n    logger.log('error', 'Handlebars: Access has been denied to resolve the property \"' + propertyName + '\" because it is not an \"own property\" of its parent.\\n' + 'You can add a runtime option to disable the check or this warning:\\n' + 'See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details');\n  }\n}\n\nfunction resetLoggedProperties() {\n  Object.keys(loggedProperties).forEach(function (propertyName) {\n    delete loggedProperties[propertyName];\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2ludGVybmFsL3Byb3RvLWFjY2Vzcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O3FDQUFzQyw0QkFBNEI7O3NCQUMxQyxXQUFXOztJQUF2QixNQUFNOztBQUVsQixJQUFNLGdCQUFnQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7O0FBRXRDLFNBQVMsd0JBQXdCLENBQUMsY0FBYyxFQUFFO0FBQ3ZELE1BQUksc0JBQXNCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNqRCx3QkFBc0IsQ0FBQyxhQUFhLENBQUMsR0FBRyxLQUFLLENBQUM7QUFDOUMsd0JBQXNCLENBQUMsa0JBQWtCLENBQUMsR0FBRyxLQUFLLENBQUM7QUFDbkQsd0JBQXNCLENBQUMsa0JBQWtCLENBQUMsR0FBRyxLQUFLLENBQUM7QUFDbkQsd0JBQXNCLENBQUMsa0JBQWtCLENBQUMsR0FBRyxLQUFLLENBQUM7O0FBRW5ELE1BQUksd0JBQXdCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQzs7QUFFbkQsMEJBQXdCLENBQUMsV0FBVyxDQUFDLEdBQUcsS0FBSyxDQUFDOztBQUU5QyxTQUFPO0FBQ0wsY0FBVSxFQUFFO0FBQ1YsZUFBUyxFQUFFLDZDQUNULHdCQUF3QixFQUN4QixjQUFjLENBQUMsc0JBQXNCLENBQ3RDO0FBQ0Qsa0JBQVksRUFBRSxjQUFjLENBQUMsNkJBQTZCO0tBQzNEO0FBQ0QsV0FBTyxFQUFFO0FBQ1AsZUFBUyxFQUFFLDZDQUNULHNCQUFzQixFQUN0QixjQUFjLENBQUMsbUJBQW1CLENBQ25DO0FBQ0Qsa0JBQVksRUFBRSxjQUFjLENBQUMsMEJBQTBCO0tBQ3hEO0dBQ0YsQ0FBQztDQUNIOztBQUVNLFNBQVMsZUFBZSxDQUFDLE1BQU0sRUFBRSxrQkFBa0IsRUFBRSxZQUFZLEVBQUU7QUFDeEUsTUFBSSxPQUFPLE1BQU0sS0FBSyxVQUFVLEVBQUU7QUFDaEMsV0FBTyxjQUFjLENBQUMsa0JBQWtCLENBQUMsT0FBTyxFQUFFLFlBQVksQ0FBQyxDQUFDO0dBQ2pFLE1BQU07QUFDTCxXQUFPLGNBQWMsQ0FBQyxrQkFBa0IsQ0FBQyxVQUFVLEVBQUUsWUFBWSxDQUFDLENBQUM7R0FDcEU7Q0FDRjs7QUFFRCxTQUFTLGNBQWMsQ0FBQyx5QkFBeUIsRUFBRSxZQUFZLEVBQUU7QUFDL0QsTUFBSSx5QkFBeUIsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLEtBQUssU0FBUyxFQUFFO0FBQ25FLFdBQU8seUJBQXlCLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxLQUFLLElBQUksQ0FBQztHQUNuRTtBQUNELE1BQUkseUJBQXlCLENBQUMsWUFBWSxLQUFLLFNBQVMsRUFBRTtBQUN4RCxXQUFPLHlCQUF5QixDQUFDLFlBQVksQ0FBQztHQUMvQztBQUNELGdDQUE4QixDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQzdDLFNBQU8sS0FBSyxDQUFDO0NBQ2Q7O0FBRUQsU0FBUyw4QkFBOEIsQ0FBQyxZQUFZLEVBQUU7QUFDcEQsTUFBSSxnQkFBZ0IsQ0FBQyxZQUFZLENBQUMsS0FBSyxJQUFJLEVBQUU7QUFDM0Msb0JBQWdCLENBQUMsWUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDO0FBQ3RDLFVBQU0sQ0FBQyxHQUFHLENBQ1IsT0FBTyxFQUNQLGlFQUErRCxZQUFZLG9JQUNILG9IQUMyQyxDQUNwSCxDQUFDO0dBQ0g7Q0FDRjs7QUFFTSxTQUFTLHFCQUFxQixHQUFHO0FBQ3RDLFFBQU0sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxZQUFZLEVBQUk7QUFDcEQsV0FBTyxnQkFBZ0IsQ0FBQyxZQUFZLENBQUMsQ0FBQztHQUN2QyxDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJwcm90by1hY2Nlc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVOZXdMb29rdXBPYmplY3QgfSBmcm9tICcuL2NyZWF0ZS1uZXctbG9va3VwLW9iamVjdCc7XG5pbXBvcnQgKiBhcyBsb2dnZXIgZnJvbSAnLi4vbG9nZ2VyJztcblxuY29uc3QgbG9nZ2VkUHJvcGVydGllcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQcm90b0FjY2Vzc0NvbnRyb2wocnVudGltZU9wdGlvbnMpIHtcbiAgbGV0IGRlZmF1bHRNZXRob2RXaGl0ZUxpc3QgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICBkZWZhdWx0TWV0aG9kV2hpdGVMaXN0Wydjb25zdHJ1Y3RvciddID0gZmFsc2U7XG4gIGRlZmF1bHRNZXRob2RXaGl0ZUxpc3RbJ19fZGVmaW5lR2V0dGVyX18nXSA9IGZhbHNlO1xuICBkZWZhdWx0TWV0aG9kV2hpdGVMaXN0WydfX2RlZmluZVNldHRlcl9fJ10gPSBmYWxzZTtcbiAgZGVmYXVsdE1ldGhvZFdoaXRlTGlzdFsnX19sb29rdXBHZXR0ZXJfXyddID0gZmFsc2U7XG5cbiAgbGV0IGRlZmF1bHRQcm9wZXJ0eVdoaXRlTGlzdCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b1xuICBkZWZhdWx0UHJvcGVydHlXaGl0ZUxpc3RbJ19fcHJvdG9fXyddID0gZmFsc2U7XG5cbiAgcmV0dXJuIHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB3aGl0ZWxpc3Q6IGNyZWF0ZU5ld0xvb2t1cE9iamVjdChcbiAgICAgICAgZGVmYXVsdFByb3BlcnR5V2hpdGVMaXN0LFxuICAgICAgICBydW50aW1lT3B0aW9ucy5hbGxvd2VkUHJvdG9Qcm9wZXJ0aWVzXG4gICAgICApLFxuICAgICAgZGVmYXVsdFZhbHVlOiBydW50aW1lT3B0aW9ucy5hbGxvd1Byb3RvUHJvcGVydGllc0J5RGVmYXVsdFxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgd2hpdGVsaXN0OiBjcmVhdGVOZXdMb29rdXBPYmplY3QoXG4gICAgICAgIGRlZmF1bHRNZXRob2RXaGl0ZUxpc3QsXG4gICAgICAgIHJ1bnRpbWVPcHRpb25zLmFsbG93ZWRQcm90b01ldGhvZHNcbiAgICAgICksXG4gICAgICBkZWZhdWx0VmFsdWU6IHJ1bnRpbWVPcHRpb25zLmFsbG93UHJvdG9NZXRob2RzQnlEZWZhdWx0XG4gICAgfVxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVzdWx0SXNBbGxvd2VkKHJlc3VsdCwgcHJvdG9BY2Nlc3NDb250cm9sLCBwcm9wZXJ0eU5hbWUpIHtcbiAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gY2hlY2tXaGl0ZUxpc3QocHJvdG9BY2Nlc3NDb250cm9sLm1ldGhvZHMsIHByb3BlcnR5TmFtZSk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGNoZWNrV2hpdGVMaXN0KHByb3RvQWNjZXNzQ29udHJvbC5wcm9wZXJ0aWVzLCBwcm9wZXJ0eU5hbWUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrV2hpdGVMaXN0KHByb3RvQWNjZXNzQ29udHJvbEZvclR5cGUsIHByb3BlcnR5TmFtZSkge1xuICBpZiAocHJvdG9BY2Nlc3NDb250cm9sRm9yVHlwZS53aGl0ZWxpc3RbcHJvcGVydHlOYW1lXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIHByb3RvQWNjZXNzQ29udHJvbEZvclR5cGUud2hpdGVsaXN0W3Byb3BlcnR5TmFtZV0gPT09IHRydWU7XG4gIH1cbiAgaWYgKHByb3RvQWNjZXNzQ29udHJvbEZvclR5cGUuZGVmYXVsdFZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gcHJvdG9BY2Nlc3NDb250cm9sRm9yVHlwZS5kZWZhdWx0VmFsdWU7XG4gIH1cbiAgbG9nVW5leHBlY2VkUHJvcGVydHlBY2Nlc3NPbmNlKHByb3BlcnR5TmFtZSk7XG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gbG9nVW5leHBlY2VkUHJvcGVydHlBY2Nlc3NPbmNlKHByb3BlcnR5TmFtZSkge1xuICBpZiAobG9nZ2VkUHJvcGVydGllc1twcm9wZXJ0eU5hbWVdICE9PSB0cnVlKSB7XG4gICAgbG9nZ2VkUHJvcGVydGllc1twcm9wZXJ0eU5hbWVdID0gdHJ1ZTtcbiAgICBsb2dnZXIubG9nKFxuICAgICAgJ2Vycm9yJyxcbiAgICAgIGBIYW5kbGViYXJzOiBBY2Nlc3MgaGFzIGJlZW4gZGVuaWVkIHRvIHJlc29sdmUgdGhlIHByb3BlcnR5IFwiJHtwcm9wZXJ0eU5hbWV9XCIgYmVjYXVzZSBpdCBpcyBub3QgYW4gXCJvd24gcHJvcGVydHlcIiBvZiBpdHMgcGFyZW50LlxcbmAgK1xuICAgICAgICBgWW91IGNhbiBhZGQgYSBydW50aW1lIG9wdGlvbiB0byBkaXNhYmxlIHRoZSBjaGVjayBvciB0aGlzIHdhcm5pbmc6XFxuYCArXG4gICAgICAgIGBTZWUgaHR0cHM6Ly9oYW5kbGViYXJzanMuY29tL2FwaS1yZWZlcmVuY2UvcnVudGltZS1vcHRpb25zLmh0bWwjb3B0aW9ucy10by1jb250cm9sLXByb3RvdHlwZS1hY2Nlc3MgZm9yIGRldGFpbHNgXG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVzZXRMb2dnZWRQcm9wZXJ0aWVzKCkge1xuICBPYmplY3Qua2V5cyhsb2dnZWRQcm9wZXJ0aWVzKS5mb3JFYWNoKHByb3BlcnR5TmFtZSA9PiB7XG4gICAgZGVsZXRlIGxvZ2dlZFByb3BlcnRpZXNbcHJvcGVydHlOYW1lXTtcbiAgfSk7XG59XG4iXX0=\n","'use strict';\n\nexports.__esModule = true;\nexports.HandlebarsEnvironment = HandlebarsEnvironment;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utils = require('./utils');\n\nvar _exception = require('./exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _helpers = require('./helpers');\n\nvar _decorators = require('./decorators');\n\nvar _logger = require('./logger');\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _internalProtoAccess = require('./internal/proto-access');\n\nvar VERSION = '4.7.7';\nexports.VERSION = VERSION;\nvar COMPILER_REVISION = 8;\nexports.COMPILER_REVISION = COMPILER_REVISION;\nvar LAST_COMPATIBLE_COMPILER_REVISION = 7;\n\nexports.LAST_COMPATIBLE_COMPILER_REVISION = LAST_COMPATIBLE_COMPILER_REVISION;\nvar REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1',\n  7: '>= 4.0.0 <4.3.0',\n  8: '>= 4.3.0'\n};\n\nexports.REVISION_CHANGES = REVISION_CHANGES;\nvar objectType = '[object Object]';\n\nfunction HandlebarsEnvironment(helpers, partials, decorators) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n  this.decorators = decorators || {};\n\n  _helpers.registerDefaultHelpers(this);\n  _decorators.registerDefaultDecorators(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: _logger2['default'],\n  log: _logger2['default'].log,\n\n  registerHelper: function registerHelper(name, fn) {\n    if (_utils.toString.call(name) === objectType) {\n      if (fn) {\n        throw new _exception2['default']('Arg not supported with multiple helpers');\n      }\n      _utils.extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function unregisterHelper(name) {\n    delete this.helpers[name];\n  },\n\n  registerPartial: function registerPartial(name, partial) {\n    if (_utils.toString.call(name) === objectType) {\n      _utils.extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new _exception2['default']('Attempting to register a partial called \"' + name + '\" as undefined');\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function unregisterPartial(name) {\n    delete this.partials[name];\n  },\n\n  registerDecorator: function registerDecorator(name, fn) {\n    if (_utils.toString.call(name) === objectType) {\n      if (fn) {\n        throw new _exception2['default']('Arg not supported with multiple decorators');\n      }\n      _utils.extend(this.decorators, name);\n    } else {\n      this.decorators[name] = fn;\n    }\n  },\n  unregisterDecorator: function unregisterDecorator(name) {\n    delete this.decorators[name];\n  },\n  /**\n   * Reset the memory of illegal property accesses that have already been logged.\n   * @deprecated should only be used in handlebars test-cases\n   */\n  resetLoggedPropertyAccesses: function resetLoggedPropertyAccesses() {\n    _internalProtoAccess.resetLoggedProperties();\n  }\n};\n\nvar log = _logger2['default'].log;\n\nexports.log = log;\nexports.createFrame = _utils.createFrame;\nexports.logger = _logger2['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2Jhc2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7cUJBQThDLFNBQVM7O3lCQUNqQyxhQUFhOzs7O3VCQUNJLFdBQVc7OzBCQUNSLGNBQWM7O3NCQUNyQyxVQUFVOzs7O21DQUNTLHlCQUF5Qjs7QUFFeEQsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDOztBQUN4QixJQUFNLGlCQUFpQixHQUFHLENBQUMsQ0FBQzs7QUFDNUIsSUFBTSxpQ0FBaUMsR0FBRyxDQUFDLENBQUM7OztBQUU1QyxJQUFNLGdCQUFnQixHQUFHO0FBQzlCLEdBQUMsRUFBRSxhQUFhO0FBQ2hCLEdBQUMsRUFBRSxlQUFlO0FBQ2xCLEdBQUMsRUFBRSxlQUFlO0FBQ2xCLEdBQUMsRUFBRSxVQUFVO0FBQ2IsR0FBQyxFQUFFLGtCQUFrQjtBQUNyQixHQUFDLEVBQUUsaUJBQWlCO0FBQ3BCLEdBQUMsRUFBRSxpQkFBaUI7QUFDcEIsR0FBQyxFQUFFLFVBQVU7Q0FDZCxDQUFDOzs7QUFFRixJQUFNLFVBQVUsR0FBRyxpQkFBaUIsQ0FBQzs7QUFFOUIsU0FBUyxxQkFBcUIsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRTtBQUNuRSxNQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7QUFDN0IsTUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLElBQUksRUFBRSxDQUFDO0FBQy9CLE1BQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxJQUFJLEVBQUUsQ0FBQzs7QUFFbkMsa0NBQXVCLElBQUksQ0FBQyxDQUFDO0FBQzdCLHdDQUEwQixJQUFJLENBQUMsQ0FBQztDQUNqQzs7QUFFRCxxQkFBcUIsQ0FBQyxTQUFTLEdBQUc7QUFDaEMsYUFBVyxFQUFFLHFCQUFxQjs7QUFFbEMsUUFBTSxxQkFBUTtBQUNkLEtBQUcsRUFBRSxvQkFBTyxHQUFHOztBQUVmLGdCQUFjLEVBQUUsd0JBQVMsSUFBSSxFQUFFLEVBQUUsRUFBRTtBQUNqQyxRQUFJLGdCQUFTLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxVQUFVLEVBQUU7QUFDdEMsVUFBSSxFQUFFLEVBQUU7QUFDTixjQUFNLDJCQUFjLHlDQUF5QyxDQUFDLENBQUM7T0FDaEU7QUFDRCxvQkFBTyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0tBQzVCLE1BQU07QUFDTCxVQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztLQUN6QjtHQUNGO0FBQ0Qsa0JBQWdCLEVBQUUsMEJBQVMsSUFBSSxFQUFFO0FBQy9CLFdBQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUMzQjs7QUFFRCxpQkFBZSxFQUFFLHlCQUFTLElBQUksRUFBRSxPQUFPLEVBQUU7QUFDdkMsUUFBSSxnQkFBUyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssVUFBVSxFQUFFO0FBQ3RDLG9CQUFPLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDN0IsTUFBTTtBQUNMLFVBQUksT0FBTyxPQUFPLEtBQUssV0FBVyxFQUFFO0FBQ2xDLGNBQU0seUVBQ3dDLElBQUksb0JBQ2pELENBQUM7T0FDSDtBQUNELFVBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDO0tBQy9CO0dBQ0Y7QUFDRCxtQkFBaUIsRUFBRSwyQkFBUyxJQUFJLEVBQUU7QUFDaEMsV0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0dBQzVCOztBQUVELG1CQUFpQixFQUFFLDJCQUFTLElBQUksRUFBRSxFQUFFLEVBQUU7QUFDcEMsUUFBSSxnQkFBUyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssVUFBVSxFQUFFO0FBQ3RDLFVBQUksRUFBRSxFQUFFO0FBQ04sY0FBTSwyQkFBYyw0Q0FBNEMsQ0FBQyxDQUFDO09BQ25FO0FBQ0Qsb0JBQU8sSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztLQUMvQixNQUFNO0FBQ0wsVUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7S0FDNUI7R0FDRjtBQUNELHFCQUFtQixFQUFFLDZCQUFTLElBQUksRUFBRTtBQUNsQyxXQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7R0FDOUI7Ozs7O0FBS0QsNkJBQTJCLEVBQUEsdUNBQUc7QUFDNUIsZ0RBQXVCLENBQUM7R0FDekI7Q0FDRixDQUFDOztBQUVLLElBQUksR0FBRyxHQUFHLG9CQUFPLEdBQUcsQ0FBQzs7O1FBRW5CLFdBQVc7UUFBRSxNQUFNIiwiZmlsZSI6ImJhc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVGcmFtZSwgZXh0ZW5kLCB0b1N0cmluZyB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IEV4Y2VwdGlvbiBmcm9tICcuL2V4Y2VwdGlvbic7XG5pbXBvcnQgeyByZWdpc3RlckRlZmF1bHRIZWxwZXJzIH0gZnJvbSAnLi9oZWxwZXJzJztcbmltcG9ydCB7IHJlZ2lzdGVyRGVmYXVsdERlY29yYXRvcnMgfSBmcm9tICcuL2RlY29yYXRvcnMnO1xuaW1wb3J0IGxvZ2dlciBmcm9tICcuL2xvZ2dlcic7XG5pbXBvcnQgeyByZXNldExvZ2dlZFByb3BlcnRpZXMgfSBmcm9tICcuL2ludGVybmFsL3Byb3RvLWFjY2Vzcyc7XG5cbmV4cG9ydCBjb25zdCBWRVJTSU9OID0gJzQuNy43JztcbmV4cG9ydCBjb25zdCBDT01QSUxFUl9SRVZJU0lPTiA9IDg7XG5leHBvcnQgY29uc3QgTEFTVF9DT01QQVRJQkxFX0NPTVBJTEVSX1JFVklTSU9OID0gNztcblxuZXhwb3J0IGNvbnN0IFJFVklTSU9OX0NIQU5HRVMgPSB7XG4gIDE6ICc8PSAxLjAucmMuMicsIC8vIDEuMC5yYy4yIGlzIGFjdHVhbGx5IHJldjIgYnV0IGRvZXNuJ3QgcmVwb3J0IGl0XG4gIDI6ICc9PSAxLjAuMC1yYy4zJyxcbiAgMzogJz09IDEuMC4wLXJjLjQnLFxuICA0OiAnPT0gMS54LngnLFxuICA1OiAnPT0gMi4wLjAtYWxwaGEueCcsXG4gIDY6ICc+PSAyLjAuMC1iZXRhLjEnLFxuICA3OiAnPj0gNC4wLjAgPDQuMy4wJyxcbiAgODogJz49IDQuMy4wJ1xufTtcblxuY29uc3Qgb2JqZWN0VHlwZSA9ICdbb2JqZWN0IE9iamVjdF0nO1xuXG5leHBvcnQgZnVuY3Rpb24gSGFuZGxlYmFyc0Vudmlyb25tZW50KGhlbHBlcnMsIHBhcnRpYWxzLCBkZWNvcmF0b3JzKSB7XG4gIHRoaXMuaGVscGVycyA9IGhlbHBlcnMgfHwge307XG4gIHRoaXMucGFydGlhbHMgPSBwYXJ0aWFscyB8fCB7fTtcbiAgdGhpcy5kZWNvcmF0b3JzID0gZGVjb3JhdG9ycyB8fCB7fTtcblxuICByZWdpc3RlckRlZmF1bHRIZWxwZXJzKHRoaXMpO1xuICByZWdpc3RlckRlZmF1bHREZWNvcmF0b3JzKHRoaXMpO1xufVxuXG5IYW5kbGViYXJzRW52aXJvbm1lbnQucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogSGFuZGxlYmFyc0Vudmlyb25tZW50LFxuXG4gIGxvZ2dlcjogbG9nZ2VyLFxuICBsb2c6IGxvZ2dlci5sb2csXG5cbiAgcmVnaXN0ZXJIZWxwZXI6IGZ1bmN0aW9uKG5hbWUsIGZuKSB7XG4gICAgaWYgKHRvU3RyaW5nLmNhbGwobmFtZSkgPT09IG9iamVjdFR5cGUpIHtcbiAgICAgIGlmIChmbikge1xuICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCdBcmcgbm90IHN1cHBvcnRlZCB3aXRoIG11bHRpcGxlIGhlbHBlcnMnKTtcbiAgICAgIH1cbiAgICAgIGV4dGVuZCh0aGlzLmhlbHBlcnMsIG5hbWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmhlbHBlcnNbbmFtZV0gPSBmbjtcbiAgICB9XG4gIH0sXG4gIHVucmVnaXN0ZXJIZWxwZXI6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBkZWxldGUgdGhpcy5oZWxwZXJzW25hbWVdO1xuICB9LFxuXG4gIHJlZ2lzdGVyUGFydGlhbDogZnVuY3Rpb24obmFtZSwgcGFydGlhbCkge1xuICAgIGlmICh0b1N0cmluZy5jYWxsKG5hbWUpID09PSBvYmplY3RUeXBlKSB7XG4gICAgICBleHRlbmQodGhpcy5wYXJ0aWFscywgbmFtZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh0eXBlb2YgcGFydGlhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbihcbiAgICAgICAgICBgQXR0ZW1wdGluZyB0byByZWdpc3RlciBhIHBhcnRpYWwgY2FsbGVkIFwiJHtuYW1lfVwiIGFzIHVuZGVmaW5lZGBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHRoaXMucGFydGlhbHNbbmFtZV0gPSBwYXJ0aWFsO1xuICAgIH1cbiAgfSxcbiAgdW5yZWdpc3RlclBhcnRpYWw6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBkZWxldGUgdGhpcy5wYXJ0aWFsc1tuYW1lXTtcbiAgfSxcblxuICByZWdpc3RlckRlY29yYXRvcjogZnVuY3Rpb24obmFtZSwgZm4pIHtcbiAgICBpZiAodG9TdHJpbmcuY2FsbChuYW1lKSA9PT0gb2JqZWN0VHlwZSkge1xuICAgICAgaWYgKGZuKSB7XG4gICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ0FyZyBub3Qgc3VwcG9ydGVkIHdpdGggbXVsdGlwbGUgZGVjb3JhdG9ycycpO1xuICAgICAgfVxuICAgICAgZXh0ZW5kKHRoaXMuZGVjb3JhdG9ycywgbmFtZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGVjb3JhdG9yc1tuYW1lXSA9IGZuO1xuICAgIH1cbiAgfSxcbiAgdW5yZWdpc3RlckRlY29yYXRvcjogZnVuY3Rpb24obmFtZSkge1xuICAgIGRlbGV0ZSB0aGlzLmRlY29yYXRvcnNbbmFtZV07XG4gIH0sXG4gIC8qKlxuICAgKiBSZXNldCB0aGUgbWVtb3J5IG9mIGlsbGVnYWwgcHJvcGVydHkgYWNjZXNzZXMgdGhhdCBoYXZlIGFscmVhZHkgYmVlbiBsb2dnZWQuXG4gICAqIEBkZXByZWNhdGVkIHNob3VsZCBvbmx5IGJlIHVzZWQgaW4gaGFuZGxlYmFycyB0ZXN0LWNhc2VzXG4gICAqL1xuICByZXNldExvZ2dlZFByb3BlcnR5QWNjZXNzZXMoKSB7XG4gICAgcmVzZXRMb2dnZWRQcm9wZXJ0aWVzKCk7XG4gIH1cbn07XG5cbmV4cG9ydCBsZXQgbG9nID0gbG9nZ2VyLmxvZztcblxuZXhwb3J0IHsgY3JlYXRlRnJhbWUsIGxvZ2dlciB9O1xuIl19\n","// Build out our basic SafeString type\n'use strict';\n\nexports.__esModule = true;\nfunction SafeString(string) {\n  this.string = string;\n}\n\nSafeString.prototype.toString = SafeString.prototype.toHTML = function () {\n  return '' + this.string;\n};\n\nexports['default'] = SafeString;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL3NhZmUtc3RyaW5nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxTQUFTLFVBQVUsQ0FBQyxNQUFNLEVBQUU7QUFDMUIsTUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7Q0FDdEI7O0FBRUQsVUFBVSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsWUFBVztBQUN2RSxTQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0NBQ3pCLENBQUM7O3FCQUVhLFVBQVUiLCJmaWxlIjoic2FmZS1zdHJpbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCdWlsZCBvdXQgb3VyIGJhc2ljIFNhZmVTdHJpbmcgdHlwZVxuZnVuY3Rpb24gU2FmZVN0cmluZyhzdHJpbmcpIHtcbiAgdGhpcy5zdHJpbmcgPSBzdHJpbmc7XG59XG5cblNhZmVTdHJpbmcucHJvdG90eXBlLnRvU3RyaW5nID0gU2FmZVN0cmluZy5wcm90b3R5cGUudG9IVE1MID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiAnJyArIHRoaXMuc3RyaW5nO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU2FmZVN0cmluZztcbiJdfQ==\n","'use strict';\n\nexports.__esModule = true;\nexports.wrapHelper = wrapHelper;\n\nfunction wrapHelper(helper, transformOptionsFn) {\n  if (typeof helper !== 'function') {\n    // This should not happen, but apparently it does in https://github.com/wycats/handlebars.js/issues/1639\n    // We try to make the wrapper least-invasive by not wrapping it, if the helper is not a function.\n    return helper;\n  }\n  var wrapper = function wrapper() /* dynamic arguments */{\n    var options = arguments[arguments.length - 1];\n    arguments[arguments.length - 1] = transformOptionsFn(options);\n    return helper.apply(this, arguments);\n  };\n  return wrapper;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2ludGVybmFsL3dyYXBIZWxwZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxTQUFTLFVBQVUsQ0FBQyxNQUFNLEVBQUUsa0JBQWtCLEVBQUU7QUFDckQsTUFBSSxPQUFPLE1BQU0sS0FBSyxVQUFVLEVBQUU7OztBQUdoQyxXQUFPLE1BQU0sQ0FBQztHQUNmO0FBQ0QsTUFBSSxPQUFPLEdBQUcsU0FBVixPQUFPLDBCQUFxQztBQUM5QyxRQUFNLE9BQU8sR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNoRCxhQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUM5RCxXQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0dBQ3RDLENBQUM7QUFDRixTQUFPLE9BQU8sQ0FBQztDQUNoQiIsImZpbGUiOiJ3cmFwSGVscGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHdyYXBIZWxwZXIoaGVscGVyLCB0cmFuc2Zvcm1PcHRpb25zRm4pIHtcbiAgaWYgKHR5cGVvZiBoZWxwZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBUaGlzIHNob3VsZCBub3QgaGFwcGVuLCBidXQgYXBwYXJlbnRseSBpdCBkb2VzIGluIGh0dHBzOi8vZ2l0aHViLmNvbS93eWNhdHMvaGFuZGxlYmFycy5qcy9pc3N1ZXMvMTYzOVxuICAgIC8vIFdlIHRyeSB0byBtYWtlIHRoZSB3cmFwcGVyIGxlYXN0LWludmFzaXZlIGJ5IG5vdCB3cmFwcGluZyBpdCwgaWYgdGhlIGhlbHBlciBpcyBub3QgYSBmdW5jdGlvbi5cbiAgICByZXR1cm4gaGVscGVyO1xuICB9XG4gIGxldCB3cmFwcGVyID0gZnVuY3Rpb24oLyogZHluYW1pYyBhcmd1bWVudHMgKi8pIHtcbiAgICBjb25zdCBvcHRpb25zID0gYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXTtcbiAgICBhcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aCAtIDFdID0gdHJhbnNmb3JtT3B0aW9uc0ZuKG9wdGlvbnMpO1xuICAgIHJldHVybiBoZWxwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfTtcbiAgcmV0dXJuIHdyYXBwZXI7XG59XG4iXX0=\n","'use strict';\n\nexports.__esModule = true;\nexports.checkRevision = checkRevision;\nexports.template = template;\nexports.wrapProgram = wrapProgram;\nexports.resolvePartial = resolvePartial;\nexports.invokePartial = invokePartial;\nexports.noop = noop;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nvar _utils = require('./utils');\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _exception = require('./exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _base = require('./base');\n\nvar _helpers = require('./helpers');\n\nvar _internalWrapHelper = require('./internal/wrapHelper');\n\nvar _internalProtoAccess = require('./internal/proto-access');\n\nfunction checkRevision(compilerInfo) {\n  var compilerRevision = compilerInfo && compilerInfo[0] || 1,\n      currentRevision = _base.COMPILER_REVISION;\n\n  if (compilerRevision >= _base.LAST_COMPATIBLE_COMPILER_REVISION && compilerRevision <= _base.COMPILER_REVISION) {\n    return;\n  }\n\n  if (compilerRevision < _base.LAST_COMPATIBLE_COMPILER_REVISION) {\n    var runtimeVersions = _base.REVISION_CHANGES[currentRevision],\n        compilerVersions = _base.REVISION_CHANGES[compilerRevision];\n    throw new _exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');\n  } else {\n    // Use the embedded version info since the runtime doesn't know about this revision yet\n    throw new _exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');\n  }\n}\n\nfunction template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new _exception2['default']('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new _exception2['default']('Unknown template object: ' + typeof templateSpec);\n  }\n\n  templateSpec.main.decorator = templateSpec.main_d;\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as pseudo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)\n  var templateWasPrecompiledWithCompilerV7 = templateSpec.compiler && templateSpec.compiler[0] === 7;\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n      if (options.ids) {\n        options.ids[0] = true;\n      }\n    }\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n\n    var extendedOptions = Utils.extend({}, options, {\n      hooks: this.hooks,\n      protoAccessControl: this.protoAccessControl\n    });\n\n    var result = env.VM.invokePartial.call(this, partial, context, extendedOptions);\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);\n      result = options.partials[options.name](context, extendedOptions);\n    }\n    if (result != null) {\n      if (options.indent) {\n        var lines = result.split('\\n');\n        for (var i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new _exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');\n    }\n  }\n\n  // Just add water\n  var container = {\n    strict: function strict(obj, name, loc) {\n      if (!obj || !(name in obj)) {\n        throw new _exception2['default']('\"' + name + '\" not defined in ' + obj, {\n          loc: loc\n        });\n      }\n      return container.lookupProperty(obj, name);\n    },\n    lookupProperty: function lookupProperty(parent, propertyName) {\n      var result = parent[propertyName];\n      if (result == null) {\n        return result;\n      }\n      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n        return result;\n      }\n\n      if (_internalProtoAccess.resultIsAllowed(result, container.protoAccessControl, propertyName)) {\n        return result;\n      }\n      return undefined;\n    },\n    lookup: function lookup(depths, name) {\n      var len = depths.length;\n      for (var i = 0; i < len; i++) {\n        var result = depths[i] && container.lookupProperty(depths[i], name);\n        if (result != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function lambda(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n\n    fn: function fn(i) {\n      var ret = templateSpec[i];\n      ret.decorator = templateSpec[i + '_d'];\n      return ret;\n    },\n\n    programs: [],\n    program: function program(i, data, declaredBlockParams, blockParams, depths) {\n      var programWrapper = this.programs[i],\n          fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n\n    data: function data(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    mergeIfNeeded: function mergeIfNeeded(param, common) {\n      var obj = param || common;\n\n      if (param && common && param !== common) {\n        obj = Utils.extend({}, common, param);\n      }\n\n      return obj;\n    },\n    // An empty object to use as replacement for null-contexts\n    nullContext: Object.seal({}),\n\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var data = options.data;\n\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    var depths = undefined,\n        blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      if (options.depths) {\n        depths = context != options.depths[0] ? [context].concat(options.depths) : options.depths;\n      } else {\n        depths = [context];\n      }\n    }\n\n    function main(context /*, options*/) {\n      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);\n    }\n\n    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);\n    return main(context, options);\n  }\n\n  ret.isTop = true;\n\n  ret._setup = function (options) {\n    if (!options.partial) {\n      var mergedHelpers = Utils.extend({}, env.helpers, options.helpers);\n      wrapHelpersToPassLookupProperty(mergedHelpers, container);\n      container.helpers = mergedHelpers;\n\n      if (templateSpec.usePartial) {\n        // Use mergeIfNeeded here to prevent compiling global partials multiple times\n        container.partials = container.mergeIfNeeded(options.partials, env.partials);\n      }\n      if (templateSpec.usePartial || templateSpec.useDecorators) {\n        container.decorators = Utils.extend({}, env.decorators, options.decorators);\n      }\n\n      container.hooks = {};\n      container.protoAccessControl = _internalProtoAccess.createProtoAccessControl(options);\n\n      var keepHelperInHelpers = options.allowCallsToHelperMissing || templateWasPrecompiledWithCompilerV7;\n      _helpers.moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);\n      _helpers.moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);\n    } else {\n      container.protoAccessControl = options.protoAccessControl; // internal option\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n      container.decorators = options.decorators;\n      container.hooks = options.hooks;\n    }\n  };\n\n  ret._child = function (i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new _exception2['default']('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new _exception2['default']('must pass parent depths');\n    }\n\n    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {\n  function prog(context) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var currentDepths = depths;\n    if (depths && context != depths[0] && !(context === container.nullContext && depths[0] === null)) {\n      currentDepths = [context].concat(depths);\n    }\n\n    return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);\n  }\n\n  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\n/**\n * This is currently part of the official API, therefore implementation details should not be changed.\n */\n\nfunction resolvePartial(partial, context, options) {\n  if (!partial) {\n    if (options.name === '@partial-block') {\n      partial = options.data['partial-block'];\n    } else {\n      partial = options.partials[options.name];\n    }\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\n\nfunction invokePartial(partial, context, options) {\n  // Use the current closure context to save the partial-block if this partial\n  var currentPartialBlock = options.data && options.data['partial-block'];\n  options.partial = true;\n  if (options.ids) {\n    options.data.contextPath = options.ids[0] || options.data.contextPath;\n  }\n\n  var partialBlock = undefined;\n  if (options.fn && options.fn !== noop) {\n    (function () {\n      options.data = _base.createFrame(options.data);\n      // Wrapper function to get access to currentPartialBlock from the closure\n      var fn = options.fn;\n      partialBlock = options.data['partial-block'] = function partialBlockWrapper(context) {\n        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n        // Restore the partial-block from the closure for the execution of the block\n        // i.e. the part inside the block of the partial call.\n        options.data = _base.createFrame(options.data);\n        options.data['partial-block'] = currentPartialBlock;\n        return fn(context, options);\n      };\n      if (fn.partials) {\n        options.partials = Utils.extend({}, options.partials, fn.partials);\n      }\n    })();\n  }\n\n  if (partial === undefined && partialBlock) {\n    partial = partialBlock;\n  }\n\n  if (partial === undefined) {\n    throw new _exception2['default']('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nfunction noop() {\n  return '';\n}\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? _base.createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}\n\nfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n  if (fn.decorator) {\n    var props = {};\n    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);\n    Utils.extend(prog, props);\n  }\n  return prog;\n}\n\nfunction wrapHelpersToPassLookupProperty(mergedHelpers, container) {\n  Object.keys(mergedHelpers).forEach(function (helperName) {\n    var helper = mergedHelpers[helperName];\n    mergedHelpers[helperName] = passLookupPropertyOption(helper, container);\n  });\n}\n\nfunction passLookupPropertyOption(helper, container) {\n  var lookupProperty = container.lookupProperty;\n  return _internalWrapHelper.wrapHelper(helper, function (options) {\n    return Utils.extend({ lookupProperty: lookupProperty }, options);\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","'use strict';\n\nexports.__esModule = true;\n\nexports['default'] = function (Handlebars) {\n  /* istanbul ignore next */\n  var root = typeof global !== 'undefined' ? global : window,\n      $Handlebars = root.Handlebars;\n  /* istanbul ignore next */\n  Handlebars.noConflict = function () {\n    if (root.Handlebars === Handlebars) {\n      root.Handlebars = $Handlebars;\n    }\n    return Handlebars;\n  };\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL25vLWNvbmZsaWN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQWUsVUFBUyxVQUFVLEVBQUU7O0FBRWxDLE1BQUksSUFBSSxHQUFHLE9BQU8sTUFBTSxLQUFLLFdBQVcsR0FBRyxNQUFNLEdBQUcsTUFBTTtNQUN4RCxXQUFXLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQzs7QUFFaEMsWUFBVSxDQUFDLFVBQVUsR0FBRyxZQUFXO0FBQ2pDLFFBQUksSUFBSSxDQUFDLFVBQVUsS0FBSyxVQUFVLEVBQUU7QUFDbEMsVUFBSSxDQUFDLFVBQVUsR0FBRyxXQUFXLENBQUM7S0FDL0I7QUFDRCxXQUFPLFVBQVUsQ0FBQztHQUNuQixDQUFDO0NBQ0giLCJmaWxlIjoibm8tY29uZmxpY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihIYW5kbGViYXJzKSB7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIGxldCByb290ID0gdHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWwgOiB3aW5kb3csXG4gICAgJEhhbmRsZWJhcnMgPSByb290LkhhbmRsZWJhcnM7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIEhhbmRsZWJhcnMubm9Db25mbGljdCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmIChyb290LkhhbmRsZWJhcnMgPT09IEhhbmRsZWJhcnMpIHtcbiAgICAgIHJvb3QuSGFuZGxlYmFycyA9ICRIYW5kbGViYXJzO1xuICAgIH1cbiAgICByZXR1cm4gSGFuZGxlYmFycztcbiAgfTtcbn1cbiJdfQ==\n","'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nvar _handlebarsBase = require('./handlebars/base');\n\nvar base = _interopRequireWildcard(_handlebarsBase);\n\n// Each of these augment the Handlebars object. No need to setup here.\n// (This is done to easily share code between commonjs and browse envs)\n\nvar _handlebarsSafeString = require('./handlebars/safe-string');\n\nvar _handlebarsSafeString2 = _interopRequireDefault(_handlebarsSafeString);\n\nvar _handlebarsException = require('./handlebars/exception');\n\nvar _handlebarsException2 = _interopRequireDefault(_handlebarsException);\n\nvar _handlebarsUtils = require('./handlebars/utils');\n\nvar Utils = _interopRequireWildcard(_handlebarsUtils);\n\nvar _handlebarsRuntime = require('./handlebars/runtime');\n\nvar runtime = _interopRequireWildcard(_handlebarsRuntime);\n\nvar _handlebarsNoConflict = require('./handlebars/no-conflict');\n\nvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\n\n// For compatibility and usage outside of module systems, make the Handlebars object a namespace\nfunction create() {\n  var hb = new base.HandlebarsEnvironment();\n\n  Utils.extend(hb, base);\n  hb.SafeString = _handlebarsSafeString2['default'];\n  hb.Exception = _handlebarsException2['default'];\n  hb.Utils = Utils;\n  hb.escapeExpression = Utils.escapeExpression;\n\n  hb.VM = runtime;\n  hb.template = function (spec) {\n    return runtime.template(spec, hb);\n  };\n\n  return hb;\n}\n\nvar inst = create();\ninst.create = create;\n\n_handlebarsNoConflict2['default'](inst);\n\ninst['default'] = inst;\n\nexports['default'] = inst;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9oYW5kbGViYXJzLnJ1bnRpbWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OEJBQXNCLG1CQUFtQjs7SUFBN0IsSUFBSTs7Ozs7b0NBSU8sMEJBQTBCOzs7O21DQUMzQix3QkFBd0I7Ozs7K0JBQ3ZCLG9CQUFvQjs7SUFBL0IsS0FBSzs7aUNBQ1Esc0JBQXNCOztJQUFuQyxPQUFPOztvQ0FFSSwwQkFBMEI7Ozs7O0FBR2pELFNBQVMsTUFBTSxHQUFHO0FBQ2hCLE1BQUksRUFBRSxHQUFHLElBQUksSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7O0FBRTFDLE9BQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3ZCLElBQUUsQ0FBQyxVQUFVLG9DQUFhLENBQUM7QUFDM0IsSUFBRSxDQUFDLFNBQVMsbUNBQVksQ0FBQztBQUN6QixJQUFFLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztBQUNqQixJQUFFLENBQUMsZ0JBQWdCLEdBQUcsS0FBSyxDQUFDLGdCQUFnQixDQUFDOztBQUU3QyxJQUFFLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQztBQUNoQixJQUFFLENBQUMsUUFBUSxHQUFHLFVBQVMsSUFBSSxFQUFFO0FBQzNCLFdBQU8sT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7R0FDbkMsQ0FBQzs7QUFFRixTQUFPLEVBQUUsQ0FBQztDQUNYOztBQUVELElBQUksSUFBSSxHQUFHLE1BQU0sRUFBRSxDQUFDO0FBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDOztBQUVyQixrQ0FBVyxJQUFJLENBQUMsQ0FBQzs7QUFFakIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLElBQUksQ0FBQzs7cUJBRVIsSUFBSSIsImZpbGUiOiJoYW5kbGViYXJzLnJ1bnRpbWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBiYXNlIGZyb20gJy4vaGFuZGxlYmFycy9iYXNlJztcblxuLy8gRWFjaCBvZiB0aGVzZSBhdWdtZW50IHRoZSBIYW5kbGViYXJzIG9iamVjdC4gTm8gbmVlZCB0byBzZXR1cCBoZXJlLlxuLy8gKFRoaXMgaXMgZG9uZSB0byBlYXNpbHkgc2hhcmUgY29kZSBiZXR3ZWVuIGNvbW1vbmpzIGFuZCBicm93c2UgZW52cylcbmltcG9ydCBTYWZlU3RyaW5nIGZyb20gJy4vaGFuZGxlYmFycy9zYWZlLXN0cmluZyc7XG5pbXBvcnQgRXhjZXB0aW9uIGZyb20gJy4vaGFuZGxlYmFycy9leGNlcHRpb24nO1xuaW1wb3J0ICogYXMgVXRpbHMgZnJvbSAnLi9oYW5kbGViYXJzL3V0aWxzJztcbmltcG9ydCAqIGFzIHJ1bnRpbWUgZnJvbSAnLi9oYW5kbGViYXJzL3J1bnRpbWUnO1xuXG5pbXBvcnQgbm9Db25mbGljdCBmcm9tICcuL2hhbmRsZWJhcnMvbm8tY29uZmxpY3QnO1xuXG4vLyBGb3IgY29tcGF0aWJpbGl0eSBhbmQgdXNhZ2Ugb3V0c2lkZSBvZiBtb2R1bGUgc3lzdGVtcywgbWFrZSB0aGUgSGFuZGxlYmFycyBvYmplY3QgYSBuYW1lc3BhY2VcbmZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgbGV0IGhiID0gbmV3IGJhc2UuSGFuZGxlYmFyc0Vudmlyb25tZW50KCk7XG5cbiAgVXRpbHMuZXh0ZW5kKGhiLCBiYXNlKTtcbiAgaGIuU2FmZVN0cmluZyA9IFNhZmVTdHJpbmc7XG4gIGhiLkV4Y2VwdGlvbiA9IEV4Y2VwdGlvbjtcbiAgaGIuVXRpbHMgPSBVdGlscztcbiAgaGIuZXNjYXBlRXhwcmVzc2lvbiA9IFV0aWxzLmVzY2FwZUV4cHJlc3Npb247XG5cbiAgaGIuVk0gPSBydW50aW1lO1xuICBoYi50ZW1wbGF0ZSA9IGZ1bmN0aW9uKHNwZWMpIHtcbiAgICByZXR1cm4gcnVudGltZS50ZW1wbGF0ZShzcGVjLCBoYik7XG4gIH07XG5cbiAgcmV0dXJuIGhiO1xufVxuXG5sZXQgaW5zdCA9IGNyZWF0ZSgpO1xuaW5zdC5jcmVhdGUgPSBjcmVhdGU7XG5cbm5vQ29uZmxpY3QoaW5zdCk7XG5cbmluc3RbJ2RlZmF1bHQnXSA9IGluc3Q7XG5cbmV4cG9ydCBkZWZhdWx0IGluc3Q7XG4iXX0=\n","'use strict';\n\nexports.__esModule = true;\nvar AST = {\n  // Public API used to evaluate derived attributes regarding AST nodes\n  helpers: {\n    // a mustache is definitely a helper if:\n    // * it is an eligible helper, and\n    // * it has at least one parameter or hash segment\n    helperExpression: function helperExpression(node) {\n      return node.type === 'SubExpression' || (node.type === 'MustacheStatement' || node.type === 'BlockStatement') && !!(node.params && node.params.length || node.hash);\n    },\n\n    scopedId: function scopedId(path) {\n      return (/^\\.|this\\b/.test(path.original)\n      );\n    },\n\n    // an ID is simple if it only has one part, and that part is not\n    // `..` or `this`.\n    simpleId: function simpleId(path) {\n      return path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth;\n    }\n  }\n};\n\n// Must be exported as an object rather than the root of the module as the jison lexer\n// must modify the object to operate properly.\nexports['default'] = AST;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2NvbXBpbGVyL2FzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFJLEdBQUcsR0FBRzs7QUFFUixTQUFPLEVBQUU7Ozs7QUFJUCxvQkFBZ0IsRUFBRSwwQkFBUyxJQUFJLEVBQUU7QUFDL0IsYUFDRSxJQUFJLENBQUMsSUFBSSxLQUFLLGVBQWUsSUFDNUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLG1CQUFtQixJQUNqQyxJQUFJLENBQUMsSUFBSSxLQUFLLGdCQUFnQixDQUFBLElBQzlCLENBQUMsRUFBRSxBQUFDLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUssSUFBSSxDQUFDLElBQUksQ0FBQSxBQUFDLEFBQUMsQ0FDdkQ7S0FDSDs7QUFFRCxZQUFRLEVBQUUsa0JBQVMsSUFBSSxFQUFFO0FBQ3ZCLGFBQU8sYUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQUM7S0FDekM7Ozs7QUFJRCxZQUFRLEVBQUUsa0JBQVMsSUFBSSxFQUFFO0FBQ3ZCLGFBQ0UsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUNyRTtLQUNIO0dBQ0Y7Q0FDRixDQUFDOzs7O3FCQUlhLEdBQUciLCJmaWxlIjoiYXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IEFTVCA9IHtcbiAgLy8gUHVibGljIEFQSSB1c2VkIHRvIGV2YWx1YXRlIGRlcml2ZWQgYXR0cmlidXRlcyByZWdhcmRpbmcgQVNUIG5vZGVzXG4gIGhlbHBlcnM6IHtcbiAgICAvLyBhIG11c3RhY2hlIGlzIGRlZmluaXRlbHkgYSBoZWxwZXIgaWY6XG4gICAgLy8gKiBpdCBpcyBhbiBlbGlnaWJsZSBoZWxwZXIsIGFuZFxuICAgIC8vICogaXQgaGFzIGF0IGxlYXN0IG9uZSBwYXJhbWV0ZXIgb3IgaGFzaCBzZWdtZW50XG4gICAgaGVscGVyRXhwcmVzc2lvbjogZnVuY3Rpb24obm9kZSkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgbm9kZS50eXBlID09PSAnU3ViRXhwcmVzc2lvbicgfHxcbiAgICAgICAgKChub2RlLnR5cGUgPT09ICdNdXN0YWNoZVN0YXRlbWVudCcgfHxcbiAgICAgICAgICBub2RlLnR5cGUgPT09ICdCbG9ja1N0YXRlbWVudCcpICYmXG4gICAgICAgICAgISEoKG5vZGUucGFyYW1zICYmIG5vZGUucGFyYW1zLmxlbmd0aCkgfHwgbm9kZS5oYXNoKSlcbiAgICAgICk7XG4gICAgfSxcblxuICAgIHNjb3BlZElkOiBmdW5jdGlvbihwYXRoKSB7XG4gICAgICByZXR1cm4gL15cXC58dGhpc1xcYi8udGVzdChwYXRoLm9yaWdpbmFsKTtcbiAgICB9LFxuXG4gICAgLy8gYW4gSUQgaXMgc2ltcGxlIGlmIGl0IG9ubHkgaGFzIG9uZSBwYXJ0LCBhbmQgdGhhdCBwYXJ0IGlzIG5vdFxuICAgIC8vIGAuLmAgb3IgYHRoaXNgLlxuICAgIHNpbXBsZUlkOiBmdW5jdGlvbihwYXRoKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICBwYXRoLnBhcnRzLmxlbmd0aCA9PT0gMSAmJiAhQVNULmhlbHBlcnMuc2NvcGVkSWQocGF0aCkgJiYgIXBhdGguZGVwdGhcbiAgICAgICk7XG4gICAgfVxuICB9XG59O1xuXG4vLyBNdXN0IGJlIGV4cG9ydGVkIGFzIGFuIG9iamVjdCByYXRoZXIgdGhhbiB0aGUgcm9vdCBvZiB0aGUgbW9kdWxlIGFzIHRoZSBqaXNvbiBsZXhlclxuLy8gbXVzdCBtb2RpZnkgdGhlIG9iamVjdCB0byBvcGVyYXRlIHByb3Blcmx5LlxuZXhwb3J0IGRlZmF1bHQgQVNUO1xuIl19\n","// File ignored in coverage tests via setting in .istanbul.yml\n/* Jison generated parser */\n\"use strict\";\n\nexports.__esModule = true;\nvar handlebars = (function () {\n    var parser = { trace: function trace() {},\n        yy: {},\n        symbols_: { \"error\": 2, \"root\": 3, \"program\": 4, \"EOF\": 5, \"program_repetition0\": 6, \"statement\": 7, \"mustache\": 8, \"block\": 9, \"rawBlock\": 10, \"partial\": 11, \"partialBlock\": 12, \"content\": 13, \"COMMENT\": 14, \"CONTENT\": 15, \"openRawBlock\": 16, \"rawBlock_repetition0\": 17, \"END_RAW_BLOCK\": 18, \"OPEN_RAW_BLOCK\": 19, \"helperName\": 20, \"openRawBlock_repetition0\": 21, \"openRawBlock_option0\": 22, \"CLOSE_RAW_BLOCK\": 23, \"openBlock\": 24, \"block_option0\": 25, \"closeBlock\": 26, \"openInverse\": 27, \"block_option1\": 28, \"OPEN_BLOCK\": 29, \"openBlock_repetition0\": 30, \"openBlock_option0\": 31, \"openBlock_option1\": 32, \"CLOSE\": 33, \"OPEN_INVERSE\": 34, \"openInverse_repetition0\": 35, \"openInverse_option0\": 36, \"openInverse_option1\": 37, \"openInverseChain\": 38, \"OPEN_INVERSE_CHAIN\": 39, \"openInverseChain_repetition0\": 40, \"openInverseChain_option0\": 41, \"openInverseChain_option1\": 42, \"inverseAndProgram\": 43, \"INVERSE\": 44, \"inverseChain\": 45, \"inverseChain_option0\": 46, \"OPEN_ENDBLOCK\": 47, \"OPEN\": 48, \"mustache_repetition0\": 49, \"mustache_option0\": 50, \"OPEN_UNESCAPED\": 51, \"mustache_repetition1\": 52, \"mustache_option1\": 53, \"CLOSE_UNESCAPED\": 54, \"OPEN_PARTIAL\": 55, \"partialName\": 56, \"partial_repetition0\": 57, \"partial_option0\": 58, \"openPartialBlock\": 59, \"OPEN_PARTIAL_BLOCK\": 60, \"openPartialBlock_repetition0\": 61, \"openPartialBlock_option0\": 62, \"param\": 63, \"sexpr\": 64, \"OPEN_SEXPR\": 65, \"sexpr_repetition0\": 66, \"sexpr_option0\": 67, \"CLOSE_SEXPR\": 68, \"hash\": 69, \"hash_repetition_plus0\": 70, \"hashSegment\": 71, \"ID\": 72, \"EQUALS\": 73, \"blockParams\": 74, \"OPEN_BLOCK_PARAMS\": 75, \"blockParams_repetition_plus0\": 76, \"CLOSE_BLOCK_PARAMS\": 77, \"path\": 78, \"dataName\": 79, \"STRING\": 80, \"NUMBER\": 81, \"BOOLEAN\": 82, \"UNDEFINED\": 83, \"NULL\": 84, \"DATA\": 85, \"pathSegments\": 86, \"SEP\": 87, \"$accept\": 0, \"$end\": 1 },\n        terminals_: { 2: \"error\", 5: \"EOF\", 14: \"COMMENT\", 15: \"CONTENT\", 18: \"END_RAW_BLOCK\", 19: \"OPEN_RAW_BLOCK\", 23: \"CLOSE_RAW_BLOCK\", 29: \"OPEN_BLOCK\", 33: \"CLOSE\", 34: \"OPEN_INVERSE\", 39: \"OPEN_INVERSE_CHAIN\", 44: \"INVERSE\", 47: \"OPEN_ENDBLOCK\", 48: \"OPEN\", 51: \"OPEN_UNESCAPED\", 54: \"CLOSE_UNESCAPED\", 55: \"OPEN_PARTIAL\", 60: \"OPEN_PARTIAL_BLOCK\", 65: \"OPEN_SEXPR\", 68: \"CLOSE_SEXPR\", 72: \"ID\", 73: \"EQUALS\", 75: \"OPEN_BLOCK_PARAMS\", 77: \"CLOSE_BLOCK_PARAMS\", 80: \"STRING\", 81: \"NUMBER\", 82: \"BOOLEAN\", 83: \"UNDEFINED\", 84: \"NULL\", 85: \"DATA\", 87: \"SEP\" },\n        productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [13, 1], [10, 3], [16, 5], [9, 4], [9, 4], [24, 6], [27, 6], [38, 6], [43, 2], [45, 3], [45, 1], [26, 3], [8, 5], [8, 5], [11, 5], [12, 3], [59, 5], [63, 1], [63, 1], [64, 5], [69, 1], [71, 3], [74, 3], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [56, 1], [56, 1], [79, 2], [78, 1], [86, 3], [86, 1], [6, 0], [6, 2], [17, 0], [17, 2], [21, 0], [21, 2], [22, 0], [22, 1], [25, 0], [25, 1], [28, 0], [28, 1], [30, 0], [30, 2], [31, 0], [31, 1], [32, 0], [32, 1], [35, 0], [35, 2], [36, 0], [36, 1], [37, 0], [37, 1], [40, 0], [40, 2], [41, 0], [41, 1], [42, 0], [42, 1], [46, 0], [46, 1], [49, 0], [49, 2], [50, 0], [50, 1], [52, 0], [52, 2], [53, 0], [53, 1], [57, 0], [57, 2], [58, 0], [58, 1], [61, 0], [61, 2], [62, 0], [62, 1], [66, 0], [66, 2], [67, 0], [67, 1], [70, 1], [70, 2], [76, 1], [76, 2]],\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n\n            var $0 = $$.length - 1;\n            switch (yystate) {\n                case 1:\n                    return $$[$0 - 1];\n                    break;\n                case 2:\n                    this.$ = yy.prepareProgram($$[$0]);\n                    break;\n                case 3:\n                    this.$ = $$[$0];\n                    break;\n                case 4:\n                    this.$ = $$[$0];\n                    break;\n                case 5:\n                    this.$ = $$[$0];\n                    break;\n                case 6:\n                    this.$ = $$[$0];\n                    break;\n                case 7:\n                    this.$ = $$[$0];\n                    break;\n                case 8:\n                    this.$ = $$[$0];\n                    break;\n                case 9:\n                    this.$ = {\n                        type: 'CommentStatement',\n                        value: yy.stripComment($$[$0]),\n                        strip: yy.stripFlags($$[$0], $$[$0]),\n                        loc: yy.locInfo(this._$)\n                    };\n\n                    break;\n                case 10:\n                    this.$ = {\n                        type: 'ContentStatement',\n                        original: $$[$0],\n                        value: $$[$0],\n                        loc: yy.locInfo(this._$)\n                    };\n\n                    break;\n                case 11:\n                    this.$ = yy.prepareRawBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);\n                    break;\n                case 12:\n                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1] };\n                    break;\n                case 13:\n                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], false, this._$);\n                    break;\n                case 14:\n                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], true, this._$);\n                    break;\n                case 15:\n                    this.$ = { open: $$[$0 - 5], path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n                    break;\n                case 16:\n                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n                    break;\n                case 17:\n                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n                    break;\n                case 18:\n                    this.$ = { strip: yy.stripFlags($$[$0 - 1], $$[$0 - 1]), program: $$[$0] };\n                    break;\n                case 19:\n                    var inverse = yy.prepareBlock($$[$0 - 2], $$[$0 - 1], $$[$0], $$[$0], false, this._$),\n                        program = yy.prepareProgram([inverse], $$[$0 - 1].loc);\n                    program.chained = true;\n\n                    this.$ = { strip: $$[$0 - 2].strip, program: program, chain: true };\n\n                    break;\n                case 20:\n                    this.$ = $$[$0];\n                    break;\n                case 21:\n                    this.$ = { path: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 2], $$[$0]) };\n                    break;\n                case 22:\n                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);\n                    break;\n                case 23:\n                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);\n                    break;\n                case 24:\n                    this.$ = {\n                        type: 'PartialStatement',\n                        name: $$[$0 - 3],\n                        params: $$[$0 - 2],\n                        hash: $$[$0 - 1],\n                        indent: '',\n                        strip: yy.stripFlags($$[$0 - 4], $$[$0]),\n                        loc: yy.locInfo(this._$)\n                    };\n\n                    break;\n                case 25:\n                    this.$ = yy.preparePartialBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);\n                    break;\n                case 26:\n                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 4], $$[$0]) };\n                    break;\n                case 27:\n                    this.$ = $$[$0];\n                    break;\n                case 28:\n                    this.$ = $$[$0];\n                    break;\n                case 29:\n                    this.$ = {\n                        type: 'SubExpression',\n                        path: $$[$0 - 3],\n                        params: $$[$0 - 2],\n                        hash: $$[$0 - 1],\n                        loc: yy.locInfo(this._$)\n                    };\n\n                    break;\n                case 30:\n                    this.$ = { type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$) };\n                    break;\n                case 31:\n                    this.$ = { type: 'HashPair', key: yy.id($$[$0 - 2]), value: $$[$0], loc: yy.locInfo(this._$) };\n                    break;\n                case 32:\n                    this.$ = yy.id($$[$0 - 1]);\n                    break;\n                case 33:\n                    this.$ = $$[$0];\n                    break;\n                case 34:\n                    this.$ = $$[$0];\n                    break;\n                case 35:\n                    this.$ = { type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$) };\n                    break;\n                case 36:\n                    this.$ = { type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$) };\n                    break;\n                case 37:\n                    this.$ = { type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$) };\n                    break;\n                case 38:\n                    this.$ = { type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$) };\n                    break;\n                case 39:\n                    this.$ = { type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$) };\n                    break;\n                case 40:\n                    this.$ = $$[$0];\n                    break;\n                case 41:\n                    this.$ = $$[$0];\n                    break;\n                case 42:\n                    this.$ = yy.preparePath(true, $$[$0], this._$);\n                    break;\n                case 43:\n                    this.$ = yy.preparePath(false, $$[$0], this._$);\n                    break;\n                case 44:\n                    $$[$0 - 2].push({ part: yy.id($$[$0]), original: $$[$0], separator: $$[$0 - 1] });this.$ = $$[$0 - 2];\n                    break;\n                case 45:\n                    this.$ = [{ part: yy.id($$[$0]), original: $$[$0] }];\n                    break;\n                case 46:\n                    this.$ = [];\n                    break;\n                case 47:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 48:\n                    this.$ = [];\n                    break;\n                case 49:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 50:\n                    this.$ = [];\n                    break;\n                case 51:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 58:\n                    this.$ = [];\n                    break;\n                case 59:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 64:\n                    this.$ = [];\n                    break;\n                case 65:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 70:\n                    this.$ = [];\n                    break;\n                case 71:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 78:\n                    this.$ = [];\n                    break;\n                case 79:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 82:\n                    this.$ = [];\n                    break;\n                case 83:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 86:\n                    this.$ = [];\n                    break;\n                case 87:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 90:\n                    this.$ = [];\n                    break;\n                case 91:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 94:\n                    this.$ = [];\n                    break;\n                case 95:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 98:\n                    this.$ = [$$[$0]];\n                    break;\n                case 99:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 100:\n                    this.$ = [$$[$0]];\n                    break;\n                case 101:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n            }\n        },\n        table: [{ 3: 1, 4: 2, 5: [2, 46], 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 1: [3] }, { 5: [1, 4] }, { 5: [2, 2], 7: 5, 8: 6, 9: 7, 10: 8, 11: 9, 12: 10, 13: 11, 14: [1, 12], 15: [1, 20], 16: 17, 19: [1, 23], 24: 15, 27: 16, 29: [1, 21], 34: [1, 22], 39: [2, 2], 44: [2, 2], 47: [2, 2], 48: [1, 13], 51: [1, 14], 55: [1, 18], 59: 19, 60: [1, 24] }, { 1: [2, 1] }, { 5: [2, 47], 14: [2, 47], 15: [2, 47], 19: [2, 47], 29: [2, 47], 34: [2, 47], 39: [2, 47], 44: [2, 47], 47: [2, 47], 48: [2, 47], 51: [2, 47], 55: [2, 47], 60: [2, 47] }, { 5: [2, 3], 14: [2, 3], 15: [2, 3], 19: [2, 3], 29: [2, 3], 34: [2, 3], 39: [2, 3], 44: [2, 3], 47: [2, 3], 48: [2, 3], 51: [2, 3], 55: [2, 3], 60: [2, 3] }, { 5: [2, 4], 14: [2, 4], 15: [2, 4], 19: [2, 4], 29: [2, 4], 34: [2, 4], 39: [2, 4], 44: [2, 4], 47: [2, 4], 48: [2, 4], 51: [2, 4], 55: [2, 4], 60: [2, 4] }, { 5: [2, 5], 14: [2, 5], 15: [2, 5], 19: [2, 5], 29: [2, 5], 34: [2, 5], 39: [2, 5], 44: [2, 5], 47: [2, 5], 48: [2, 5], 51: [2, 5], 55: [2, 5], 60: [2, 5] }, { 5: [2, 6], 14: [2, 6], 15: [2, 6], 19: [2, 6], 29: [2, 6], 34: [2, 6], 39: [2, 6], 44: [2, 6], 47: [2, 6], 48: [2, 6], 51: [2, 6], 55: [2, 6], 60: [2, 6] }, { 5: [2, 7], 14: [2, 7], 15: [2, 7], 19: [2, 7], 29: [2, 7], 34: [2, 7], 39: [2, 7], 44: [2, 7], 47: [2, 7], 48: [2, 7], 51: [2, 7], 55: [2, 7], 60: [2, 7] }, { 5: [2, 8], 14: [2, 8], 15: [2, 8], 19: [2, 8], 29: [2, 8], 34: [2, 8], 39: [2, 8], 44: [2, 8], 47: [2, 8], 48: [2, 8], 51: [2, 8], 55: [2, 8], 60: [2, 8] }, { 5: [2, 9], 14: [2, 9], 15: [2, 9], 19: [2, 9], 29: [2, 9], 34: [2, 9], 39: [2, 9], 44: [2, 9], 47: [2, 9], 48: [2, 9], 51: [2, 9], 55: [2, 9], 60: [2, 9] }, { 20: 25, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 36, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 37, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 4: 38, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 15: [2, 48], 17: 39, 18: [2, 48] }, { 20: 41, 56: 40, 64: 42, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 44, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 5: [2, 10], 14: [2, 10], 15: [2, 10], 18: [2, 10], 19: [2, 10], 29: [2, 10], 34: [2, 10], 39: [2, 10], 44: [2, 10], 47: [2, 10], 48: [2, 10], 51: [2, 10], 55: [2, 10], 60: [2, 10] }, { 20: 45, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 46, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 47, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 41, 56: 48, 64: 42, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [2, 78], 49: 49, 65: [2, 78], 72: [2, 78], 80: [2, 78], 81: [2, 78], 82: [2, 78], 83: [2, 78], 84: [2, 78], 85: [2, 78] }, { 23: [2, 33], 33: [2, 33], 54: [2, 33], 65: [2, 33], 68: [2, 33], 72: [2, 33], 75: [2, 33], 80: [2, 33], 81: [2, 33], 82: [2, 33], 83: [2, 33], 84: [2, 33], 85: [2, 33] }, { 23: [2, 34], 33: [2, 34], 54: [2, 34], 65: [2, 34], 68: [2, 34], 72: [2, 34], 75: [2, 34], 80: [2, 34], 81: [2, 34], 82: [2, 34], 83: [2, 34], 84: [2, 34], 85: [2, 34] }, { 23: [2, 35], 33: [2, 35], 54: [2, 35], 65: [2, 35], 68: [2, 35], 72: [2, 35], 75: [2, 35], 80: [2, 35], 81: [2, 35], 82: [2, 35], 83: [2, 35], 84: [2, 35], 85: [2, 35] }, { 23: [2, 36], 33: [2, 36], 54: [2, 36], 65: [2, 36], 68: [2, 36], 72: [2, 36], 75: [2, 36], 80: [2, 36], 81: [2, 36], 82: [2, 36], 83: [2, 36], 84: [2, 36], 85: [2, 36] }, { 23: [2, 37], 33: [2, 37], 54: [2, 37], 65: [2, 37], 68: [2, 37], 72: [2, 37], 75: [2, 37], 80: [2, 37], 81: [2, 37], 82: [2, 37], 83: [2, 37], 84: [2, 37], 85: [2, 37] }, { 23: [2, 38], 33: [2, 38], 54: [2, 38], 65: [2, 38], 68: [2, 38], 72: [2, 38], 75: [2, 38], 80: [2, 38], 81: [2, 38], 82: [2, 38], 83: [2, 38], 84: [2, 38], 85: [2, 38] }, { 23: [2, 39], 33: [2, 39], 54: [2, 39], 65: [2, 39], 68: [2, 39], 72: [2, 39], 75: [2, 39], 80: [2, 39], 81: [2, 39], 82: [2, 39], 83: [2, 39], 84: [2, 39], 85: [2, 39] }, { 23: [2, 43], 33: [2, 43], 54: [2, 43], 65: [2, 43], 68: [2, 43], 72: [2, 43], 75: [2, 43], 80: [2, 43], 81: [2, 43], 82: [2, 43], 83: [2, 43], 84: [2, 43], 85: [2, 43], 87: [1, 50] }, { 72: [1, 35], 86: 51 }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 52: 52, 54: [2, 82], 65: [2, 82], 72: [2, 82], 80: [2, 82], 81: [2, 82], 82: [2, 82], 83: [2, 82], 84: [2, 82], 85: [2, 82] }, { 25: 53, 38: 55, 39: [1, 57], 43: 56, 44: [1, 58], 45: 54, 47: [2, 54] }, { 28: 59, 43: 60, 44: [1, 58], 47: [2, 56] }, { 13: 62, 15: [1, 20], 18: [1, 61] }, { 33: [2, 86], 57: 63, 65: [2, 86], 72: [2, 86], 80: [2, 86], 81: [2, 86], 82: [2, 86], 83: [2, 86], 84: [2, 86], 85: [2, 86] }, { 33: [2, 40], 65: [2, 40], 72: [2, 40], 80: [2, 40], 81: [2, 40], 82: [2, 40], 83: [2, 40], 84: [2, 40], 85: [2, 40] }, { 33: [2, 41], 65: [2, 41], 72: [2, 41], 80: [2, 41], 81: [2, 41], 82: [2, 41], 83: [2, 41], 84: [2, 41], 85: [2, 41] }, { 20: 64, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 65, 47: [1, 66] }, { 30: 67, 33: [2, 58], 65: [2, 58], 72: [2, 58], 75: [2, 58], 80: [2, 58], 81: [2, 58], 82: [2, 58], 83: [2, 58], 84: [2, 58], 85: [2, 58] }, { 33: [2, 64], 35: 68, 65: [2, 64], 72: [2, 64], 75: [2, 64], 80: [2, 64], 81: [2, 64], 82: [2, 64], 83: [2, 64], 84: [2, 64], 85: [2, 64] }, { 21: 69, 23: [2, 50], 65: [2, 50], 72: [2, 50], 80: [2, 50], 81: [2, 50], 82: [2, 50], 83: [2, 50], 84: [2, 50], 85: [2, 50] }, { 33: [2, 90], 61: 70, 65: [2, 90], 72: [2, 90], 80: [2, 90], 81: [2, 90], 82: [2, 90], 83: [2, 90], 84: [2, 90], 85: [2, 90] }, { 20: 74, 33: [2, 80], 50: 71, 63: 72, 64: 75, 65: [1, 43], 69: 73, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 72: [1, 79] }, { 23: [2, 42], 33: [2, 42], 54: [2, 42], 65: [2, 42], 68: [2, 42], 72: [2, 42], 75: [2, 42], 80: [2, 42], 81: [2, 42], 82: [2, 42], 83: [2, 42], 84: [2, 42], 85: [2, 42], 87: [1, 50] }, { 20: 74, 53: 80, 54: [2, 84], 63: 81, 64: 75, 65: [1, 43], 69: 82, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 83, 47: [1, 66] }, { 47: [2, 55] }, { 4: 84, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 47: [2, 20] }, { 20: 85, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 86, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 26: 87, 47: [1, 66] }, { 47: [2, 57] }, { 5: [2, 11], 14: [2, 11], 15: [2, 11], 19: [2, 11], 29: [2, 11], 34: [2, 11], 39: [2, 11], 44: [2, 11], 47: [2, 11], 48: [2, 11], 51: [2, 11], 55: [2, 11], 60: [2, 11] }, { 15: [2, 49], 18: [2, 49] }, { 20: 74, 33: [2, 88], 58: 88, 63: 89, 64: 75, 65: [1, 43], 69: 90, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 65: [2, 94], 66: 91, 68: [2, 94], 72: [2, 94], 80: [2, 94], 81: [2, 94], 82: [2, 94], 83: [2, 94], 84: [2, 94], 85: [2, 94] }, { 5: [2, 25], 14: [2, 25], 15: [2, 25], 19: [2, 25], 29: [2, 25], 34: [2, 25], 39: [2, 25], 44: [2, 25], 47: [2, 25], 48: [2, 25], 51: [2, 25], 55: [2, 25], 60: [2, 25] }, { 20: 92, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 31: 93, 33: [2, 60], 63: 94, 64: 75, 65: [1, 43], 69: 95, 70: 76, 71: 77, 72: [1, 78], 75: [2, 60], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 33: [2, 66], 36: 96, 63: 97, 64: 75, 65: [1, 43], 69: 98, 70: 76, 71: 77, 72: [1, 78], 75: [2, 66], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 22: 99, 23: [2, 52], 63: 100, 64: 75, 65: [1, 43], 69: 101, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 33: [2, 92], 62: 102, 63: 103, 64: 75, 65: [1, 43], 69: 104, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 105] }, { 33: [2, 79], 65: [2, 79], 72: [2, 79], 80: [2, 79], 81: [2, 79], 82: [2, 79], 83: [2, 79], 84: [2, 79], 85: [2, 79] }, { 33: [2, 81] }, { 23: [2, 27], 33: [2, 27], 54: [2, 27], 65: [2, 27], 68: [2, 27], 72: [2, 27], 75: [2, 27], 80: [2, 27], 81: [2, 27], 82: [2, 27], 83: [2, 27], 84: [2, 27], 85: [2, 27] }, { 23: [2, 28], 33: [2, 28], 54: [2, 28], 65: [2, 28], 68: [2, 28], 72: [2, 28], 75: [2, 28], 80: [2, 28], 81: [2, 28], 82: [2, 28], 83: [2, 28], 84: [2, 28], 85: [2, 28] }, { 23: [2, 30], 33: [2, 30], 54: [2, 30], 68: [2, 30], 71: 106, 72: [1, 107], 75: [2, 30] }, { 23: [2, 98], 33: [2, 98], 54: [2, 98], 68: [2, 98], 72: [2, 98], 75: [2, 98] }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 73: [1, 108], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 23: [2, 44], 33: [2, 44], 54: [2, 44], 65: [2, 44], 68: [2, 44], 72: [2, 44], 75: [2, 44], 80: [2, 44], 81: [2, 44], 82: [2, 44], 83: [2, 44], 84: [2, 44], 85: [2, 44], 87: [2, 44] }, { 54: [1, 109] }, { 54: [2, 83], 65: [2, 83], 72: [2, 83], 80: [2, 83], 81: [2, 83], 82: [2, 83], 83: [2, 83], 84: [2, 83], 85: [2, 83] }, { 54: [2, 85] }, { 5: [2, 13], 14: [2, 13], 15: [2, 13], 19: [2, 13], 29: [2, 13], 34: [2, 13], 39: [2, 13], 44: [2, 13], 47: [2, 13], 48: [2, 13], 51: [2, 13], 55: [2, 13], 60: [2, 13] }, { 38: 55, 39: [1, 57], 43: 56, 44: [1, 58], 45: 111, 46: 110, 47: [2, 76] }, { 33: [2, 70], 40: 112, 65: [2, 70], 72: [2, 70], 75: [2, 70], 80: [2, 70], 81: [2, 70], 82: [2, 70], 83: [2, 70], 84: [2, 70], 85: [2, 70] }, { 47: [2, 18] }, { 5: [2, 14], 14: [2, 14], 15: [2, 14], 19: [2, 14], 29: [2, 14], 34: [2, 14], 39: [2, 14], 44: [2, 14], 47: [2, 14], 48: [2, 14], 51: [2, 14], 55: [2, 14], 60: [2, 14] }, { 33: [1, 113] }, { 33: [2, 87], 65: [2, 87], 72: [2, 87], 80: [2, 87], 81: [2, 87], 82: [2, 87], 83: [2, 87], 84: [2, 87], 85: [2, 87] }, { 33: [2, 89] }, { 20: 74, 63: 115, 64: 75, 65: [1, 43], 67: 114, 68: [2, 96], 69: 116, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 117] }, { 32: 118, 33: [2, 62], 74: 119, 75: [1, 120] }, { 33: [2, 59], 65: [2, 59], 72: [2, 59], 75: [2, 59], 80: [2, 59], 81: [2, 59], 82: [2, 59], 83: [2, 59], 84: [2, 59], 85: [2, 59] }, { 33: [2, 61], 75: [2, 61] }, { 33: [2, 68], 37: 121, 74: 122, 75: [1, 120] }, { 33: [2, 65], 65: [2, 65], 72: [2, 65], 75: [2, 65], 80: [2, 65], 81: [2, 65], 82: [2, 65], 83: [2, 65], 84: [2, 65], 85: [2, 65] }, { 33: [2, 67], 75: [2, 67] }, { 23: [1, 123] }, { 23: [2, 51], 65: [2, 51], 72: [2, 51], 80: [2, 51], 81: [2, 51], 82: [2, 51], 83: [2, 51], 84: [2, 51], 85: [2, 51] }, { 23: [2, 53] }, { 33: [1, 124] }, { 33: [2, 91], 65: [2, 91], 72: [2, 91], 80: [2, 91], 81: [2, 91], 82: [2, 91], 83: [2, 91], 84: [2, 91], 85: [2, 91] }, { 33: [2, 93] }, { 5: [2, 22], 14: [2, 22], 15: [2, 22], 19: [2, 22], 29: [2, 22], 34: [2, 22], 39: [2, 22], 44: [2, 22], 47: [2, 22], 48: [2, 22], 51: [2, 22], 55: [2, 22], 60: [2, 22] }, { 23: [2, 99], 33: [2, 99], 54: [2, 99], 68: [2, 99], 72: [2, 99], 75: [2, 99] }, { 73: [1, 108] }, { 20: 74, 63: 125, 64: 75, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 23], 14: [2, 23], 15: [2, 23], 19: [2, 23], 29: [2, 23], 34: [2, 23], 39: [2, 23], 44: [2, 23], 47: [2, 23], 48: [2, 23], 51: [2, 23], 55: [2, 23], 60: [2, 23] }, { 47: [2, 19] }, { 47: [2, 77] }, { 20: 74, 33: [2, 72], 41: 126, 63: 127, 64: 75, 65: [1, 43], 69: 128, 70: 76, 71: 77, 72: [1, 78], 75: [2, 72], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 24], 14: [2, 24], 15: [2, 24], 19: [2, 24], 29: [2, 24], 34: [2, 24], 39: [2, 24], 44: [2, 24], 47: [2, 24], 48: [2, 24], 51: [2, 24], 55: [2, 24], 60: [2, 24] }, { 68: [1, 129] }, { 65: [2, 95], 68: [2, 95], 72: [2, 95], 80: [2, 95], 81: [2, 95], 82: [2, 95], 83: [2, 95], 84: [2, 95], 85: [2, 95] }, { 68: [2, 97] }, { 5: [2, 21], 14: [2, 21], 15: [2, 21], 19: [2, 21], 29: [2, 21], 34: [2, 21], 39: [2, 21], 44: [2, 21], 47: [2, 21], 48: [2, 21], 51: [2, 21], 55: [2, 21], 60: [2, 21] }, { 33: [1, 130] }, { 33: [2, 63] }, { 72: [1, 132], 76: 131 }, { 33: [1, 133] }, { 33: [2, 69] }, { 15: [2, 12], 18: [2, 12] }, { 14: [2, 26], 15: [2, 26], 19: [2, 26], 29: [2, 26], 34: [2, 26], 47: [2, 26], 48: [2, 26], 51: [2, 26], 55: [2, 26], 60: [2, 26] }, { 23: [2, 31], 33: [2, 31], 54: [2, 31], 68: [2, 31], 72: [2, 31], 75: [2, 31] }, { 33: [2, 74], 42: 134, 74: 135, 75: [1, 120] }, { 33: [2, 71], 65: [2, 71], 72: [2, 71], 75: [2, 71], 80: [2, 71], 81: [2, 71], 82: [2, 71], 83: [2, 71], 84: [2, 71], 85: [2, 71] }, { 33: [2, 73], 75: [2, 73] }, { 23: [2, 29], 33: [2, 29], 54: [2, 29], 65: [2, 29], 68: [2, 29], 72: [2, 29], 75: [2, 29], 80: [2, 29], 81: [2, 29], 82: [2, 29], 83: [2, 29], 84: [2, 29], 85: [2, 29] }, { 14: [2, 15], 15: [2, 15], 19: [2, 15], 29: [2, 15], 34: [2, 15], 39: [2, 15], 44: [2, 15], 47: [2, 15], 48: [2, 15], 51: [2, 15], 55: [2, 15], 60: [2, 15] }, { 72: [1, 137], 77: [1, 136] }, { 72: [2, 100], 77: [2, 100] }, { 14: [2, 16], 15: [2, 16], 19: [2, 16], 29: [2, 16], 34: [2, 16], 44: [2, 16], 47: [2, 16], 48: [2, 16], 51: [2, 16], 55: [2, 16], 60: [2, 16] }, { 33: [1, 138] }, { 33: [2, 75] }, { 33: [2, 32] }, { 72: [2, 101], 77: [2, 101] }, { 14: [2, 17], 15: [2, 17], 19: [2, 17], 29: [2, 17], 34: [2, 17], 39: [2, 17], 44: [2, 17], 47: [2, 17], 48: [2, 17], 51: [2, 17], 55: [2, 17], 60: [2, 17] }],\n        defaultActions: { 4: [2, 1], 54: [2, 55], 56: [2, 20], 60: [2, 57], 73: [2, 81], 82: [2, 85], 86: [2, 18], 90: [2, 89], 101: [2, 53], 104: [2, 93], 110: [2, 19], 111: [2, 77], 116: [2, 97], 119: [2, 63], 122: [2, 69], 135: [2, 75], 136: [2, 32] },\n        parseError: function parseError(str, hash) {\n            throw new Error(str);\n        },\n        parse: function parse(input) {\n            var self = this,\n                stack = [0],\n                vstack = [null],\n                lstack = [],\n                table = this.table,\n                yytext = \"\",\n                yylineno = 0,\n                yyleng = 0,\n                recovering = 0,\n                TERROR = 2,\n                EOF = 1;\n            this.lexer.setInput(input);\n            this.lexer.yy = this.yy;\n            this.yy.lexer = this.lexer;\n            this.yy.parser = this;\n            if (typeof this.lexer.yylloc == \"undefined\") this.lexer.yylloc = {};\n            var yyloc = this.lexer.yylloc;\n            lstack.push(yyloc);\n            var ranges = this.lexer.options && this.lexer.options.ranges;\n            if (typeof this.yy.parseError === \"function\") this.parseError = this.yy.parseError;\n            function popStack(n) {\n                stack.length = stack.length - 2 * n;\n                vstack.length = vstack.length - n;\n                lstack.length = lstack.length - n;\n            }\n            function lex() {\n                var token;\n                token = self.lexer.lex() || 1;\n                if (typeof token !== \"number\") {\n                    token = self.symbols_[token] || token;\n                }\n                return token;\n            }\n            var symbol,\n                preErrorSymbol,\n                state,\n                action,\n                a,\n                r,\n                yyval = {},\n                p,\n                len,\n                newState,\n                expected;\n            while (true) {\n                state = stack[stack.length - 1];\n                if (this.defaultActions[state]) {\n                    action = this.defaultActions[state];\n                } else {\n                    if (symbol === null || typeof symbol == \"undefined\") {\n                        symbol = lex();\n                    }\n                    action = table[state] && table[state][symbol];\n                }\n                if (typeof action === \"undefined\" || !action.length || !action[0]) {\n                    var errStr = \"\";\n                    if (!recovering) {\n                        expected = [];\n                        for (p in table[state]) if (this.terminals_[p] && p > 2) {\n                            expected.push(\"'\" + this.terminals_[p] + \"'\");\n                        }\n                        if (this.lexer.showPosition) {\n                            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                        } else {\n                            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1 ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                        }\n                        this.parseError(errStr, { text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected });\n                    }\n                }\n                if (action[0] instanceof Array && action.length > 1) {\n                    throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n                }\n                switch (action[0]) {\n                    case 1:\n                        stack.push(symbol);\n                        vstack.push(this.lexer.yytext);\n                        lstack.push(this.lexer.yylloc);\n                        stack.push(action[1]);\n                        symbol = null;\n                        if (!preErrorSymbol) {\n                            yyleng = this.lexer.yyleng;\n                            yytext = this.lexer.yytext;\n                            yylineno = this.lexer.yylineno;\n                            yyloc = this.lexer.yylloc;\n                            if (recovering > 0) recovering--;\n                        } else {\n                            symbol = preErrorSymbol;\n                            preErrorSymbol = null;\n                        }\n                        break;\n                    case 2:\n                        len = this.productions_[action[1]][1];\n                        yyval.$ = vstack[vstack.length - len];\n                        yyval._$ = { first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column };\n                        if (ranges) {\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n                        }\n                        r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n                        if (typeof r !== \"undefined\") {\n                            return r;\n                        }\n                        if (len) {\n                            stack = stack.slice(0, -1 * len * 2);\n                            vstack = vstack.slice(0, -1 * len);\n                            lstack = lstack.slice(0, -1 * len);\n                        }\n                        stack.push(this.productions_[action[1]][0]);\n                        vstack.push(yyval.$);\n                        lstack.push(yyval._$);\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n                        stack.push(newState);\n                        break;\n                    case 3:\n                        return true;\n                }\n            }\n            return true;\n        }\n    };\n    /* Jison generated lexer */\n    var lexer = (function () {\n        var lexer = { EOF: 1,\n            parseError: function parseError(str, hash) {\n                if (this.yy.parser) {\n                    this.yy.parser.parseError(str, hash);\n                } else {\n                    throw new Error(str);\n                }\n            },\n            setInput: function setInput(input) {\n                this._input = input;\n                this._more = this._less = this.done = false;\n                this.yylineno = this.yyleng = 0;\n                this.yytext = this.matched = this.match = '';\n                this.conditionStack = ['INITIAL'];\n                this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0 };\n                if (this.options.ranges) this.yylloc.range = [0, 0];\n                this.offset = 0;\n                return this;\n            },\n            input: function input() {\n                var ch = this._input[0];\n                this.yytext += ch;\n                this.yyleng++;\n                this.offset++;\n                this.match += ch;\n                this.matched += ch;\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno++;\n                    this.yylloc.last_line++;\n                } else {\n                    this.yylloc.last_column++;\n                }\n                if (this.options.ranges) this.yylloc.range[1]++;\n\n                this._input = this._input.slice(1);\n                return ch;\n            },\n            unput: function unput(ch) {\n                var len = ch.length;\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n                this._input = ch + this._input;\n                this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);\n                //this.yyleng -= len;\n                this.offset -= len;\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n                this.match = this.match.substr(0, this.match.length - 1);\n                this.matched = this.matched.substr(0, this.matched.length - 1);\n\n                if (lines.length - 1) this.yylineno -= lines.length - 1;\n                var r = this.yylloc.range;\n\n                this.yylloc = { first_line: this.yylloc.first_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.first_column,\n                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n                };\n\n                if (this.options.ranges) {\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n                }\n                return this;\n            },\n            more: function more() {\n                this._more = true;\n                return this;\n            },\n            less: function less(n) {\n                this.unput(this.match.slice(n));\n            },\n            pastInput: function pastInput() {\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n            },\n            upcomingInput: function upcomingInput() {\n                var next = this.match;\n                if (next.length < 20) {\n                    next += this._input.substr(0, 20 - next.length);\n                }\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n            },\n            showPosition: function showPosition() {\n                var pre = this.pastInput();\n                var c = new Array(pre.length + 1).join(\"-\");\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n            },\n            next: function next() {\n                if (this.done) {\n                    return this.EOF;\n                }\n                if (!this._input) this.done = true;\n\n                var token, match, tempMatch, index, col, lines;\n                if (!this._more) {\n                    this.yytext = '';\n                    this.match = '';\n                }\n                var rules = this._currentRules();\n                for (var i = 0; i < rules.length; i++) {\n                    tempMatch = this._input.match(this.rules[rules[i]]);\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                        match = tempMatch;\n                        index = i;\n                        if (!this.options.flex) break;\n                    }\n                }\n                if (match) {\n                    lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n                    if (lines) this.yylineno += lines.length;\n                    this.yylloc = { first_line: this.yylloc.last_line,\n                        last_line: this.yylineno + 1,\n                        first_column: this.yylloc.last_column,\n                        last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length };\n                    this.yytext += match[0];\n                    this.match += match[0];\n                    this.matches = match;\n                    this.yyleng = this.yytext.length;\n                    if (this.options.ranges) {\n                        this.yylloc.range = [this.offset, this.offset += this.yyleng];\n                    }\n                    this._more = false;\n                    this._input = this._input.slice(match[0].length);\n                    this.matched += match[0];\n                    token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]);\n                    if (this.done && this._input) this.done = false;\n                    if (token) return token;else return;\n                }\n                if (this._input === \"\") {\n                    return this.EOF;\n                } else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), { text: \"\", token: null, line: this.yylineno });\n                }\n            },\n            lex: function lex() {\n                var r = this.next();\n                if (typeof r !== 'undefined') {\n                    return r;\n                } else {\n                    return this.lex();\n                }\n            },\n            begin: function begin(condition) {\n                this.conditionStack.push(condition);\n            },\n            popState: function popState() {\n                return this.conditionStack.pop();\n            },\n            _currentRules: function _currentRules() {\n                return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n            },\n            topState: function topState() {\n                return this.conditionStack[this.conditionStack.length - 2];\n            },\n            pushState: function begin(condition) {\n                this.begin(condition);\n            } };\n        lexer.options = {};\n        lexer.performAction = function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n\n            function strip(start, end) {\n                return yy_.yytext = yy_.yytext.substring(start, yy_.yyleng - end + start);\n            }\n\n            var YYSTATE = YY_START;\n            switch ($avoiding_name_collisions) {\n                case 0:\n                    if (yy_.yytext.slice(-2) === \"\\\\\\\\\") {\n                        strip(0, 1);\n                        this.begin(\"mu\");\n                    } else if (yy_.yytext.slice(-1) === \"\\\\\") {\n                        strip(0, 1);\n                        this.begin(\"emu\");\n                    } else {\n                        this.begin(\"mu\");\n                    }\n                    if (yy_.yytext) return 15;\n\n                    break;\n                case 1:\n                    return 15;\n                    break;\n                case 2:\n                    this.popState();\n                    return 15;\n\n                    break;\n                case 3:\n                    this.begin('raw');return 15;\n                    break;\n                case 4:\n                    this.popState();\n                    // Should be using `this.topState()` below, but it currently\n                    // returns the second top instead of the first top. Opened an\n                    // issue about it at https://github.com/zaach/jison/issues/291\n                    if (this.conditionStack[this.conditionStack.length - 1] === 'raw') {\n                        return 15;\n                    } else {\n                        strip(5, 9);\n                        return 'END_RAW_BLOCK';\n                    }\n\n                    break;\n                case 5:\n                    return 15;\n                    break;\n                case 6:\n                    this.popState();\n                    return 14;\n\n                    break;\n                case 7:\n                    return 65;\n                    break;\n                case 8:\n                    return 68;\n                    break;\n                case 9:\n                    return 19;\n                    break;\n                case 10:\n                    this.popState();\n                    this.begin('raw');\n                    return 23;\n\n                    break;\n                case 11:\n                    return 55;\n                    break;\n                case 12:\n                    return 60;\n                    break;\n                case 13:\n                    return 29;\n                    break;\n                case 14:\n                    return 47;\n                    break;\n                case 15:\n                    this.popState();return 44;\n                    break;\n                case 16:\n                    this.popState();return 44;\n                    break;\n                case 17:\n                    return 34;\n                    break;\n                case 18:\n                    return 39;\n                    break;\n                case 19:\n                    return 51;\n                    break;\n                case 20:\n                    return 48;\n                    break;\n                case 21:\n                    this.unput(yy_.yytext);\n                    this.popState();\n                    this.begin('com');\n\n                    break;\n                case 22:\n                    this.popState();\n                    return 14;\n\n                    break;\n                case 23:\n                    return 48;\n                    break;\n                case 24:\n                    return 73;\n                    break;\n                case 25:\n                    return 72;\n                    break;\n                case 26:\n                    return 72;\n                    break;\n                case 27:\n                    return 87;\n                    break;\n                case 28:\n                    // ignore whitespace\n                    break;\n                case 29:\n                    this.popState();return 54;\n                    break;\n                case 30:\n                    this.popState();return 33;\n                    break;\n                case 31:\n                    yy_.yytext = strip(1, 2).replace(/\\\\\"/g, '\"');return 80;\n                    break;\n                case 32:\n                    yy_.yytext = strip(1, 2).replace(/\\\\'/g, \"'\");return 80;\n                    break;\n                case 33:\n                    return 85;\n                    break;\n                case 34:\n                    return 82;\n                    break;\n                case 35:\n                    return 82;\n                    break;\n                case 36:\n                    return 83;\n                    break;\n                case 37:\n                    return 84;\n                    break;\n                case 38:\n                    return 81;\n                    break;\n                case 39:\n                    return 75;\n                    break;\n                case 40:\n                    return 77;\n                    break;\n                case 41:\n                    return 72;\n                    break;\n                case 42:\n                    yy_.yytext = yy_.yytext.replace(/\\\\([\\\\\\]])/g, '$1');return 72;\n                    break;\n                case 43:\n                    return 'INVALID';\n                    break;\n                case 44:\n                    return 5;\n                    break;\n            }\n        };\n        lexer.rules = [/^(?:[^\\x00]*?(?=(\\{\\{)))/, /^(?:[^\\x00]+)/, /^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/, /^(?:\\{\\{\\{\\{(?=[^\\/]))/, /^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/, /^(?:[^\\x00]+?(?=(\\{\\{\\{\\{)))/, /^(?:[\\s\\S]*?--(~)?\\}\\})/, /^(?:\\()/, /^(?:\\))/, /^(?:\\{\\{\\{\\{)/, /^(?:\\}\\}\\}\\})/, /^(?:\\{\\{(~)?>)/, /^(?:\\{\\{(~)?#>)/, /^(?:\\{\\{(~)?#\\*?)/, /^(?:\\{\\{(~)?\\/)/, /^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/, /^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/, /^(?:\\{\\{(~)?\\^)/, /^(?:\\{\\{(~)?\\s*else\\b)/, /^(?:\\{\\{(~)?\\{)/, /^(?:\\{\\{(~)?&)/, /^(?:\\{\\{(~)?!--)/, /^(?:\\{\\{(~)?![\\s\\S]*?\\}\\})/, /^(?:\\{\\{(~)?\\*?)/, /^(?:=)/, /^(?:\\.\\.)/, /^(?:\\.(?=([=~}\\s\\/.)|])))/, /^(?:[\\/.])/, /^(?:\\s+)/, /^(?:\\}(~)?\\}\\})/, /^(?:(~)?\\}\\})/, /^(?:\"(\\\\[\"]|[^\"])*\")/, /^(?:'(\\\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\\s)])))/, /^(?:false(?=([~}\\s)])))/, /^(?:undefined(?=([~}\\s)])))/, /^(?:null(?=([~}\\s)])))/, /^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/, /^(?:as\\s+\\|)/, /^(?:\\|)/, /^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)|]))))/, /^(?:\\[(\\\\\\]|[^\\]])*\\])/, /^(?:.)/, /^(?:$)/];\n        lexer.conditions = { \"mu\": { \"rules\": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], \"inclusive\": false }, \"emu\": { \"rules\": [2], \"inclusive\": false }, \"com\": { \"rules\": [6], \"inclusive\": false }, \"raw\": { \"rules\": [3, 4, 5], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 44], \"inclusive\": true } };\n        return lexer;\n    })();\n    parser.lexer = lexer;\n    function Parser() {\n        this.yy = {};\n    }Parser.prototype = parser;parser.Parser = Parser;\n    return new Parser();\n})();exports[\"default\"] = handlebars;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nfunction Visitor() {\n  this.parents = [];\n}\n\nVisitor.prototype = {\n  constructor: Visitor,\n  mutating: false,\n\n  // Visits a given value. If mutating, will replace the value if necessary.\n  acceptKey: function acceptKey(node, name) {\n    var value = this.accept(node[name]);\n    if (this.mutating) {\n      // Hacky sanity check: This may have a few false positives for type for the helper\n      // methods but will generally do the right thing without a lot of overhead.\n      if (value && !Visitor.prototype[value.type]) {\n        throw new _exception2['default']('Unexpected node type \"' + value.type + '\" found when accepting ' + name + ' on ' + node.type);\n      }\n      node[name] = value;\n    }\n  },\n\n  // Performs an accept operation with added sanity check to ensure\n  // required keys are not removed.\n  acceptRequired: function acceptRequired(node, name) {\n    this.acceptKey(node, name);\n\n    if (!node[name]) {\n      throw new _exception2['default'](node.type + ' requires ' + name);\n    }\n  },\n\n  // Traverses a given array. If mutating, empty respnses will be removed\n  // for child elements.\n  acceptArray: function acceptArray(array) {\n    for (var i = 0, l = array.length; i < l; i++) {\n      this.acceptKey(array, i);\n\n      if (!array[i]) {\n        array.splice(i, 1);\n        i--;\n        l--;\n      }\n    }\n  },\n\n  accept: function accept(object) {\n    if (!object) {\n      return;\n    }\n\n    /* istanbul ignore next: Sanity code */\n    if (!this[object.type]) {\n      throw new _exception2['default']('Unknown type: ' + object.type, object);\n    }\n\n    if (this.current) {\n      this.parents.unshift(this.current);\n    }\n    this.current = object;\n\n    var ret = this[object.type](object);\n\n    this.current = this.parents.shift();\n\n    if (!this.mutating || ret) {\n      return ret;\n    } else if (ret !== false) {\n      return object;\n    }\n  },\n\n  Program: function Program(program) {\n    this.acceptArray(program.body);\n  },\n\n  MustacheStatement: visitSubExpression,\n  Decorator: visitSubExpression,\n\n  BlockStatement: visitBlock,\n  DecoratorBlock: visitBlock,\n\n  PartialStatement: visitPartial,\n  PartialBlockStatement: function PartialBlockStatement(partial) {\n    visitPartial.call(this, partial);\n\n    this.acceptKey(partial, 'program');\n  },\n\n  ContentStatement: function ContentStatement() /* content */{},\n  CommentStatement: function CommentStatement() /* comment */{},\n\n  SubExpression: visitSubExpression,\n\n  PathExpression: function PathExpression() /* path */{},\n\n  StringLiteral: function StringLiteral() /* string */{},\n  NumberLiteral: function NumberLiteral() /* number */{},\n  BooleanLiteral: function BooleanLiteral() /* bool */{},\n  UndefinedLiteral: function UndefinedLiteral() /* literal */{},\n  NullLiteral: function NullLiteral() /* literal */{},\n\n  Hash: function Hash(hash) {\n    this.acceptArray(hash.pairs);\n  },\n  HashPair: function HashPair(pair) {\n    this.acceptRequired(pair, 'value');\n  }\n};\n\nfunction visitSubExpression(mustache) {\n  this.acceptRequired(mustache, 'path');\n  this.acceptArray(mustache.params);\n  this.acceptKey(mustache, 'hash');\n}\nfunction visitBlock(block) {\n  visitSubExpression.call(this, block);\n\n  this.acceptKey(block, 'program');\n  this.acceptKey(block, 'inverse');\n}\nfunction visitPartial(partial) {\n  this.acceptRequired(partial, 'name');\n  this.acceptArray(partial.params);\n  this.acceptKey(partial, 'hash');\n}\n\nexports['default'] = Visitor;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _visitor = require('./visitor');\n\nvar _visitor2 = _interopRequireDefault(_visitor);\n\nfunction WhitespaceControl() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  this.options = options;\n}\nWhitespaceControl.prototype = new _visitor2['default']();\n\nWhitespaceControl.prototype.Program = function (program) {\n  var doStandalone = !this.options.ignoreStandalone;\n\n  var isRoot = !this.isRootSeen;\n  this.isRootSeen = true;\n\n  var body = program.body;\n  for (var i = 0, l = body.length; i < l; i++) {\n    var current = body[i],\n        strip = this.accept(current);\n\n    if (!strip) {\n      continue;\n    }\n\n    var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),\n        _isNextWhitespace = isNextWhitespace(body, i, isRoot),\n        openStandalone = strip.openStandalone && _isPrevWhitespace,\n        closeStandalone = strip.closeStandalone && _isNextWhitespace,\n        inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;\n\n    if (strip.close) {\n      omitRight(body, i, true);\n    }\n    if (strip.open) {\n      omitLeft(body, i, true);\n    }\n\n    if (doStandalone && inlineStandalone) {\n      omitRight(body, i);\n\n      if (omitLeft(body, i)) {\n        // If we are on a standalone node, save the indent info for partials\n        if (current.type === 'PartialStatement') {\n          // Pull out the whitespace from the final line\n          current.indent = /([ \\t]+$)/.exec(body[i - 1].original)[1];\n        }\n      }\n    }\n    if (doStandalone && openStandalone) {\n      omitRight((current.program || current.inverse).body);\n\n      // Strip out the previous content node if it's whitespace only\n      omitLeft(body, i);\n    }\n    if (doStandalone && closeStandalone) {\n      // Always strip the next node\n      omitRight(body, i);\n\n      omitLeft((current.inverse || current.program).body);\n    }\n  }\n\n  return program;\n};\n\nWhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function (block) {\n  this.accept(block.program);\n  this.accept(block.inverse);\n\n  // Find the inverse program that is involed with whitespace stripping.\n  var program = block.program || block.inverse,\n      inverse = block.program && block.inverse,\n      firstInverse = inverse,\n      lastInverse = inverse;\n\n  if (inverse && inverse.chained) {\n    firstInverse = inverse.body[0].program;\n\n    // Walk the inverse chain to find the last inverse that is actually in the chain.\n    while (lastInverse.chained) {\n      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;\n    }\n  }\n\n  var strip = {\n    open: block.openStrip.open,\n    close: block.closeStrip.close,\n\n    // Determine the standalone candiacy. Basically flag our content as being possibly standalone\n    // so our parent can determine if we actually are standalone\n    openStandalone: isNextWhitespace(program.body),\n    closeStandalone: isPrevWhitespace((firstInverse || program).body)\n  };\n\n  if (block.openStrip.close) {\n    omitRight(program.body, null, true);\n  }\n\n  if (inverse) {\n    var inverseStrip = block.inverseStrip;\n\n    if (inverseStrip.open) {\n      omitLeft(program.body, null, true);\n    }\n\n    if (inverseStrip.close) {\n      omitRight(firstInverse.body, null, true);\n    }\n    if (block.closeStrip.open) {\n      omitLeft(lastInverse.body, null, true);\n    }\n\n    // Find standalone else statments\n    if (!this.options.ignoreStandalone && isPrevWhitespace(program.body) && isNextWhitespace(firstInverse.body)) {\n      omitLeft(program.body);\n      omitRight(firstInverse.body);\n    }\n  } else if (block.closeStrip.open) {\n    omitLeft(program.body, null, true);\n  }\n\n  return strip;\n};\n\nWhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function (mustache) {\n  return mustache.strip;\n};\n\nWhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function (node) {\n  /* istanbul ignore next */\n  var strip = node.strip || {};\n  return {\n    inlineStandalone: true,\n    open: strip.open,\n    close: strip.close\n  };\n};\n\nfunction isPrevWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = body.length;\n  }\n\n  // Nodes that end with newlines are considered whitespace (but are special\n  // cased for strip operations)\n  var prev = body[i - 1],\n      sibling = body[i - 2];\n  if (!prev) {\n    return isRoot;\n  }\n\n  if (prev.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /\\r?\\n\\s*?$/ : /(^|\\r?\\n)\\s*?$/).test(prev.original);\n  }\n}\nfunction isNextWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = -1;\n  }\n\n  var next = body[i + 1],\n      sibling = body[i + 2];\n  if (!next) {\n    return isRoot;\n  }\n\n  if (next.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /^\\s*?\\r?\\n/ : /^\\s*?(\\r?\\n|$)/).test(next.original);\n  }\n}\n\n// Marks the node to the right of the position as omitted.\n// I.e. {{foo}}' ' will mark the ' ' node as omitted.\n//\n// If i is undefined, then the first child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitRight(body, i, multiple) {\n  var current = body[i == null ? 0 : i + 1];\n  if (!current || current.type !== 'ContentStatement' || !multiple && current.rightStripped) {\n    return;\n  }\n\n  var original = current.value;\n  current.value = current.value.replace(multiple ? /^\\s+/ : /^[ \\t]*\\r?\\n?/, '');\n  current.rightStripped = current.value !== original;\n}\n\n// Marks the node to the left of the position as omitted.\n// I.e. ' '{{foo}} will mark the ' ' node as omitted.\n//\n// If i is undefined then the last child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitLeft(body, i, multiple) {\n  var current = body[i == null ? body.length - 1 : i - 1];\n  if (!current || current.type !== 'ContentStatement' || !multiple && current.leftStripped) {\n    return;\n  }\n\n  // We omit the last node if it's whitespace only and not preceded by a non-content node.\n  var original = current.value;\n  current.value = current.value.replace(multiple ? /\\s+$/ : /[ \\t]+$/, '');\n  current.leftStripped = current.value !== original;\n  return current.leftStripped;\n}\n\nexports['default'] = WhitespaceControl;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","'use strict';\n\nexports.__esModule = true;\nexports.SourceLocation = SourceLocation;\nexports.id = id;\nexports.stripFlags = stripFlags;\nexports.stripComment = stripComment;\nexports.preparePath = preparePath;\nexports.prepareMustache = prepareMustache;\nexports.prepareRawBlock = prepareRawBlock;\nexports.prepareBlock = prepareBlock;\nexports.prepareProgram = prepareProgram;\nexports.preparePartialBlock = preparePartialBlock;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nfunction validateClose(open, close) {\n  close = close.path ? close.path.original : close;\n\n  if (open.path.original !== close) {\n    var errorNode = { loc: open.path.loc };\n\n    throw new _exception2['default'](open.path.original + \" doesn't match \" + close, errorNode);\n  }\n}\n\nfunction SourceLocation(source, locInfo) {\n  this.source = source;\n  this.start = {\n    line: locInfo.first_line,\n    column: locInfo.first_column\n  };\n  this.end = {\n    line: locInfo.last_line,\n    column: locInfo.last_column\n  };\n}\n\nfunction id(token) {\n  if (/^\\[.*\\]$/.test(token)) {\n    return token.substring(1, token.length - 1);\n  } else {\n    return token;\n  }\n}\n\nfunction stripFlags(open, close) {\n  return {\n    open: open.charAt(2) === '~',\n    close: close.charAt(close.length - 3) === '~'\n  };\n}\n\nfunction stripComment(comment) {\n  return comment.replace(/^\\{\\{~?!-?-?/, '').replace(/-?-?~?\\}\\}$/, '');\n}\n\nfunction preparePath(data, parts, loc) {\n  loc = this.locInfo(loc);\n\n  var original = data ? '@' : '',\n      dig = [],\n      depth = 0;\n\n  for (var i = 0, l = parts.length; i < l; i++) {\n    var part = parts[i].part,\n\n    // If we have [] syntax then we do not treat path references as operators,\n    // i.e. foo.[this] resolves to approximately context.foo['this']\n    isLiteral = parts[i].original !== part;\n    original += (parts[i].separator || '') + part;\n\n    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {\n      if (dig.length > 0) {\n        throw new _exception2['default']('Invalid path: ' + original, { loc: loc });\n      } else if (part === '..') {\n        depth++;\n      }\n    } else {\n      dig.push(part);\n    }\n  }\n\n  return {\n    type: 'PathExpression',\n    data: data,\n    depth: depth,\n    parts: dig,\n    original: original,\n    loc: loc\n  };\n}\n\nfunction prepareMustache(path, params, hash, open, strip, locInfo) {\n  // Must use charAt to support IE pre-10\n  var escapeFlag = open.charAt(3) || open.charAt(2),\n      escaped = escapeFlag !== '{' && escapeFlag !== '&';\n\n  var decorator = /\\*/.test(open);\n  return {\n    type: decorator ? 'Decorator' : 'MustacheStatement',\n    path: path,\n    params: params,\n    hash: hash,\n    escaped: escaped,\n    strip: strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nfunction prepareRawBlock(openRawBlock, contents, close, locInfo) {\n  validateClose(openRawBlock, close);\n\n  locInfo = this.locInfo(locInfo);\n  var program = {\n    type: 'Program',\n    body: contents,\n    strip: {},\n    loc: locInfo\n  };\n\n  return {\n    type: 'BlockStatement',\n    path: openRawBlock.path,\n    params: openRawBlock.params,\n    hash: openRawBlock.hash,\n    program: program,\n    openStrip: {},\n    inverseStrip: {},\n    closeStrip: {},\n    loc: locInfo\n  };\n}\n\nfunction prepareBlock(openBlock, program, inverseAndProgram, close, inverted, locInfo) {\n  if (close && close.path) {\n    validateClose(openBlock, close);\n  }\n\n  var decorator = /\\*/.test(openBlock.open);\n\n  program.blockParams = openBlock.blockParams;\n\n  var inverse = undefined,\n      inverseStrip = undefined;\n\n  if (inverseAndProgram) {\n    if (decorator) {\n      throw new _exception2['default']('Unexpected inverse block on decorator', inverseAndProgram);\n    }\n\n    if (inverseAndProgram.chain) {\n      inverseAndProgram.program.body[0].closeStrip = close.strip;\n    }\n\n    inverseStrip = inverseAndProgram.strip;\n    inverse = inverseAndProgram.program;\n  }\n\n  if (inverted) {\n    inverted = inverse;\n    inverse = program;\n    program = inverted;\n  }\n\n  return {\n    type: decorator ? 'DecoratorBlock' : 'BlockStatement',\n    path: openBlock.path,\n    params: openBlock.params,\n    hash: openBlock.hash,\n    program: program,\n    inverse: inverse,\n    openStrip: openBlock.strip,\n    inverseStrip: inverseStrip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nfunction prepareProgram(statements, loc) {\n  if (!loc && statements.length) {\n    var firstLoc = statements[0].loc,\n        lastLoc = statements[statements.length - 1].loc;\n\n    /* istanbul ignore else */\n    if (firstLoc && lastLoc) {\n      loc = {\n        source: firstLoc.source,\n        start: {\n          line: firstLoc.start.line,\n          column: firstLoc.start.column\n        },\n        end: {\n          line: lastLoc.end.line,\n          column: lastLoc.end.column\n        }\n      };\n    }\n  }\n\n  return {\n    type: 'Program',\n    body: statements,\n    strip: {},\n    loc: loc\n  };\n}\n\nfunction preparePartialBlock(open, program, close, locInfo) {\n  validateClose(open, close);\n\n  return {\n    type: 'PartialBlockStatement',\n    name: open.path,\n    params: open.params,\n    hash: open.hash,\n    program: program,\n    openStrip: open.strip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","'use strict';\n\nexports.__esModule = true;\nexports.parseWithoutProcessing = parseWithoutProcessing;\nexports.parse = parse;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _parser = require('./parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _whitespaceControl = require('./whitespace-control');\n\nvar _whitespaceControl2 = _interopRequireDefault(_whitespaceControl);\n\nvar _helpers = require('./helpers');\n\nvar Helpers = _interopRequireWildcard(_helpers);\n\nvar _utils = require('../utils');\n\nexports.parser = _parser2['default'];\n\nvar yy = {};\n_utils.extend(yy, Helpers);\n\nfunction parseWithoutProcessing(input, options) {\n  // Just return if an already-compiled AST was passed in.\n  if (input.type === 'Program') {\n    return input;\n  }\n\n  _parser2['default'].yy = yy;\n\n  // Altering the shared object here, but this is ok as parser is a sync operation\n  yy.locInfo = function (locInfo) {\n    return new yy.SourceLocation(options && options.srcName, locInfo);\n  };\n\n  var ast = _parser2['default'].parse(input);\n\n  return ast;\n}\n\nfunction parse(input, options) {\n  var ast = parseWithoutProcessing(input, options);\n  var strip = new _whitespaceControl2['default'](options);\n\n  return strip.accept(ast);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2NvbXBpbGVyL2Jhc2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztzQkFBbUIsVUFBVTs7OztpQ0FDQyxzQkFBc0I7Ozs7dUJBQzNCLFdBQVc7O0lBQXhCLE9BQU87O3FCQUNJLFVBQVU7O1FBRXhCLE1BQU07O0FBRWYsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDO0FBQ1osY0FBTyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7O0FBRWIsU0FBUyxzQkFBc0IsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFOztBQUVyRCxNQUFJLEtBQUssQ0FBQyxJQUFJLEtBQUssU0FBUyxFQUFFO0FBQzVCLFdBQU8sS0FBSyxDQUFDO0dBQ2Q7O0FBRUQsc0JBQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQzs7O0FBR2YsSUFBRSxDQUFDLE9BQU8sR0FBRyxVQUFTLE9BQU8sRUFBRTtBQUM3QixXQUFPLElBQUksRUFBRSxDQUFDLGNBQWMsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztHQUNuRSxDQUFDOztBQUVGLE1BQUksR0FBRyxHQUFHLG9CQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQzs7QUFFOUIsU0FBTyxHQUFHLENBQUM7Q0FDWjs7QUFFTSxTQUFTLEtBQUssQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFO0FBQ3BDLE1BQUksR0FBRyxHQUFHLHNCQUFzQixDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztBQUNqRCxNQUFJLEtBQUssR0FBRyxtQ0FBc0IsT0FBTyxDQUFDLENBQUM7O0FBRTNDLFNBQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUMxQiIsImZpbGUiOiJiYXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhcnNlciBmcm9tICcuL3BhcnNlcic7XG5pbXBvcnQgV2hpdGVzcGFjZUNvbnRyb2wgZnJvbSAnLi93aGl0ZXNwYWNlLWNvbnRyb2wnO1xuaW1wb3J0ICogYXMgSGVscGVycyBmcm9tICcuL2hlbHBlcnMnO1xuaW1wb3J0IHsgZXh0ZW5kIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5leHBvcnQgeyBwYXJzZXIgfTtcblxubGV0IHl5ID0ge307XG5leHRlbmQoeXksIEhlbHBlcnMpO1xuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VXaXRob3V0UHJvY2Vzc2luZyhpbnB1dCwgb3B0aW9ucykge1xuICAvLyBKdXN0IHJldHVybiBpZiBhbiBhbHJlYWR5LWNvbXBpbGVkIEFTVCB3YXMgcGFzc2VkIGluLlxuICBpZiAoaW5wdXQudHlwZSA9PT0gJ1Byb2dyYW0nKSB7XG4gICAgcmV0dXJuIGlucHV0O1xuICB9XG5cbiAgcGFyc2VyLnl5ID0geXk7XG5cbiAgLy8gQWx0ZXJpbmcgdGhlIHNoYXJlZCBvYmplY3QgaGVyZSwgYnV0IHRoaXMgaXMgb2sgYXMgcGFyc2VyIGlzIGEgc3luYyBvcGVyYXRpb25cbiAgeXkubG9jSW5mbyA9IGZ1bmN0aW9uKGxvY0luZm8pIHtcbiAgICByZXR1cm4gbmV3IHl5LlNvdXJjZUxvY2F0aW9uKG9wdGlvbnMgJiYgb3B0aW9ucy5zcmNOYW1lLCBsb2NJbmZvKTtcbiAgfTtcblxuICBsZXQgYXN0ID0gcGFyc2VyLnBhcnNlKGlucHV0KTtcblxuICByZXR1cm4gYXN0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgbGV0IGFzdCA9IHBhcnNlV2l0aG91dFByb2Nlc3NpbmcoaW5wdXQsIG9wdGlvbnMpO1xuICBsZXQgc3RyaXAgPSBuZXcgV2hpdGVzcGFjZUNvbnRyb2wob3B0aW9ucyk7XG5cbiAgcmV0dXJuIHN0cmlwLmFjY2VwdChhc3QpO1xufVxuIl19\n","/* eslint-disable new-cap */\n\n'use strict';\n\nexports.__esModule = true;\nexports.Compiler = Compiler;\nexports.precompile = precompile;\nexports.compile = compile;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _utils = require('../utils');\n\nvar _ast = require('./ast');\n\nvar _ast2 = _interopRequireDefault(_ast);\n\nvar slice = [].slice;\n\nfunction Compiler() {}\n\n// the foundHelper register will disambiguate helper lookup from finding a\n// function in a context. This is necessary for mustache compatibility, which\n// requires that context functions in blocks are evaluated by blockHelperMissing,\n// and then proceed as if the resulting value was provided to blockHelperMissing.\n\nCompiler.prototype = {\n  compiler: Compiler,\n\n  equals: function equals(other) {\n    var len = this.opcodes.length;\n    if (other.opcodes.length !== len) {\n      return false;\n    }\n\n    for (var i = 0; i < len; i++) {\n      var opcode = this.opcodes[i],\n          otherOpcode = other.opcodes[i];\n      if (opcode.opcode !== otherOpcode.opcode || !argEquals(opcode.args, otherOpcode.args)) {\n        return false;\n      }\n    }\n\n    // We know that length is the same between the two arrays because they are directly tied\n    // to the opcode behavior above.\n    len = this.children.length;\n    for (var i = 0; i < len; i++) {\n      if (!this.children[i].equals(other.children[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  guid: 0,\n\n  compile: function compile(program, options) {\n    this.sourceNode = [];\n    this.opcodes = [];\n    this.children = [];\n    this.options = options;\n    this.stringParams = options.stringParams;\n    this.trackIds = options.trackIds;\n\n    options.blockParams = options.blockParams || [];\n\n    options.knownHelpers = _utils.extend(Object.create(null), {\n      helperMissing: true,\n      blockHelperMissing: true,\n      each: true,\n      'if': true,\n      unless: true,\n      'with': true,\n      log: true,\n      lookup: true\n    }, options.knownHelpers);\n\n    return this.accept(program);\n  },\n\n  compileProgram: function compileProgram(program) {\n    var childCompiler = new this.compiler(),\n        // eslint-disable-line new-cap\n    result = childCompiler.compile(program, this.options),\n        guid = this.guid++;\n\n    this.usePartial = this.usePartial || result.usePartial;\n\n    this.children[guid] = result;\n    this.useDepths = this.useDepths || result.useDepths;\n\n    return guid;\n  },\n\n  accept: function accept(node) {\n    /* istanbul ignore next: Sanity code */\n    if (!this[node.type]) {\n      throw new _exception2['default']('Unknown type: ' + node.type, node);\n    }\n\n    this.sourceNode.unshift(node);\n    var ret = this[node.type](node);\n    this.sourceNode.shift();\n    return ret;\n  },\n\n  Program: function Program(program) {\n    this.options.blockParams.unshift(program.blockParams);\n\n    var body = program.body,\n        bodyLength = body.length;\n    for (var i = 0; i < bodyLength; i++) {\n      this.accept(body[i]);\n    }\n\n    this.options.blockParams.shift();\n\n    this.isSimple = bodyLength === 1;\n    this.blockParams = program.blockParams ? program.blockParams.length : 0;\n\n    return this;\n  },\n\n  BlockStatement: function BlockStatement(block) {\n    transformLiteralToPath(block);\n\n    var program = block.program,\n        inverse = block.inverse;\n\n    program = program && this.compileProgram(program);\n    inverse = inverse && this.compileProgram(inverse);\n\n    var type = this.classifySexpr(block);\n\n    if (type === 'helper') {\n      this.helperSexpr(block, program, inverse);\n    } else if (type === 'simple') {\n      this.simpleSexpr(block);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('blockValue', block.path.original);\n    } else {\n      this.ambiguousSexpr(block, program, inverse);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('ambiguousBlockValue');\n    }\n\n    this.opcode('append');\n  },\n\n  DecoratorBlock: function DecoratorBlock(decorator) {\n    var program = decorator.program && this.compileProgram(decorator.program);\n    var params = this.setupFullMustacheParams(decorator, program, undefined),\n        path = decorator.path;\n\n    this.useDecorators = true;\n    this.opcode('registerDecorator', params.length, path.original);\n  },\n\n  PartialStatement: function PartialStatement(partial) {\n    this.usePartial = true;\n\n    var program = partial.program;\n    if (program) {\n      program = this.compileProgram(partial.program);\n    }\n\n    var params = partial.params;\n    if (params.length > 1) {\n      throw new _exception2['default']('Unsupported number of partial arguments: ' + params.length, partial);\n    } else if (!params.length) {\n      if (this.options.explicitPartialContext) {\n        this.opcode('pushLiteral', 'undefined');\n      } else {\n        params.push({ type: 'PathExpression', parts: [], depth: 0 });\n      }\n    }\n\n    var partialName = partial.name.original,\n        isDynamic = partial.name.type === 'SubExpression';\n    if (isDynamic) {\n      this.accept(partial.name);\n    }\n\n    this.setupFullMustacheParams(partial, program, undefined, true);\n\n    var indent = partial.indent || '';\n    if (this.options.preventIndent && indent) {\n      this.opcode('appendContent', indent);\n      indent = '';\n    }\n\n    this.opcode('invokePartial', isDynamic, partialName, indent);\n    this.opcode('append');\n  },\n  PartialBlockStatement: function PartialBlockStatement(partialBlock) {\n    this.PartialStatement(partialBlock);\n  },\n\n  MustacheStatement: function MustacheStatement(mustache) {\n    this.SubExpression(mustache);\n\n    if (mustache.escaped && !this.options.noEscape) {\n      this.opcode('appendEscaped');\n    } else {\n      this.opcode('append');\n    }\n  },\n  Decorator: function Decorator(decorator) {\n    this.DecoratorBlock(decorator);\n  },\n\n  ContentStatement: function ContentStatement(content) {\n    if (content.value) {\n      this.opcode('appendContent', content.value);\n    }\n  },\n\n  CommentStatement: function CommentStatement() {},\n\n  SubExpression: function SubExpression(sexpr) {\n    transformLiteralToPath(sexpr);\n    var type = this.classifySexpr(sexpr);\n\n    if (type === 'simple') {\n      this.simpleSexpr(sexpr);\n    } else if (type === 'helper') {\n      this.helperSexpr(sexpr);\n    } else {\n      this.ambiguousSexpr(sexpr);\n    }\n  },\n  ambiguousSexpr: function ambiguousSexpr(sexpr, program, inverse) {\n    var path = sexpr.path,\n        name = path.parts[0],\n        isBlock = program != null || inverse != null;\n\n    this.opcode('getContext', path.depth);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    path.strict = true;\n    this.accept(path);\n\n    this.opcode('invokeAmbiguous', name, isBlock);\n  },\n\n  simpleSexpr: function simpleSexpr(sexpr) {\n    var path = sexpr.path;\n    path.strict = true;\n    this.accept(path);\n    this.opcode('resolvePossibleLambda');\n  },\n\n  helperSexpr: function helperSexpr(sexpr, program, inverse) {\n    var params = this.setupFullMustacheParams(sexpr, program, inverse),\n        path = sexpr.path,\n        name = path.parts[0];\n\n    if (this.options.knownHelpers[name]) {\n      this.opcode('invokeKnownHelper', params.length, name);\n    } else if (this.options.knownHelpersOnly) {\n      throw new _exception2['default']('You specified knownHelpersOnly, but used the unknown helper ' + name, sexpr);\n    } else {\n      path.strict = true;\n      path.falsy = true;\n\n      this.accept(path);\n      this.opcode('invokeHelper', params.length, path.original, _ast2['default'].helpers.simpleId(path));\n    }\n  },\n\n  PathExpression: function PathExpression(path) {\n    this.addDepth(path.depth);\n    this.opcode('getContext', path.depth);\n\n    var name = path.parts[0],\n        scoped = _ast2['default'].helpers.scopedId(path),\n        blockParamId = !path.depth && !scoped && this.blockParamIndex(name);\n\n    if (blockParamId) {\n      this.opcode('lookupBlockParam', blockParamId, path.parts);\n    } else if (!name) {\n      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`\n      this.opcode('pushContext');\n    } else if (path.data) {\n      this.options.data = true;\n      this.opcode('lookupData', path.depth, path.parts, path.strict);\n    } else {\n      this.opcode('lookupOnContext', path.parts, path.falsy, path.strict, scoped);\n    }\n  },\n\n  StringLiteral: function StringLiteral(string) {\n    this.opcode('pushString', string.value);\n  },\n\n  NumberLiteral: function NumberLiteral(number) {\n    this.opcode('pushLiteral', number.value);\n  },\n\n  BooleanLiteral: function BooleanLiteral(bool) {\n    this.opcode('pushLiteral', bool.value);\n  },\n\n  UndefinedLiteral: function UndefinedLiteral() {\n    this.opcode('pushLiteral', 'undefined');\n  },\n\n  NullLiteral: function NullLiteral() {\n    this.opcode('pushLiteral', 'null');\n  },\n\n  Hash: function Hash(hash) {\n    var pairs = hash.pairs,\n        i = 0,\n        l = pairs.length;\n\n    this.opcode('pushHash');\n\n    for (; i < l; i++) {\n      this.pushParam(pairs[i].value);\n    }\n    while (i--) {\n      this.opcode('assignToHash', pairs[i].key);\n    }\n    this.opcode('popHash');\n  },\n\n  // HELPERS\n  opcode: function opcode(name) {\n    this.opcodes.push({\n      opcode: name,\n      args: slice.call(arguments, 1),\n      loc: this.sourceNode[0].loc\n    });\n  },\n\n  addDepth: function addDepth(depth) {\n    if (!depth) {\n      return;\n    }\n\n    this.useDepths = true;\n  },\n\n  classifySexpr: function classifySexpr(sexpr) {\n    var isSimple = _ast2['default'].helpers.simpleId(sexpr.path);\n\n    var isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);\n\n    // a mustache is an eligible helper if:\n    // * its id is simple (a single part, not `this` or `..`)\n    var isHelper = !isBlockParam && _ast2['default'].helpers.helperExpression(sexpr);\n\n    // if a mustache is an eligible helper but not a definite\n    // helper, it is ambiguous, and will be resolved in a later\n    // pass or at runtime.\n    var isEligible = !isBlockParam && (isHelper || isSimple);\n\n    // if ambiguous, we can possibly resolve the ambiguity now\n    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.\n    if (isEligible && !isHelper) {\n      var _name = sexpr.path.parts[0],\n          options = this.options;\n      if (options.knownHelpers[_name]) {\n        isHelper = true;\n      } else if (options.knownHelpersOnly) {\n        isEligible = false;\n      }\n    }\n\n    if (isHelper) {\n      return 'helper';\n    } else if (isEligible) {\n      return 'ambiguous';\n    } else {\n      return 'simple';\n    }\n  },\n\n  pushParams: function pushParams(params) {\n    for (var i = 0, l = params.length; i < l; i++) {\n      this.pushParam(params[i]);\n    }\n  },\n\n  pushParam: function pushParam(val) {\n    var value = val.value != null ? val.value : val.original || '';\n\n    if (this.stringParams) {\n      if (value.replace) {\n        value = value.replace(/^(\\.?\\.\\/)*/g, '').replace(/\\//g, '.');\n      }\n\n      if (val.depth) {\n        this.addDepth(val.depth);\n      }\n      this.opcode('getContext', val.depth || 0);\n      this.opcode('pushStringParam', value, val.type);\n\n      if (val.type === 'SubExpression') {\n        // SubExpressions get evaluated and passed in\n        // in string params mode.\n        this.accept(val);\n      }\n    } else {\n      if (this.trackIds) {\n        var blockParamIndex = undefined;\n        if (val.parts && !_ast2['default'].helpers.scopedId(val) && !val.depth) {\n          blockParamIndex = this.blockParamIndex(val.parts[0]);\n        }\n        if (blockParamIndex) {\n          var blockParamChild = val.parts.slice(1).join('.');\n          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);\n        } else {\n          value = val.original || value;\n          if (value.replace) {\n            value = value.replace(/^this(?:\\.|$)/, '').replace(/^\\.\\//, '').replace(/^\\.$/, '');\n          }\n\n          this.opcode('pushId', val.type, value);\n        }\n      }\n      this.accept(val);\n    }\n  },\n\n  setupFullMustacheParams: function setupFullMustacheParams(sexpr, program, inverse, omitEmpty) {\n    var params = sexpr.params;\n    this.pushParams(params);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    if (sexpr.hash) {\n      this.accept(sexpr.hash);\n    } else {\n      this.opcode('emptyHash', omitEmpty);\n    }\n\n    return params;\n  },\n\n  blockParamIndex: function blockParamIndex(name) {\n    for (var depth = 0, len = this.options.blockParams.length; depth < len; depth++) {\n      var blockParams = this.options.blockParams[depth],\n          param = blockParams && _utils.indexOf(blockParams, name);\n      if (blockParams && param >= 0) {\n        return [depth, param];\n      }\n    }\n  }\n};\n\nfunction precompile(input, options, env) {\n  if (input == null || typeof input !== 'string' && input.type !== 'Program') {\n    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' + input);\n  }\n\n  options = options || {};\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  var ast = env.parse(input, options),\n      environment = new env.Compiler().compile(ast, options);\n  return new env.JavaScriptCompiler().compile(environment, options);\n}\n\nfunction compile(input, options, env) {\n  if (options === undefined) options = {};\n\n  if (input == null || typeof input !== 'string' && input.type !== 'Program') {\n    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.compile. You passed ' + input);\n  }\n\n  options = _utils.extend({}, options);\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  var compiled = undefined;\n\n  function compileInput() {\n    var ast = env.parse(input, options),\n        environment = new env.Compiler().compile(ast, options),\n        templateSpec = new env.JavaScriptCompiler().compile(environment, options, undefined, true);\n    return env.template(templateSpec);\n  }\n\n  // Template is only compiled on first use and cached after that point.\n  function ret(context, execOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled.call(this, context, execOptions);\n  }\n  ret._setup = function (setupOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._setup(setupOptions);\n  };\n  ret._child = function (i, data, blockParams, depths) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._child(i, data, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction argEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (_utils.isArray(a) && _utils.isArray(b) && a.length === b.length) {\n    for (var i = 0; i < a.length; i++) {\n      if (!argEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfunction transformLiteralToPath(sexpr) {\n  if (!sexpr.path.parts) {\n    var literal = sexpr.path;\n    // Casting to string here to make false and 0 literal values play nicely with the rest\n    // of the system.\n    sexpr.path = {\n      type: 'PathExpression',\n      data: false,\n      depth: 0,\n      parts: [literal.original + ''],\n      original: literal.original + '',\n      loc: literal.loc\n    };\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/* global define */\n'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('../utils');\n\nvar SourceNode = undefined;\n\ntry {\n  /* istanbul ignore next */\n  if (typeof define !== 'function' || !define.amd) {\n    // We don't support this in AMD environments. For these environments, we asusme that\n    // they are running on the browser and thus have no need for the source-map library.\n    var SourceMap = require('source-map');\n    SourceNode = SourceMap.SourceNode;\n  }\n} catch (err) {}\n/* NOP */\n\n/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\nif (!SourceNode) {\n  SourceNode = function (line, column, srcFile, chunks) {\n    this.src = '';\n    if (chunks) {\n      this.add(chunks);\n    }\n  };\n  /* istanbul ignore next */\n  SourceNode.prototype = {\n    add: function add(chunks) {\n      if (_utils.isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src += chunks;\n    },\n    prepend: function prepend(chunks) {\n      if (_utils.isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src = chunks + this.src;\n    },\n    toStringWithSourceMap: function toStringWithSourceMap() {\n      return { code: this.toString() };\n    },\n    toString: function toString() {\n      return this.src;\n    }\n  };\n}\n\nfunction castChunk(chunk, codeGen, loc) {\n  if (_utils.isArray(chunk)) {\n    var ret = [];\n\n    for (var i = 0, len = chunk.length; i < len; i++) {\n      ret.push(codeGen.wrap(chunk[i], loc));\n    }\n    return ret;\n  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n    // Handle primitives that the SourceNode will throw up on\n    return chunk + '';\n  }\n  return chunk;\n}\n\nfunction CodeGen(srcFile) {\n  this.srcFile = srcFile;\n  this.source = [];\n}\n\nCodeGen.prototype = {\n  isEmpty: function isEmpty() {\n    return !this.source.length;\n  },\n  prepend: function prepend(source, loc) {\n    this.source.unshift(this.wrap(source, loc));\n  },\n  push: function push(source, loc) {\n    this.source.push(this.wrap(source, loc));\n  },\n\n  merge: function merge() {\n    var source = this.empty();\n    this.each(function (line) {\n      source.add(['  ', line, '\\n']);\n    });\n    return source;\n  },\n\n  each: function each(iter) {\n    for (var i = 0, len = this.source.length; i < len; i++) {\n      iter(this.source[i]);\n    }\n  },\n\n  empty: function empty() {\n    var loc = this.currentLocation || { start: {} };\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n  },\n  wrap: function wrap(chunk) {\n    var loc = arguments.length <= 1 || arguments[1] === undefined ? this.currentLocation || { start: {} } : arguments[1];\n\n    if (chunk instanceof SourceNode) {\n      return chunk;\n    }\n\n    chunk = castChunk(chunk, this, loc);\n\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);\n  },\n\n  functionCall: function functionCall(fn, type, params) {\n    params = this.generateList(params);\n    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n  },\n\n  quotedString: function quotedString(str) {\n    return '\"' + (str + '').replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n    .replace(/\\u2029/g, '\\\\u2029') + '\"';\n  },\n\n  objectLiteral: function objectLiteral(obj) {\n    // istanbul ignore next\n\n    var _this = this;\n\n    var pairs = [];\n\n    Object.keys(obj).forEach(function (key) {\n      var value = castChunk(obj[key], _this);\n      if (value !== 'undefined') {\n        pairs.push([_this.quotedString(key), ':', value]);\n      }\n    });\n\n    var ret = this.generateList(pairs);\n    ret.prepend('{');\n    ret.add('}');\n    return ret;\n  },\n\n  generateList: function generateList(entries) {\n    var ret = this.empty();\n\n    for (var i = 0, len = entries.length; i < len; i++) {\n      if (i) {\n        ret.add(',');\n      }\n\n      ret.add(castChunk(entries[i], this));\n    }\n\n    return ret;\n  },\n\n  generateArray: function generateArray(entries) {\n    var ret = this.generateList(entries);\n    ret.prepend('[');\n    ret.add(']');\n\n    return ret;\n  }\n};\n\nexports['default'] = CodeGen;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2NvbXBpbGVyL2NvZGUtZ2VuLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O3FCQUN3QixVQUFVOztBQUVsQyxJQUFJLFVBQVUsWUFBQSxDQUFDOztBQUVmLElBQUk7O0FBRUYsTUFBSSxPQUFPLE1BQU0sS0FBSyxVQUFVLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFOzs7QUFHL0MsUUFBSSxTQUFTLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQ3RDLGNBQVUsR0FBRyxTQUFTLENBQUMsVUFBVSxDQUFDO0dBQ25DO0NBQ0YsQ0FBQyxPQUFPLEdBQUcsRUFBRSxFQUViOzs7O0FBQUEsQUFHRCxJQUFJLENBQUMsVUFBVSxFQUFFO0FBQ2YsWUFBVSxHQUFHLFVBQVMsSUFBSSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFO0FBQ25ELFFBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDO0FBQ2QsUUFBSSxNQUFNLEVBQUU7QUFDVixVQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQ2xCO0dBQ0YsQ0FBQzs7QUFFRixZQUFVLENBQUMsU0FBUyxHQUFHO0FBQ3JCLE9BQUcsRUFBRSxhQUFTLE1BQU0sRUFBRTtBQUNwQixVQUFJLGVBQVEsTUFBTSxDQUFDLEVBQUU7QUFDbkIsY0FBTSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7T0FDMUI7QUFDRCxVQUFJLENBQUMsR0FBRyxJQUFJLE1BQU0sQ0FBQztLQUNwQjtBQUNELFdBQU8sRUFBRSxpQkFBUyxNQUFNLEVBQUU7QUFDeEIsVUFBSSxlQUFRLE1BQU0sQ0FBQyxFQUFFO0FBQ25CLGNBQU0sR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO09BQzFCO0FBQ0QsVUFBSSxDQUFDLEdBQUcsR0FBRyxNQUFNLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztL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QUcsQ0FBQyxDQUFDO0FBQ2pCLE9BQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7O0FBRWIsV0FBTyxHQUFHLENBQUM7R0FDWjtDQUNGLENBQUM7O3FCQUVhLE9BQU8iLCJmaWxlIjoiY29kZS1nZW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgZGVmaW5lICovXG5pbXBvcnQgeyBpc0FycmF5IH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5sZXQgU291cmNlTm9kZTtcblxudHJ5IHtcbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgaWYgKHR5cGVvZiBkZWZpbmUgIT09ICdmdW5jdGlvbicgfHwgIWRlZmluZS5hbWQpIHtcbiAgICAvLyBXZSBkb24ndCBzdXBwb3J0IHRoaXMgaW4gQU1EIGVudmlyb25tZW50cy4gRm9yIHRoZXNlIGVudmlyb25tZW50cywgd2UgYXN1c21lIHRoYXRcbiAgICAvLyB0aGV5IGFyZSBydW5uaW5nIG9uIHRoZSBicm93c2VyIGFuZCB0aHVzIGhhdmUgbm8gbmVlZCBmb3IgdGhlIHNvdXJjZS1tYXAgbGlicmFyeS5cbiAgICBsZXQgU291cmNlTWFwID0gcmVxdWlyZSgnc291cmNlLW1hcCcpO1xuICAgIFNvdXJjZU5vZGUgPSBTb3VyY2VNYXAuU291cmNlTm9kZTtcbiAgfVxufSBjYXRjaCAoZXJyKSB7XG4gIC8qIE5PUCAqL1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgaWY6IHRlc3RlZCBidXQgbm90IGNvdmVyZWQgaW4gaXN0YW5idWwgZHVlIHRvIGRpc3QgYnVpbGQgICovXG5pZiAoIVNvdXJjZU5vZGUpIHtcbiAgU291cmNlTm9kZSA9IGZ1bmN0aW9uKGxpbmUsIGNvbHVtbiwgc3JjRmlsZSwgY2h1bmtzKSB7XG4gICAgdGhpcy5zcmMgPSAnJztcbiAgICBpZiAoY2h1bmtzKSB7XG4gICAgICB0aGlzLmFkZChjaHVua3MpO1xuICAgIH1cbiAgfTtcbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgU291cmNlTm9kZS5wcm90b3R5cGUgPSB7XG4gICAgYWRkOiBmdW5jdGlvbihjaHVua3MpIHtcbiAgICAgIGlmIChpc0FycmF5KGNodW5rcykpIHtcbiAgICAgICAgY2h1bmtzID0gY2h1bmtzLmpvaW4oJycpO1xuICAgICAgfVxuICAgICAgdGhpcy5zcmMgKz0gY2h1bmtzO1xuICAgIH0sXG4gICAgcHJlcGVuZDogZnVuY3Rpb24oY2h1bmtzKSB7XG4gICAgICBpZiAoaXNBcnJheShjaHVua3MpKSB7XG4gICAgICAgIGNodW5rcyA9IGNodW5rcy5qb2luKCcnKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc3JjID0gY2h1bmtzICsgdGhpcy5zcmM7XG4gICAgfSxcbiAgICB0b1N0cmluZ1dpdGhTb3VyY2VNYXA6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHsgY29kZTogdGhpcy50b1N0cmluZygpIH07XG4gICAgfSxcbiAgICB0b1N0cmluZzogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5zcmM7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBjYXN0Q2h1bmsoY2h1bmssIGNvZGVHZW4sIGxvYykge1xuICBpZiAoaXNBcnJheShjaHVuaykpIHtcbiAgICBsZXQgcmV0ID0gW107XG5cbiAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gY2h1bmsubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIHJldC5wdXNoKGNvZGVHZW4ud3JhcChjaHVua1tpXSwgbG9jKSk7XG4gICAgfVxuICAgIHJldHVybiByZXQ7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGNodW5rID09PSAnYm9vbGVhbicgfHwgdHlwZW9mIGNodW5rID09PSAnbnVtYmVyJykge1xuICAgIC8vIEhhbmRsZSBwcmltaXRpdmVzIHRoYXQgdGhlIFNvdXJjZU5vZGUgd2lsbCB0aHJvdyB1cCBvblxuICAgIHJldHVybiBjaHVuayArICcnO1xuICB9XG4gIHJldHVybiBjaHVuaztcbn1cblxuZnVuY3Rpb24gQ29kZUdlbihzcmNGaWxlKSB7XG4gIHRoaXMuc3JjRmlsZSA9IHNyY0ZpbGU7XG4gIHRoaXMuc291cmNlID0gW107XG59XG5cbkNvZGVHZW4ucHJvdG90eXBlID0ge1xuICBpc0VtcHR5KCkge1xuICAgIHJldHVybiAhdGhpcy5zb3VyY2UubGVuZ3RoO1xuICB9LFxuICBwcmVwZW5kOiBmdW5jdGlvbihzb3VyY2UsIGxvYykge1xuICAgIHRoaXMuc291cmNlLnVuc2hpZnQodGhpcy53cmFwKHNvdXJjZSwgbG9jKSk7XG4gIH0sXG4gIHB1c2g6IGZ1bmN0aW9uKHNvdXJjZSwgbG9jKSB7XG4gICAgdGhpcy5zb3VyY2UucHVzaCh0aGlzLndyYXAoc291cmNlLCBsb2MpKTtcbiAgfSxcblxuICBtZXJnZTogZnVuY3Rpb24oKSB7XG4gICAgbGV0IHNvdXJjZSA9IHRoaXMuZW1wdHkoKTtcbiAgICB0aGlzLmVhY2goZnVuY3Rpb24obGluZSkge1xuICAgICAgc291cmNlLmFkZChbJyAgJywgbGluZSwgJ1xcbiddKTtcbiAgICB9KTtcbiAgICByZXR1cm4gc291cmNlO1xuICB9LFxuXG4gIGVhY2g6IGZ1bmN0aW9uKGl0ZXIpIHtcbiAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gdGhpcy5zb3VyY2UubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIGl0ZXIodGhpcy5zb3VyY2VbaV0pO1xuICAgIH1cbiAgfSxcblxuICBlbXB0eTogZnVuY3Rpb24oKSB7XG4gICAgbGV0IGxvYyA9IHRoaXMuY3VycmVudExvY2F0aW9uIHx8IHsgc3RhcnQ6IHt9IH07XG4gICAgcmV0dXJuIG5ldyBTb3VyY2VOb2RlKGxvYy5zdGFydC5saW5lLCBsb2Muc3RhcnQuY29sdW1uLCB0aGlzLnNyY0ZpbGUpO1xuICB9LFxuICB3cmFwOiBmdW5jdGlvbihjaHVuaywgbG9jID0gdGhpcy5jdXJyZW50TG9jYXRpb24gfHwgeyBzdGFydDoge30gfSkge1xuICAgIGlmIChjaHVuayBpbnN0YW5jZW9mIFNvdXJjZU5vZGUpIHtcbiAgICAgIHJldHVybiBjaHVuaztcbiAgICB9XG5cbiAgICBjaHVuayA9IGNhc3RDaHVuayhjaHVuaywgdGhpcywgbG9jKTtcblxuICAgIHJldHVybiBuZXcgU291cmNlTm9kZShcbiAgICAgIGxvYy5zdGFydC5saW5lLFxuICAgICAgbG9jLnN0YXJ0LmNvbHVtbixcbiAgICAgIHRoaXMuc3JjRmlsZSxcbiAgICAgIGNodW5rXG4gICAgKTtcbiAgfSxcblxuICBmdW5jdGlvbkNhbGw6IGZ1bmN0aW9uKGZuLCB0eXBlLCBwYXJhbXMpIHtcbiAgICBwYXJhbXMgPSB0aGlzLmdlbmVyYXRlTGlzdChwYXJhbXMpO1xuICAgIHJldHVybiB0aGlzLndyYXAoW2ZuLCB0eXBlID8gJy4nICsgdHlwZSArICcoJyA6ICcoJywgcGFyYW1zLCAnKSddKTtcbiAgfSxcblxuICBxdW90ZWRTdHJpbmc6IGZ1bmN0aW9uKHN0cikge1xuICAgIHJldHVybiAoXG4gICAgICAnXCInICtcbiAgICAgIChzdHIgKyAnJylcbiAgICAgICAgLnJlcGxhY2UoL1xcXFwvZywgJ1xcXFxcXFxcJylcbiAgICAgICAgLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKVxuICAgICAgICAucmVwbGFjZSgvXFxuL2csICdcXFxcbicpXG4gICAgICAgIC5yZXBsYWNlKC9cXHIvZywgJ1xcXFxyJylcbiAgICAgICAgLnJlcGxhY2UoL1xcdTIwMjgvZywgJ1xcXFx1MjAyOCcpIC8vIFBlciBFY21hLTI2MiA3LjMgKyA3LjguNFxuICAgICAgICAucmVwbGFjZSgvXFx1MjAyOS9nLCAnXFxcXHUyMDI5JykgK1xuICAgICAgJ1wiJ1xuICAgICk7XG4gIH0sXG5cbiAgb2JqZWN0TGl0ZXJhbDogZnVuY3Rpb24ob2JqKSB7XG4gICAgbGV0IHBhaXJzID0gW107XG5cbiAgICBPYmplY3Qua2V5cyhvYmopLmZvckVhY2goa2V5ID0+IHtcbiAgICAgIGxldCB2YWx1ZSA9IGNhc3RDaHVuayhvYmpba2V5XSwgdGhpcyk7XG4gICAgICBpZiAodmFsdWUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHBhaXJzLnB1c2goW3RoaXMucXVvdGVkU3RyaW5nKGtleSksICc6JywgdmFsdWVdKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGxldCByZXQgPSB0aGlzLmdlbmVyYXRlTGlzdChwYWlycyk7XG4gICAgcmV0LnByZXBlbmQoJ3snKTtcbiAgICByZXQuYWRkKCd9Jyk7XG4gICAgcmV0dXJuIHJldDtcbiAgfSxcblxuICBnZW5lcmF0ZUxpc3Q6IGZ1bmN0aW9uKGVudHJpZXMpIHtcbiAgICBsZXQgcmV0ID0gdGhpcy5lbXB0eSgpO1xuXG4gICAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IGVudHJpZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIGlmIChpKSB7XG4gICAgICAgIHJldC5hZGQoJywnKTtcbiAgICAgIH1cblxuICAgICAgcmV0LmFkZChjYXN0Q2h1bmsoZW50cmllc1tpXSwgdGhpcykpO1xuICAgIH1cblxuICAgIHJldHVybiByZXQ7XG4gIH0sXG5cbiAgZ2VuZXJhdGVBcnJheTogZnVuY3Rpb24oZW50cmllcykge1xuICAgIGxldCByZXQgPSB0aGlzLmdlbmVyYXRlTGlzdChlbnRyaWVzKTtcbiAgICByZXQucHJlcGVuZCgnWycpO1xuICAgIHJldC5hZGQoJ10nKTtcblxuICAgIHJldHVybiByZXQ7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvZGVHZW47XG4iXX0=\n","'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _base = require('../base');\n\nvar _exception = require('../exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _utils = require('../utils');\n\nvar _codeGen = require('./code-gen');\n\nvar _codeGen2 = _interopRequireDefault(_codeGen);\n\nfunction Literal(value) {\n  this.value = value;\n}\n\nfunction JavaScriptCompiler() {}\n\nJavaScriptCompiler.prototype = {\n  // PUBLIC API: You can override these methods in a subclass to provide\n  // alternative compiled forms for name lookup and buffering semantics\n  nameLookup: function nameLookup(parent, name /*,  type */) {\n    return this.internalNameLookup(parent, name);\n  },\n  depthedLookup: function depthedLookup(name) {\n    return [this.aliasable('container.lookup'), '(depths, ', JSON.stringify(name), ')'];\n  },\n\n  compilerInfo: function compilerInfo() {\n    var revision = _base.COMPILER_REVISION,\n        versions = _base.REVISION_CHANGES[revision];\n    return [revision, versions];\n  },\n\n  appendToBuffer: function appendToBuffer(source, location, explicit) {\n    // Force a source as this simplifies the merge logic.\n    if (!_utils.isArray(source)) {\n      source = [source];\n    }\n    source = this.source.wrap(source, location);\n\n    if (this.environment.isSimple) {\n      return ['return ', source, ';'];\n    } else if (explicit) {\n      // This is a case where the buffer operation occurs as a child of another\n      // construct, generally braces. We have to explicitly output these buffer\n      // operations to ensure that the emitted code goes in the correct location.\n      return ['buffer += ', source, ';'];\n    } else {\n      source.appendToBuffer = true;\n      return source;\n    }\n  },\n\n  initializeBuffer: function initializeBuffer() {\n    return this.quotedString('');\n  },\n  // END PUBLIC API\n  internalNameLookup: function internalNameLookup(parent, name) {\n    this.lookupPropertyFunctionIsUsed = true;\n    return ['lookupProperty(', parent, ',', JSON.stringify(name), ')'];\n  },\n\n  lookupPropertyFunctionIsUsed: false,\n\n  compile: function compile(environment, options, context, asObject) {\n    this.environment = environment;\n    this.options = options;\n    this.stringParams = this.options.stringParams;\n    this.trackIds = this.options.trackIds;\n    this.precompile = !asObject;\n\n    this.name = this.environment.name;\n    this.isChild = !!context;\n    this.context = context || {\n      decorators: [],\n      programs: [],\n      environments: []\n    };\n\n    this.preamble();\n\n    this.stackSlot = 0;\n    this.stackVars = [];\n    this.aliases = {};\n    this.registers = { list: [] };\n    this.hashes = [];\n    this.compileStack = [];\n    this.inlineStack = [];\n    this.blockParams = [];\n\n    this.compileChildren(environment, options);\n\n    this.useDepths = this.useDepths || environment.useDepths || environment.useDecorators || this.options.compat;\n    this.useBlockParams = this.useBlockParams || environment.useBlockParams;\n\n    var opcodes = environment.opcodes,\n        opcode = undefined,\n        firstLoc = undefined,\n        i = undefined,\n        l = undefined;\n\n    for (i = 0, l = opcodes.length; i < l; i++) {\n      opcode = opcodes[i];\n\n      this.source.currentLocation = opcode.loc;\n      firstLoc = firstLoc || opcode.loc;\n      this[opcode.opcode].apply(this, opcode.args);\n    }\n\n    // Flush any trailing content that might be pending.\n    this.source.currentLocation = firstLoc;\n    this.pushSource('');\n\n    /* istanbul ignore next */\n    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {\n      throw new _exception2['default']('Compile completed with content left on stack');\n    }\n\n    if (!this.decorators.isEmpty()) {\n      this.useDecorators = true;\n\n      this.decorators.prepend(['var decorators = container.decorators, ', this.lookupPropertyFunctionVarDeclaration(), ';\\n']);\n      this.decorators.push('return fn;');\n\n      if (asObject) {\n        this.decorators = Function.apply(this, ['fn', 'props', 'container', 'depth0', 'data', 'blockParams', 'depths', this.decorators.merge()]);\n      } else {\n        this.decorators.prepend('function(fn, props, container, depth0, data, blockParams, depths) {\\n');\n        this.decorators.push('}\\n');\n        this.decorators = this.decorators.merge();\n      }\n    } else {\n      this.decorators = undefined;\n    }\n\n    var fn = this.createFunctionContext(asObject);\n    if (!this.isChild) {\n      var ret = {\n        compiler: this.compilerInfo(),\n        main: fn\n      };\n\n      if (this.decorators) {\n        ret.main_d = this.decorators; // eslint-disable-line camelcase\n        ret.useDecorators = true;\n      }\n\n      var _context = this.context;\n      var programs = _context.programs;\n      var decorators = _context.decorators;\n\n      for (i = 0, l = programs.length; i < l; i++) {\n        if (programs[i]) {\n          ret[i] = programs[i];\n          if (decorators[i]) {\n            ret[i + '_d'] = decorators[i];\n            ret.useDecorators = true;\n          }\n        }\n      }\n\n      if (this.environment.usePartial) {\n        ret.usePartial = true;\n      }\n      if (this.options.data) {\n        ret.useData = true;\n      }\n      if (this.useDepths) {\n        ret.useDepths = true;\n      }\n      if (this.useBlockParams) {\n        ret.useBlockParams = true;\n      }\n      if (this.options.compat) {\n        ret.compat = true;\n      }\n\n      if (!asObject) {\n        ret.compiler = JSON.stringify(ret.compiler);\n\n        this.source.currentLocation = { start: { line: 1, column: 0 } };\n        ret = this.objectLiteral(ret);\n\n        if (options.srcName) {\n          ret = ret.toStringWithSourceMap({ file: options.destName });\n          ret.map = ret.map && ret.map.toString();\n        } else {\n          ret = ret.toString();\n        }\n      } else {\n        ret.compilerOptions = this.options;\n      }\n\n      return ret;\n    } else {\n      return fn;\n    }\n  },\n\n  preamble: function preamble() {\n    // track the last context pushed into place to allow skipping the\n    // getContext opcode when it would be a noop\n    this.lastContext = 0;\n    this.source = new _codeGen2['default'](this.options.srcName);\n    this.decorators = new _codeGen2['default'](this.options.srcName);\n  },\n\n  createFunctionContext: function createFunctionContext(asObject) {\n    // istanbul ignore next\n\n    var _this = this;\n\n    var varDeclarations = '';\n\n    var locals = this.stackVars.concat(this.registers.list);\n    if (locals.length > 0) {\n      varDeclarations += ', ' + locals.join(', ');\n    }\n\n    // Generate minimizer alias mappings\n    //\n    // When using true SourceNodes, this will update all references to the given alias\n    // as the source nodes are reused in situ. For the non-source node compilation mode,\n    // aliases will not be used, but this case is already being run on the client and\n    // we aren't concern about minimizing the template size.\n    var aliasCount = 0;\n    Object.keys(this.aliases).forEach(function (alias) {\n      var node = _this.aliases[alias];\n      if (node.children && node.referenceCount > 1) {\n        varDeclarations += ', alias' + ++aliasCount + '=' + alias;\n        node.children[0] = 'alias' + aliasCount;\n      }\n    });\n\n    if (this.lookupPropertyFunctionIsUsed) {\n      varDeclarations += ', ' + this.lookupPropertyFunctionVarDeclaration();\n    }\n\n    var params = ['container', 'depth0', 'helpers', 'partials', 'data'];\n\n    if (this.useBlockParams || this.useDepths) {\n      params.push('blockParams');\n    }\n    if (this.useDepths) {\n      params.push('depths');\n    }\n\n    // Perform a second pass over the output to merge content when possible\n    var source = this.mergeSource(varDeclarations);\n\n    if (asObject) {\n      params.push(source);\n\n      return Function.apply(this, params);\n    } else {\n      return this.source.wrap(['function(', params.join(','), ') {\\n  ', source, '}']);\n    }\n  },\n  mergeSource: function mergeSource(varDeclarations) {\n    var isSimple = this.environment.isSimple,\n        appendOnly = !this.forceBuffer,\n        appendFirst = undefined,\n        sourceSeen = undefined,\n        bufferStart = undefined,\n        bufferEnd = undefined;\n    this.source.each(function (line) {\n      if (line.appendToBuffer) {\n        if (bufferStart) {\n          line.prepend('  + ');\n        } else {\n          bufferStart = line;\n        }\n        bufferEnd = line;\n      } else {\n        if (bufferStart) {\n          if (!sourceSeen) {\n            appendFirst = true;\n          } else {\n            bufferStart.prepend('buffer += ');\n          }\n          bufferEnd.add(';');\n          bufferStart = bufferEnd = undefined;\n        }\n\n        sourceSeen = true;\n        if (!isSimple) {\n          appendOnly = false;\n        }\n      }\n    });\n\n    if (appendOnly) {\n      if (bufferStart) {\n        bufferStart.prepend('return ');\n        bufferEnd.add(';');\n      } else if (!sourceSeen) {\n        this.source.push('return \"\";');\n      }\n    } else {\n      varDeclarations += ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());\n\n      if (bufferStart) {\n        bufferStart.prepend('return buffer + ');\n        bufferEnd.add(';');\n      } else {\n        this.source.push('return buffer;');\n      }\n    }\n\n    if (varDeclarations) {\n      this.source.prepend('var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\\n'));\n    }\n\n    return this.source.merge();\n  },\n\n  lookupPropertyFunctionVarDeclaration: function lookupPropertyFunctionVarDeclaration() {\n    return '\\n      lookupProperty = container.lookupProperty || function(parent, propertyName) {\\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\\n          return parent[propertyName];\\n        }\\n        return undefined\\n    }\\n    '.trim();\n  },\n\n  // [blockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // On stack, after: return value of blockHelperMissing\n  //\n  // The purpose of this opcode is to take a block of the form\n  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and\n  // replace it on the stack with the result of properly\n  // invoking blockHelperMissing.\n  blockValue: function blockValue(name) {\n    var blockHelperMissing = this.aliasable('container.hooks.blockHelperMissing'),\n        params = [this.contextName(0)];\n    this.setupHelperArgs(name, 0, params);\n\n    var blockName = this.popStack();\n    params.splice(1, 0, blockName);\n\n    this.push(this.source.functionCall(blockHelperMissing, 'call', params));\n  },\n\n  // [ambiguousBlockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // Compiler value, before: lastHelper=value of last found helper, if any\n  // On stack, after, if no lastHelper: same as [blockValue]\n  // On stack, after, if lastHelper: value\n  ambiguousBlockValue: function ambiguousBlockValue() {\n    // We're being a bit cheeky and reusing the options value from the prior exec\n    var blockHelperMissing = this.aliasable('container.hooks.blockHelperMissing'),\n        params = [this.contextName(0)];\n    this.setupHelperArgs('', 0, params, true);\n\n    this.flushInline();\n\n    var current = this.topStack();\n    params.splice(1, 0, current);\n\n    this.pushSource(['if (!', this.lastHelper, ') { ', current, ' = ', this.source.functionCall(blockHelperMissing, 'call', params), '}']);\n  },\n\n  // [appendContent]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  //\n  // Appends the string value of `content` to the current buffer\n  appendContent: function appendContent(content) {\n    if (this.pendingContent) {\n      content = this.pendingContent + content;\n    } else {\n      this.pendingLocation = this.source.currentLocation;\n    }\n\n    this.pendingContent = content;\n  },\n\n  // [append]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Coerces `value` to a String and appends it to the current buffer.\n  //\n  // If `value` is truthy, or 0, it is coerced into a string and appended\n  // Otherwise, the empty string is appended\n  append: function append() {\n    if (this.isInline()) {\n      this.replaceStack(function (current) {\n        return [' != null ? ', current, ' : \"\"'];\n      });\n\n      this.pushSource(this.appendToBuffer(this.popStack()));\n    } else {\n      var local = this.popStack();\n      this.pushSource(['if (', local, ' != null) { ', this.appendToBuffer(local, undefined, true), ' }']);\n      if (this.environment.isSimple) {\n        this.pushSource(['else { ', this.appendToBuffer(\"''\", undefined, true), ' }']);\n      }\n    }\n  },\n\n  // [appendEscaped]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Escape `value` and append it to the buffer\n  appendEscaped: function appendEscaped() {\n    this.pushSource(this.appendToBuffer([this.aliasable('container.escapeExpression'), '(', this.popStack(), ')']));\n  },\n\n  // [getContext]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  // Compiler value, after: lastContext=depth\n  //\n  // Set the value of the `lastContext` compiler value to the depth\n  getContext: function getContext(depth) {\n    this.lastContext = depth;\n  },\n\n  // [pushContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext, ...\n  //\n  // Pushes the value of the current context onto the stack.\n  pushContext: function pushContext() {\n    this.pushStackLiteral(this.contextName(this.lastContext));\n  },\n\n  // [lookupOnContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext[name], ...\n  //\n  // Looks up the value of `name` on the current context and pushes\n  // it onto the stack.\n  lookupOnContext: function lookupOnContext(parts, falsy, strict, scoped) {\n    var i = 0;\n\n    if (!scoped && this.options.compat && !this.lastContext) {\n      // The depthed query is expected to handle the undefined logic for the root level that\n      // is implemented below, so we evaluate that directly in compat mode\n      this.push(this.depthedLookup(parts[i++]));\n    } else {\n      this.pushContext();\n    }\n\n    this.resolvePath('context', parts, i, falsy, strict);\n  },\n\n  // [lookupBlockParam]\n  //\n  // On stack, before: ...\n  // On stack, after: blockParam[name], ...\n  //\n  // Looks up the value of `parts` on the given block param and pushes\n  // it onto the stack.\n  lookupBlockParam: function lookupBlockParam(blockParamId, parts) {\n    this.useBlockParams = true;\n\n    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);\n    this.resolvePath('context', parts, 1);\n  },\n\n  // [lookupData]\n  //\n  // On stack, before: ...\n  // On stack, after: data, ...\n  //\n  // Push the data lookup operator\n  lookupData: function lookupData(depth, parts, strict) {\n    if (!depth) {\n      this.pushStackLiteral('data');\n    } else {\n      this.pushStackLiteral('container.data(data, ' + depth + ')');\n    }\n\n    this.resolvePath('data', parts, 0, true, strict);\n  },\n\n  resolvePath: function resolvePath(type, parts, i, falsy, strict) {\n    // istanbul ignore next\n\n    var _this2 = this;\n\n    if (this.options.strict || this.options.assumeObjects) {\n      this.push(strictLookup(this.options.strict && strict, this, parts, type));\n      return;\n    }\n\n    var len = parts.length;\n    for (; i < len; i++) {\n      /* eslint-disable no-loop-func */\n      this.replaceStack(function (current) {\n        var lookup = _this2.nameLookup(current, parts[i], type);\n        // We want to ensure that zero and false are handled properly if the context (falsy flag)\n        // needs to have the special handling for these values.\n        if (!falsy) {\n          return [' != null ? ', lookup, ' : ', current];\n        } else {\n          // Otherwise we can use generic falsy handling\n          return [' && ', lookup];\n        }\n      });\n      /* eslint-enable no-loop-func */\n    }\n  },\n\n  // [resolvePossibleLambda]\n  //\n  // On stack, before: value, ...\n  // On stack, after: resolved value, ...\n  //\n  // If the `value` is a lambda, replace it on the stack by\n  // the return value of the lambda\n  resolvePossibleLambda: function resolvePossibleLambda() {\n    this.push([this.aliasable('container.lambda'), '(', this.popStack(), ', ', this.contextName(0), ')']);\n  },\n\n  // [pushStringParam]\n  //\n  // On stack, before: ...\n  // On stack, after: string, currentContext, ...\n  //\n  // This opcode is designed for use in string mode, which\n  // provides the string value of a parameter along with its\n  // depth rather than resolving it immediately.\n  pushStringParam: function pushStringParam(string, type) {\n    this.pushContext();\n    this.pushString(type);\n\n    // If it's a subexpression, the string result\n    // will be pushed after this opcode.\n    if (type !== 'SubExpression') {\n      if (typeof string === 'string') {\n        this.pushString(string);\n      } else {\n        this.pushStackLiteral(string);\n      }\n    }\n  },\n\n  emptyHash: function emptyHash(omitEmpty) {\n    if (this.trackIds) {\n      this.push('{}'); // hashIds\n    }\n    if (this.stringParams) {\n      this.push('{}'); // hashContexts\n      this.push('{}'); // hashTypes\n    }\n    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');\n  },\n  pushHash: function pushHash() {\n    if (this.hash) {\n      this.hashes.push(this.hash);\n    }\n    this.hash = { values: {}, types: [], contexts: [], ids: [] };\n  },\n  popHash: function popHash() {\n    var hash = this.hash;\n    this.hash = this.hashes.pop();\n\n    if (this.trackIds) {\n      this.push(this.objectLiteral(hash.ids));\n    }\n    if (this.stringParams) {\n      this.push(this.objectLiteral(hash.contexts));\n      this.push(this.objectLiteral(hash.types));\n    }\n\n    this.push(this.objectLiteral(hash.values));\n  },\n\n  // [pushString]\n  //\n  // On stack, before: ...\n  // On stack, after: quotedString(string), ...\n  //\n  // Push a quoted version of `string` onto the stack\n  pushString: function pushString(string) {\n    this.pushStackLiteral(this.quotedString(string));\n  },\n\n  // [pushLiteral]\n  //\n  // On stack, before: ...\n  // On stack, after: value, ...\n  //\n  // Pushes a value onto the stack. This operation prevents\n  // the compiler from creating a temporary variable to hold\n  // it.\n  pushLiteral: function pushLiteral(value) {\n    this.pushStackLiteral(value);\n  },\n\n  // [pushProgram]\n  //\n  // On stack, before: ...\n  // On stack, after: program(guid), ...\n  //\n  // Push a program expression onto the stack. This takes\n  // a compile-time guid and converts it into a runtime-accessible\n  // expression.\n  pushProgram: function pushProgram(guid) {\n    if (guid != null) {\n      this.pushStackLiteral(this.programExpression(guid));\n    } else {\n      this.pushStackLiteral(null);\n    }\n  },\n\n  // [registerDecorator]\n  //\n  // On stack, before: hash, program, params..., ...\n  // On stack, after: ...\n  //\n  // Pops off the decorator's parameters, invokes the decorator,\n  // and inserts the decorator into the decorators list.\n  registerDecorator: function registerDecorator(paramSize, name) {\n    var foundDecorator = this.nameLookup('decorators', name, 'decorator'),\n        options = this.setupHelperArgs(name, paramSize);\n\n    this.decorators.push(['fn = ', this.decorators.functionCall(foundDecorator, '', ['fn', 'props', 'container', options]), ' || fn;']);\n  },\n\n  // [invokeHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // Pops off the helper's parameters, invokes the helper,\n  // and pushes the helper's return value onto the stack.\n  //\n  // If the helper is not found, `helperMissing` is called.\n  invokeHelper: function invokeHelper(paramSize, name, isSimple) {\n    var nonHelper = this.popStack(),\n        helper = this.setupHelper(paramSize, name);\n\n    var possibleFunctionCalls = [];\n\n    if (isSimple) {\n      // direct call to helper\n      possibleFunctionCalls.push(helper.name);\n    }\n    // call a function from the input object\n    possibleFunctionCalls.push(nonHelper);\n    if (!this.options.strict) {\n      possibleFunctionCalls.push(this.aliasable('container.hooks.helperMissing'));\n    }\n\n    var functionLookupCode = ['(', this.itemsSeparatedBy(possibleFunctionCalls, '||'), ')'];\n    var functionCall = this.source.functionCall(functionLookupCode, 'call', helper.callParams);\n    this.push(functionCall);\n  },\n\n  itemsSeparatedBy: function itemsSeparatedBy(items, separator) {\n    var result = [];\n    result.push(items[0]);\n    for (var i = 1; i < items.length; i++) {\n      result.push(separator, items[i]);\n    }\n    return result;\n  },\n  // [invokeKnownHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // This operation is used when the helper is known to exist,\n  // so a `helperMissing` fallback is not required.\n  invokeKnownHelper: function invokeKnownHelper(paramSize, name) {\n    var helper = this.setupHelper(paramSize, name);\n    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));\n  },\n\n  // [invokeAmbiguous]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of disambiguation\n  //\n  // This operation is used when an expression like `{{foo}}`\n  // is provided, but we don't know at compile-time whether it\n  // is a helper or a path.\n  //\n  // This operation emits more code than the other options,\n  // and can be avoided by passing the `knownHelpers` and\n  // `knownHelpersOnly` flags at compile-time.\n  invokeAmbiguous: function invokeAmbiguous(name, helperCall) {\n    this.useRegister('helper');\n\n    var nonHelper = this.popStack();\n\n    this.emptyHash();\n    var helper = this.setupHelper(0, name, helperCall);\n\n    var helperName = this.lastHelper = this.nameLookup('helpers', name, 'helper');\n\n    var lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];\n    if (!this.options.strict) {\n      lookup[0] = '(helper = ';\n      lookup.push(' != null ? helper : ', this.aliasable('container.hooks.helperMissing'));\n    }\n\n    this.push(['(', lookup, helper.paramsInit ? ['),(', helper.paramsInit] : [], '),', '(typeof helper === ', this.aliasable('\"function\"'), ' ? ', this.source.functionCall('helper', 'call', helper.callParams), ' : helper))']);\n  },\n\n  // [invokePartial]\n  //\n  // On stack, before: context, ...\n  // On stack after: result of partial invocation\n  //\n  // This operation pops off a context, invokes a partial with that context,\n  // and pushes the result of the invocation back.\n  invokePartial: function invokePartial(isDynamic, name, indent) {\n    var params = [],\n        options = this.setupParams(name, 1, params);\n\n    if (isDynamic) {\n      name = this.popStack();\n      delete options.name;\n    }\n\n    if (indent) {\n      options.indent = JSON.stringify(indent);\n    }\n    options.helpers = 'helpers';\n    options.partials = 'partials';\n    options.decorators = 'container.decorators';\n\n    if (!isDynamic) {\n      params.unshift(this.nameLookup('partials', name, 'partial'));\n    } else {\n      params.unshift(name);\n    }\n\n    if (this.options.compat) {\n      options.depths = 'depths';\n    }\n    options = this.objectLiteral(options);\n    params.push(options);\n\n    this.push(this.source.functionCall('container.invokePartial', '', params));\n  },\n\n  // [assignToHash]\n  //\n  // On stack, before: value, ..., hash, ...\n  // On stack, after: ..., hash, ...\n  //\n  // Pops a value off the stack and assigns it to the current hash\n  assignToHash: function assignToHash(key) {\n    var value = this.popStack(),\n        context = undefined,\n        type = undefined,\n        id = undefined;\n\n    if (this.trackIds) {\n      id = this.popStack();\n    }\n    if (this.stringParams) {\n      type = this.popStack();\n      context = this.popStack();\n    }\n\n    var hash = this.hash;\n    if (context) {\n      hash.contexts[key] = context;\n    }\n    if (type) {\n      hash.types[key] = type;\n    }\n    if (id) {\n      hash.ids[key] = id;\n    }\n    hash.values[key] = value;\n  },\n\n  pushId: function pushId(type, name, child) {\n    if (type === 'BlockParam') {\n      this.pushStackLiteral('blockParams[' + name[0] + '].path[' + name[1] + ']' + (child ? ' + ' + JSON.stringify('.' + child) : ''));\n    } else if (type === 'PathExpression') {\n      this.pushString(name);\n    } else if (type === 'SubExpression') {\n      this.pushStackLiteral('true');\n    } else {\n      this.pushStackLiteral('null');\n    }\n  },\n\n  // HELPERS\n\n  compiler: JavaScriptCompiler,\n\n  compileChildren: function compileChildren(environment, options) {\n    var children = environment.children,\n        child = undefined,\n        compiler = undefined;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      child = children[i];\n      compiler = new this.compiler(); // eslint-disable-line new-cap\n\n      var existing = this.matchExistingProgram(child);\n\n      if (existing == null) {\n        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children\n        var index = this.context.programs.length;\n        child.index = index;\n        child.name = 'program' + index;\n        this.context.programs[index] = compiler.compile(child, options, this.context, !this.precompile);\n        this.context.decorators[index] = compiler.decorators;\n        this.context.environments[index] = child;\n\n        this.useDepths = this.useDepths || compiler.useDepths;\n        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;\n        child.useDepths = this.useDepths;\n        child.useBlockParams = this.useBlockParams;\n      } else {\n        child.index = existing.index;\n        child.name = 'program' + existing.index;\n\n        this.useDepths = this.useDepths || existing.useDepths;\n        this.useBlockParams = this.useBlockParams || existing.useBlockParams;\n      }\n    }\n  },\n  matchExistingProgram: function matchExistingProgram(child) {\n    for (var i = 0, len = this.context.environments.length; i < len; i++) {\n      var environment = this.context.environments[i];\n      if (environment && environment.equals(child)) {\n        return environment;\n      }\n    }\n  },\n\n  programExpression: function programExpression(guid) {\n    var child = this.environment.children[guid],\n        programParams = [child.index, 'data', child.blockParams];\n\n    if (this.useBlockParams || this.useDepths) {\n      programParams.push('blockParams');\n    }\n    if (this.useDepths) {\n      programParams.push('depths');\n    }\n\n    return 'container.program(' + programParams.join(', ') + ')';\n  },\n\n  useRegister: function useRegister(name) {\n    if (!this.registers[name]) {\n      this.registers[name] = true;\n      this.registers.list.push(name);\n    }\n  },\n\n  push: function push(expr) {\n    if (!(expr instanceof Literal)) {\n      expr = this.source.wrap(expr);\n    }\n\n    this.inlineStack.push(expr);\n    return expr;\n  },\n\n  pushStackLiteral: function pushStackLiteral(item) {\n    this.push(new Literal(item));\n  },\n\n  pushSource: function pushSource(source) {\n    if (this.pendingContent) {\n      this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation));\n      this.pendingContent = undefined;\n    }\n\n    if (source) {\n      this.source.push(source);\n    }\n  },\n\n  replaceStack: function replaceStack(callback) {\n    var prefix = ['('],\n        stack = undefined,\n        createdStack = undefined,\n        usedLiteral = undefined;\n\n    /* istanbul ignore next */\n    if (!this.isInline()) {\n      throw new _exception2['default']('replaceStack on non-inline');\n    }\n\n    // We want to merge the inline statement into the replacement statement via ','\n    var top = this.popStack(true);\n\n    if (top instanceof Literal) {\n      // Literals do not need to be inlined\n      stack = [top.value];\n      prefix = ['(', stack];\n      usedLiteral = true;\n    } else {\n      // Get or create the current stack name for use by the inline\n      createdStack = true;\n      var _name = this.incrStack();\n\n      prefix = ['((', this.push(_name), ' = ', top, ')'];\n      stack = this.topStack();\n    }\n\n    var item = callback.call(this, stack);\n\n    if (!usedLiteral) {\n      this.popStack();\n    }\n    if (createdStack) {\n      this.stackSlot--;\n    }\n    this.push(prefix.concat(item, ')'));\n  },\n\n  incrStack: function incrStack() {\n    this.stackSlot++;\n    if (this.stackSlot > this.stackVars.length) {\n      this.stackVars.push('stack' + this.stackSlot);\n    }\n    return this.topStackName();\n  },\n  topStackName: function topStackName() {\n    return 'stack' + this.stackSlot;\n  },\n  flushInline: function flushInline() {\n    var inlineStack = this.inlineStack;\n    this.inlineStack = [];\n    for (var i = 0, len = inlineStack.length; i < len; i++) {\n      var entry = inlineStack[i];\n      /* istanbul ignore if */\n      if (entry instanceof Literal) {\n        this.compileStack.push(entry);\n      } else {\n        var stack = this.incrStack();\n        this.pushSource([stack, ' = ', entry, ';']);\n        this.compileStack.push(stack);\n      }\n    }\n  },\n  isInline: function isInline() {\n    return this.inlineStack.length;\n  },\n\n  popStack: function popStack(wrapped) {\n    var inline = this.isInline(),\n        item = (inline ? this.inlineStack : this.compileStack).pop();\n\n    if (!wrapped && item instanceof Literal) {\n      return item.value;\n    } else {\n      if (!inline) {\n        /* istanbul ignore next */\n        if (!this.stackSlot) {\n          throw new _exception2['default']('Invalid stack pop');\n        }\n        this.stackSlot--;\n      }\n      return item;\n    }\n  },\n\n  topStack: function topStack() {\n    var stack = this.isInline() ? this.inlineStack : this.compileStack,\n        item = stack[stack.length - 1];\n\n    /* istanbul ignore if */\n    if (item instanceof Literal) {\n      return item.value;\n    } else {\n      return item;\n    }\n  },\n\n  contextName: function contextName(context) {\n    if (this.useDepths && context) {\n      return 'depths[' + context + ']';\n    } else {\n      return 'depth' + context;\n    }\n  },\n\n  quotedString: function quotedString(str) {\n    return this.source.quotedString(str);\n  },\n\n  objectLiteral: function objectLiteral(obj) {\n    return this.source.objectLiteral(obj);\n  },\n\n  aliasable: function aliasable(name) {\n    var ret = this.aliases[name];\n    if (ret) {\n      ret.referenceCount++;\n      return ret;\n    }\n\n    ret = this.aliases[name] = this.source.wrap(name);\n    ret.aliasable = true;\n    ret.referenceCount = 1;\n\n    return ret;\n  },\n\n  setupHelper: function setupHelper(paramSize, name, blockHelper) {\n    var params = [],\n        paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);\n    var foundHelper = this.nameLookup('helpers', name, 'helper'),\n        callContext = this.aliasable(this.contextName(0) + ' != null ? ' + this.contextName(0) + ' : (container.nullContext || {})');\n\n    return {\n      params: params,\n      paramsInit: paramsInit,\n      name: foundHelper,\n      callParams: [callContext].concat(params)\n    };\n  },\n\n  setupParams: function setupParams(helper, paramSize, params) {\n    var options = {},\n        contexts = [],\n        types = [],\n        ids = [],\n        objectArgs = !params,\n        param = undefined;\n\n    if (objectArgs) {\n      params = [];\n    }\n\n    options.name = this.quotedString(helper);\n    options.hash = this.popStack();\n\n    if (this.trackIds) {\n      options.hashIds = this.popStack();\n    }\n    if (this.stringParams) {\n      options.hashTypes = this.popStack();\n      options.hashContexts = this.popStack();\n    }\n\n    var inverse = this.popStack(),\n        program = this.popStack();\n\n    // Avoid setting fn and inverse if neither are set. This allows\n    // helpers to do a check for `if (options.fn)`\n    if (program || inverse) {\n      options.fn = program || 'container.noop';\n      options.inverse = inverse || 'container.noop';\n    }\n\n    // The parameters go on to the stack in order (making sure that they are evaluated in order)\n    // so we need to pop them off the stack in reverse order\n    var i = paramSize;\n    while (i--) {\n      param = this.popStack();\n      params[i] = param;\n\n      if (this.trackIds) {\n        ids[i] = this.popStack();\n      }\n      if (this.stringParams) {\n        types[i] = this.popStack();\n        contexts[i] = this.popStack();\n      }\n    }\n\n    if (objectArgs) {\n      options.args = this.source.generateArray(params);\n    }\n\n    if (this.trackIds) {\n      options.ids = this.source.generateArray(ids);\n    }\n    if (this.stringParams) {\n      options.types = this.source.generateArray(types);\n      options.contexts = this.source.generateArray(contexts);\n    }\n\n    if (this.options.data) {\n      options.data = 'data';\n    }\n    if (this.useBlockParams) {\n      options.blockParams = 'blockParams';\n    }\n    return options;\n  },\n\n  setupHelperArgs: function setupHelperArgs(helper, paramSize, params, useRegister) {\n    var options = this.setupParams(helper, paramSize, params);\n    options.loc = JSON.stringify(this.source.currentLocation);\n    options = this.objectLiteral(options);\n    if (useRegister) {\n      this.useRegister('options');\n      params.push('options');\n      return ['options=', options];\n    } else if (params) {\n      params.push(options);\n      return '';\n    } else {\n      return options;\n    }\n  }\n};\n\n(function () {\n  var reservedWords = ('break else new var' + ' case finally return void' + ' catch for switch while' + ' continue function this with' + ' default if throw' + ' delete in try' + ' do instanceof typeof' + ' abstract enum int short' + ' boolean export interface static' + ' byte extends long super' + ' char final native synchronized' + ' class float package throws' + ' const goto private transient' + ' debugger implements protected volatile' + ' double import public let yield await' + ' null true false').split(' ');\n\n  var compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};\n\n  for (var i = 0, l = reservedWords.length; i < l; i++) {\n    compilerWords[reservedWords[i]] = true;\n  }\n})();\n\n/**\n * @deprecated May be removed in the next major version\n */\nJavaScriptCompiler.isValidJavaScriptVariableName = function (name) {\n  return !JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name);\n};\n\nfunction strictLookup(requireTerminal, compiler, parts, type) {\n  var stack = compiler.popStack(),\n      i = 0,\n      len = parts.length;\n  if (requireTerminal) {\n    len--;\n  }\n\n  for (; i < len; i++) {\n    stack = compiler.nameLookup(stack, parts[i], type);\n  }\n\n  if (requireTerminal) {\n    return [compiler.aliasable('container.strict'), '(', stack, ', ', compiler.quotedString(parts[i]), ', ', JSON.stringify(compiler.source.currentLocation), ' )'];\n  } else {\n    return stack;\n  }\n}\n\nexports['default'] = JavaScriptCompiler;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _handlebarsRuntime = require('./handlebars.runtime');\n\nvar _handlebarsRuntime2 = _interopRequireDefault(_handlebarsRuntime);\n\n// Compiler imports\n\nvar _handlebarsCompilerAst = require('./handlebars/compiler/ast');\n\nvar _handlebarsCompilerAst2 = _interopRequireDefault(_handlebarsCompilerAst);\n\nvar _handlebarsCompilerBase = require('./handlebars/compiler/base');\n\nvar _handlebarsCompilerCompiler = require('./handlebars/compiler/compiler');\n\nvar _handlebarsCompilerJavascriptCompiler = require('./handlebars/compiler/javascript-compiler');\n\nvar _handlebarsCompilerJavascriptCompiler2 = _interopRequireDefault(_handlebarsCompilerJavascriptCompiler);\n\nvar _handlebarsCompilerVisitor = require('./handlebars/compiler/visitor');\n\nvar _handlebarsCompilerVisitor2 = _interopRequireDefault(_handlebarsCompilerVisitor);\n\nvar _handlebarsNoConflict = require('./handlebars/no-conflict');\n\nvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\n\nvar _create = _handlebarsRuntime2['default'].create;\nfunction create() {\n  var hb = _create();\n\n  hb.compile = function (input, options) {\n    return _handlebarsCompilerCompiler.compile(input, options, hb);\n  };\n  hb.precompile = function (input, options) {\n    return _handlebarsCompilerCompiler.precompile(input, options, hb);\n  };\n\n  hb.AST = _handlebarsCompilerAst2['default'];\n  hb.Compiler = _handlebarsCompilerCompiler.Compiler;\n  hb.JavaScriptCompiler = _handlebarsCompilerJavascriptCompiler2['default'];\n  hb.Parser = _handlebarsCompilerBase.parser;\n  hb.parse = _handlebarsCompilerBase.parse;\n  hb.parseWithoutProcessing = _handlebarsCompilerBase.parseWithoutProcessing;\n\n  return hb;\n}\n\nvar inst = create();\ninst.create = create;\n\n_handlebarsNoConflict2['default'](inst);\n\ninst.Visitor = _handlebarsCompilerVisitor2['default'];\n\ninst['default'] = inst;\n\nexports['default'] = inst;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9oYW5kbGViYXJzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7aUNBQW9CLHNCQUFzQjs7Ozs7O3FDQUcxQiwyQkFBMkI7Ozs7c0NBS3BDLDRCQUE0Qjs7MENBQ1csZ0NBQWdDOztvREFDL0MsMkNBQTJDOzs7O3lDQUN0RCwrQkFBK0I7Ozs7b0NBRTVCLDBCQUEwQjs7OztBQUVqRCxJQUFJLE9BQU8sR0FBRywrQkFBUSxNQUFNLENBQUM7QUFDN0IsU0FBUyxNQUFNLEdBQUc7QUFDaEIsTUFBSSxFQUFFLEdBQUcsT0FBTyxFQUFFLENBQUM7O0FBRW5CLElBQUUsQ0FBQyxPQUFPLEdBQUcsVUFBUyxLQUFLLEVBQUUsT0FBTyxFQUFFO0FBQ3BDLFdBQU8sb0NBQVEsS0FBSyxFQUFFLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQztHQUNwQyxDQUFDO0FBQ0YsSUFBRSxDQUFDLFVBQVUsR0FBRyxVQUFTLEtBQUssRUFBRSxPQUFPLEVBQUU7QUFDdkMsV0FBTyx1Q0FBVyxLQUFLLEVBQUUsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0dBQ3ZDLENBQUM7O0FBRUYsSUFBRSxDQUFDLEdBQUcscUNBQU0sQ0FBQztBQUNiLElBQUUsQ0FBQyxRQUFRLHVDQUFXLENBQUM7QUFDdkIsSUFBRSxDQUFDLGtCQUFrQixvREFBcUIsQ0FBQztBQUMzQyxJQUFFLENBQUMsTUFBTSxpQ0FBUyxDQUFDO0FBQ25CLElBQUUsQ0FBQyxLQUFLLGdDQUFRLENBQUM7QUFDakIsSUFBRSxDQUFDLHNCQUFzQixpREFBeUIsQ0FBQzs7QUFFbkQsU0FBTyxFQUFFLENBQUM7Q0FDWDs7QUFFRCxJQUFJLElBQUksR0FBRyxNQUFNLEVBQUUsQ0FBQztBQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQzs7QUFFckIsa0NBQVcsSUFBSSxDQUFDLENBQUM7O0FBRWpCLElBQUksQ0FBQyxPQUFPLHlDQUFVLENBQUM7O0FBRXZCLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxJQUFJLENBQUM7O3FCQUVSLElBQUkiLCJmaWxlIjoiaGFuZGxlYmFycy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBydW50aW1lIGZyb20gJy4vaGFuZGxlYmFycy5ydW50aW1lJztcblxuLy8gQ29tcGlsZXIgaW1wb3J0c1xuaW1wb3J0IEFTVCBmcm9tICcuL2hhbmRsZWJhcnMvY29tcGlsZXIvYXN0JztcbmltcG9ydCB7XG4gIHBhcnNlciBhcyBQYXJzZXIsXG4gIHBhcnNlLFxuICBwYXJzZVdpdGhvdXRQcm9jZXNzaW5nXG59IGZyb20gJy4vaGFuZGxlYmFycy9jb21waWxlci9iYXNlJztcbmltcG9ydCB7IENvbXBpbGVyLCBjb21waWxlLCBwcmVjb21waWxlIH0gZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL2NvbXBpbGVyJztcbmltcG9ydCBKYXZhU2NyaXB0Q29tcGlsZXIgZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL2phdmFzY3JpcHQtY29tcGlsZXInO1xuaW1wb3J0IFZpc2l0b3IgZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL3Zpc2l0b3InO1xuXG5pbXBvcnQgbm9Db25mbGljdCBmcm9tICcuL2hhbmRsZWJhcnMvbm8tY29uZmxpY3QnO1xuXG5sZXQgX2NyZWF0ZSA9IHJ1bnRpbWUuY3JlYXRlO1xuZnVuY3Rpb24gY3JlYXRlKCkge1xuICBsZXQgaGIgPSBfY3JlYXRlKCk7XG5cbiAgaGIuY29tcGlsZSA9IGZ1bmN0aW9uKGlucHV0LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGNvbXBpbGUoaW5wdXQsIG9wdGlvbnMsIGhiKTtcbiAgfTtcbiAgaGIucHJlY29tcGlsZSA9IGZ1bmN0aW9uKGlucHV0LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHByZWNvbXBpbGUoaW5wdXQsIG9wdGlvbnMsIGhiKTtcbiAgfTtcblxuICBoYi5BU1QgPSBBU1Q7XG4gIGhiLkNvbXBpbGVyID0gQ29tcGlsZXI7XG4gIGhiLkphdmFTY3JpcHRDb21waWxlciA9IEphdmFTY3JpcHRDb21waWxlcjtcbiAgaGIuUGFyc2VyID0gUGFyc2VyO1xuICBoYi5wYXJzZSA9IHBhcnNlO1xuICBoYi5wYXJzZVdpdGhvdXRQcm9jZXNzaW5nID0gcGFyc2VXaXRob3V0UHJvY2Vzc2luZztcblxuICByZXR1cm4gaGI7XG59XG5cbmxldCBpbnN0ID0gY3JlYXRlKCk7XG5pbnN0LmNyZWF0ZSA9IGNyZWF0ZTtcblxubm9Db25mbGljdChpbnN0KTtcblxuaW5zdC5WaXNpdG9yID0gVmlzaXRvcjtcblxuaW5zdFsnZGVmYXVsdCddID0gaW5zdDtcblxuZXhwb3J0IGRlZmF1bHQgaW5zdDtcbiJdfQ==\n","'use strict';\n\nvar d2r = Math.PI / 180,\n    r2d = 180 / Math.PI;\n\n/**\n * Get the bbox of a tile\n *\n * @name tileToBBOX\n * @param {Array<number>} tile\n * @returns {Array<number>} bbox\n * @example\n * var bbox = tileToBBOX([5, 10, 10])\n * //=bbox\n */\nfunction tileToBBOX(tile) {\n    var e = tile2lon(tile[0] + 1, tile[2]);\n    var w = tile2lon(tile[0], tile[2]);\n    var s = tile2lat(tile[1] + 1, tile[2]);\n    var n = tile2lat(tile[1], tile[2]);\n    return [w, s, e, n];\n}\n\n/**\n * Get a geojson representation of a tile\n *\n * @name tileToGeoJSON\n * @param {Array<number>} tile\n * @returns {Feature<Polygon>}\n * @example\n * var poly = tileToGeoJSON([5, 10, 10])\n * //=poly\n */\nfunction tileToGeoJSON(tile) {\n    var bbox = tileToBBOX(tile);\n    var poly = {\n        type: 'Polygon',\n        coordinates: [[\n            [bbox[0], bbox[3]],\n            [bbox[0], bbox[1]],\n            [bbox[2], bbox[1]],\n            [bbox[2], bbox[3]],\n            [bbox[0], bbox[3]]\n        ]]\n    };\n    return poly;\n}\n\nfunction tile2lon(x, z) {\n    return x / Math.pow(2, z) * 360 - 180;\n}\n\nfunction tile2lat(y, z) {\n    var n = Math.PI - 2 * Math.PI * y / Math.pow(2, z);\n    return r2d * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n}\n\n/**\n * Get the tile for a point at a specified zoom level\n *\n * @name pointToTile\n * @param {number} lon\n * @param {number} lat\n * @param {number} z\n * @returns {Array<number>} tile\n * @example\n * var tile = pointToTile(1, 1, 20)\n * //=tile\n */\nfunction pointToTile(lon, lat, z) {\n    var tile = pointToTileFraction(lon, lat, z);\n    tile[0] = Math.floor(tile[0]);\n    tile[1] = Math.floor(tile[1]);\n    return tile;\n}\n\n/**\n * Get the 4 tiles one zoom level higher\n *\n * @name getChildren\n * @param {Array<number>} tile\n * @returns {Array<Array<number>>} tiles\n * @example\n * var tiles = getChildren([5, 10, 10])\n * //=tiles\n */\nfunction getChildren(tile) {\n    return [\n        [tile[0] * 2, tile[1] * 2, tile[2] + 1],\n        [tile[0] * 2 + 1, tile[1] * 2, tile[2 ] + 1],\n        [tile[0] * 2 + 1, tile[1] * 2 + 1, tile[2] + 1],\n        [tile[0] * 2, tile[1] * 2 + 1, tile[2] + 1]\n    ];\n}\n\n/**\n * Get the tile one zoom level lower\n *\n * @name getParent\n * @param {Array<number>} tile\n * @returns {Array<number>} tile\n * @example\n * var tile = getParent([5, 10, 10])\n * //=tile\n */\nfunction getParent(tile) {\n    return [tile[0] >> 1, tile[1] >> 1, tile[2] - 1];\n}\n\nfunction getSiblings(tile) {\n    return getChildren(getParent(tile));\n}\n\n/**\n * Get the 3 sibling tiles for a tile\n *\n * @name getSiblings\n * @param {Array<number>} tile\n * @returns {Array<Array<number>>} tiles\n * @example\n * var tiles = getSiblings([5, 10, 10])\n * //=tiles\n */\nfunction hasSiblings(tile, tiles) {\n    var siblings = getSiblings(tile);\n    for (var i = 0; i < siblings.length; i++) {\n        if (!hasTile(tiles, siblings[i])) return false;\n    }\n    return true;\n}\n\n/**\n * Check to see if an array of tiles contains a particular tile\n *\n * @name hasTile\n * @param {Array<Array<number>>} tiles\n * @param {Array<number>} tile\n * @returns {boolean}\n * @example\n * var tiles = [\n *     [0, 0, 5],\n *     [0, 1, 5],\n *     [1, 1, 5],\n *     [1, 0, 5]\n * ]\n * hasTile(tiles, [0, 0, 5])\n * //=boolean\n */\nfunction hasTile(tiles, tile) {\n    for (var i = 0; i < tiles.length; i++) {\n        if (tilesEqual(tiles[i], tile)) return true;\n    }\n    return false;\n}\n\n/**\n * Check to see if two tiles are the same\n *\n * @name tilesEqual\n * @param {Array<number>} tile1\n * @param {Array<number>} tile2\n * @returns {boolean}\n * @example\n * tilesEqual([0, 1, 5], [0, 0, 5])\n * //=boolean\n */\nfunction tilesEqual(tile1, tile2) {\n    return (\n        tile1[0] === tile2[0] &&\n        tile1[1] === tile2[1] &&\n        tile1[2] === tile2[2]\n    );\n}\n\n/**\n * Get the quadkey for a tile\n *\n * @name tileToQuadkey\n * @param {Array<number>} tile\n * @returns {string} quadkey\n * @example\n * var quadkey = tileToQuadkey([0, 1, 5])\n * //=quadkey\n */\nfunction tileToQuadkey(tile) {\n    var index = '';\n    for (var z = tile[2]; z > 0; z--) {\n        var b = 0;\n        var mask = 1 << (z - 1);\n        if ((tile[0] & mask) !== 0) b++;\n        if ((tile[1] & mask) !== 0) b += 2;\n        index += b.toString();\n    }\n    return index;\n}\n\n/**\n * Get the tile for a quadkey\n *\n * @name quadkeyToTile\n * @param {string} quadkey\n * @returns {Array<number>} tile\n * @example\n * var tile = quadkeyToTile('00001033')\n * //=tile\n */\nfunction quadkeyToTile(quadkey) {\n    var x = 0;\n    var y = 0;\n    var z = quadkey.length;\n\n    for (var i = z; i > 0; i--) {\n        var mask = 1 << (i - 1);\n        var q = +quadkey[z - i];\n        if (q === 1) x |= mask;\n        if (q === 2) y |= mask;\n        if (q === 3) {\n            x |= mask;\n            y |= mask;\n        }\n    }\n    return [x, y, z];\n}\n\n/**\n * Get the smallest tile to cover a bbox\n *\n * @name bboxToTile\n * @param {Array<number>} bbox\n * @returns {Array<number>} tile\n * @example\n * var tile = bboxToTile([ -178, 84, -177, 85 ])\n * //=tile\n */\nfunction bboxToTile(bboxCoords) {\n    var min = pointToTile(bboxCoords[0], bboxCoords[1], 32);\n    var max = pointToTile(bboxCoords[2], bboxCoords[3], 32);\n    var bbox = [min[0], min[1], max[0], max[1]];\n\n    var z = getBboxZoom(bbox);\n    if (z === 0) return [0, 0, 0];\n    var x = bbox[0] >>> (32 - z);\n    var y = bbox[1] >>> (32 - z);\n    return [x, y, z];\n}\n\nfunction getBboxZoom(bbox) {\n    var MAX_ZOOM = 28;\n    for (var z = 0; z < MAX_ZOOM; z++) {\n        var mask = 1 << (32 - (z + 1));\n        if (((bbox[0] & mask) !== (bbox[2] & mask)) ||\n            ((bbox[1] & mask) !== (bbox[3] & mask))) {\n            return z;\n        }\n    }\n\n    return MAX_ZOOM;\n}\n\n/**\n * Get the precise fractional tile location for a point at a zoom level\n *\n * @name pointToTileFraction\n * @param {number} lon\n * @param {number} lat\n * @param {number} z\n * @returns {Array<number>} tile fraction\n * var tile = pointToTileFraction(30.5, 50.5, 15)\n * //=tile\n */\nfunction pointToTileFraction(lon, lat, z) {\n    var sin = Math.sin(lat * d2r),\n        z2 = Math.pow(2, z),\n        x = z2 * (lon / 360 + 0.5),\n        y = z2 * (0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI);\n\n    // Wrap Tile X\n    x = x % z2;\n    if (x < 0) x = x + z2;\n    return [x, y, z];\n}\n\nmodule.exports = {\n    tileToGeoJSON: tileToGeoJSON,\n    tileToBBOX: tileToBBOX,\n    getChildren: getChildren,\n    getParent: getParent,\n    getSiblings: getSiblings,\n    hasTile: hasTile,\n    hasSiblings: hasSiblings,\n    tilesEqual: tilesEqual,\n    tileToQuadkey: tileToQuadkey,\n    quadkeyToTile: quadkeyToTile,\n    pointToTile: pointToTile,\n    bboxToTile: bboxToTile,\n    pointToTileFraction: pointToTileFraction\n};\n","'use strict';\n\nmodule.exports = Point;\n\n/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class Point\n * @param {Number} x the x-coordinate. this could be longitude or screen\n * pixels, or any other sort of unit.\n * @param {Number} y the y-coordinate. this could be latitude or screen\n * pixels, or any other sort of unit.\n * @example\n * var point = new Point(-77, 38);\n */\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone: function() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add:     function(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub:     function(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint:    function(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint:     function(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    mult:    function(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    div:     function(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate:  function(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround:  function(a,p) { return this.clone()._rotateAround(a,p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {Array<Number>} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult: function(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit:    function() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp:    function() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round:   function() { return this.clone()._round(); },\n\n    /**\n     * Return the magitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {Number} magnitude\n     */\n    mag: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals: function(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    dist: function(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    distSqr: function(p) {\n        var dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {Number} angle\n     */\n    angle: function() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleTo: function(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleWith: function(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /*\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {Number} x the x-coordinate\n     * @param {Number} y the y-coordinate\n     * @return {Number} the angle in radians\n     */\n    angleWithSep: function(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    _matMult: function(m) {\n        var x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _add: function(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    _sub: function(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    _mult: function(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    _div: function(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    _multByPoint: function(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    _divByPoint: function(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit: function() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp: function() {\n        var y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    _rotate: function(angle) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _rotateAround: function(angle, p) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, or an unknown type, return it unchanged\n * @param {Array<Number>|Point|*} a any kind of input value\n * @return {Point} constructed point, or passed-through value.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (a) {\n    if (a instanceof Point) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        return new Point(a[0], a[1]);\n    }\n    return a;\n};\n","'use strict';\n\nvar Point = require('@mapbox/point-geometry');\n\nmodule.exports = VectorTileFeature;\n\nfunction VectorTileFeature(pbf, end, extent, keys, values) {\n    // Public\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n\n    pbf.readFields(readFeature, this, end);\n}\n\nfunction readFeature(tag, feature, pbf) {\n    if (tag == 1) feature.id = pbf.readVarint();\n    else if (tag == 2) readTag(pbf, feature);\n    else if (tag == 3) feature.type = pbf.readVarint();\n    else if (tag == 4) feature._geometry = pbf.pos;\n}\n\nfunction readTag(pbf, feature) {\n    var end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var key = feature._keys[pbf.readVarint()],\n            value = feature._values[pbf.readVarint()];\n        feature.properties[key] = value;\n    }\n}\n\nVectorTileFeature.types = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nVectorTileFeature.prototype.loadGeometry = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        lines = [],\n        line;\n\n    while (pbf.pos < end) {\n        if (length <= 0) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n\n            if (cmd === 1) { // moveTo\n                if (line) lines.push(line);\n                line = [];\n            }\n\n            line.push(new Point(x, y));\n\n        } else if (cmd === 7) {\n\n            // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n            if (line) {\n                line.push(line[0].clone()); // closePolygon\n            }\n\n        } else {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    if (line) lines.push(line);\n\n    return lines;\n};\n\nVectorTileFeature.prototype.bbox = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        x1 = Infinity,\n        x2 = -Infinity,\n        y1 = Infinity,\n        y2 = -Infinity;\n\n    while (pbf.pos < end) {\n        if (length <= 0) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n            if (x < x1) x1 = x;\n            if (x > x2) x2 = x;\n            if (y < y1) y1 = y;\n            if (y > y2) y2 = y;\n\n        } else if (cmd !== 7) {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    return [x1, y1, x2, y2];\n};\n\nVectorTileFeature.prototype.toGeoJSON = function(x, y, z) {\n    var size = this.extent * Math.pow(2, z),\n        x0 = this.extent * x,\n        y0 = this.extent * y,\n        coords = this.loadGeometry(),\n        type = VectorTileFeature.types[this.type],\n        i, j;\n\n    function project(line) {\n        for (var j = 0; j < line.length; j++) {\n            var p = line[j], y2 = 180 - (p.y + y0) * 360 / size;\n            line[j] = [\n                (p.x + x0) * 360 / size - 180,\n                360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90\n            ];\n        }\n    }\n\n    switch (this.type) {\n    case 1:\n        var points = [];\n        for (i = 0; i < coords.length; i++) {\n            points[i] = coords[i][0];\n        }\n        coords = points;\n        project(coords);\n        break;\n\n    case 2:\n        for (i = 0; i < coords.length; i++) {\n            project(coords[i]);\n        }\n        break;\n\n    case 3:\n        coords = classifyRings(coords);\n        for (i = 0; i < coords.length; i++) {\n            for (j = 0; j < coords[i].length; j++) {\n                project(coords[i][j]);\n            }\n        }\n        break;\n    }\n\n    if (coords.length === 1) {\n        coords = coords[0];\n    } else {\n        type = 'Multi' + type;\n    }\n\n    var result = {\n        type: \"Feature\",\n        geometry: {\n            type: type,\n            coordinates: coords\n        },\n        properties: this.properties\n    };\n\n    if ('id' in this) {\n        result.id = this.id;\n    }\n\n    return result;\n};\n\n// classifies an array of rings into polygons with outer rings and holes\n\nfunction classifyRings(rings) {\n    var len = rings.length;\n\n    if (len <= 1) return [rings];\n\n    var polygons = [],\n        polygon,\n        ccw;\n\n    for (var i = 0; i < len; i++) {\n        var area = signedArea(rings[i]);\n        if (area === 0) continue;\n\n        if (ccw === undefined) ccw = area < 0;\n\n        if (ccw === area < 0) {\n            if (polygon) polygons.push(polygon);\n            polygon = [rings[i]];\n\n        } else {\n            polygon.push(rings[i]);\n        }\n    }\n    if (polygon) polygons.push(polygon);\n\n    return polygons;\n}\n\nfunction signedArea(ring) {\n    var sum = 0;\n    for (var i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n","'use strict';\n\nvar VectorTileFeature = require('./vectortilefeature.js');\n\nmodule.exports = VectorTileLayer;\n\nfunction VectorTileLayer(pbf, end) {\n    // Public\n    this.version = 1;\n    this.name = null;\n    this.extent = 4096;\n    this.length = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n\n    pbf.readFields(readLayer, this, end);\n\n    this.length = this._features.length;\n}\n\nfunction readLayer(tag, layer, pbf) {\n    if (tag === 15) layer.version = pbf.readVarint();\n    else if (tag === 1) layer.name = pbf.readString();\n    else if (tag === 5) layer.extent = pbf.readVarint();\n    else if (tag === 2) layer._features.push(pbf.pos);\n    else if (tag === 3) layer._keys.push(pbf.readString());\n    else if (tag === 4) layer._values.push(readValueMessage(pbf));\n}\n\nfunction readValueMessage(pbf) {\n    var value = null,\n        end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var tag = pbf.readVarint() >> 3;\n\n        value = tag === 1 ? pbf.readString() :\n            tag === 2 ? pbf.readFloat() :\n            tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n            tag === 5 ? pbf.readVarint() :\n            tag === 6 ? pbf.readSVarint() :\n            tag === 7 ? pbf.readBoolean() : null;\n    }\n\n    return value;\n}\n\n// return feature `i` from this layer as a `VectorTileFeature`\nVectorTileLayer.prototype.feature = function(i) {\n    if (i < 0 || i >= this._features.length) throw new Error('feature index out of bounds');\n\n    this._pbf.pos = this._features[i];\n\n    var end = this._pbf.readVarint() + this._pbf.pos;\n    return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values);\n};\n","'use strict';\n\nvar VectorTileLayer = require('./vectortilelayer');\n\nmodule.exports = VectorTile;\n\nfunction VectorTile(pbf, end) {\n    this.layers = pbf.readFields(readTile, {}, end);\n}\n\nfunction readTile(tag, layers, pbf) {\n    if (tag === 3) {\n        var layer = new VectorTileLayer(pbf, pbf.readVarint() + pbf.pos);\n        if (layer.length) layers[layer.name] = layer;\n    }\n}\n\n","module.exports.VectorTile = require('./lib/vectortile.js');\nmodule.exports.VectorTileFeature = require('./lib/vectortilefeature.js');\nmodule.exports.VectorTileLayer = require('./lib/vectortilelayer.js');\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","'use strict';\n\nmodule.exports = lineclip;\n\nlineclip.polyline = lineclip;\nlineclip.polygon = polygonclip;\n\n\n// Cohen-Sutherland line clippign algorithm, adapted to efficiently\n// handle polylines rather than just segments\n\nfunction lineclip(points, bbox, result) {\n\n    var len = points.length,\n        codeA = bitCode(points[0], bbox),\n        part = [],\n        i, a, b, codeB, lastCode;\n\n    if (!result) result = [];\n\n    for (i = 1; i < len; i++) {\n        a = points[i - 1];\n        b = points[i];\n        codeB = lastCode = bitCode(b, bbox);\n\n        while (true) {\n\n            if (!(codeA | codeB)) { // accept\n                part.push(a);\n\n                if (codeB !== lastCode) { // segment went outside\n                    part.push(b);\n\n                    if (i < len - 1) { // start a new line\n                        result.push(part);\n                        part = [];\n                    }\n                } else if (i === len - 1) {\n                    part.push(b);\n                }\n                break;\n\n            } else if (codeA & codeB) { // trivial reject\n                break;\n\n            } else if (codeA) { // a outside, intersect with clip edge\n                a = intersect(a, b, codeA, bbox);\n                codeA = bitCode(a, bbox);\n\n            } else { // b outside\n                b = intersect(a, b, codeB, bbox);\n                codeB = bitCode(b, bbox);\n            }\n        }\n\n        codeA = lastCode;\n    }\n\n    if (part.length) result.push(part);\n\n    return result;\n}\n\n// Sutherland-Hodgeman polygon clipping algorithm\n\nfunction polygonclip(points, bbox) {\n\n    var result, edge, prev, prevInside, i, p, inside;\n\n    // clip against each side of the clip rectangle\n    for (edge = 1; edge <= 8; edge *= 2) {\n        result = [];\n        prev = points[points.length - 1];\n        prevInside = !(bitCode(prev, bbox) & edge);\n\n        for (i = 0; i < points.length; i++) {\n            p = points[i];\n            inside = !(bitCode(p, bbox) & edge);\n\n            // if segment goes through the clip window, add an intersection\n            if (inside !== prevInside) result.push(intersect(prev, p, edge, bbox));\n\n            if (inside) result.push(p); // add a point if it's inside\n\n            prev = p;\n            prevInside = inside;\n        }\n\n        points = result;\n\n        if (!points.length) break;\n    }\n\n    return result;\n}\n\n// intersect a segment against one of the 4 lines that make up the bbox\n\nfunction intersect(a, b, edge, bbox) {\n    return edge & 8 ? [a[0] + (b[0] - a[0]) * (bbox[3] - a[1]) / (b[1] - a[1]), bbox[3]] : // top\n           edge & 4 ? [a[0] + (b[0] - a[0]) * (bbox[1] - a[1]) / (b[1] - a[1]), bbox[1]] : // bottom\n           edge & 2 ? [bbox[2], a[1] + (b[1] - a[1]) * (bbox[2] - a[0]) / (b[0] - a[0])] : // right\n           edge & 1 ? [bbox[0], a[1] + (b[1] - a[1]) * (bbox[0] - a[0]) / (b[0] - a[0])] : // left\n           null;\n}\n\n// bit code reflects the point position relative to the bbox:\n\n//         left  mid  right\n//    top  1001  1000  1010\n//    mid  0001  0000  0010\n// bottom  0101  0100  0110\n\nfunction bitCode(p, bbox) {\n    var code = 0;\n\n    if (p[0] < bbox[0]) code |= 1; // left\n    else if (p[0] > bbox[2]) code |= 2; // right\n\n    if (p[1] < bbox[1]) code |= 4; // bottom\n    else if (p[1] > bbox[3]) code |= 8; // top\n\n    return code;\n}\n","'use strict';\n\nvar rbush = require('rbush');\nvar lineclip = require('lineclip');\n\nmodule.exports = whichPolygon;\n\nfunction whichPolygon(data) {\n    var bboxes = [];\n    for (var i = 0; i < data.features.length; i++) {\n        var feature = data.features[i];\n        var coords = feature.geometry.coordinates;\n\n        if (feature.geometry.type === 'Polygon') {\n            bboxes.push(treeItem(coords, feature.properties));\n\n        } else if (feature.geometry.type === 'MultiPolygon') {\n            for (var j = 0; j < coords.length; j++) {\n                bboxes.push(treeItem(coords[j], feature.properties));\n            }\n        }\n    }\n\n    var tree = rbush().load(bboxes);\n\n    function query(p, multi) {\n        var output = [],\n            result = tree.search({\n                minX: p[0],\n                minY: p[1],\n                maxX: p[0],\n                maxY: p[1]\n            });\n        for (var i = 0; i < result.length; i++) {\n            if (insidePolygon(result[i].coords, p)) {\n                if (multi)\n                    output.push(result[i].props);\n                else\n                    return result[i].props;\n            }\n        }\n        return multi && output.length ? output : null;\n    }\n\n    query.tree = tree;\n    query.bbox = function queryBBox(bbox) {\n        var output = [];\n        var result = tree.search({\n            minX: bbox[0],\n            minY: bbox[1],\n            maxX: bbox[2],\n            maxY: bbox[3]\n        });\n        for (var i = 0; i < result.length; i++) {\n            if (polygonIntersectsBBox(result[i].coords, bbox)) {\n                output.push(result[i].props);\n            }\n        }\n        return output;\n    };\n\n    return query;\n}\n\nfunction polygonIntersectsBBox(polygon, bbox) {\n    var bboxCenter = [\n        (bbox[0] + bbox[2]) / 2,\n        (bbox[1] + bbox[3]) / 2\n    ];\n    if (insidePolygon(polygon, bboxCenter)) return true;\n    for (var i = 0; i < polygon.length; i++) {\n        if (lineclip(polygon[i], bbox).length > 0) return true;\n    }\n    return false;\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction insidePolygon(rings, p) {\n    var inside = false;\n    for (var i = 0, len = rings.length; i < len; i++) {\n        var ring = rings[i];\n        for (var j = 0, len2 = ring.length, k = len2 - 1; j < len2; k = j++) {\n            if (rayIntersect(p, ring[j], ring[k])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\nfunction treeItem(coords, props) {\n    var item = {\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity,\n        coords: coords,\n        props: props\n    };\n\n    for (var i = 0; i < coords[0].length; i++) {\n        var p = coords[0][i];\n        item.minX = Math.min(item.minX, p[0]);\n        item.minY = Math.min(item.minY, p[1]);\n        item.maxX = Math.max(item.maxX, p[0]);\n        item.maxY = Math.max(item.maxY, p[1]);\n    }\n    return item;\n}\n","// src/country-coder.ts\nimport whichPolygon from \"which-polygon\";\n\n// src/data/borders.json\nvar type = \"FeatureCollection\";\nvar features = [\n  { type: \"Feature\", properties: { wikidata: \"Q21\", nameEn: \"England\", aliases: [\"GB-ENG\"], country: \"GB\", groups: [\"Q23666\", \"Q3336843\", \"154\", \"150\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-6.03913, 51.13217], [-7.74976, 48.64773], [1.17405, 50.74239], [2.18458, 51.52087], [2.56575, 51.85301], [0.792, 57.56437], [-2.30613, 55.62698], [-2.17058, 55.45916], [-2.6095, 55.28488], [-2.63532, 55.19452], [-3.02906, 55.04606], [-3.09361, 54.94924], [-3.38407, 54.94278], [-4.1819, 54.57861], [-3.5082, 53.54318], [-3.08228, 53.25526], [-3.03675, 53.25092], [-2.92329, 53.19383], [-2.92022, 53.17685], [-2.98598, 53.15589], [-2.90649, 53.10964], [-2.87469, 53.12337], [-2.89131, 53.09374], [-2.83133, 52.99184], [-2.7251, 52.98389], [-2.72221, 52.92969], [-2.80549, 52.89428], [-2.85897, 52.94487], [-2.92401, 52.93836], [-2.97243, 52.9651], [-3.13576, 52.895], [-3.15744, 52.84947], [-3.16105, 52.79599], [-3.08734, 52.77504], [-3.01001, 52.76636], [-2.95581, 52.71794], [-3.01724, 52.72083], [-3.04398, 52.65435], [-3.13648, 52.58208], [-3.12926, 52.5286], [-3.09746, 52.53077], [-3.08662, 52.54811], [-3.00929, 52.57774], [-2.99701, 52.551], [-3.03603, 52.49969], [-3.13359, 52.49174], [-3.22971, 52.45344], [-3.22754, 52.42526], [-3.04687, 52.34504], [-2.95364, 52.3501], [-2.99701, 52.323], [-3.00785, 52.2753], [-3.09289, 52.20546], [-3.12638, 52.08114], [-2.97111, 51.90456], [-2.8818, 51.93196], [-2.78742, 51.88833], [-2.74277, 51.84367], [-2.66234, 51.83555], [-2.66336, 51.59504], [-3.20563, 51.31615], [-6.03913, 51.13217]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q22\", nameEn: \"Scotland\", aliases: [\"GB-SCT\"], country: \"GB\", groups: [\"Q23666\", \"Q3336843\", \"154\", \"150\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[0.792, 57.56437], [-0.3751, 61.32236], [-14.78497, 57.60709], [-6.82333, 55.83103], [-4.69044, 54.3629], [-3.38407, 54.94278], [-3.09361, 54.94924], [-3.02906, 55.04606], [-2.63532, 55.19452], [-2.6095, 55.28488], [-2.17058, 55.45916], [-2.30613, 55.62698], [0.792, 57.56437]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q25\", nameEn: \"Wales\", aliases: [\"GB-WLS\"], country: \"GB\", groups: [\"Q23666\", \"Q3336843\", \"154\", \"150\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-3.5082, 53.54318], [-5.37267, 53.63269], [-6.03913, 51.13217], [-3.20563, 51.31615], [-2.66336, 51.59504], [-2.66234, 51.83555], [-2.74277, 51.84367], [-2.78742, 51.88833], [-2.8818, 51.93196], [-2.97111, 51.90456], [-3.12638, 52.08114], [-3.09289, 52.20546], [-3.00785, 52.2753], [-2.99701, 52.323], [-2.95364, 52.3501], [-3.04687, 52.34504], [-3.22754, 52.42526], [-3.22971, 52.45344], [-3.13359, 52.49174], [-3.03603, 52.49969], [-2.99701, 52.551], [-3.00929, 52.57774], [-3.08662, 52.54811], [-3.09746, 52.53077], [-3.12926, 52.5286], [-3.13648, 52.58208], [-3.04398, 52.65435], [-3.01724, 52.72083], [-2.95581, 52.71794], [-3.01001, 52.76636], [-3.08734, 52.77504], [-3.16105, 52.79599], [-3.15744, 52.84947], [-3.13576, 52.895], [-2.97243, 52.9651], [-2.92401, 52.93836], [-2.85897, 52.94487], [-2.80549, 52.89428], [-2.72221, 52.92969], [-2.7251, 52.98389], [-2.83133, 52.99184], [-2.89131, 53.09374], [-2.87469, 53.12337], [-2.90649, 53.10964], [-2.98598, 53.15589], [-2.92022, 53.17685], [-2.92329, 53.19383], [-3.03675, 53.25092], [-3.08228, 53.25526], [-3.5082, 53.54318]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q26\", nameEn: \"Northern Ireland\", aliases: [\"GB-NIR\"], country: \"GB\", groups: [\"Q22890\", \"Q3336843\", \"154\", \"150\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-6.34755, 55.49206], [-7.2471, 55.06933], [-7.34464, 55.04688], [-7.4033, 55.00391], [-7.40004, 54.94498], [-7.44404, 54.9403], [-7.4473, 54.87003], [-7.47626, 54.83084], [-7.54508, 54.79401], [-7.54671, 54.74606], [-7.64449, 54.75265], [-7.75041, 54.7103], [-7.83352, 54.73854], [-7.93293, 54.66603], [-7.70315, 54.62077], [-7.8596, 54.53671], [-7.99812, 54.54427], [-8.04538, 54.48941], [-8.179, 54.46763], [-8.04555, 54.36292], [-7.87101, 54.29299], [-7.8596, 54.21779], [-7.81397, 54.20159], [-7.69501, 54.20731], [-7.55812, 54.12239], [-7.4799, 54.12239], [-7.44567, 54.1539], [-7.32834, 54.11475], [-7.30553, 54.11869], [-7.34005, 54.14698], [-7.29157, 54.17191], [-7.28017, 54.16714], [-7.29687, 54.1354], [-7.29493, 54.12013], [-7.26316, 54.13863], [-7.25012, 54.20063], [-7.14908, 54.22732], [-7.19145, 54.31296], [-7.02034, 54.4212], [-6.87775, 54.34682], [-6.85179, 54.29176], [-6.81583, 54.22791], [-6.74575, 54.18788], [-6.70175, 54.20218], [-6.6382, 54.17071], [-6.66264, 54.0666], [-6.62842, 54.03503], [-6.47849, 54.06947], [-6.36605, 54.07234], [-6.36279, 54.11248], [-6.32694, 54.09337], [-6.29003, 54.11278], [-6.26218, 54.09785], [-5.83481, 53.87749], [-4.69044, 54.3629], [-6.34755, 55.49206]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q35\", nameEn: \"Denmark\", country: \"DK\", groups: [\"EU\", \"154\", \"150\", \"UN\"], callingCodes: [\"45\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[12.16597, 56.60205], [10.40861, 58.38489], [7.28637, 57.35913], [8.02459, 55.09613], [8.45719, 55.06747], [8.55769, 54.91837], [8.63979, 54.91069], [8.76387, 54.8948], [8.81178, 54.90518], [8.92795, 54.90452], [9.04629, 54.87249], [9.14275, 54.87421], [9.20571, 54.85841], [9.24631, 54.84726], [9.23445, 54.83432], [9.2474, 54.8112], [9.32771, 54.80602], [9.33849, 54.80233], [9.36496, 54.81749], [9.38532, 54.83968], [9.41213, 54.84254], [9.43155, 54.82586], [9.4659, 54.83131], [9.58937, 54.88785], [9.62734, 54.88057], [9.61187, 54.85548], [9.73563, 54.8247], [9.89314, 54.84171], [10.16755, 54.73883], [10.31111, 54.65968], [11.00303, 54.63689], [11.90309, 54.38543], [12.85844, 54.82438], [13.93395, 54.84044], [15.36991, 54.73263], [15.79951, 55.54655], [14.89259, 55.5623], [14.28399, 55.1553], [12.84405, 55.13257], [12.60345, 55.42675], [12.88472, 55.63369], [12.6372, 55.91371], [12.65312, 56.04345], [12.07466, 56.29488], [12.16597, 56.60205]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q55\", nameEn: \"Netherlands\", country: \"NL\", groups: [\"EU\", \"155\", \"150\", \"UN\"], callingCodes: [\"31\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[5.45168, 54.20039], [2.56575, 51.85301], [3.36263, 51.37112], [3.38696, 51.33436], [3.35847, 51.31572], [3.38289, 51.27331], [3.41704, 51.25933], [3.43488, 51.24135], [3.52698, 51.2458], [3.51502, 51.28697], [3.58939, 51.30064], [3.78999, 51.25766], [3.78783, 51.2151], [3.90125, 51.20371], [3.97889, 51.22537], [4.01957, 51.24504], [4.05165, 51.24171], [4.16721, 51.29348], [4.24024, 51.35371], [4.21923, 51.37443], [4.33265, 51.37687], [4.34086, 51.35738], [4.39292, 51.35547], [4.43777, 51.36989], [4.38064, 51.41965], [4.39747, 51.43316], [4.38122, 51.44905], [4.47736, 51.4778], [4.5388, 51.48184], [4.54675, 51.47265], [4.52846, 51.45002], [4.53521, 51.4243], [4.57489, 51.4324], [4.65442, 51.42352], [4.72935, 51.48424], [4.74578, 51.48937], [4.77321, 51.50529], [4.78803, 51.50284], [4.84139, 51.4799], [4.82409, 51.44736], [4.82946, 51.4213], [4.78314, 51.43319], [4.76577, 51.43046], [4.77229, 51.41337], [4.78941, 51.41102], [4.84988, 51.41502], [4.90016, 51.41404], [4.92152, 51.39487], [5.00393, 51.44406], [5.0106, 51.47167], [5.03281, 51.48679], [5.04774, 51.47022], [5.07891, 51.4715], [5.10456, 51.43163], [5.07102, 51.39469], [5.13105, 51.34791], [5.13377, 51.31592], [5.16222, 51.31035], [5.2002, 51.32243], [5.24244, 51.30495], [5.22542, 51.26888], [5.23814, 51.26064], [5.26461, 51.26693], [5.29716, 51.26104], [5.33886, 51.26314], [5.347, 51.27502], [5.41672, 51.26248], [5.4407, 51.28169], [5.46519, 51.2849], [5.48476, 51.30053], [5.515, 51.29462], [5.5569, 51.26544], [5.5603, 51.22249], [5.65145, 51.19788], [5.65528, 51.18736], [5.70344, 51.1829], [5.74617, 51.18928], [5.77735, 51.17845], [5.77697, 51.1522], [5.82564, 51.16753], [5.85508, 51.14445], [5.80798, 51.11661], [5.8109, 51.10861], [5.83226, 51.10585], [5.82921, 51.09328], [5.79903, 51.09371], [5.79835, 51.05834], [5.77258, 51.06196], [5.75961, 51.03113], [5.77688, 51.02483], [5.76242, 50.99703], [5.71864, 50.96092], [5.72875, 50.95428], [5.74752, 50.96202], [5.75927, 50.95601], [5.74644, 50.94723], [5.72545, 50.92312], [5.72644, 50.91167], [5.71626, 50.90796], [5.69858, 50.91046], [5.67886, 50.88142], [5.64504, 50.87107], [5.64009, 50.84742], [5.65259, 50.82309], [5.70118, 50.80764], [5.68995, 50.79641], [5.70107, 50.7827], [5.68091, 50.75804], [5.69469, 50.75529], [5.72216, 50.76398], [5.73904, 50.75674], [5.74356, 50.7691], [5.76533, 50.78159], [5.77513, 50.78308], [5.80673, 50.7558], [5.84548, 50.76542], [5.84888, 50.75448], [5.88734, 50.77092], [5.89129, 50.75125], [5.89132, 50.75124], [5.95942, 50.7622], [5.97545, 50.75441], [6.01976, 50.75398], [6.02624, 50.77453], [5.97497, 50.79992], [5.98404, 50.80988], [6.00462, 50.80065], [6.02328, 50.81694], [6.01921, 50.84435], [6.05623, 50.8572], [6.05702, 50.85179], [6.07431, 50.84674], [6.07693, 50.86025], [6.08805, 50.87223], [6.07486, 50.89307], [6.09297, 50.92066], [6.01615, 50.93367], [6.02697, 50.98303], [5.95282, 50.98728], [5.90296, 50.97356], [5.90493, 51.00198], [5.87849, 51.01969], [5.86735, 51.05182], [5.9134, 51.06736], [5.9541, 51.03496], [5.98292, 51.07469], [6.16706, 51.15677], [6.17384, 51.19589], [6.07889, 51.17038], [6.07889, 51.24432], [6.16977, 51.33169], [6.22674, 51.36135], [6.22641, 51.39948], [6.20654, 51.40049], [6.21724, 51.48568], [6.18017, 51.54096], [6.09055, 51.60564], [6.11759, 51.65609], [6.02767, 51.6742], [6.04091, 51.71821], [5.95003, 51.7493], [5.98665, 51.76944], [5.94568, 51.82786], [5.99848, 51.83195], [6.06705, 51.86136], [6.10337, 51.84829], [6.16902, 51.84094], [6.11551, 51.89769], [6.15349, 51.90439], [6.21443, 51.86801], [6.29872, 51.86801], [6.30593, 51.84998], [6.40704, 51.82771], [6.38815, 51.87257], [6.47179, 51.85395], [6.50231, 51.86313], [6.58556, 51.89386], [6.68386, 51.91861], [6.72319, 51.89518], [6.82357, 51.96711], [6.83035, 51.9905], [6.68128, 52.05052], [6.76117, 52.11895], [6.83984, 52.11728], [6.97189, 52.20329], [6.9897, 52.2271], [7.03729, 52.22695], [7.06365, 52.23789], [7.02703, 52.27941], [7.07044, 52.37805], [7.03417, 52.40237], [6.99041, 52.47235], [6.94293, 52.43597], [6.69507, 52.488], [6.71641, 52.62905], [6.77307, 52.65375], [7.04557, 52.63318], [7.07253, 52.81083], [7.21694, 53.00742], [7.17898, 53.13817], [7.22681, 53.18165], [7.21679, 53.20058], [7.19052, 53.31866], [7.00198, 53.32672], [6.91025, 53.44221], [5.45168, 54.20039]], [[4.93295, 51.44945], [4.95244, 51.45207], [4.9524, 51.45014], [4.93909, 51.44632], [4.93295, 51.44945]], [[4.91493, 51.4353], [4.91935, 51.43634], [4.92227, 51.44252], [4.91811, 51.44621], [4.92287, 51.44741], [4.92811, 51.4437], [4.92566, 51.44273], [4.92815, 51.43856], [4.92879, 51.44161], [4.93544, 51.44634], [4.94025, 51.44193], [4.93416, 51.44185], [4.93471, 51.43861], [4.94265, 51.44003], [4.93986, 51.43064], [4.92952, 51.42984], [4.92652, 51.43329], [4.91493, 51.4353]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q782\", nameEn: \"Hawaii\", aliases: [\"US-HI\"], country: \"US\", groups: [\"Q35657\", \"061\", \"009\", \"UN\"], roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-177.8563, 29.18961], [-179.49839, 27.86265], [-151.6784, 9.55515], [-154.05867, 45.51124], [-177.5224, 27.7635], [-177.8563, 29.18961]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q797\", nameEn: \"Alaska\", aliases: [\"US-AK\"], country: \"US\", groups: [\"Q35657\", \"021\", \"003\", \"019\", \"UN\"], roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[169.34848, 52.47228], [180, 51.0171], [179.84401, 55.10087], [169.34848, 52.47228]]], [[[-168.95635, 65.98512], [-169.03888, 65.48473], [-172.76104, 63.77445], [-179.55295, 57.62081], [-179.55295, 50.81807], [-133.92876, 54.62289], [-130.61931, 54.70835], [-130.64499, 54.76912], [-130.44184, 54.85377], [-130.27203, 54.97174], [-130.18765, 55.07744], [-130.08035, 55.21556], [-129.97513, 55.28029], [-130.15373, 55.74895], [-130.00857, 55.91344], [-130.00093, 56.00325], [-130.10173, 56.12178], [-130.33965, 56.10849], [-130.77769, 56.36185], [-131.8271, 56.62247], [-133.38523, 58.42773], [-133.84645, 58.73543], [-134.27175, 58.8634], [-134.48059, 59.13231], [-134.55699, 59.1297], [-134.7047, 59.2458], [-135.00267, 59.28745], [-135.03069, 59.56208], [-135.48007, 59.79937], [-136.31566, 59.59083], [-136.22381, 59.55526], [-136.33727, 59.44466], [-136.47323, 59.46617], [-136.52365, 59.16752], [-136.82619, 59.16198], [-137.4925, 58.89415], [-137.60623, 59.24465], [-138.62145, 59.76431], [-138.71149, 59.90728], [-139.05365, 59.99655], [-139.20603, 60.08896], [-139.05831, 60.35205], [-139.68991, 60.33693], [-139.98024, 60.18027], [-140.45648, 60.30919], [-140.5227, 60.22077], [-141.00116, 60.30648], [-140.97446, 84.39275], [-168.25765, 71.99091], [-168.95635, 65.98512]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3492\", nameEn: \"Sumatra\", aliases: [\"ID-SM\"], country: \"ID\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"62\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[109.82788, 2.86812], [110.90339, 7.52694], [105.01437, 3.24936], [104.56723, 1.44271], [104.34728, 1.33529], [104.12282, 1.27714], [104.03085, 1.26954], [103.74084, 1.12902], [103.66049, 1.18825], [103.56591, 1.19719], [103.03657, 1.30383], [96.11174, 6.69841], [74.28481, -3.17525], [102.92489, -8.17146], [106.32259, -5.50116], [106.38511, -5.16715], [109.17017, -4.07401], [109.3962, -2.07276], [108.50935, -2.01066], [107.94791, 1.06924], [109.82788, 2.86812]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3757\", nameEn: \"Java\", aliases: [\"ID-JW\"], country: \"ID\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"62\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[109.17017, -4.07401], [106.38511, -5.16715], [106.32259, -5.50116], [102.92489, -8.17146], [116.22542, -10.49172], [114.39575, -8.2889], [114.42235, -8.09762], [114.92859, -7.49253], [116.33992, -7.56171], [116.58433, -5.30385], [109.17017, -4.07401]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3795\", nameEn: \"Kalimantan\", aliases: [\"ID-KA\"], country: \"ID\", groups: [\"Q36117\", \"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"62\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[120.02464, 2.83703], [118.06469, 4.16638], [117.67641, 4.16535], [117.47313, 4.18857], [117.25801, 4.35108], [115.90217, 4.37708], [115.58276, 3.93499], [115.53713, 3.14776], [115.11343, 2.82879], [115.1721, 2.49671], [114.80706, 2.21665], [114.80706, 1.92351], [114.57892, 1.5], [114.03788, 1.44787], [113.64677, 1.23933], [113.01448, 1.42832], [113.021, 1.57819], [112.48648, 1.56516], [112.2127, 1.44135], [112.15679, 1.17004], [111.94553, 1.12016], [111.82846, 0.99349], [111.55434, 0.97864], [111.22979, 1.08326], [110.62374, 0.873], [110.49182, 0.88088], [110.35354, 0.98869], [109.66397, 1.60425], [109.66397, 1.79972], [109.57923, 1.80624], [109.53794, 1.91771], [109.62558, 1.99182], [109.82788, 2.86812], [107.94791, 1.06924], [108.50935, -2.01066], [109.3962, -2.07276], [109.17017, -4.07401], [116.58433, -5.30385], [120.02464, 2.83703]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3803\", nameEn: \"Lesser Sunda Islands\", aliases: [\"ID-NU\"], country: \"ID\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"62\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[116.96967, -8.01483], [114.92859, -7.49253], [114.42235, -8.09762], [114.39575, -8.2889], [116.22542, -10.49172], [122.14954, -11.52517], [125.68138, -9.85176], [125.09025, -9.46406], [124.97892, -9.19281], [125.04044, -9.17093], [125.09434, -9.19669], [125.18907, -9.16434], [125.18632, -9.03142], [125.11764, -8.96359], [124.97742, -9.08128], [124.94011, -8.85617], [124.46701, -9.13002], [124.45971, -9.30263], [124.38554, -9.3582], [124.35258, -9.43002], [124.3535, -9.48493], [124.28115, -9.50453], [124.28115, -9.42189], [124.21247, -9.36904], [124.14517, -9.42324], [124.10539, -9.41206], [124.04286, -9.34243], [124.04628, -9.22671], [124.33472, -9.11416], [124.92337, -8.75859], [125.87688, -7.49892], [116.96967, -8.01483]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3812\", nameEn: \"Sulawesi\", aliases: [\"ID-SL\"], country: \"ID\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"62\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[128.34321, 3.90322], [126.69413, 6.02692], [119.56457, 0.90759], [116.58433, -5.30385], [116.33992, -7.56171], [116.96967, -8.01483], [125.87688, -7.49892], [123.78965, -0.86805], [128.34321, 3.90322]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3827\", nameEn: \"Maluku Islands\", aliases: [\"ID-ML\"], country: \"ID\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"62\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[129.63187, 2.21409], [128.34321, 3.90322], [123.78965, -0.86805], [125.87688, -7.49892], [125.58506, -7.95311], [125.87691, -8.31789], [127.42116, -8.22471], [127.55165, -9.05052], [135.49042, -9.2276], [135.35517, -5.01442], [132.8312, -4.70282], [130.8468, -2.61103], [128.40647, -2.30349], [129.71519, -0.24692], [129.63187, 2.21409]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3845\", nameEn: \"Western New Guinea\", aliases: [\"ID-PP\"], country: \"ID\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"62\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[135.49042, -9.2276], [141.01842, -9.35091], [141.01763, -6.90181], [140.90448, -6.85033], [140.85295, -6.72996], [140.99813, -6.3233], [141.02352, 0.08993], [129.63187, 2.21409], [129.71519, -0.24692], [128.40647, -2.30349], [130.8468, -2.61103], [132.8312, -4.70282], [135.35517, -5.01442], [135.49042, -9.2276]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q5765\", nameEn: \"Balearic Islands\", aliases: [\"ES-IB\"], country: \"ES\", groups: [\"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"34 971\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.27707, 35.35051], [5.10072, 39.89531], [3.75438, 42.33445], [-2.27707, 35.35051]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q5823\", nameEn: \"Ceuta\", aliases: [\"ES-CE\"], country: \"ES\", groups: [\"EA\", \"EU\", \"015\", \"002\", \"UN\"], level: \"subterritory\", callingCodes: [\"34\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-5.38491, 35.92591], [-5.37338, 35.88417], [-5.35844, 35.87375], [-5.34379, 35.8711], [-5.21179, 35.90091], [-5.38491, 35.92591]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q5831\", nameEn: \"Melilla\", aliases: [\"ES-ML\"], country: \"ES\", groups: [\"EA\", \"EU\", \"015\", \"002\", \"UN\"], level: \"subterritory\", callingCodes: [\"34\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.91909, 35.33927], [-2.96038, 35.31609], [-2.96648, 35.30475], [-2.96978, 35.29459], [-2.97035, 35.28852], [-2.96507, 35.28801], [-2.96826, 35.28296], [-2.96516, 35.27967], [-2.95431, 35.2728], [-2.95065, 35.26576], [-2.93893, 35.26737], [-2.92272, 35.27509], [-2.91909, 35.33927]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q7835\", nameEn: \"Crimea\", country: \"RU\", groups: [\"151\", \"150\", \"UN\"], level: \"subterritory\", callingCodes: [\"7\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.5, 44], [36.4883, 45.0488], [36.475, 45.2411], [36.5049, 45.3136], [36.6545, 45.3417], [36.6645, 45.4514], [35.0498, 45.7683], [34.9601, 45.7563], [34.7991, 45.8101], [34.8015, 45.9005], [34.7548, 45.907], [34.6668, 45.9714], [34.6086, 45.9935], [34.5589, 45.9935], [34.5201, 45.951], [34.4873, 45.9427], [34.4415, 45.9599], [34.4122, 46.0025], [34.3391, 46.0611], [34.2511, 46.0532], [34.181, 46.068], [34.1293, 46.1049], [34.0731, 46.1177], [34.0527, 46.1084], [33.9155, 46.1594], [33.8523, 46.1986], [33.7972, 46.2048], [33.7405, 46.1855], [33.646, 46.2303], [33.6152, 46.2261], [33.6385, 46.1415], [33.6147, 46.1356], [33.5732, 46.1032], [33.5909, 46.0601], [33.5597, 46.0307], [31.5, 45.5], [33.5, 44]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q12837\", nameEn: \"Iberia\", level: \"sharedLandform\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q14056\", nameEn: \"Jan Mayen\", aliases: [\"NO-22\"], country: \"NO\", groups: [\"SJ\", \"154\", \"150\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-9.18243, 72.23144], [-10.71459, 70.09565], [-5.93364, 70.76368], [-9.18243, 72.23144]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q19188\", nameEn: \"Mainland China\", country: \"CN\", groups: [\"030\", \"142\", \"UN\"], callingCodes: [\"86\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[125.6131, 53.07229], [125.17522, 53.20225], [124.46078, 53.21881], [123.86158, 53.49391], [123.26989, 53.54843], [122.85966, 53.47395], [122.35063, 53.49565], [121.39213, 53.31888], [120.85633, 53.28499], [120.0451, 52.7359], [120.04049, 52.58773], [120.46454, 52.63811], [120.71673, 52.54099], [120.61346, 52.32447], [120.77337, 52.20805], [120.65907, 51.93544], [120.10963, 51.671], [119.13553, 50.37412], [119.38598, 50.35162], [119.27996, 50.13348], [119.11003, 50.00276], [118.61623, 49.93809], [117.82343, 49.52696], [117.48208, 49.62324], [117.27597, 49.62544], [116.71193, 49.83813], [116.03781, 48.87014], [116.06565, 48.81716], [115.78876, 48.51781], [115.811, 48.25699], [115.52082, 48.15367], [115.57128, 47.91988], [115.94296, 47.67741], [116.21879, 47.88505], [116.4465, 47.83662], [116.67405, 47.89039], [116.9723, 47.87285], [117.37875, 47.63627], [117.50181, 47.77216], [117.80196, 48.01661], [118.03676, 48.00982], [118.11009, 48.04], [118.22677, 48.03853], [118.29654, 48.00246], [118.55766, 47.99277], [118.7564, 47.76947], [119.12343, 47.66458], [119.13995, 47.53997], [119.35892, 47.48104], [119.31964, 47.42617], [119.54918, 47.29505], [119.56019, 47.24874], [119.62403, 47.24575], [119.71209, 47.19192], [119.85518, 46.92196], [119.91242, 46.90091], [119.89261, 46.66423], [119.80455, 46.67631], [119.77373, 46.62947], [119.68127, 46.59015], [119.65265, 46.62342], [119.42827, 46.63783], [119.32827, 46.61433], [119.24978, 46.64761], [119.10448, 46.65516], [119.00541, 46.74273], [118.92616, 46.72765], [118.89974, 46.77139], [118.8337, 46.77742], [118.78747, 46.68689], [118.30534, 46.73519], [117.69554, 46.50991], [117.60748, 46.59771], [117.41782, 46.57862], [117.36609, 46.36335], [116.83166, 46.38637], [116.75551, 46.33083], [116.58612, 46.30211], [116.26678, 45.96479], [116.24012, 45.8778], [116.27366, 45.78637], [116.16989, 45.68603], [115.60329, 45.44717], [114.94546, 45.37377], [114.74612, 45.43585], [114.54801, 45.38337], [114.5166, 45.27189], [113.70918, 44.72891], [112.74662, 44.86297], [112.4164, 45.06858], [111.98695, 45.09074], [111.76275, 44.98032], [111.40498, 44.3461], [111.96289, 43.81596], [111.93776, 43.68709], [111.79758, 43.6637], [111.59087, 43.51207], [111.0149, 43.3289], [110.4327, 42.78293], [110.08401, 42.6411], [109.89402, 42.63111], [109.452, 42.44842], [109.00679, 42.45302], [108.84489, 42.40246], [107.57258, 42.40898], [107.49681, 42.46221], [107.29755, 42.41395], [107.24774, 42.36107], [106.76517, 42.28741], [105.0123, 41.63188], [104.51667, 41.66113], [104.52258, 41.8706], [103.92804, 41.78246], [102.72403, 42.14675], [102.07645, 42.22519], [101.80515, 42.50074], [100.84979, 42.67087], [100.33297, 42.68231], [99.50671, 42.56535], [97.1777, 42.7964], [96.37926, 42.72055], [96.35658, 42.90363], [95.89543, 43.2528], [95.52594, 43.99353], [95.32891, 44.02407], [95.39772, 44.2805], [95.01191, 44.25274], [94.71959, 44.35284], [94.10003, 44.71016], [93.51161, 44.95964], [91.64048, 45.07408], [90.89169, 45.19667], [90.65114, 45.49314], [90.70907, 45.73437], [91.03026, 46.04194], [90.99672, 46.14207], [90.89639, 46.30711], [91.07696, 46.57315], [91.0147, 46.58171], [91.03649, 46.72916], [90.84035, 46.99525], [90.76108, 46.99399], [90.48542, 47.30438], [90.48854, 47.41826], [90.33598, 47.68303], [90.10871, 47.7375], [90.06512, 47.88177], [89.76624, 47.82745], [89.55453, 48.0423], [89.0711, 47.98528], [88.93186, 48.10263], [88.8011, 48.11302], [88.58316, 48.21893], [88.58939, 48.34531], [87.96361, 48.58478], [88.0788, 48.71436], [87.73822, 48.89582], [87.88171, 48.95853], [87.81333, 49.17354], [87.48983, 49.13794], [87.478, 49.07403], [87.28386, 49.11626], [86.87238, 49.12432], [86.73568, 48.99918], [86.75343, 48.70331], [86.38069, 48.46064], [85.73581, 48.3939], [85.5169, 48.05493], [85.61067, 47.49753], [85.69696, 47.2898], [85.54294, 47.06171], [85.22443, 47.04816], [84.93995, 46.87399], [84.73077, 47.01394], [83.92184, 46.98912], [83.04622, 47.19053], [82.21792, 45.56619], [82.58474, 45.40027], [82.51374, 45.1755], [81.73278, 45.3504], [80.11169, 45.03352], [79.8987, 44.89957], [80.38384, 44.63073], [80.40229, 44.23319], [80.40031, 44.10986], [80.75156, 43.44948], [80.69718, 43.32589], [80.77771, 43.30065], [80.78817, 43.14235], [80.62913, 43.141], [80.3735, 43.01557], [80.58999, 42.9011], [80.38169, 42.83142], [80.26886, 42.8366], [80.16892, 42.61137], [80.26841, 42.23797], [80.17807, 42.21166], [80.17842, 42.03211], [79.92977, 42.04113], [78.3732, 41.39603], [78.15757, 41.38565], [78.12873, 41.23091], [77.81287, 41.14307], [77.76206, 41.01574], [77.52723, 41.00227], [77.3693, 41.0375], [77.28004, 41.0033], [76.99302, 41.0696], [76.75681, 40.95354], [76.5261, 40.46114], [76.33659, 40.3482], [75.96168, 40.38064], [75.91361, 40.2948], [75.69663, 40.28642], [75.5854, 40.66874], [75.22834, 40.45382], [75.08243, 40.43945], [74.82013, 40.52197], [74.78168, 40.44886], [74.85996, 40.32857], [74.69875, 40.34668], [74.35063, 40.09742], [74.25533, 40.13191], [73.97049, 40.04378], [73.83006, 39.76136], [73.9051, 39.75073], [73.92354, 39.69565], [73.94683, 39.60733], [73.87018, 39.47879], [73.59831, 39.46425], [73.59241, 39.40843], [73.5004, 39.38402], [73.55396, 39.3543], [73.54572, 39.27567], [73.60638, 39.24534], [73.75823, 39.023], [73.81728, 39.04007], [73.82964, 38.91517], [73.7445, 38.93867], [73.7033, 38.84782], [73.80656, 38.66449], [73.79806, 38.61106], [73.97933, 38.52945], [74.17022, 38.65504], [74.51217, 38.47034], [74.69619, 38.42947], [74.69894, 38.22155], [74.80331, 38.19889], [74.82665, 38.07359], [74.9063, 38.03033], [74.92416, 37.83428], [75.00935, 37.77486], [74.8912, 37.67576], [74.94338, 37.55501], [75.06011, 37.52779], [75.15899, 37.41443], [75.09719, 37.37297], [75.12328, 37.31839], [74.88887, 37.23275], [74.80605, 37.21565], [74.49981, 37.24518], [74.56453, 37.03023], [75.13839, 37.02622], [75.40481, 36.95382], [75.45562, 36.71971], [75.72737, 36.7529], [75.92391, 36.56986], [76.0324, 36.41198], [76.00906, 36.17511], [75.93028, 36.13136], [76.15325, 35.9264], [76.14913, 35.82848], [76.33453, 35.84296], [76.50961, 35.8908], [76.77323, 35.66062], [76.84539, 35.67356], [76.96624, 35.5932], [77.44277, 35.46132], [77.70232, 35.46244], [77.80532, 35.52058], [78.11664, 35.48022], [78.03466, 35.3785], [78.00033, 35.23954], [78.22692, 34.88771], [78.18435, 34.7998], [78.27781, 34.61484], [78.54964, 34.57283], [78.56475, 34.50835], [78.74465, 34.45174], [79.05364, 34.32482], [78.99802, 34.3027], [78.91769, 34.15452], [78.66225, 34.08858], [78.65657, 34.03195], [78.73367, 34.01121], [78.77349, 33.73871], [78.67599, 33.66445], [78.73636, 33.56521], [79.15252, 33.17156], [79.14016, 33.02545], [79.46562, 32.69668], [79.26768, 32.53277], [79.13174, 32.47766], [79.0979, 32.38051], [78.99322, 32.37948], [78.96713, 32.33655], [78.7831, 32.46873], [78.73916, 32.69438], [78.38897, 32.53938], [78.4645, 32.45367], [78.49609, 32.2762], [78.68754, 32.10256], [78.74404, 32.00384], [78.78036, 31.99478], [78.69933, 31.78723], [78.84516, 31.60631], [78.71032, 31.50197], [78.77898, 31.31209], [78.89344, 31.30481], [79.01931, 31.42817], [79.14016, 31.43403], [79.30694, 31.17357], [79.59884, 30.93943], [79.93255, 30.88288], [80.20721, 30.58541], [80.54504, 30.44936], [80.83343, 30.32023], [81.03953, 30.20059], [81.12842, 30.01395], [81.24362, 30.0126], [81.29032, 30.08806], [81.2623, 30.14596], [81.33355, 30.15303], [81.39928, 30.21862], [81.41018, 30.42153], [81.5459, 30.37688], [81.62033, 30.44703], [81.99082, 30.33423], [82.10135, 30.35439], [82.10757, 30.23745], [82.19475, 30.16884], [82.16984, 30.0692], [82.38622, 30.02608], [82.5341, 29.9735], [82.73024, 29.81695], [83.07116, 29.61957], [83.28131, 29.56813], [83.44787, 29.30513], [83.63156, 29.16249], [83.82303, 29.30513], [83.97559, 29.33091], [84.18107, 29.23451], [84.24801, 29.02783], [84.2231, 28.89571], [84.47528, 28.74023], [84.62317, 28.73887], [84.85511, 28.58041], [85.06059, 28.68562], [85.19135, 28.62825], [85.18668, 28.54076], [85.10729, 28.34092], [85.38127, 28.28336], [85.4233, 28.32996], [85.59765, 28.30529], [85.60854, 28.25045], [85.69105, 28.38475], [85.71907, 28.38064], [85.74864, 28.23126], [85.84672, 28.18187], [85.90743, 28.05144], [85.97813, 27.99023], [85.94946, 27.9401], [86.06309, 27.90021], [86.12069, 27.93047], [86.08333, 28.02121], [86.088, 28.09264], [86.18607, 28.17364], [86.22966, 27.9786], [86.42736, 27.91122], [86.51609, 27.96623], [86.56265, 28.09569], [86.74181, 28.10638], [86.75582, 28.04182], [87.03757, 27.94835], [87.11696, 27.84104], [87.56996, 27.84517], [87.72718, 27.80938], [87.82681, 27.95248], [88.13378, 27.88015], [88.1278, 27.95417], [88.25332, 27.9478], [88.54858, 28.06057], [88.63235, 28.12356], [88.83559, 28.01936], [88.88091, 27.85192], [88.77517, 27.45415], [88.82981, 27.38814], [88.91901, 27.32483], [88.93678, 27.33777], [88.96947, 27.30319], [89.00216, 27.32532], [88.95355, 27.4106], [88.97213, 27.51671], [89.0582, 27.60985], [89.12825, 27.62502], [89.59525, 28.16433], [89.79762, 28.23979], [90.13387, 28.19178], [90.58842, 28.02838], [90.69894, 28.07784], [91.20019, 27.98715], [91.25779, 28.07509], [91.46327, 28.0064], [91.48973, 27.93903], [91.5629, 27.84823], [91.6469, 27.76358], [91.84722, 27.76325], [91.87057, 27.7195], [92.27432, 27.89077], [92.32101, 27.79363], [92.42538, 27.80092], [92.7275, 27.98662], [92.73025, 28.05814], [92.65472, 28.07632], [92.67486, 28.15018], [92.93075, 28.25671], [93.14635, 28.37035], [93.18069, 28.50319], [93.44621, 28.67189], [93.72797, 28.68821], [94.35897, 29.01965], [94.2752, 29.11687], [94.69318, 29.31739], [94.81353, 29.17804], [95.0978, 29.14446], [95.11291, 29.09527], [95.2214, 29.10727], [95.26122, 29.07727], [95.3038, 29.13847], [95.41091, 29.13007], [95.50842, 29.13487], [95.72086, 29.20797], [95.75149, 29.32063], [95.84899, 29.31464], [96.05361, 29.38167], [96.31316, 29.18643], [96.18682, 29.11087], [96.20467, 29.02325], [96.3626, 29.10607], [96.61391, 28.72742], [96.40929, 28.51526], [96.48895, 28.42955], [96.6455, 28.61657], [96.85561, 28.4875], [96.88445, 28.39452], [96.98882, 28.32564], [97.1289, 28.3619], [97.34547, 28.21385], [97.41729, 28.29783], [97.47085, 28.2688], [97.50518, 28.49716], [97.56835, 28.55628], [97.70705, 28.5056], [97.79632, 28.33168], [97.90069, 28.3776], [98.15337, 28.12114], [98.13964, 27.9478], [98.32641, 27.51385], [98.42529, 27.55404], [98.43353, 27.67086], [98.69582, 27.56499], [98.7333, 26.85615], [98.77547, 26.61994], [98.72741, 26.36183], [98.67797, 26.24487], [98.7329, 26.17218], [98.66884, 26.09165], [98.63128, 26.15492], [98.57085, 26.11547], [98.60763, 26.01512], [98.70818, 25.86241], [98.63128, 25.79937], [98.54064, 25.85129], [98.40606, 25.61129], [98.31268, 25.55307], [98.25774, 25.6051], [98.16848, 25.62739], [98.18084, 25.56298], [98.12591, 25.50722], [98.14925, 25.41547], [97.92541, 25.20815], [97.83614, 25.2715], [97.77023, 25.11492], [97.72216, 25.08508], [97.72903, 24.91332], [97.79949, 24.85655], [97.76481, 24.8289], [97.73127, 24.83015], [97.70181, 24.84557], [97.64354, 24.79171], [97.56648, 24.76475], [97.56383, 24.75535], [97.5542, 24.74943], [97.54675, 24.74202], [97.56525, 24.72838], [97.56286, 24.54535], [97.52757, 24.43748], [97.60029, 24.4401], [97.66998, 24.45288], [97.7098, 24.35658], [97.65624, 24.33781], [97.66723, 24.30027], [97.71941, 24.29652], [97.76799, 24.26365], [97.72998, 24.2302], [97.72799, 24.18883], [97.75305, 24.16902], [97.72903, 24.12606], [97.62363, 24.00506], [97.5247, 23.94032], [97.64667, 23.84574], [97.72302, 23.89288], [97.79456, 23.94836], [97.79416, 23.95663], [97.84328, 23.97603], [97.86545, 23.97723], [97.88811, 23.97446], [97.8955, 23.97758], [97.89676, 23.97931], [97.89683, 23.98389], [97.88814, 23.98605], [97.88414, 23.99405], [97.88616, 24.00463], [97.90998, 24.02094], [97.93951, 24.01953], [97.98691, 24.03897], [97.99583, 24.04932], [98.04709, 24.07616], [98.05302, 24.07408], [98.05671, 24.07961], [98.0607, 24.07812], [98.06703, 24.08028], [98.07806, 24.07988], [98.20666, 24.11406], [98.54476, 24.13119], [98.59256, 24.08371], [98.85319, 24.13042], [98.87998, 24.15624], [98.89632, 24.10612], [98.67797, 23.9644], [98.68209, 23.80492], [98.79607, 23.77947], [98.82933, 23.72921], [98.81775, 23.694], [98.88396, 23.59555], [98.80294, 23.5345], [98.82877, 23.47908], [98.87683, 23.48995], [98.92104, 23.36946], [98.87573, 23.33038], [98.93958, 23.31414], [98.92515, 23.29535], [98.88597, 23.18656], [99.05975, 23.16382], [99.04601, 23.12215], [99.25741, 23.09025], [99.34127, 23.13099], [99.52214, 23.08218], [99.54218, 22.90014], [99.43537, 22.94086], [99.45654, 22.85726], [99.31243, 22.73893], [99.38247, 22.57544], [99.37972, 22.50188], [99.28771, 22.4105], [99.17318, 22.18025], [99.19176, 22.16983], [99.1552, 22.15874], [99.33166, 22.09656], [99.47585, 22.13345], [99.85351, 22.04183], [99.96612, 22.05965], [99.99084, 21.97053], [99.94003, 21.82782], [99.98654, 21.71064], [100.04956, 21.66843], [100.12679, 21.70539], [100.17486, 21.65306], [100.10757, 21.59945], [100.12542, 21.50365], [100.1625, 21.48704], [100.18447, 21.51898], [100.25863, 21.47043], [100.35201, 21.53176], [100.42892, 21.54325], [100.4811, 21.46148], [100.57861, 21.45637], [100.72143, 21.51898], [100.87265, 21.67396], [101.11744, 21.77659], [101.15156, 21.56129], [101.2124, 21.56422], [101.19349, 21.41959], [101.26912, 21.36482], [101.2229, 21.23271], [101.29326, 21.17254], [101.54563, 21.25668], [101.6068, 21.23329], [101.59491, 21.18621], [101.60886, 21.17947], [101.66977, 21.20004], [101.70548, 21.14911], [101.7622, 21.14813], [101.79266, 21.19025], [101.76745, 21.21571], [101.83887, 21.20983], [101.84412, 21.25291], [101.74014, 21.30967], [101.74224, 21.48276], [101.7727, 21.51794], [101.7475, 21.5873], [101.80001, 21.57461], [101.83257, 21.61562], [101.74555, 21.72852], [101.7791, 21.83019], [101.62566, 21.96574], [101.57525, 22.13026], [101.60675, 22.13513], [101.53638, 22.24794], [101.56789, 22.28876], [101.61306, 22.27515], [101.68973, 22.46843], [101.7685, 22.50337], [101.86828, 22.38397], [101.90714, 22.38688], [101.91344, 22.44417], [101.98487, 22.42766], [102.03633, 22.46164], [102.1245, 22.43372], [102.14099, 22.40092], [102.16621, 22.43336], [102.26428, 22.41321], [102.25339, 22.4607], [102.41061, 22.64184], [102.38415, 22.67919], [102.42618, 22.69212], [102.46665, 22.77108], [102.51802, 22.77969], [102.57095, 22.7036], [102.60675, 22.73376], [102.8636, 22.60735], [102.9321, 22.48659], [103.0722, 22.44775], [103.07843, 22.50097], [103.17961, 22.55705], [103.15782, 22.59873], [103.18895, 22.64471], [103.28079, 22.68063], [103.32282, 22.8127], [103.43179, 22.75816], [103.43646, 22.70648], [103.52675, 22.59155], [103.57812, 22.65764], [103.56255, 22.69499], [103.64506, 22.79979], [103.87904, 22.56683], [103.93286, 22.52703], [103.94513, 22.52553], [103.95191, 22.5134], [103.96352, 22.50584], [103.96783, 22.51173], [103.97384, 22.50634], [103.99247, 22.51958], [104.01088, 22.51823], [104.03734, 22.72945], [104.11384, 22.80363], [104.27084, 22.8457], [104.25683, 22.76534], [104.35593, 22.69353], [104.47225, 22.75813], [104.58122, 22.85571], [104.60457, 22.81841], [104.65283, 22.83419], [104.72755, 22.81984], [104.77114, 22.90017], [104.84942, 22.93631], [104.86765, 22.95178], [104.8334, 23.01484], [104.79478, 23.12934], [104.87382, 23.12854], [104.87992, 23.17141], [104.91435, 23.18666], [104.9486, 23.17235], [104.96532, 23.20463], [104.98712, 23.19176], [105.07002, 23.26248], [105.11672, 23.25247], [105.17276, 23.28679], [105.22569, 23.27249], [105.32376, 23.39684], [105.40782, 23.28107], [105.42805, 23.30824], [105.49966, 23.20669], [105.56037, 23.16806], [105.57594, 23.075], [105.72382, 23.06641], [105.8726, 22.92756], [105.90119, 22.94168], [105.99568, 22.94178], [106.00179, 22.99049], [106.19705, 22.98475], [106.27022, 22.87722], [106.34961, 22.86718], [106.49749, 22.91164], [106.51306, 22.94891], [106.55976, 22.92311], [106.60179, 22.92884], [106.6516, 22.86862], [106.6734, 22.89587], [106.71387, 22.88296], [106.71128, 22.85982], [106.78422, 22.81532], [106.81271, 22.8226], [106.83685, 22.8098], [106.82404, 22.7881], [106.76293, 22.73491], [106.72321, 22.63606], [106.71698, 22.58432], [106.65316, 22.5757], [106.61269, 22.60301], [106.58395, 22.474], [106.55665, 22.46498], [106.57221, 22.37], [106.55976, 22.34841], [106.6516, 22.33977], [106.69986, 22.22309], [106.67495, 22.1885], [106.6983, 22.15102], [106.70142, 22.02409], [106.68274, 21.99811], [106.69276, 21.96013], [106.72551, 21.97923], [106.74345, 22.00965], [106.81038, 21.97934], [106.9178, 21.97357], [106.92714, 21.93459], [106.97228, 21.92592], [106.99252, 21.95191], [107.05634, 21.92303], [107.06101, 21.88982], [107.00964, 21.85948], [107.02615, 21.81981], [107.10771, 21.79879], [107.20734, 21.71493], [107.24625, 21.7077], [107.29296, 21.74674], [107.35834, 21.6672], [107.35989, 21.60063], [107.38636, 21.59774], [107.41593, 21.64839], [107.47197, 21.6672], [107.49532, 21.62958], [107.49065, 21.59774], [107.54047, 21.5934], [107.56537, 21.61945], [107.66967, 21.60787], [107.80355, 21.66141], [107.86114, 21.65128], [107.90006, 21.5905], [107.92652, 21.58906], [107.95232, 21.5388], [107.96774, 21.53601], [107.97074, 21.54072], [107.97383, 21.53961], [107.97932, 21.54503], [108.02926, 21.54997], [108.0569, 21.53604], [108.10003, 21.47338], [108.00365, 17.98159], [111.60491, 13.57105], [118.41371, 24.06775], [118.11703, 24.39734], [118.28244, 24.51231], [118.35291, 24.51645], [118.42453, 24.54644], [118.56434, 24.49266], [120.49232, 25.22863], [121.03532, 26.8787], [123.5458, 31.01942], [122.29378, 31.76513], [122.80525, 33.30571], [123.85601, 37.49093], [123.90497, 38.79949], [124.17532, 39.8232], [124.23201, 39.9248], [124.35029, 39.95639], [124.37089, 40.03004], [124.3322, 40.05573], [124.38556, 40.11047], [124.40719, 40.13655], [124.86913, 40.45387], [125.71172, 40.85223], [125.76869, 40.87908], [126.00335, 40.92835], [126.242, 41.15454], [126.53189, 41.35206], [126.60631, 41.65565], [126.90729, 41.79955], [127.17841, 41.59714], [127.29712, 41.49473], [127.92943, 41.44291], [128.02633, 41.42103], [128.03311, 41.39232], [128.12967, 41.37931], [128.18546, 41.41279], [128.20061, 41.40895], [128.30716, 41.60322], [128.15119, 41.74568], [128.04487, 42.01769], [128.94007, 42.03537], [128.96068, 42.06657], [129.15178, 42.17224], [129.22285, 42.26491], [129.22423, 42.3553], [129.28541, 42.41574], [129.42882, 42.44702], [129.54701, 42.37254], [129.60482, 42.44461], [129.72541, 42.43739], [129.75294, 42.59409], [129.77183, 42.69435], [129.7835, 42.76521], [129.80719, 42.79218], [129.83277, 42.86746], [129.85261, 42.96494], [129.8865, 43.00395], [129.95082, 43.01051], [129.96409, 42.97306], [130.12957, 42.98361], [130.09764, 42.91425], [130.26095, 42.9027], [130.23068, 42.80125], [130.2385, 42.71127], [130.41826, 42.6011], [130.44361, 42.54849], [130.50123, 42.61636], [130.55143, 42.52158], [130.62107, 42.58413], [130.56576, 42.68925], [130.40213, 42.70788], [130.44361, 42.76205], [130.66524, 42.84753], [131.02438, 42.86518], [131.02668, 42.91246], [131.135, 42.94114], [131.10274, 43.04734], [131.20414, 43.13654], [131.19031, 43.21385], [131.30324, 43.39498], [131.29402, 43.46695], [131.19492, 43.53047], [131.21105, 43.82383], [131.26176, 43.94011], [131.23583, 43.96085], [131.25484, 44.03131], [131.30365, 44.04262], [131.1108, 44.70266], [130.95639, 44.85154], [131.48415, 44.99513], [131.68466, 45.12374], [131.66852, 45.2196], [131.76532, 45.22609], [131.86903, 45.33636], [131.99417, 45.2567], [132.83978, 45.05916], [132.96373, 45.0212], [133.12293, 45.1332], [133.09279, 45.25693], [133.19419, 45.51913], [133.41083, 45.57723], [133.48457, 45.86203], [133.60442, 45.90053], [133.67569, 45.9759], [133.72695, 46.05576], [133.68047, 46.14697], [133.88097, 46.25066], [133.91496, 46.4274], [133.84104, 46.46681], [134.03538, 46.75668], [134.20016, 47.33458], [134.50898, 47.4812], [134.7671, 47.72051], [134.55508, 47.98651], [134.67098, 48.1564], [134.75328, 48.36763], [134.49516, 48.42884], [132.66989, 47.96491], [132.57309, 47.71741], [131.90448, 47.68011], [131.2635, 47.73325], [131.09871, 47.6852], [130.95985, 47.6957], [130.90915, 47.90623], [130.65103, 48.10052], [130.84462, 48.30942], [130.52147, 48.61745], [130.66946, 48.88251], [130.43232, 48.90844], [130.2355, 48.86741], [129.85416, 49.11067], [129.67598, 49.29596], [129.50685, 49.42398], [129.40398, 49.44194], [129.35317, 49.3481], [129.23232, 49.40353], [129.11153, 49.36813], [128.72896, 49.58676], [127.83476, 49.5748], [127.53516, 49.84306], [127.49299, 50.01251], [127.60515, 50.23503], [127.37384, 50.28393], [127.36009, 50.43787], [127.28765, 50.46585], [127.36335, 50.58306], [127.28165, 50.72075], [127.14586, 50.91152], [126.93135, 51.0841], [126.90369, 51.3238], [126.68349, 51.70607], [126.44606, 51.98254], [126.558, 52.13738], [125.6131, 53.07229]], [[113.56865, 22.20973], [113.57123, 22.20416], [113.60504, 22.20464], [113.63011, 22.10782], [113.57191, 22.07696], [113.54839, 22.10909], [113.54942, 22.14519], [113.54093, 22.15497], [113.52659, 22.18271], [113.53552, 22.20607], [113.53301, 22.21235], [113.53591, 22.21369], [113.54093, 22.21314], [113.54333, 22.21688], [113.5508, 22.21672], [113.56865, 22.20973]], [[114.50148, 22.15017], [113.92195, 22.13873], [113.83338, 22.1826], [113.81621, 22.2163], [113.86771, 22.42972], [114.03113, 22.5065], [114.05438, 22.5026], [114.05729, 22.51104], [114.06272, 22.51617], [114.07267, 22.51855], [114.07817, 22.52997], [114.08606, 22.53276], [114.09048, 22.53716], [114.09692, 22.53435], [114.1034, 22.5352], [114.11181, 22.52878], [114.11656, 22.53415], [114.12665, 22.54003], [114.13823, 22.54319], [114.1482, 22.54091], [114.15123, 22.55163], [114.1597, 22.56041], [114.17247, 22.55944], [114.18338, 22.55444], [114.20655, 22.55706], [114.22185, 22.55343], [114.22888, 22.5436], [114.25154, 22.55977], [114.44998, 22.55977], [114.50148, 22.15017]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q22890\", nameEn: \"Ireland\", level: \"sharedLandform\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q23666\", nameEn: \"Great Britain\", country: \"GB\", level: \"sharedLandform\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q23681\", nameEn: \"Northern Cyprus\", groups: [\"Q644636\", \"145\", \"142\"], driveSide: \"left\", callingCodes: [\"90 392\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.67678, 35.03866], [33.67742, 35.05963], [33.68474, 35.06602], [33.69095, 35.06237], [33.70861, 35.07644], [33.7161, 35.07279], [33.70209, 35.04882], [33.71482, 35.03722], [33.73824, 35.05321], [33.76106, 35.04253], [33.78581, 35.05104], [33.82067, 35.07826], [33.84168, 35.06823], [33.8541, 35.07201], [33.87479, 35.08881], [33.87097, 35.09389], [33.87622, 35.10457], [33.87224, 35.12293], [33.88561, 35.12449], [33.88943, 35.12007], [33.88737, 35.11408], [33.89853, 35.11377], [33.91789, 35.08688], [33.91299, 35.07579], [33.90247, 35.07686], [33.89485, 35.06873], [33.88367, 35.07877], [33.85261, 35.0574], [33.8355, 35.05777], [33.82051, 35.0667], [33.8012, 35.04786], [33.81524, 35.04192], [33.83055, 35.02865], [33.82875, 35.01685], [33.84045, 35.00616], [33.85216, 35.00579], [33.85891, 35.001], [33.85621, 34.98956], [33.83505, 34.98108], [33.84811, 34.97075], [33.86432, 34.97592], [33.90075, 34.96623], [33.98684, 34.76642], [35.48515, 34.70851], [35.51152, 36.10954], [32.82353, 35.70297], [32.46489, 35.48584], [32.60361, 35.16647], [32.64864, 35.19967], [32.70947, 35.18328], [32.70779, 35.14127], [32.85733, 35.07742], [32.86406, 35.1043], [32.94471, 35.09422], [33.01192, 35.15639], [33.08249, 35.17319], [33.11105, 35.15639], [33.15138, 35.19504], [33.27068, 35.16815], [33.3072, 35.16816], [33.31955, 35.18096], [33.35056, 35.18328], [33.34964, 35.17803], [33.35596, 35.17942], [33.35612, 35.17402], [33.36569, 35.17479], [33.3717, 35.1788], [33.37248, 35.18698], [33.38575, 35.2018], [33.4076, 35.20062], [33.41675, 35.16325], [33.46813, 35.10564], [33.48136, 35.0636], [33.47825, 35.04103], [33.45178, 35.02078], [33.45256, 35.00288], [33.47666, 35.00701], [33.48915, 35.06594], [33.53975, 35.08151], [33.57478, 35.06049], [33.567, 35.04803], [33.59658, 35.03635], [33.61215, 35.0527], [33.63765, 35.03869], [33.67678, 35.03866]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q25231\", nameEn: \"Svalbard\", aliases: [\"NO-21\"], country: \"NO\", groups: [\"SJ\", \"154\", \"150\", \"UN\"], level: \"subterritory\", callingCodes: [\"47 79\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-7.49892, 77.24208], [32.07813, 72.01005], [36.85549, 84.09565], [-7.49892, 77.24208]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q25263\", nameEn: \"Azores\", aliases: [\"PT-20\"], country: \"PT\", groups: [\"Q3320166\", \"Q2914565\", \"Q105472\", \"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"351\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-23.12984, 40.26428], [-36.43765, 41.39418], [-22.54767, 33.34416], [-23.12984, 40.26428]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q25359\", nameEn: \"Navassa Island\", aliases: [\"UM-76\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"029\", \"003\", \"419\", \"019\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-74.7289, 18.71009], [-75.71816, 18.46438], [-74.76465, 18.06252], [-74.7289, 18.71009]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q25396\", nameEn: \"Bonaire\", aliases: [\"BQ-BO\", \"NL-BQ1\"], country: \"NL\", groups: [\"Q1451600\", \"BQ\", \"029\", \"003\", \"419\", \"019\", \"UN\"], level: \"subterritory\", callingCodes: [\"599 7\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-67.89186, 12.4116], [-68.90012, 12.62309], [-68.33524, 11.78151], [-68.01417, 11.77722], [-67.89186, 12.4116]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q25528\", nameEn: \"Saba\", aliases: [\"BQ-SA\", \"NL-BQ2\"], country: \"NL\", groups: [\"Q1451600\", \"BQ\", \"029\", \"003\", \"419\", \"019\", \"UN\"], level: \"subterritory\", callingCodes: [\"599 4\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-63.07669, 17.79659], [-63.81314, 17.95045], [-63.22932, 17.32592], [-63.07669, 17.79659]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q26180\", nameEn: \"Sint Eustatius\", aliases: [\"BQ-SE\", \"NL-BQ3\"], country: \"NL\", groups: [\"Q1451600\", \"BQ\", \"029\", \"003\", \"419\", \"019\", \"UN\"], level: \"subterritory\", callingCodes: [\"599 3\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-63.07669, 17.79659], [-63.34999, 16.94218], [-62.76692, 17.64353], [-63.07669, 17.79659]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q26253\", nameEn: \"Madeira\", aliases: [\"PT-30\"], country: \"PT\", groups: [\"Q3320166\", \"Q2914565\", \"Q105472\", \"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"351\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-19.30302, 33.65304], [-16.04789, 29.65076], [-11.68307, 33.12333], [-19.30302, 33.65304]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q26927\", nameEn: \"Lakshadweep\", aliases: [\"IN-LD\"], country: \"IN\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"91\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[67.64074, 11.57295], [76.59015, 5.591], [72.67494, 13.58102], [67.64074, 11.57295]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q27329\", nameEn: \"Asian Russia\", country: \"RU\", groups: [\"142\", \"UN\"], callingCodes: [\"7\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-179.99933, 64.74703], [-172.76104, 63.77445], [-169.03888, 65.48473], [-168.95635, 65.98512], [-168.25765, 71.99091], [-179.9843, 71.90735], [-179.99933, 64.74703]]], [[[59.99809, 51.98263], [60.19925, 51.99173], [60.48915, 52.15175], [60.72581, 52.15538], [60.78201, 52.22067], [61.05417, 52.35096], [60.98021, 52.50068], [60.84709, 52.52228], [60.84118, 52.63912], [60.71693, 52.66245], [60.71989, 52.75923], [61.05842, 52.92217], [61.23462, 53.03227], [62.0422, 52.96105], [62.12799, 52.99133], [62.14574, 53.09626], [61.19024, 53.30536], [61.14291, 53.41481], [61.29082, 53.50992], [61.37957, 53.45887], [61.57185, 53.50112], [61.55706, 53.57144], [60.90626, 53.62937], [61.22574, 53.80268], [61.14283, 53.90063], [60.99796, 53.93699], [61.26863, 53.92797], [61.3706, 54.08464], [61.47603, 54.08048], [61.56941, 53.95703], [61.65318, 54.02445], [62.03913, 53.94768], [62.00966, 54.04134], [62.38535, 54.03961], [62.45931, 53.90737], [62.56876, 53.94047], [62.58651, 54.05871], [63.80604, 54.27079], [63.91224, 54.20013], [64.02715, 54.22679], [63.97686, 54.29763], [64.97216, 54.4212], [65.11033, 54.33028], [65.24663, 54.35721], [65.20174, 54.55216], [68.21308, 54.98645], [68.26661, 55.09226], [68.19206, 55.18823], [68.90865, 55.38148], [69.34224, 55.36344], [69.74917, 55.35545], [70.19179, 55.1476], [70.76493, 55.3027], [70.96009, 55.10558], [71.08288, 54.71253], [71.24185, 54.64965], [71.08706, 54.33376], [71.10379, 54.13326], [71.96141, 54.17736], [72.17477, 54.36303], [72.43415, 53.92685], [72.71026, 54.1161], [73.37963, 53.96132], [73.74778, 54.07194], [73.68921, 53.86522], [73.25412, 53.61532], [73.39218, 53.44623], [75.07405, 53.80831], [75.43398, 53.98652], [75.3668, 54.07439], [76.91052, 54.4677], [76.82266, 54.1798], [76.44076, 54.16017], [76.54243, 53.99329], [77.90383, 53.29807], [79.11255, 52.01171], [80.08138, 50.77658], [80.4127, 50.95581], [80.44819, 51.20855], [80.80318, 51.28262], [81.16999, 51.15662], [81.06091, 50.94833], [81.41248, 50.97524], [81.46581, 50.77658], [81.94999, 50.79307], [82.55443, 50.75412], [83.14607, 51.00796], [83.8442, 50.87375], [84.29385, 50.27257], [84.99198, 50.06793], [85.24047, 49.60239], [86.18709, 49.50259], [86.63674, 49.80136], [86.79056, 49.74787], [86.61307, 49.60239], [86.82606, 49.51796], [87.03071, 49.25142], [87.31465, 49.23603], [87.28386, 49.11626], [87.478, 49.07403], [87.48983, 49.13794], [87.81333, 49.17354], [87.98977, 49.18147], [88.15543, 49.30314], [88.17223, 49.46934], [88.42449, 49.48821], [88.82499, 49.44808], [89.70687, 49.72535], [89.59711, 49.90851], [91.86048, 50.73734], [92.07173, 50.69585], [92.44714, 50.78762], [93.01109, 50.79001], [92.99595, 50.63183], [94.30823, 50.57498], [94.39258, 50.22193], [94.49477, 50.17832], [94.6121, 50.04239], [94.97166, 50.04725], [95.02465, 49.96941], [95.74757, 49.97915], [95.80056, 50.04239], [96.97388, 49.88413], [97.24639, 49.74737], [97.56811, 49.84265], [97.56432, 49.92801], [97.76871, 49.99861], [97.85197, 49.91339], [98.29481, 50.33561], [98.31373, 50.4996], [98.06393, 50.61262], [97.9693, 50.78044], [98.01472, 50.86652], [97.83305, 51.00248], [98.05257, 51.46696], [98.22053, 51.46579], [98.33222, 51.71832], [98.74142, 51.8637], [98.87768, 52.14563], [99.27888, 51.96876], [99.75578, 51.90108], [99.89203, 51.74903], [100.61116, 51.73028], [101.39085, 51.45753], [101.5044, 51.50467], [102.14032, 51.35566], [102.32194, 50.67982], [102.71178, 50.38873], [103.70343, 50.13952], [105.32528, 50.4648], [106.05562, 50.40582], [106.07865, 50.33474], [106.47156, 50.31909], [106.49628, 50.32436], [106.51122, 50.34408], [106.58373, 50.34044], [106.80326, 50.30177], [107.00007, 50.1977], [107.1174, 50.04239], [107.36407, 49.97612], [107.96116, 49.93191], [107.95387, 49.66659], [108.27937, 49.53167], [108.53969, 49.32325], [109.18017, 49.34709], [109.51325, 49.22859], [110.24373, 49.16676], [110.39891, 49.25083], [110.64493, 49.1816], [113.02647, 49.60772], [113.20216, 49.83356], [114.325, 50.28098], [114.9703, 50.19254], [115.26068, 49.97367], [115.73602, 49.87688], [116.22402, 50.04477], [116.62502, 49.92919], [116.71193, 49.83813], [117.27597, 49.62544], [117.48208, 49.62324], [117.82343, 49.52696], [118.61623, 49.93809], [119.11003, 50.00276], [119.27996, 50.13348], [119.38598, 50.35162], [119.13553, 50.37412], [120.10963, 51.671], [120.65907, 51.93544], [120.77337, 52.20805], [120.61346, 52.32447], [120.71673, 52.54099], [120.46454, 52.63811], [120.04049, 52.58773], [120.0451, 52.7359], [120.85633, 53.28499], [121.39213, 53.31888], [122.35063, 53.49565], [122.85966, 53.47395], [123.26989, 53.54843], [123.86158, 53.49391], [124.46078, 53.21881], [125.17522, 53.20225], [125.6131, 53.07229], [126.558, 52.13738], [126.44606, 51.98254], [126.68349, 51.70607], [126.90369, 51.3238], [126.93135, 51.0841], [127.14586, 50.91152], [127.28165, 50.72075], [127.36335, 50.58306], [127.28765, 50.46585], [127.36009, 50.43787], [127.37384, 50.28393], [127.60515, 50.23503], [127.49299, 50.01251], [127.53516, 49.84306], [127.83476, 49.5748], [128.72896, 49.58676], [129.11153, 49.36813], [129.23232, 49.40353], [129.35317, 49.3481], [129.40398, 49.44194], [129.50685, 49.42398], [129.67598, 49.29596], [129.85416, 49.11067], [130.2355, 48.86741], [130.43232, 48.90844], [130.66946, 48.88251], [130.52147, 48.61745], [130.84462, 48.30942], [130.65103, 48.10052], [130.90915, 47.90623], [130.95985, 47.6957], [131.09871, 47.6852], [131.2635, 47.73325], [131.90448, 47.68011], [132.57309, 47.71741], [132.66989, 47.96491], [134.49516, 48.42884], [134.75328, 48.36763], [134.67098, 48.1564], [134.55508, 47.98651], [134.7671, 47.72051], [134.50898, 47.4812], [134.20016, 47.33458], [134.03538, 46.75668], [133.84104, 46.46681], [133.91496, 46.4274], [133.88097, 46.25066], [133.68047, 46.14697], [133.72695, 46.05576], [133.67569, 45.9759], [133.60442, 45.90053], [133.48457, 45.86203], [133.41083, 45.57723], [133.19419, 45.51913], [133.09279, 45.25693], [133.12293, 45.1332], [132.96373, 45.0212], [132.83978, 45.05916], [131.99417, 45.2567], [131.86903, 45.33636], [131.76532, 45.22609], [131.66852, 45.2196], [131.68466, 45.12374], [131.48415, 44.99513], [130.95639, 44.85154], [131.1108, 44.70266], [131.30365, 44.04262], [131.25484, 44.03131], [131.23583, 43.96085], [131.26176, 43.94011], [131.21105, 43.82383], [131.19492, 43.53047], [131.29402, 43.46695], [131.30324, 43.39498], [131.19031, 43.21385], [131.20414, 43.13654], [131.10274, 43.04734], [131.135, 42.94114], [131.02668, 42.91246], [131.02438, 42.86518], [130.66524, 42.84753], [130.44361, 42.76205], [130.40213, 42.70788], [130.56576, 42.68925], [130.62107, 42.58413], [130.55143, 42.52158], [130.56835, 42.43281], [130.60805, 42.4317], [130.64181, 42.41422], [130.66367, 42.38024], [130.65022, 42.32281], [131.95041, 41.5445], [140.9182, 45.92937], [145.82343, 44.571], [145.23667, 43.76813], [153.94307, 38.42848], [180, 62.52334], [180, 71.53642], [155.31937, 81.93282], [76.13964, 83.37843], [64.18965, 69.94255], [66.1708, 67.61252], [61.98014, 65.72191], [60.74386, 64.95767], [59.63945, 64.78384], [59.80579, 64.13948], [59.24834, 63.01859], [59.61398, 62.44915], [59.36223, 61.3882], [59.50685, 60.91162], [58.3853, 59.487], [59.15636, 59.14682], [59.40376, 58.45822], [58.71104, 58.07475], [58.81412, 57.71602], [58.13789, 57.68097], [58.07604, 57.08308], [57.28024, 56.87898], [57.51527, 56.08729], [59.28419, 56.15739], [59.49035, 55.60486], [58.81825, 55.03378], [57.25137, 55.26262], [57.14829, 54.84204], [57.95234, 54.39672], [59.95217, 54.85853], [59.70487, 54.14846], [58.94336, 53.953], [58.79644, 52.43392], [59.22409, 52.28437], [59.25033, 52.46803], [60.17516, 52.39457], [60.17253, 52.25814], [59.91279, 52.06924], [59.99809, 51.98263]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q34366\", nameEn: \"Tasmania\", aliases: [\"AU-TAS\"], country: \"AU\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"61\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[123.64533, -39.13605], [159.69067, -56.28945], [159.74028, -39.1978], [123.64533, -39.13605]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q34497\", nameEn: \"Saint Helena\", aliases: [\"SH-HL\"], country: \"GB\", groups: [\"SH\", \"BOTS\", \"011\", \"202\", \"002\", \"UN\"], level: \"subterritory\", driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"290\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-8.3824, -13.9131], [-6.17428, -19.07236], [-3.29308, -15.22647], [-8.3824, -13.9131]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q35657\", nameEn: \"US States\", country: \"US\", level: \"subcountryGroup\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q36117\", nameEn: \"Borneo\", level: \"sharedLandform\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q36678\", nameEn: \"West Bank\", country: \"PS\", groups: [\"145\", \"142\"], callingCodes: [\"970\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[35.47672, 31.49578], [35.55941, 31.76535], [35.52758, 31.9131], [35.54375, 31.96587], [35.52012, 32.04076], [35.57111, 32.21877], [35.55807, 32.38674], [35.42078, 32.41562], [35.41048, 32.43706], [35.41598, 32.45593], [35.42034, 32.46009], [35.40224, 32.50136], [35.35212, 32.52047], [35.30685, 32.51024], [35.29306, 32.50947], [35.25049, 32.52453], [35.2244, 32.55289], [35.15937, 32.50466], [35.10882, 32.4757], [35.10024, 32.47856], [35.09236, 32.47614], [35.08564, 32.46948], [35.07059, 32.4585], [35.05423, 32.41754], [35.05311, 32.4024], [35.0421, 32.38242], [35.05142, 32.3667], [35.04243, 32.35008], [35.01772, 32.33863], [35.01119, 32.28684], [35.02939, 32.2671], [35.01841, 32.23981], [34.98885, 32.20758], [34.95703, 32.19522], [34.96009, 32.17503], [34.99039, 32.14626], [34.98507, 32.12606], [34.99437, 32.10962], [34.9863, 32.09551], [35.00261, 32.027], [34.98682, 31.96935], [35.00124, 31.93264], [35.03489, 31.92448], [35.03978, 31.89276], [35.03489, 31.85919], [34.99712, 31.85569], [34.9724, 31.83352], [35.01978, 31.82944], [35.05617, 31.85685], [35.07677, 31.85627], [35.14174, 31.81325], [35.18603, 31.80901], [35.18169, 31.82542], [35.19461, 31.82687], [35.21469, 31.81835], [35.216, 31.83894], [35.21128, 31.863], [35.20381, 31.86716], [35.20673, 31.88151], [35.20791, 31.8821], [35.20945, 31.8815], [35.21016, 31.88237], [35.21276, 31.88153], [35.2136, 31.88241], [35.22014, 31.88264], [35.22294, 31.87889], [35.22567, 31.86745], [35.22817, 31.8638], [35.2249, 31.85433], [35.2304, 31.84222], [35.24816, 31.8458], [35.25753, 31.8387], [35.251, 31.83085], [35.26404, 31.82567], [35.25573, 31.81362], [35.26058, 31.79064], [35.25225, 31.7678], [35.26319, 31.74846], [35.25182, 31.73945], [35.24981, 31.72543], [35.2438, 31.7201], [35.24315, 31.71244], [35.23972, 31.70896], [35.22392, 31.71899], [35.21937, 31.71578], [35.20538, 31.72388], [35.18023, 31.72067], [35.16478, 31.73242], [35.15474, 31.73352], [35.15119, 31.73634], [35.13931, 31.73012], [35.12933, 31.7325], [35.11895, 31.71454], [35.10782, 31.71594], [35.08226, 31.69107], [35.00879, 31.65426], [34.95249, 31.59813], [34.9415, 31.55601], [34.94356, 31.50743], [34.93258, 31.47816], [34.89756, 31.43891], [34.87833, 31.39321], [34.88932, 31.37093], [34.92571, 31.34337], [35.02459, 31.35979], [35.13033, 31.3551], [35.22921, 31.37445], [35.39675, 31.49572], [35.47672, 31.49578]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q37362\", nameEn: \"Akrotiri and Dhekelia\", aliases: [\"SBA\"], country: \"GB\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q38095\", nameEn: \"Gal\\xE1pagos Islands\", aliases: [\"EC-W\"], country: \"EC\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"593\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-93.12365, 2.64343], [-92.46744, -2.52874], [-87.07749, -0.8849], [-93.12365, 2.64343]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q39760\", nameEn: \"Gaza Strip\", country: \"PS\", groups: [\"145\", \"142\"], callingCodes: [\"970\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[34.052, 31.46619], [34.21853, 31.32363], [34.23572, 31.2966], [34.24012, 31.29591], [34.26742, 31.21998], [34.29417, 31.24194], [34.36523, 31.28963], [34.37381, 31.30598], [34.36505, 31.36404], [34.40077, 31.40926], [34.48892, 31.48365], [34.56797, 31.54197], [34.48681, 31.59711], [34.29262, 31.70393], [34.052, 31.46619]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q40888\", nameEn: \"Andaman and Nicobar Islands\", aliases: [\"IN-AN\"], country: \"IN\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"91\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[94.42132, 5.96581], [94.6371, 13.81803], [86.7822, 13.41052], [94.42132, 5.96581]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q41684\", nameEn: \"Stewart Island\", country: \"NZ\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"64\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[166.59185, -47.61313], [169.70504, -47.56021], [167.52103, -46.41337], [166.59185, -47.61313]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q43296\", nameEn: \"Wake Island\", aliases: [\"WK\", \"WAK\", \"WKUM\", \"872\", \"UM-79\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"057\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[167.34779, 18.97692], [166.67967, 20.14834], [165.82549, 18.97692], [167.34779, 18.97692]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q46275\", nameEn: \"New Zealand Subantarctic Islands\", country: \"NZ\", groups: [\"Q851132\", \"053\", \"009\", \"UN\"], driveSide: \"left\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[164.30551, -47.88072], [161.96603, -56.07661], [179.49541, -50.04657], [179.49541, -47.2902], [169.91032, -47.66283], [164.30551, -47.88072]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q46395\", nameEn: \"British Overseas Territories\", aliases: [\"BOTS\", \"UKOTS\"], country: \"GB\", level: \"subcountryGroup\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q46772\", nameEn: \"Kerguelen Islands\", country: \"FR\", groups: [\"TF\", \"Q1451600\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[61.9216, -49.39746], [70.67507, -51.14192], [74.25129, -45.45074], [61.9216, -49.39746]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q46879\", nameEn: \"Baker Island\", aliases: [\"UM-81\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"061\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-175.33482, -1.40631], [-175.31323, 0.5442], [-177.91421, 0.39582], [-175.33482, -1.40631]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q47863\", nameEn: \"Midway Atoll\", aliases: [\"MI\", \"MID\", \"MIUM\", \"488\", \"UM-71\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"061\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-176.29741, 29.09786], [-177.77531, 29.29793], [-177.5224, 27.7635], [-176.29741, 29.09786]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q62218\", nameEn: \"Jarvis Island\", aliases: [\"UM-86\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"061\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-160.42921, -1.4364], [-159.12443, 0.19975], [-160.38779, 0.30331], [-160.42921, -1.4364]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q105472\", nameEn: \"Macaronesia\", level: \"sharedLandform\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q114935\", nameEn: \"Kermadec Islands\", country: \"NZ\", groups: [\"Q851132\", \"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"64\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-174.40891, -29.09438], [-180, -24.21376], [-179.96512, -35.00791], [-174.40891, -29.09438]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q115459\", nameEn: \"Chatham Islands\", aliases: [\"NZ-CIT\"], country: \"NZ\", groups: [\"Q851132\", \"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"64\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-179.93224, -45.18423], [-172.47015, -45.17912], [-176.30998, -41.38382], [-179.93224, -45.18423]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q118863\", nameEn: \"North Island\", country: \"NZ\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"64\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[179.49541, -47.2902], [179.49541, -36.79303], [174.17679, -32.62487], [170.27492, -36.38133], [174.58663, -40.80446], [174.46634, -41.55028], [179.49541, -47.2902]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q120755\", nameEn: \"South Island\", country: \"NZ\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"64\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[169.70504, -47.56021], [179.49541, -47.2902], [174.46634, -41.55028], [174.58663, -40.80446], [170.27492, -36.38133], [166.56976, -39.94841], [164.8365, -46.0205], [167.52103, -46.41337], [169.70504, -47.56021]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q123076\", nameEn: \"Palmyra Atoll\", aliases: [\"UM-95\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"061\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-161.06795, 5.2462], [-161.0731, 7.1291], [-163.24478, 5.24198], [-161.06795, 5.2462]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q130574\", nameEn: \"Chafarinas Islands\", country: \"ES\", groups: [\"EU\", \"Q191011\", \"015\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.40316, 35.16893], [-2.43262, 35.20652], [-2.45965, 35.16527], [-2.40316, 35.16893]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q130895\", nameEn: \"Kingman Reef\", aliases: [\"UM-89\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"061\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-161.0731, 7.1291], [-163.16627, 7.15036], [-163.24478, 5.24198], [-161.0731, 7.1291]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q131008\", nameEn: \"Johnston Atoll\", aliases: [\"JT\", \"JTN\", \"JTUM\", \"396\", \"UM-67\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"061\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-170.65691, 16.57199], [-168.87689, 16.01159], [-169.2329, 17.4933], [-170.65691, 16.57199]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q131305\", nameEn: \"Howland Island\", aliases: [\"UM-84\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"061\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-177.91421, 0.39582], [-175.31323, 0.5442], [-176.74464, 2.28109], [-177.91421, 0.39582]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q133888\", nameEn: \"Ashmore and Cartier Islands\", country: \"AU\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"61\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[123.7463, -11.1783], [120.6877, -13.59408], [125.29076, -12.33139], [123.7463, -11.1783]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q153732\", nameEn: \"Mariana Islands\", level: \"sharedLandform\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q172216\", nameEn: \"Coral Sea Islands\", country: \"AU\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"61\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[159.77159, -28.41151], [156.73836, -14.50464], [145.2855, -9.62524], [147.69992, -17.5933], [152.93188, -20.92631], [154.02855, -24.43238], [159.77159, -28.41151]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q179313\", nameEn: \"Alderney\", country: \"GB\", groups: [\"GG\", \"830\", \"Q185086\", \"154\", \"150\", \"UN\"], level: \"subterritory\", driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44 01481\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.36485, 49.48223], [-2.09454, 49.46288], [-2.02963, 49.91866], [-2.49556, 49.79012], [-2.36485, 49.48223]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q185086\", nameEn: \"Crown Dependencies\", country: \"GB\", level: \"subcountryGroup\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q190571\", nameEn: \"Scattered Islands\", country: \"FR\", groups: [\"TF\", \"Q1451600\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[53.53458, -16.36909], [54.96649, -16.28353], [54.61476, -15.02273], [53.53458, -16.36909]]], [[[38.55969, -20.75596], [40.68027, -23.38889], [43.52893, -15.62903], [38.55969, -20.75596]]], [[[47.03092, -11.05648], [47.11593, -12.08552], [47.96702, -11.46447], [47.03092, -11.05648]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q191011\", nameEn: \"Plazas de soberan\\xEDa\", country: \"ES\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q191146\", nameEn: \"Pe\\xF1\\xF3n de V\\xE9lez de la Gomera\", country: \"ES\", groups: [\"EU\", \"Q191011\", \"015\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-4.30191, 35.17419], [-4.30112, 35.17058], [-4.29436, 35.17149], [-4.30191, 35.17419]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q201698\", nameEn: \"Crozet Islands\", country: \"FR\", groups: [\"TF\", \"Q1451600\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[55.03425, -43.65017], [46.31615, -46.28749], [54.5587, -47.93013], [55.03425, -43.65017]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q578170\", nameEn: \"Contiguous United States\", aliases: [\"CONUS\"], country: \"US\", groups: [\"Q35657\", \"021\", \"003\", \"019\", \"UN\"], roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-97.13927, 25.96583], [-96.92418, 25.97377], [-80.57035, 24.0565], [-78.91214, 27.76553], [-61.98255, 37.34815], [-67.16117, 44.20069], [-66.93432, 44.82597], [-66.96824, 44.83078], [-66.98249, 44.87071], [-66.96824, 44.90965], [-67.0216, 44.95333], [-67.11316, 45.11176], [-67.15965, 45.16179], [-67.19603, 45.16771], [-67.20349, 45.1722], [-67.22751, 45.16344], [-67.27039, 45.1934], [-67.29748, 45.18173], [-67.29754, 45.14865], [-67.34927, 45.122], [-67.48201, 45.27351], [-67.42394, 45.37969], [-67.50578, 45.48971], [-67.42144, 45.50584], [-67.43815, 45.59162], [-67.6049, 45.60725], [-67.80705, 45.69528], [-67.80653, 45.80022], [-67.75654, 45.82324], [-67.80961, 45.87531], [-67.75196, 45.91814], [-67.78111, 45.9392], [-67.78578, 47.06473], [-67.87993, 47.10377], [-67.94843, 47.1925], [-68.23244, 47.35712], [-68.37458, 47.35851], [-68.38332, 47.28723], [-68.57914, 47.28431], [-68.60575, 47.24659], [-68.70125, 47.24399], [-68.89222, 47.1807], [-69.05039, 47.2456], [-69.05073, 47.30076], [-69.05148, 47.42012], [-69.22119, 47.46461], [-69.99966, 46.69543], [-70.05812, 46.41768], [-70.18547, 46.35357], [-70.29078, 46.18832], [-70.23855, 46.1453], [-70.31025, 45.96424], [-70.24694, 45.95138], [-70.25976, 45.89675], [-70.41523, 45.79497], [-70.38934, 45.73215], [-70.54019, 45.67291], [-70.68516, 45.56964], [-70.72651, 45.49771], [-70.62518, 45.42286], [-70.65383, 45.37592], [-70.78372, 45.43269], [-70.82638, 45.39828], [-70.80236, 45.37444], [-70.84816, 45.22698], [-70.89864, 45.2398], [-70.91169, 45.29849], [-70.95193, 45.33895], [-71.0107, 45.34819], [-71.01866, 45.31573], [-71.08364, 45.30623], [-71.14568, 45.24128], [-71.19723, 45.25438], [-71.22338, 45.25184], [-71.29371, 45.29996], [-71.37133, 45.24624], [-71.44252, 45.2361], [-71.40364, 45.21382], [-71.42778, 45.12624], [-71.48735, 45.07784], [-71.50067, 45.01357], [-73.35025, 45.00942], [-74.32699, 44.99029], [-74.66689, 45.00646], [-74.8447, 45.00606], [-74.99101, 44.98051], [-75.01363, 44.95608], [-75.2193, 44.87821], [-75.41441, 44.76614], [-75.76813, 44.51537], [-75.8217, 44.43176], [-75.95947, 44.34463], [-76.00018, 44.34896], [-76.16285, 44.28262], [-76.1664, 44.23051], [-76.244, 44.19643], [-76.31222, 44.19894], [-76.35324, 44.13493], [-76.43859, 44.09393], [-76.79706, 43.63099], [-79.25796, 43.54052], [-79.06921, 43.26183], [-79.05512, 43.25375], [-79.05544, 43.21224], [-79.05002, 43.20133], [-79.05384, 43.17418], [-79.04652, 43.16396], [-79.0427, 43.13934], [-79.06881, 43.12029], [-79.05671, 43.10937], [-79.07486, 43.07845], [-79.01055, 43.06659], [-78.99941, 43.05612], [-79.02424, 43.01983], [-79.02074, 42.98444], [-78.98126, 42.97], [-78.96312, 42.95509], [-78.93224, 42.95229], [-78.90905, 42.93022], [-78.90712, 42.89733], [-78.93684, 42.82887], [-82.67862, 41.67615], [-83.11184, 41.95671], [-83.14962, 42.04089], [-83.12724, 42.2376], [-83.09837, 42.28877], [-83.07837, 42.30978], [-83.02253, 42.33045], [-82.82964, 42.37355], [-82.64242, 42.55594], [-82.58873, 42.54984], [-82.57583, 42.5718], [-82.51858, 42.611], [-82.51063, 42.66025], [-82.46613, 42.76615], [-82.4826, 42.8068], [-82.45331, 42.93139], [-82.4253, 42.95423], [-82.4146, 42.97626], [-82.42469, 42.992], [-82.48419, 45.30225], [-83.59589, 45.82131], [-83.43746, 45.99749], [-83.57017, 46.105], [-83.83329, 46.12169], [-83.90453, 46.05922], [-83.95399, 46.05634], [-84.1096, 46.23987], [-84.09756, 46.25512], [-84.11615, 46.2681], [-84.11254, 46.32329], [-84.13451, 46.39218], [-84.11196, 46.50248], [-84.12885, 46.53068], [-84.17723, 46.52753], [-84.1945, 46.54061], [-84.2264, 46.53337], [-84.26351, 46.49508], [-84.29893, 46.49127], [-84.34174, 46.50683], [-84.42101, 46.49853], [-84.4481, 46.48972], [-84.47607, 46.45225], [-84.55635, 46.45974], [-84.85871, 46.88881], [-88.37033, 48.30586], [-89.48837, 48.01412], [-89.57972, 48.00023], [-89.77248, 48.02607], [-89.89974, 47.98109], [-90.07418, 48.11043], [-90.56312, 48.09488], [-90.56444, 48.12184], [-90.75045, 48.09143], [-90.87588, 48.2484], [-91.08016, 48.18096], [-91.25025, 48.08522], [-91.43248, 48.04912], [-91.45829, 48.07454], [-91.58025, 48.04339], [-91.55649, 48.10611], [-91.70451, 48.11805], [-91.71231, 48.19875], [-91.86125, 48.21278], [-91.98929, 48.25409], [-92.05339, 48.35958], [-92.14732, 48.36578], [-92.202, 48.35252], [-92.26662, 48.35651], [-92.30939, 48.31251], [-92.27167, 48.25046], [-92.37185, 48.22259], [-92.48147, 48.36609], [-92.45588, 48.40624], [-92.50712, 48.44921], [-92.65606, 48.43471], [-92.71323, 48.46081], [-92.69927, 48.49573], [-92.62747, 48.50278], [-92.6342, 48.54133], [-92.7287, 48.54005], [-92.94973, 48.60866], [-93.25391, 48.64266], [-93.33946, 48.62787], [-93.3712, 48.60599], [-93.39758, 48.60364], [-93.40693, 48.60948], [-93.44472, 48.59147], [-93.47022, 48.54357], [-93.66382, 48.51845], [-93.79267, 48.51631], [-93.80939, 48.52439], [-93.80676, 48.58232], [-93.83288, 48.62745], [-93.85769, 48.63284], [-94.23215, 48.65202], [-94.25104, 48.65729], [-94.25172, 48.68404], [-94.27153, 48.70232], [-94.4174, 48.71049], [-94.44258, 48.69223], [-94.53826, 48.70216], [-94.54885, 48.71543], [-94.58903, 48.71803], [-94.69335, 48.77883], [-94.69669, 48.80918], [-94.70486, 48.82365], [-94.70087, 48.8339], [-94.687, 48.84077], [-94.75017, 49.09931], [-94.77355, 49.11998], [-94.82487, 49.29483], [-94.8159, 49.32299], [-94.85381, 49.32492], [-94.95681, 49.37035], [-94.99532, 49.36579], [-95.01419, 49.35647], [-95.05825, 49.35311], [-95.12903, 49.37056], [-95.15357, 49.384], [-95.15355, 48.9996], [-123.32163, 49.00419], [-123.0093, 48.83186], [-123.0093, 48.76586], [-123.26565, 48.6959], [-123.15614, 48.35395], [-123.50039, 48.21223], [-125.03842, 48.53282], [-133.98258, 38.06389], [-118.48109, 32.5991], [-117.1243, 32.53427], [-115.88053, 32.63624], [-114.71871, 32.71894], [-114.76736, 32.64094], [-114.80584, 32.62028], [-114.81141, 32.55543], [-114.79524, 32.55731], [-114.82011, 32.49609], [-111.07523, 31.33232], [-108.20979, 31.33316], [-108.20899, 31.78534], [-106.529, 31.784], [-106.52266, 31.77509], [-106.51251, 31.76922], [-106.50962, 31.76155], [-106.50111, 31.75714], [-106.48815, 31.74769], [-106.47298, 31.75054], [-106.46726, 31.75998], [-106.45244, 31.76523], [-106.43419, 31.75478], [-106.41773, 31.75196], [-106.38003, 31.73151], [-106.3718, 31.71165], [-106.34864, 31.69663], [-106.33419, 31.66303], [-106.30305, 31.62154], [-106.28084, 31.56173], [-106.24612, 31.54193], [-106.23711, 31.51262], [-106.20346, 31.46305], [-106.09025, 31.40569], [-106.00363, 31.39181], [-104.77674, 30.4236], [-104.5171, 29.64671], [-104.3969, 29.57105], [-104.39363, 29.55396], [-104.37752, 29.54255], [-103.15787, 28.93865], [-102.60596, 29.8192], [-101.47277, 29.7744], [-101.05686, 29.44738], [-101.01128, 29.36947], [-100.96725, 29.3477], [-100.94579, 29.34523], [-100.94056, 29.33371], [-100.87982, 29.296], [-100.79696, 29.24688], [-100.67294, 29.09744], [-100.63689, 28.90812], [-100.59809, 28.88197], [-100.52313, 28.75598], [-100.5075, 28.74066], [-100.51222, 28.70679], [-100.50029, 28.66117], [-99.55409, 27.61314], [-99.51478, 27.55836], [-99.52955, 27.49747], [-99.50208, 27.50021], [-99.48045, 27.49016], [-99.482, 27.47128], [-99.49744, 27.43746], [-99.53573, 27.30926], [-99.08477, 26.39849], [-99.03053, 26.41249], [-99.00546, 26.3925], [-98.35126, 26.15129], [-98.30491, 26.10475], [-98.27075, 26.09457], [-98.24603, 26.07191], [-97.97017, 26.05232], [-97.95155, 26.0625], [-97.66511, 26.01708], [-97.52025, 25.88518], [-97.49828, 25.89877], [-97.45669, 25.86874], [-97.42511, 25.83969], [-97.37332, 25.83854], [-97.35946, 25.92189], [-97.13927, 25.96583]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q620634\", nameEn: \"Bir Tawil\", groups: [\"015\", \"002\"], level: \"territory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.17563, 22.00405], [33.57251, 21.72406], [33.99686, 21.76784], [34.0765, 22.00501], [33.17563, 22.00405]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q639185\", nameEn: \"Peros Banhos\", country: \"GB\", groups: [\"IO\", \"BOTS\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[72.12587, -4.02588], [70.1848, -6.37445], [72.09518, -5.61768], [72.12587, -4.02588]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q644636\", nameEn: \"Cyprus\", level: \"sharedLandform\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q851132\", nameEn: \"New Zealand Outlying Islands\", country: \"NZ\", level: \"subcountryGroup\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q875134\", nameEn: \"European Russia\", country: \"RU\", groups: [\"151\", \"150\", \"UN\"], callingCodes: [\"7\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[18.57853, 55.25302], [19.64312, 54.45423], [19.8038, 54.44203], [20.63871, 54.3706], [21.41123, 54.32395], [22.79705, 54.36264], [22.7253, 54.41732], [22.70208, 54.45312], [22.67788, 54.532], [22.71293, 54.56454], [22.68021, 54.58486], [22.7522, 54.63525], [22.74225, 54.64339], [22.75467, 54.6483], [22.73397, 54.66604], [22.73631, 54.72952], [22.87317, 54.79492], [22.85083, 54.88711], [22.76422, 54.92521], [22.68723, 54.9811], [22.65451, 54.97037], [22.60075, 55.01863], [22.58907, 55.07085], [22.47688, 55.04408], [22.31562, 55.0655], [22.14267, 55.05345], [22.11697, 55.02131], [22.06087, 55.02935], [22.02582, 55.05078], [22.03984, 55.07888], [21.99543, 55.08691], [21.96505, 55.07353], [21.85521, 55.09493], [21.64954, 55.1791], [21.55605, 55.20311], [21.51095, 55.18507], [21.46766, 55.21115], [21.38446, 55.29348], [21.35465, 55.28427], [21.26425, 55.24456], [20.95181, 55.27994], [20.60454, 55.40986], [18.57853, 55.25302]]], [[[26.32936, 60.00121], [26.90044, 59.63819], [27.85643, 59.58538], [28.04187, 59.47017], [28.19061, 59.39962], [28.21137, 59.38058], [28.20537, 59.36491], [28.19284, 59.35791], [28.14215, 59.28934], [28.00689, 59.28351], [27.90911, 59.24353], [27.87978, 59.18097], [27.80482, 59.1116], [27.74429, 58.98351], [27.36366, 58.78381], [27.55489, 58.39525], [27.48541, 58.22615], [27.62393, 58.09462], [27.67282, 57.92627], [27.81841, 57.89244], [27.78526, 57.83963], [27.56689, 57.83356], [27.50171, 57.78842], [27.52615, 57.72843], [27.3746, 57.66834], [27.40393, 57.62125], [27.31919, 57.57672], [27.34698, 57.52242], [27.56832, 57.53728], [27.52453, 57.42826], [27.86101, 57.29402], [27.66511, 56.83921], [27.86101, 56.88204], [28.04768, 56.59004], [28.13526, 56.57989], [28.10069, 56.524], [28.19057, 56.44637], [28.16599, 56.37806], [28.23716, 56.27588], [28.15217, 56.16964], [28.30571, 56.06035], [28.36888, 56.05805], [28.37987, 56.11399], [28.43068, 56.09407], [28.5529, 56.11705], [28.68337, 56.10173], [28.63668, 56.07262], [28.73418, 55.97131], [29.08299, 56.03427], [29.21717, 55.98971], [29.44692, 55.95978], [29.3604, 55.75862], [29.51283, 55.70294], [29.61446, 55.77716], [29.80672, 55.79569], [29.97975, 55.87281], [30.12136, 55.8358], [30.27776, 55.86819], [30.30987, 55.83592], [30.48257, 55.81066], [30.51346, 55.78982], [30.51037, 55.76568], [30.63344, 55.73079], [30.67464, 55.64176], [30.72957, 55.66268], [30.7845, 55.58514], [30.86003, 55.63169], [30.93419, 55.6185], [30.95204, 55.50667], [30.90123, 55.46621], [30.93144, 55.3914], [30.8257, 55.3313], [30.81946, 55.27931], [30.87944, 55.28223], [30.97369, 55.17134], [31.02071, 55.06167], [31.00972, 55.02783], [30.94243, 55.03964], [30.9081, 55.02232], [30.95754, 54.98609], [30.93144, 54.9585], [30.81759, 54.94064], [30.8264, 54.90062], [30.75165, 54.80699], [30.95479, 54.74346], [30.97127, 54.71967], [31.0262, 54.70698], [30.98226, 54.68872], [30.99187, 54.67046], [31.19339, 54.66947], [31.21399, 54.63113], [31.08543, 54.50361], [31.22945, 54.46585], [31.3177, 54.34067], [31.30791, 54.25315], [31.57002, 54.14535], [31.89599, 54.0837], [31.88744, 54.03653], [31.85019, 53.91801], [31.77028, 53.80015], [31.89137, 53.78099], [32.12621, 53.81586], [32.36663, 53.7166], [32.45717, 53.74039], [32.50112, 53.68594], [32.40499, 53.6656], [32.47777, 53.5548], [32.74968, 53.45597], [32.73257, 53.33494], [32.51725, 53.28431], [32.40773, 53.18856], [32.15368, 53.07594], [31.82373, 53.10042], [31.787, 53.18033], [31.62496, 53.22886], [31.56316, 53.19432], [31.40523, 53.21406], [31.36403, 53.13504], [31.3915, 53.09712], [31.33519, 53.08805], [31.32283, 53.04101], [31.24147, 53.031], [31.35667, 52.97854], [31.592, 52.79011], [31.57277, 52.71613], [31.50406, 52.69707], [31.63869, 52.55361], [31.56316, 52.51518], [31.61397, 52.48843], [31.62084, 52.33849], [31.57971, 52.32146], [31.70735, 52.26711], [31.6895, 52.1973], [31.77877, 52.18636], [31.7822, 52.11406], [31.81722, 52.09955], [31.85018, 52.11305], [31.96141, 52.08015], [31.92159, 52.05144], [32.08813, 52.03319], [32.23331, 52.08085], [32.2777, 52.10266], [32.34044, 52.1434], [32.33083, 52.23685], [32.38988, 52.24946], [32.3528, 52.32842], [32.54781, 52.32423], [32.69475, 52.25535], [32.85405, 52.27888], [32.89937, 52.2461], [33.18913, 52.3754], [33.51323, 52.35779], [33.48027, 52.31499], [33.55718, 52.30324], [33.78789, 52.37204], [34.05239, 52.20132], [34.11199, 52.14087], [34.09413, 52.00835], [34.41136, 51.82793], [34.42922, 51.72852], [34.07765, 51.67065], [34.17599, 51.63253], [34.30562, 51.5205], [34.22048, 51.4187], [34.33446, 51.363], [34.23009, 51.26429], [34.31661, 51.23936], [34.38802, 51.2746], [34.6613, 51.25053], [34.6874, 51.18], [34.82472, 51.17483], [34.97304, 51.2342], [35.14058, 51.23162], [35.12685, 51.16191], [35.20375, 51.04723], [35.31774, 51.08434], [35.40837, 51.04119], [35.32598, 50.94524], [35.39307, 50.92145], [35.41367, 50.80227], [35.47704, 50.77274], [35.48116, 50.66405], [35.39464, 50.64751], [35.47463, 50.49247], [35.58003, 50.45117], [35.61711, 50.35707], [35.73659, 50.35489], [35.80388, 50.41356], [35.8926, 50.43829], [36.06893, 50.45205], [36.20763, 50.3943], [36.30101, 50.29088], [36.47817, 50.31457], [36.58371, 50.28563], [36.56655, 50.2413], [36.64571, 50.218], [36.69377, 50.26982], [36.91762, 50.34963], [37.08468, 50.34935], [37.48204, 50.46079], [37.47243, 50.36277], [37.62486, 50.29966], [37.62879, 50.24481], [37.61113, 50.21976], [37.75807, 50.07896], [37.79515, 50.08425], [37.90776, 50.04194], [38.02999, 49.94482], [38.02999, 49.90592], [38.21675, 49.98104], [38.18517, 50.08161], [38.32524, 50.08866], [38.35408, 50.00664], [38.65688, 49.97176], [38.68677, 50.00904], [38.73311, 49.90238], [38.90477, 49.86787], [38.9391, 49.79524], [39.1808, 49.88911], [39.27968, 49.75976], [39.44496, 49.76067], [39.59142, 49.73758], [39.65047, 49.61761], [39.84548, 49.56064], [40.13249, 49.61672], [40.16683, 49.56865], [40.03636, 49.52321], [40.03087, 49.45452], [40.1141, 49.38798], [40.14912, 49.37681], [40.18331, 49.34996], [40.22176, 49.25683], [40.01988, 49.1761], [39.93437, 49.05709], [39.6836, 49.05121], [39.6683, 48.99454], [39.71353, 48.98959], [39.72649, 48.9754], [39.74874, 48.98675], [39.78368, 48.91596], [39.98967, 48.86901], [40.03636, 48.91957], [40.08168, 48.87443], [39.97182, 48.79398], [39.79466, 48.83739], [39.73104, 48.7325], [39.71765, 48.68673], [39.67226, 48.59368], [39.79764, 48.58668], [39.84548, 48.57821], [39.86196, 48.46633], [39.88794, 48.44226], [39.94847, 48.35055], [39.84136, 48.33321], [39.84273, 48.30947], [39.90041, 48.3049], [39.91465, 48.26743], [39.95248, 48.29972], [39.9693, 48.29904], [39.97325, 48.31399], [39.99241, 48.31768], [40.00752, 48.22445], [39.94847, 48.22811], [39.83724, 48.06501], [39.88256, 48.04482], [39.77544, 48.04206], [39.82213, 47.96396], [39.73935, 47.82876], [38.87979, 47.87719], [38.79628, 47.81109], [38.76379, 47.69346], [38.35062, 47.61631], [38.28679, 47.53552], [38.28954, 47.39255], [38.22225, 47.30788], [38.33074, 47.30508], [38.32112, 47.2585], [38.23049, 47.2324], [38.22955, 47.12069], [38.3384, 46.98085], [38.12112, 46.86078], [37.62608, 46.82615], [35.23066, 45.79231], [35.04991, 45.76827], [36.6645, 45.4514], [36.6545, 45.3417], [36.5049, 45.3136], [36.475, 45.2411], [36.4883, 45.0488], [33.5943, 44.03313], [39.81147, 43.06294], [40.0078, 43.38551], [40.00853, 43.40578], [40.01552, 43.42025], [40.01007, 43.42411], [40.03312, 43.44262], [40.04445, 43.47776], [40.10657, 43.57344], [40.65957, 43.56212], [41.64935, 43.22331], [42.40563, 43.23226], [42.66667, 43.13917], [42.75889, 43.19651], [43.03322, 43.08883], [43.0419, 43.02413], [43.81453, 42.74297], [43.73119, 42.62043], [43.95517, 42.55396], [44.54202, 42.75699], [44.70002, 42.74679], [44.80941, 42.61277], [44.88754, 42.74934], [45.15318, 42.70598], [45.36501, 42.55268], [45.78692, 42.48358], [45.61676, 42.20768], [46.42738, 41.91323], [46.5332, 41.87389], [46.58924, 41.80547], [46.75269, 41.8623], [46.8134, 41.76252], [47.00955, 41.63583], [46.99554, 41.59743], [47.03757, 41.55434], [47.10762, 41.59044], [47.34579, 41.27884], [47.49004, 41.26366], [47.54504, 41.20275], [47.62288, 41.22969], [47.75831, 41.19455], [47.87973, 41.21798], [48.07587, 41.49957], [48.22064, 41.51472], [48.2878, 41.56221], [48.40277, 41.60441], [48.42301, 41.65444], [48.55078, 41.77917], [48.5867, 41.84306], [48.80971, 41.95365], [49.2134, 44.84989], [49.88945, 46.04554], [49.32259, 46.26944], [49.16518, 46.38542], [48.54988, 46.56267], [48.51142, 46.69268], [49.01136, 46.72716], [48.52326, 47.4102], [48.45173, 47.40818], [48.15348, 47.74545], [47.64973, 47.76559], [47.41689, 47.83687], [47.38731, 47.68176], [47.12107, 47.83687], [47.11516, 48.27188], [46.49011, 48.43019], [46.78392, 48.95352], [47.00857, 49.04921], [47.04658, 49.19834], [46.78398, 49.34026], [46.9078, 49.86707], [47.18319, 49.93721], [47.34589, 50.09308], [47.30448, 50.30894], [47.58551, 50.47867], [48.10044, 50.09242], [48.24519, 49.86099], [48.42564, 49.82283], [48.68352, 49.89546], [48.90782, 50.02281], [48.57946, 50.63278], [48.86936, 50.61589], [49.12673, 50.78639], [49.41959, 50.85927], [49.39001, 51.09396], [49.76866, 51.11067], [49.97277, 51.2405], [50.26859, 51.28677], [50.59695, 51.61859], [51.26254, 51.68466], [51.301, 51.48799], [51.77431, 51.49536], [51.8246, 51.67916], [52.36119, 51.74161], [52.54329, 51.48444], [53.46165, 51.49445], [53.69299, 51.23466], [54.12248, 51.11542], [54.46331, 50.85554], [54.41894, 50.61214], [54.55797, 50.52006], [54.71476, 50.61214], [54.56685, 51.01958], [54.72067, 51.03261], [55.67774, 50.54508], [56.11398, 50.7471], [56.17906, 50.93204], [57.17302, 51.11253], [57.44221, 50.88354], [57.74986, 50.93017], [57.75578, 51.13852], [58.3208, 51.15151], [58.87974, 50.70852], [59.48928, 50.64216], [59.51886, 50.49937], [59.81172, 50.54451], [60.01288, 50.8163], [60.17262, 50.83312], [60.31914, 50.67705], [60.81833, 50.6629], [61.4431, 50.80679], [61.56889, 51.23679], [61.6813, 51.25716], [61.55114, 51.32746], [61.50677, 51.40687], [60.95655, 51.48615], [60.92401, 51.61124], [60.5424, 51.61675], [60.36787, 51.66815], [60.50986, 51.7964], [60.09867, 51.87135], [59.99809, 51.98263], [59.91279, 52.06924], [60.17253, 52.25814], [60.17516, 52.39457], [59.25033, 52.46803], [59.22409, 52.28437], [58.79644, 52.43392], [58.94336, 53.953], [59.70487, 54.14846], [59.95217, 54.85853], [57.95234, 54.39672], [57.14829, 54.84204], [57.25137, 55.26262], [58.81825, 55.03378], [59.49035, 55.60486], [59.28419, 56.15739], [57.51527, 56.08729], [57.28024, 56.87898], [58.07604, 57.08308], [58.13789, 57.68097], [58.81412, 57.71602], [58.71104, 58.07475], [59.40376, 58.45822], [59.15636, 59.14682], [58.3853, 59.487], [59.50685, 60.91162], [59.36223, 61.3882], [59.61398, 62.44915], [59.24834, 63.01859], [59.80579, 64.13948], [59.63945, 64.78384], [60.74386, 64.95767], [61.98014, 65.72191], [66.1708, 67.61252], [64.18965, 69.94255], [76.13964, 83.37843], [36.85549, 84.09565], [32.07813, 72.01005], [31.59909, 70.16571], [30.84095, 69.80584], [30.95011, 69.54699], [30.52662, 69.54699], [30.16363, 69.65244], [29.97205, 69.41623], [29.27631, 69.2811], [29.26623, 69.13794], [29.0444, 69.0119], [28.91738, 69.04774], [28.45957, 68.91417], [28.78224, 68.86696], [28.43941, 68.53366], [28.62982, 68.19816], [29.34179, 68.06655], [29.66955, 67.79872], [30.02041, 67.67523], [29.91155, 67.51507], [28.9839, 66.94139], [29.91155, 66.13863], [30.16363, 65.66935], [29.97205, 65.70256], [29.74013, 65.64025], [29.84096, 65.56945], [29.68972, 65.31803], [29.61914, 65.23791], [29.8813, 65.22101], [29.84096, 65.1109], [29.61914, 65.05993], [29.68972, 64.80789], [30.05271, 64.79072], [30.12329, 64.64862], [30.01238, 64.57513], [30.06279, 64.35782], [30.4762, 64.25728], [30.55687, 64.09036], [30.25437, 63.83364], [29.98213, 63.75795], [30.49637, 63.46666], [31.23244, 63.22239], [31.29294, 63.09035], [31.58535, 62.91642], [31.38369, 62.66284], [31.10136, 62.43042], [29.01829, 61.17448], [28.82816, 61.1233], [28.47974, 60.93365], [27.77352, 60.52722], [27.71177, 60.3893], [27.44953, 60.22766], [26.32936, 60.00121]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1083368\", nameEn: \"Mainland Finland\", country: \"FI\", groups: [\"EU\", \"154\", \"150\", \"UN\"], callingCodes: [\"358\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[29.12697, 69.69193], [28.36883, 69.81658], [28.32849, 69.88605], [27.97558, 69.99671], [27.95542, 70.0965], [27.57226, 70.06215], [27.05802, 69.92069], [26.64461, 69.96565], [26.40261, 69.91377], [25.96904, 69.68397], [25.69679, 69.27039], [25.75729, 68.99383], [25.61613, 68.89602], [25.42455, 68.90328], [25.12206, 68.78684], [25.10189, 68.63307], [24.93048, 68.61102], [24.90023, 68.55579], [24.74898, 68.65143], [24.18432, 68.73936], [24.02299, 68.81601], [23.781, 68.84514], [23.68017, 68.70276], [23.13064, 68.64684], [22.53321, 68.74393], [22.38367, 68.71561], [22.27276, 68.89514], [21.63833, 69.27485], [21.27827, 69.31281], [21.00732, 69.22755], [20.98641, 69.18809], [21.11099, 69.10291], [21.05775, 69.0356], [20.72171, 69.11874], [20.55258, 69.06069], [20.78802, 69.03087], [20.91658, 68.96764], [20.85104, 68.93142], [20.90649, 68.89696], [21.03001, 68.88969], [22.00429, 68.50692], [22.73028, 68.40881], [23.10336, 68.26551], [23.15377, 68.14759], [23.26469, 68.15134], [23.40081, 68.05545], [23.65793, 67.9497], [23.45627, 67.85297], [23.54701, 67.59306], [23.39577, 67.46974], [23.75372, 67.43688], [23.75372, 67.29914], [23.54701, 67.25435], [23.58735, 67.20752], [23.56214, 67.17038], [23.98563, 66.84149], [23.98059, 66.79585], [23.89488, 66.772], [23.85959, 66.56434], [23.63776, 66.43568], [23.67591, 66.3862], [23.64982, 66.30603], [23.71339, 66.21299], [23.90497, 66.15802], [24.15791, 65.85385], [24.14798, 65.83466], [24.15107, 65.81427], [24.14112, 65.39731], [20.15877, 63.06556], [19.23413, 60.61414], [20.96741, 60.71528], [21.15143, 60.54555], [21.08159, 60.20167], [21.02509, 60.12142], [21.35468, 59.67511], [20.5104, 59.15546], [26.32936, 60.00121], [27.44953, 60.22766], [27.71177, 60.3893], [27.77352, 60.52722], [28.47974, 60.93365], [28.82816, 61.1233], [29.01829, 61.17448], [31.10136, 62.43042], [31.38369, 62.66284], [31.58535, 62.91642], [31.29294, 63.09035], [31.23244, 63.22239], [30.49637, 63.46666], [29.98213, 63.75795], [30.25437, 63.83364], [30.55687, 64.09036], [30.4762, 64.25728], [30.06279, 64.35782], [30.01238, 64.57513], [30.12329, 64.64862], [30.05271, 64.79072], [29.68972, 64.80789], [29.61914, 65.05993], [29.84096, 65.1109], [29.8813, 65.22101], [29.61914, 65.23791], [29.68972, 65.31803], [29.84096, 65.56945], [29.74013, 65.64025], [29.97205, 65.70256], [30.16363, 65.66935], [29.91155, 66.13863], [28.9839, 66.94139], [29.91155, 67.51507], [30.02041, 67.67523], [29.66955, 67.79872], [29.34179, 68.06655], [28.62982, 68.19816], [28.43941, 68.53366], [28.78224, 68.86696], [28.45957, 68.91417], [28.91738, 69.04774], [28.81248, 69.11997], [28.8629, 69.22395], [29.31664, 69.47994], [29.12697, 69.69193]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1184963\", nameEn: \"Alhucemas Islands\", country: \"ES\", groups: [\"EU\", \"Q191011\", \"015\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-3.90602, 35.21494], [-3.88372, 35.20767], [-3.89343, 35.22728], [-3.90602, 35.21494]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1298289\", nameEn: \"Egmont Islands\", country: \"GB\", groups: [\"IO\", \"BOTS\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[70.1848, -6.37445], [70.67958, -8.2663], [72.17991, -6.68509], [70.1848, -6.37445]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1352230\", nameEn: \"US Territories\", country: \"US\", level: \"subcountryGroup\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q1451600\", nameEn: \"Overseas Countries and Territories of the EU\", aliases: [\"OCT\"], level: \"subunion\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q1544253\", nameEn: \"Great Chagos Bank\", country: \"GB\", groups: [\"IO\", \"BOTS\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[70.1848, -6.37445], [72.17991, -6.68509], [73.20573, -5.20727], [70.1848, -6.37445]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1585511\", nameEn: \"Salomon Atoll\", country: \"GB\", groups: [\"IO\", \"BOTS\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[72.09518, -5.61768], [73.20573, -5.20727], [72.12587, -4.02588], [72.09518, -5.61768]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1681727\", nameEn: \"Saint-Paul and Amsterdam\", country: \"FR\", groups: [\"TF\", \"Q1451600\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[76.31747, -42.16264], [80.15867, -36.04977], [71.22311, -38.75287], [76.31747, -42.16264]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1901211\", nameEn: \"East Malaysia\", country: \"MY\", groups: [\"Q36117\", \"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"60\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[110.90339, 7.52694], [109.82788, 2.86812], [109.62558, 1.99182], [109.53794, 1.91771], [109.57923, 1.80624], [109.66397, 1.79972], [109.66397, 1.60425], [110.35354, 0.98869], [110.49182, 0.88088], [110.62374, 0.873], [111.22979, 1.08326], [111.55434, 0.97864], [111.82846, 0.99349], [111.94553, 1.12016], [112.15679, 1.17004], [112.2127, 1.44135], [112.48648, 1.56516], [113.021, 1.57819], [113.01448, 1.42832], [113.64677, 1.23933], [114.03788, 1.44787], [114.57892, 1.5], [114.80706, 1.92351], [114.80706, 2.21665], [115.1721, 2.49671], [115.11343, 2.82879], [115.53713, 3.14776], [115.58276, 3.93499], [115.90217, 4.37708], [117.25801, 4.35108], [117.47313, 4.18857], [117.67641, 4.16535], [118.06469, 4.16638], [118.93936, 4.09009], [119.52945, 5.35672], [117.98544, 6.27477], [117.93857, 6.89845], [117.17735, 7.52841], [116.79524, 7.43869], [115.02521, 5.35005], [115.16236, 5.01011], [115.15092, 4.87604], [115.20737, 4.8256], [115.27819, 4.63661], [115.2851, 4.42295], [115.36346, 4.33563], [115.31275, 4.30806], [115.09978, 4.39123], [115.07737, 4.53418], [115.04064, 4.63706], [115.02278, 4.74137], [115.02955, 4.82087], [115.05038, 4.90275], [114.99417, 4.88201], [114.96982, 4.81146], [114.88841, 4.81905], [114.8266, 4.75062], [114.77303, 4.72871], [114.83189, 4.42387], [114.88039, 4.4257], [114.78539, 4.12205], [114.64211, 4.00694], [114.49922, 4.13108], [114.4416, 4.27588], [114.32176, 4.2552], [114.32176, 4.34942], [114.26876, 4.49878], [114.15813, 4.57], [114.07448, 4.58441], [114.10166, 4.76112], [110.90339, 7.52694]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1973345\", nameEn: \"Peninsular Malaysia\", country: \"MY\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"60\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[102.46318, 7.22462], [102.09086, 6.23546], [102.08127, 6.22679], [102.07732, 6.193], [102.09182, 6.14161], [102.01835, 6.05407], [101.99209, 6.04075], [101.97114, 6.01992], [101.9714, 6.00575], [101.94712, 5.98421], [101.92819, 5.85511], [101.91776, 5.84269], [101.89188, 5.8386], [101.80144, 5.74505], [101.75074, 5.79091], [101.69773, 5.75881], [101.58019, 5.93534], [101.25524, 5.78633], [101.25755, 5.71065], [101.14062, 5.61613], [100.98815, 5.79464], [101.02708, 5.91013], [101.087, 5.9193], [101.12388, 6.11411], [101.06165, 6.14161], [101.12618, 6.19431], [101.10313, 6.25617], [100.85884, 6.24929], [100.81045, 6.45086], [100.74822, 6.46231], [100.74361, 6.50811], [100.66986, 6.45086], [100.43027, 6.52389], [100.42351, 6.51762], [100.41791, 6.5189], [100.41152, 6.52299], [100.35413, 6.54932], [100.31929, 6.65413], [100.32607, 6.65933], [100.32671, 6.66526], [100.31884, 6.66423], [100.31618, 6.66781], [100.30828, 6.66462], [100.29651, 6.68439], [100.19511, 6.72559], [100.12, 6.42105], [100.0756, 6.4045], [99.91873, 6.50233], [99.50117, 6.44501], [99.31854, 5.99868], [99.75778, 3.86466], [103.03657, 1.30383], [103.56591, 1.19719], [103.62738, 1.35255], [103.67468, 1.43166], [103.7219, 1.46108], [103.74161, 1.4502], [103.76395, 1.45183], [103.81181, 1.47953], [103.86383, 1.46288], [103.89565, 1.42841], [103.93384, 1.42926], [104.00131, 1.42405], [104.02277, 1.4438], [104.04622, 1.44691], [104.07348, 1.43322], [104.08871, 1.42015], [104.09162, 1.39694], [104.08072, 1.35998], [104.12282, 1.27714], [104.34728, 1.33529], [104.56723, 1.44271], [105.01437, 3.24936], [102.46318, 7.22462]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q2093907\", nameEn: \"Three Kings Islands\", country: \"NZ\", groups: [\"Q851132\", \"053\", \"009\", \"UN\"], driveSide: \"left\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[174.17679, -32.62487], [170.93268, -32.97889], [171.97383, -34.64644], [174.17679, -32.62487]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q2298216\", nameEn: \"Solander Islands\", country: \"NZ\", groups: [\"Q851132\", \"053\", \"009\", \"UN\"], driveSide: \"left\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[167.39068, -46.49187], [166.5534, -46.39484], [166.84561, -46.84889], [167.39068, -46.49187]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q2872203\", nameEn: \"Mainland Australia\", country: \"AU\", groups: [\"053\", \"009\", \"UN\"], level: \"subcountryGroup\", driveSide: \"left\", callingCodes: [\"61\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[88.16419, -23.49578], [123.64533, -39.13605], [159.74028, -39.1978], [159.76765, -29.76946], [154.02855, -24.43238], [152.93188, -20.92631], [147.69992, -17.5933], [145.2855, -9.62524], [143.87386, -9.02382], [143.29772, -9.33993], [142.48658, -9.36754], [142.19246, -9.15378], [141.88934, -9.36111], [141.01842, -9.35091], [135.49042, -9.2276], [127.55165, -9.05052], [125.29076, -12.33139], [88.16419, -23.49578]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q2914565\", nameEn: \"Autonomous Regions of Portugal\", country: \"PT\", level: \"subcountryGroup\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q2915956\", nameEn: \"Mainland Portugal\", country: \"PT\", groups: [\"Q12837\", \"EU\", \"039\", \"150\", \"UN\"], level: \"subcountryGroup\", callingCodes: [\"351\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-10.39881, 36.12218], [-7.37282, 36.96896], [-7.39769, 37.16868], [-7.41133, 37.20314], [-7.41854, 37.23813], [-7.43227, 37.25152], [-7.43974, 37.38913], [-7.46878, 37.47127], [-7.51759, 37.56119], [-7.41981, 37.75729], [-7.33441, 37.81193], [-7.27314, 37.90145], [-7.24544, 37.98884], [-7.12648, 38.00296], [-7.10366, 38.04404], [-7.05966, 38.01966], [-7.00375, 38.01914], [-6.93418, 38.21454], [-7.09389, 38.17227], [-7.15581, 38.27597], [-7.32529, 38.44336], [-7.265, 38.61674], [-7.26174, 38.72107], [-7.03848, 38.87221], [-7.051, 38.907], [-6.95211, 39.0243], [-6.97004, 39.07619], [-7.04011, 39.11919], [-7.10692, 39.10275], [-7.14929, 39.11287], [-7.12811, 39.17101], [-7.23566, 39.20132], [-7.23403, 39.27579], [-7.3149, 39.34857], [-7.2927, 39.45847], [-7.49477, 39.58794], [-7.54121, 39.66717], [-7.33507, 39.64569], [-7.24707, 39.66576], [-7.01613, 39.66877], [-6.97492, 39.81488], [-6.91463, 39.86618], [-6.86737, 40.01986], [-6.94233, 40.10716], [-7.00589, 40.12087], [-7.02544, 40.18564], [-7.00426, 40.23169], [-6.86085, 40.26776], [-6.86085, 40.2976], [-6.80218, 40.33239], [-6.78426, 40.36468], [-6.84618, 40.42177], [-6.84944, 40.46394], [-6.7973, 40.51723], [-6.80218, 40.55067], [-6.84292, 40.56801], [-6.79567, 40.65955], [-6.82826, 40.74603], [-6.82337, 40.84472], [-6.79892, 40.84842], [-6.80707, 40.88047], [-6.84292, 40.89771], [-6.8527, 40.93958], [-6.9357, 41.02888], [-6.913, 41.03922], [-6.88843, 41.03027], [-6.84781, 41.02692], [-6.80942, 41.03629], [-6.79241, 41.05397], [-6.75655, 41.10187], [-6.77319, 41.13049], [-6.69711, 41.1858], [-6.68286, 41.21641], [-6.65046, 41.24725], [-6.55937, 41.24417], [-6.38551, 41.35274], [-6.38553, 41.38655], [-6.3306, 41.37677], [-6.26777, 41.48796], [-6.19128, 41.57638], [-6.29863, 41.66432], [-6.44204, 41.68258], [-6.49907, 41.65823], [-6.54633, 41.68623], [-6.56426, 41.74219], [-6.51374, 41.8758], [-6.56752, 41.88429], [-6.5447, 41.94371], [-6.58544, 41.96674], [-6.61967, 41.94008], [-6.75004, 41.94129], [-6.76959, 41.98734], [-6.81196, 41.99097], [-6.82174, 41.94493], [-6.94396, 41.94403], [-6.95537, 41.96553], [-6.98144, 41.9728], [-7.01078, 41.94977], [-7.07596, 41.94977], [-7.08574, 41.97401], [-7.14115, 41.98855], [-7.18549, 41.97515], [-7.18677, 41.88793], [-7.32366, 41.8406], [-7.37092, 41.85031], [-7.42864, 41.80589], [-7.42854, 41.83262], [-7.44759, 41.84451], [-7.45566, 41.86488], [-7.49803, 41.87095], [-7.52737, 41.83939], [-7.62188, 41.83089], [-7.58603, 41.87944], [-7.65774, 41.88308], [-7.69848, 41.90977], [-7.84188, 41.88065], [-7.88055, 41.84571], [-7.88751, 41.92553], [-7.90707, 41.92432], [-7.92336, 41.8758], [-7.9804, 41.87337], [-8.01136, 41.83453], [-8.0961, 41.81024], [-8.16455, 41.81753], [-8.16944, 41.87944], [-8.19551, 41.87459], [-8.2185, 41.91237], [-8.16232, 41.9828], [-8.08796, 42.01398], [-8.08847, 42.05767], [-8.11729, 42.08537], [-8.18178, 42.06436], [-8.19406, 42.12141], [-8.18947, 42.13853], [-8.1986, 42.15402], [-8.22406, 42.1328], [-8.24681, 42.13993], [-8.2732, 42.12396], [-8.29809, 42.106], [-8.32161, 42.10218], [-8.33912, 42.08358], [-8.36353, 42.09065], [-8.38323, 42.07683], [-8.40143, 42.08052], [-8.42512, 42.07199], [-8.44123, 42.08218], [-8.48185, 42.0811], [-8.52837, 42.07658], [-8.5252, 42.06264], [-8.54563, 42.0537], [-8.58086, 42.05147], [-8.59493, 42.05708], [-8.63791, 42.04691], [-8.64626, 42.03668], [-8.65832, 42.02972], [-8.6681, 41.99703], [-8.69071, 41.98862], [-8.7478, 41.96282], [-8.74606, 41.9469], [-8.75712, 41.92833], [-8.81794, 41.90375], [-8.87157, 41.86488], [-11.19304, 41.83075], [-10.39881, 36.12218]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3311985\", nameEn: \"Guernsey\", country: \"GB\", groups: [\"GG\", \"830\", \"Q185086\", \"154\", \"150\", \"UN\"], level: \"subterritory\", driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44 01481\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.49556, 49.79012], [-3.28154, 49.57329], [-2.65349, 49.15373], [-2.36485, 49.48223], [-2.49556, 49.79012]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3320166\", nameEn: \"Outermost Regions of the EU\", aliases: [\"OMR\"], level: \"subunion\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q3336843\", nameEn: \"Countries of the United Kingdom\", country: \"GB\", level: \"subcountryGroup\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q6736667\", nameEn: \"Mainland India\", country: \"IN\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"91\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[89.08044, 21.41871], [89.07114, 22.15335], [88.9367, 22.58527], [88.94614, 22.66941], [88.9151, 22.75228], [88.96713, 22.83346], [88.87063, 22.95235], [88.88327, 23.03885], [88.86377, 23.08759], [88.99148, 23.21134], [88.71133, 23.2492], [88.79254, 23.46028], [88.79351, 23.50535], [88.74841, 23.47361], [88.56507, 23.64044], [88.58087, 23.87105], [88.66189, 23.87607], [88.73743, 23.91751], [88.6976, 24.14703], [88.74841, 24.1959], [88.68801, 24.31464], [88.50934, 24.32474], [88.12296, 24.51301], [88.08786, 24.63232], [88.00683, 24.66477], [88.15515, 24.85806], [88.14004, 24.93529], [88.21832, 24.96642], [88.27325, 24.88796], [88.33917, 24.86803], [88.46277, 25.07468], [88.44766, 25.20149], [88.94067, 25.18534], [89.00463, 25.26583], [89.01105, 25.30303], [88.85278, 25.34679], [88.81296, 25.51546], [88.677, 25.46959], [88.4559, 25.59227], [88.45103, 25.66245], [88.242, 25.80811], [88.13138, 25.78773], [88.08804, 25.91334], [88.16581, 26.0238], [88.1844, 26.14417], [88.34757, 26.22216], [88.35153, 26.29123], [88.51649, 26.35923], [88.48749, 26.45855], [88.36938, 26.48683], [88.35153, 26.45241], [88.33093, 26.48929], [88.41196, 26.63837], [88.4298, 26.54489], [88.62144, 26.46783], [88.69485, 26.38353], [88.67837, 26.26291], [88.78961, 26.31093], [88.85004, 26.23211], [89.05328, 26.2469], [88.91321, 26.37984], [88.92357, 26.40711], [88.95612, 26.4564], [89.08899, 26.38845], [89.15869, 26.13708], [89.35953, 26.0077], [89.53515, 26.00382], [89.57101, 25.9682], [89.63968, 26.22595], [89.70201, 26.15138], [89.73581, 26.15818], [89.77865, 26.08387], [89.77728, 26.04254], [89.86592, 25.93115], [89.80585, 25.82489], [89.84388, 25.70042], [89.86129, 25.61714], [89.81208, 25.37244], [89.84086, 25.31854], [89.83371, 25.29548], [89.87629, 25.28337], [89.90478, 25.31038], [90.1155, 25.22686], [90.40034, 25.1534], [90.65042, 25.17788], [90.87427, 25.15799], [91.25517, 25.20677], [91.63648, 25.12846], [92.0316, 25.1834], [92.33957, 25.07593], [92.39147, 25.01471], [92.49887, 24.88796], [92.38626, 24.86055], [92.25854, 24.9191], [92.15796, 24.54435], [92.11662, 24.38997], [91.96603, 24.3799], [91.89258, 24.14674], [91.82596, 24.22345], [91.76004, 24.23848], [91.73257, 24.14703], [91.65292, 24.22095], [91.63782, 24.1132], [91.55542, 24.08687], [91.37414, 24.10693], [91.35741, 23.99072], [91.29587, 24.0041], [91.22308, 23.89616], [91.25192, 23.83463], [91.15579, 23.6599], [91.28293, 23.37538], [91.36453, 23.06612], [91.40848, 23.07117], [91.4035, 23.27522], [91.46615, 23.2328], [91.54993, 23.01051], [91.61571, 22.93929], [91.7324, 23.00043], [91.81634, 23.08001], [91.76417, 23.26619], [91.84789, 23.42235], [91.95642, 23.47361], [91.95093, 23.73284], [92.04706, 23.64229], [92.15417, 23.73409], [92.26541, 23.70392], [92.38214, 23.28705], [92.37665, 22.9435], [92.5181, 22.71441], [92.60029, 22.1522], [92.56616, 22.13554], [92.60949, 21.97638], [92.67532, 22.03547], [92.70416, 22.16017], [92.86208, 22.05456], [92.89504, 21.95143], [92.93899, 22.02656], [92.99804, 21.98964], [92.99255, 22.05965], [93.04885, 22.20595], [93.15734, 22.18687], [93.14224, 22.24535], [93.19991, 22.25425], [93.18206, 22.43716], [93.13537, 22.45873], [93.11477, 22.54374], [93.134, 22.59573], [93.09417, 22.69459], [93.134, 22.92498], [93.12988, 23.05772], [93.2878, 23.00464], [93.38478, 23.13698], [93.36862, 23.35426], [93.38781, 23.36139], [93.39981, 23.38828], [93.38805, 23.4728], [93.43475, 23.68299], [93.3908, 23.7622], [93.3908, 23.92925], [93.36059, 23.93176], [93.32351, 24.04468], [93.34735, 24.10151], [93.41415, 24.07854], [93.46633, 23.97067], [93.50616, 23.94432], [93.62871, 24.00922], [93.75952, 24.0003], [93.80279, 23.92549], [93.92089, 23.95812], [94.14081, 23.83333], [94.30215, 24.23752], [94.32362, 24.27692], [94.45279, 24.56656], [94.50729, 24.59281], [94.5526, 24.70764], [94.60204, 24.70889], [94.73937, 25.00545], [94.74212, 25.13606], [94.57458, 25.20318], [94.68032, 25.47003], [94.80117, 25.49359], [95.18556, 26.07338], [95.11428, 26.1019], [95.12801, 26.38397], [95.05798, 26.45408], [95.23513, 26.68499], [95.30339, 26.65372], [95.437, 26.7083], [95.81603, 27.01335], [95.93002, 27.04149], [96.04949, 27.19428], [96.15591, 27.24572], [96.40779, 27.29818], [96.55761, 27.29928], [96.73888, 27.36638], [96.88445, 27.25046], [96.85287, 27.2065], [96.89132, 27.17474], [97.14675, 27.09041], [97.17422, 27.14052], [96.91431, 27.45752], [96.90112, 27.62149], [97.29919, 27.92233], [97.35824, 27.87256], [97.38845, 28.01329], [97.35412, 28.06663], [97.31292, 28.06784], [97.34547, 28.21385], [97.1289, 28.3619], [96.98882, 28.32564], [96.88445, 28.39452], [96.85561, 28.4875], [96.6455, 28.61657], [96.48895, 28.42955], [96.40929, 28.51526], [96.61391, 28.72742], [96.3626, 29.10607], [96.20467, 29.02325], [96.18682, 29.11087], [96.31316, 29.18643], [96.05361, 29.38167], [95.84899, 29.31464], [95.75149, 29.32063], [95.72086, 29.20797], [95.50842, 29.13487], [95.41091, 29.13007], [95.3038, 29.13847], [95.26122, 29.07727], [95.2214, 29.10727], [95.11291, 29.09527], [95.0978, 29.14446], [94.81353, 29.17804], [94.69318, 29.31739], [94.2752, 29.11687], [94.35897, 29.01965], [93.72797, 28.68821], [93.44621, 28.67189], [93.18069, 28.50319], [93.14635, 28.37035], [92.93075, 28.25671], [92.67486, 28.15018], [92.65472, 28.07632], [92.73025, 28.05814], [92.7275, 27.98662], [92.42538, 27.80092], [92.32101, 27.79363], [92.27432, 27.89077], [91.87057, 27.7195], [91.84722, 27.76325], [91.6469, 27.76358], [91.55819, 27.6144], [91.65007, 27.48287], [92.01132, 27.47352], [92.12019, 27.27829], [92.04702, 27.26861], [92.03457, 27.07334], [92.11863, 26.893], [92.05523, 26.8692], [91.83181, 26.87318], [91.50067, 26.79223], [90.67715, 26.77215], [90.48504, 26.8594], [90.39271, 26.90704], [90.30402, 26.85098], [90.04535, 26.72422], [89.86124, 26.73307], [89.63369, 26.74402], [89.42349, 26.83727], [89.3901, 26.84225], [89.38319, 26.85963], [89.37913, 26.86224], [89.1926, 26.81329], [89.12825, 26.81661], [89.09554, 26.89089], [88.95807, 26.92668], [88.92301, 26.99286], [88.8714, 26.97488], [88.86984, 27.10937], [88.74219, 27.144], [88.91901, 27.32483], [88.82981, 27.38814], [88.77517, 27.45415], [88.88091, 27.85192], [88.83559, 28.01936], [88.63235, 28.12356], [88.54858, 28.06057], [88.25332, 27.9478], [88.1278, 27.95417], [88.13378, 27.88015], [88.1973, 27.85067], [88.19107, 27.79285], [88.04008, 27.49223], [88.07277, 27.43007], [88.01646, 27.21612], [88.01587, 27.21388], [87.9887, 27.11045], [88.11719, 26.98758], [88.13422, 26.98705], [88.12302, 26.95324], [88.19107, 26.75516], [88.1659, 26.68177], [88.16452, 26.64111], [88.09963, 26.54195], [88.09414, 26.43732], [88.00895, 26.36029], [87.90115, 26.44923], [87.89085, 26.48565], [87.84193, 26.43663], [87.7918, 26.46737], [87.76004, 26.40711], [87.67893, 26.43501], [87.66803, 26.40294], [87.59175, 26.38342], [87.55274, 26.40596], [87.51571, 26.43106], [87.46566, 26.44058], [87.37314, 26.40815], [87.34568, 26.34787], [87.26568, 26.37294], [87.26587, 26.40592], [87.24682, 26.4143], [87.18863, 26.40558], [87.14751, 26.40542], [87.09147, 26.45039], [87.0707, 26.58571], [87.04691, 26.58685], [87.01559, 26.53228], [86.95912, 26.52076], [86.94543, 26.52076], [86.82898, 26.43919], [86.76797, 26.45892], [86.74025, 26.42386], [86.69124, 26.45169], [86.62686, 26.46891], [86.61313, 26.48658], [86.57073, 26.49825], [86.54258, 26.53819], [86.49726, 26.54218], [86.31564, 26.61925], [86.26235, 26.61886], [86.22513, 26.58863], [86.13596, 26.60651], [86.02729, 26.66756], [85.8492, 26.56667], [85.85126, 26.60866], [85.83126, 26.61134], [85.76907, 26.63076], [85.72315, 26.67471], [85.73483, 26.79613], [85.66239, 26.84822], [85.61621, 26.86721], [85.59461, 26.85161], [85.5757, 26.85955], [85.56471, 26.84133], [85.47752, 26.79292], [85.34302, 26.74954], [85.21159, 26.75933], [85.18046, 26.80519], [85.19291, 26.86909], [85.15883, 26.86966], [85.02635, 26.85381], [85.05592, 26.88991], [85.00536, 26.89523], [84.97186, 26.9149], [84.96687, 26.95599], [84.85754, 26.98984], [84.82913, 27.01989], [84.793, 26.9968], [84.64496, 27.04669], [84.69166, 27.21294], [84.62161, 27.33885], [84.29315, 27.39], [84.25735, 27.44941], [84.21376, 27.45218], [84.10791, 27.52399], [84.02229, 27.43836], [83.93306, 27.44939], [83.86182, 27.4241], [83.85595, 27.35797], [83.61288, 27.47013], [83.39495, 27.4798], [83.38872, 27.39276], [83.35136, 27.33885], [83.29999, 27.32778], [83.2673, 27.36235], [83.27197, 27.38309], [83.19413, 27.45632], [82.94938, 27.46036], [82.93261, 27.50328], [82.74119, 27.49838], [82.70378, 27.72122], [82.46405, 27.6716], [82.06554, 27.92222], [81.97214, 27.93322], [81.91223, 27.84995], [81.47867, 28.08303], [81.48179, 28.12148], [81.38683, 28.17638], [81.32923, 28.13521], [81.19847, 28.36284], [81.03471, 28.40054], [80.55142, 28.69182], [80.50575, 28.6706], [80.52443, 28.54897], [80.44504, 28.63098], [80.37188, 28.63371], [80.12125, 28.82346], [80.06957, 28.82763], [80.05743, 28.91479], [80.18085, 29.13649], [80.23178, 29.11626], [80.26602, 29.13938], [80.24112, 29.21414], [80.28626, 29.20327], [80.31428, 29.30784], [80.24322, 29.44299], [80.37939, 29.57098], [80.41858, 29.63581], [80.38428, 29.68513], [80.36803, 29.73865], [80.41554, 29.79451], [80.43458, 29.80466], [80.48997, 29.79566], [80.56247, 29.86661], [80.57179, 29.91422], [80.60226, 29.95732], [80.67076, 29.95732], [80.8778, 30.13384], [80.86673, 30.17321], [80.91143, 30.22173], [80.92547, 30.17193], [81.03953, 30.20059], [80.83343, 30.32023], [80.54504, 30.44936], [80.20721, 30.58541], [79.93255, 30.88288], [79.59884, 30.93943], [79.30694, 31.17357], [79.14016, 31.43403], [79.01931, 31.42817], [78.89344, 31.30481], [78.77898, 31.31209], [78.71032, 31.50197], [78.84516, 31.60631], [78.69933, 31.78723], [78.78036, 31.99478], [78.74404, 32.00384], [78.68754, 32.10256], [78.49609, 32.2762], [78.4645, 32.45367], [78.38897, 32.53938], [78.73916, 32.69438], [78.7831, 32.46873], [78.96713, 32.33655], [78.99322, 32.37948], [79.0979, 32.38051], [79.13174, 32.47766], [79.26768, 32.53277], [79.46562, 32.69668], [79.14016, 33.02545], [79.15252, 33.17156], [78.73636, 33.56521], [78.67599, 33.66445], [78.77349, 33.73871], [78.73367, 34.01121], [78.65657, 34.03195], [78.66225, 34.08858], [78.91769, 34.15452], [78.99802, 34.3027], [79.05364, 34.32482], [78.74465, 34.45174], [78.56475, 34.50835], [78.54964, 34.57283], [78.27781, 34.61484], [78.18435, 34.7998], [78.22692, 34.88771], [78.00033, 35.23954], [78.03466, 35.3785], [78.11664, 35.48022], [77.80532, 35.52058], [77.70232, 35.46244], [77.44277, 35.46132], [76.96624, 35.5932], [76.84539, 35.67356], [76.77323, 35.66062], [76.75475, 35.52617], [76.85088, 35.39754], [76.93465, 35.39866], [77.11796, 35.05419], [76.99251, 34.93349], [76.87193, 34.96906], [76.74514, 34.92488], [76.74377, 34.84039], [76.67648, 34.76371], [76.47186, 34.78965], [76.15463, 34.6429], [76.04614, 34.67566], [75.75438, 34.51827], [75.38009, 34.55021], [75.01479, 34.64629], [74.6663, 34.703], [74.58083, 34.77386], [74.31239, 34.79626], [74.12897, 34.70073], [73.96423, 34.68244], [73.93401, 34.63386], [73.93951, 34.57169], [73.89419, 34.54568], [73.88732, 34.48911], [73.74999, 34.3781], [73.74862, 34.34183], [73.8475, 34.32935], [73.90517, 34.35317], [73.98208, 34.2522], [73.90677, 34.10504], [73.88732, 34.05105], [73.91341, 34.01235], [74.21554, 34.03853], [74.25262, 34.01577], [74.26086, 33.92237], [74.14001, 33.83002], [74.05898, 33.82089], [74.00891, 33.75437], [73.96423, 33.73071], [73.98968, 33.66155], [73.97367, 33.64061], [74.03576, 33.56718], [74.10115, 33.56392], [74.18121, 33.4745], [74.17983, 33.3679], [74.08782, 33.26232], [74.01366, 33.25199], [74.02144, 33.18908], [74.15374, 33.13477], [74.17571, 33.07495], [74.31854, 33.02891], [74.34875, 32.97823], [74.31227, 32.92795], [74.41467, 32.90563], [74.45312, 32.77755], [74.6289, 32.75561], [74.64675, 32.82604], [74.7113, 32.84219], [74.65345, 32.71225], [74.69542, 32.66792], [74.64424, 32.60985], [74.65251, 32.56416], [74.67431, 32.56676], [74.68362, 32.49298], [74.84725, 32.49075], [74.97634, 32.45367], [75.03265, 32.49538], [75.28259, 32.36556], [75.38046, 32.26836], [75.25649, 32.10187], [75.00793, 32.03786], [74.9269, 32.0658], [74.86236, 32.04485], [74.79919, 31.95983], [74.58907, 31.87824], [74.47771, 31.72227], [74.57498, 31.60382], [74.61517, 31.55698], [74.59319, 31.50197], [74.64713, 31.45605], [74.59773, 31.4136], [74.53223, 31.30321], [74.51629, 31.13829], [74.56023, 31.08303], [74.60281, 31.10419], [74.60006, 31.13711], [74.6852, 31.12771], [74.67971, 31.05479], [74.5616, 31.04153], [73.88993, 30.36305], [73.95736, 30.28466], [73.97225, 30.19829], [73.80299, 30.06969], [73.58665, 30.01848], [73.3962, 29.94707], [73.28094, 29.56646], [73.05886, 29.1878], [73.01337, 29.16422], [72.94272, 29.02487], [72.40402, 28.78283], [72.29495, 28.66367], [72.20329, 28.3869], [71.9244, 28.11555], [71.89921, 27.96035], [70.79054, 27.68423], [70.60927, 28.02178], [70.37307, 28.01208], [70.12502, 27.8057], [70.03136, 27.56627], [69.58519, 27.18109], [69.50904, 26.74892], [69.88555, 26.56836], [70.05584, 26.60398], [70.17532, 26.55362], [70.17532, 26.24118], [70.08193, 26.08094], [70.0985, 25.93238], [70.2687, 25.71156], [70.37444, 25.67443], [70.53649, 25.68928], [70.60378, 25.71898], [70.67382, 25.68186], [70.66695, 25.39314], [70.89148, 25.15064], [70.94002, 24.92843], [71.09405, 24.69017], [70.97594, 24.60904], [71.00341, 24.46038], [71.12838, 24.42662], [71.04461, 24.34657], [70.94985, 24.3791], [70.85784, 24.30903], [70.88393, 24.27398], [70.71502, 24.23517], [70.57906, 24.27774], [70.5667, 24.43787], [70.11712, 24.30915], [70.03428, 24.172], [69.73335, 24.17007], [69.59579, 24.29777], [69.29778, 24.28712], [69.19341, 24.25646], [69.07806, 24.29777], [68.97781, 24.26021], [68.90914, 24.33156], [68.7416, 24.31904], [68.74643, 23.97027], [68.39339, 23.96838], [68.20763, 23.85849], [68.11329, 23.53945], [76.59015, 5.591], [79.50447, 8.91876], [79.42124, 9.80115], [80.48418, 10.20786], [89.08044, 21.41871]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q9143535\", nameEn: \"Akrotiri\", country: \"GB\", groups: [\"Q644636\", \"Q37362\", \"BOTS\", \"145\", \"142\", \"UN\"], level: \"subterritory\", driveSide: \"left\", callingCodes: [\"357\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[32.86014, 34.70585], [32.82717, 34.70622], [32.79433, 34.67883], [32.76136, 34.68318], [32.75515, 34.64985], [32.74412, 34.43926], [33.26744, 34.49942], [33.0138, 34.64424], [32.96968, 34.64046], [32.96718, 34.63446], [32.95891, 34.62919], [32.95323, 34.64075], [32.95471, 34.64528], [32.94976, 34.65204], [32.94796, 34.6587], [32.95325, 34.66462], [32.97079, 34.66112], [32.97736, 34.65277], [32.99014, 34.65518], [32.98668, 34.67268], [32.99135, 34.68061], [32.95539, 34.68471], [32.94683, 34.67907], [32.94379, 34.67111], [32.93693, 34.67027], [32.93449, 34.66241], [32.92807, 34.66736], [32.93043, 34.67091], [32.91398, 34.67343], [32.9068, 34.66102], [32.86167, 34.68734], [32.86014, 34.70585]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q9206745\", nameEn: \"Dhekelia\", country: \"GB\", groups: [\"Q644636\", \"Q37362\", \"BOTS\", \"145\", \"142\", \"UN\"], level: \"subterritory\", driveSide: \"left\", callingCodes: [\"357\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.70575, 34.97947], [33.83531, 34.73974], [33.98684, 34.76642], [33.90075, 34.96623], [33.86432, 34.97592], [33.84811, 34.97075], [33.83505, 34.98108], [33.85621, 34.98956], [33.85891, 35.001], [33.85216, 35.00579], [33.84045, 35.00616], [33.82875, 35.01685], [33.83055, 35.02865], [33.81524, 35.04192], [33.8012, 35.04786], [33.82051, 35.0667], [33.8355, 35.05777], [33.85261, 35.0574], [33.88367, 35.07877], [33.89485, 35.06873], [33.90247, 35.07686], [33.91299, 35.07579], [33.91789, 35.08688], [33.89853, 35.11377], [33.88737, 35.11408], [33.88943, 35.12007], [33.88561, 35.12449], [33.87224, 35.12293], [33.87622, 35.10457], [33.87097, 35.09389], [33.87479, 35.08881], [33.8541, 35.07201], [33.84168, 35.06823], [33.82067, 35.07826], [33.78581, 35.05104], [33.76106, 35.04253], [33.73824, 35.05321], [33.71482, 35.03722], [33.70209, 35.04882], [33.7161, 35.07279], [33.70861, 35.07644], [33.69095, 35.06237], [33.68474, 35.06602], [33.67742, 35.05963], [33.67678, 35.03866], [33.69938, 35.03123], [33.69731, 35.01754], [33.71514, 35.00294], [33.70639, 34.99303], [33.70575, 34.97947]], [[33.77312, 34.9976], [33.77553, 34.99518], [33.78516, 34.99582], [33.79191, 34.98914], [33.78917, 34.98854], [33.78571, 34.98951], [33.78318, 34.98699], [33.78149, 34.98854], [33.77843, 34.988], [33.7778, 34.98981], [33.76738, 34.99188], [33.76605, 34.99543], [33.75682, 34.99916], [33.75994, 35.00113], [33.77312, 34.9976]], [[33.74144, 35.01053], [33.7343, 35.01178], [33.73781, 35.02181], [33.74265, 35.02329], [33.74983, 35.02274], [33.7492, 35.01319], [33.74144, 35.01053]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q16390686\", nameEn: \"Peninsular Spain\", country: \"ES\", groups: [\"Q12837\", \"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"34\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[3.75438, 42.33445], [3.17156, 42.43545], [3.11379, 42.43646], [3.10027, 42.42621], [3.08167, 42.42748], [3.03734, 42.47363], [2.96518, 42.46692], [2.94283, 42.48174], [2.92107, 42.4573], [2.88413, 42.45938], [2.86983, 42.46843], [2.85675, 42.45444], [2.84335, 42.45724], [2.77464, 42.41046], [2.75497, 42.42578], [2.72056, 42.42298], [2.65311, 42.38771], [2.6747, 42.33974], [2.57934, 42.35808], [2.55516, 42.35351], [2.54382, 42.33406], [2.48457, 42.33933], [2.43508, 42.37568], [2.43299, 42.39423], [2.38504, 42.39977], [2.25551, 42.43757], [2.20578, 42.41633], [2.16599, 42.42314], [2.12789, 42.41291], [2.11621, 42.38393], [2.06241, 42.35906], [2.00488, 42.35399], [1.96482, 42.37787], [1.9574, 42.42401], [1.94084, 42.43039], [1.94061, 42.43333], [1.94292, 42.44316], [1.93663, 42.45439], [1.88853, 42.4501], [1.83037, 42.48395], [1.76335, 42.48863], [1.72515, 42.50338], [1.70571, 42.48867], [1.66826, 42.50779], [1.65674, 42.47125], [1.58933, 42.46275], [1.57953, 42.44957], [1.55937, 42.45808], [1.55073, 42.43299], [1.5127, 42.42959], [1.44529, 42.43724], [1.43838, 42.47848], [1.41648, 42.48315], [1.46661, 42.50949], [1.44759, 42.54431], [1.41245, 42.53539], [1.4234, 42.55959], [1.44529, 42.56722], [1.42512, 42.58292], [1.44197, 42.60217], [1.35562, 42.71944], [1.15928, 42.71407], [1.0804, 42.78569], [0.98292, 42.78754], [0.96166, 42.80629], [0.93089, 42.79154], [0.711, 42.86372], [0.66121, 42.84021], [0.65421, 42.75872], [0.67873, 42.69458], [0.40214, 42.69779], [0.36251, 42.72282], [0.29407, 42.67431], [0.25336, 42.7174], [0.17569, 42.73424], [-0.02468, 42.68513], [-0.10519, 42.72761], [-0.16141, 42.79535], [-0.17939, 42.78974], [-0.3122, 42.84788], [-0.38833, 42.80132], [-0.41319, 42.80776], [-0.44334, 42.79939], [-0.50863, 42.82713], [-0.55497, 42.77846], [-0.67637, 42.88303], [-0.69837, 42.87945], [-0.72608, 42.89318], [-0.73422, 42.91228], [-0.72037, 42.92541], [-0.75478, 42.96916], [-0.81652, 42.95166], [-0.97133, 42.96239], [-1.00963, 42.99279], [-1.10333, 43.0059], [-1.22881, 43.05534], [-1.25244, 43.04164], [-1.30531, 43.06859], [-1.30052, 43.09581], [-1.27118, 43.11961], [-1.32209, 43.1127], [-1.34419, 43.09665], [-1.35272, 43.02658], [-1.44067, 43.047], [-1.47555, 43.08372], [-1.41562, 43.12815], [-1.3758, 43.24511], [-1.40942, 43.27272], [-1.45289, 43.27049], [-1.50992, 43.29481], [-1.55963, 43.28828], [-1.57674, 43.25269], [-1.61341, 43.25269], [-1.63052, 43.28591], [-1.62481, 43.30726], [-1.69407, 43.31378], [-1.73074, 43.29481], [-1.7397, 43.32979], [-1.75079, 43.3317], [-1.75334, 43.34107], [-1.77068, 43.34396], [-1.78714, 43.35476], [-1.78332, 43.36399], [-1.79319, 43.37497], [-1.77289, 43.38957], [-1.81005, 43.59738], [-10.14298, 44.17365], [-11.19304, 41.83075], [-8.87157, 41.86488], [-8.81794, 41.90375], [-8.75712, 41.92833], [-8.74606, 41.9469], [-8.7478, 41.96282], [-8.69071, 41.98862], [-8.6681, 41.99703], [-8.65832, 42.02972], [-8.64626, 42.03668], [-8.63791, 42.04691], [-8.59493, 42.05708], [-8.58086, 42.05147], [-8.54563, 42.0537], [-8.5252, 42.06264], [-8.52837, 42.07658], [-8.48185, 42.0811], [-8.44123, 42.08218], [-8.42512, 42.07199], [-8.40143, 42.08052], [-8.38323, 42.07683], [-8.36353, 42.09065], [-8.33912, 42.08358], [-8.32161, 42.10218], [-8.29809, 42.106], [-8.2732, 42.12396], [-8.24681, 42.13993], [-8.22406, 42.1328], [-8.1986, 42.15402], [-8.18947, 42.13853], [-8.19406, 42.12141], [-8.18178, 42.06436], [-8.11729, 42.08537], [-8.08847, 42.05767], [-8.08796, 42.01398], [-8.16232, 41.9828], [-8.2185, 41.91237], [-8.19551, 41.87459], [-8.16944, 41.87944], [-8.16455, 41.81753], [-8.0961, 41.81024], [-8.01136, 41.83453], [-7.9804, 41.87337], [-7.92336, 41.8758], [-7.90707, 41.92432], [-7.88751, 41.92553], [-7.88055, 41.84571], [-7.84188, 41.88065], [-7.69848, 41.90977], [-7.65774, 41.88308], [-7.58603, 41.87944], [-7.62188, 41.83089], [-7.52737, 41.83939], [-7.49803, 41.87095], [-7.45566, 41.86488], [-7.44759, 41.84451], [-7.42854, 41.83262], [-7.42864, 41.80589], [-7.37092, 41.85031], [-7.32366, 41.8406], [-7.18677, 41.88793], [-7.18549, 41.97515], [-7.14115, 41.98855], [-7.08574, 41.97401], [-7.07596, 41.94977], [-7.01078, 41.94977], [-6.98144, 41.9728], [-6.95537, 41.96553], [-6.94396, 41.94403], [-6.82174, 41.94493], [-6.81196, 41.99097], [-6.76959, 41.98734], [-6.75004, 41.94129], [-6.61967, 41.94008], [-6.58544, 41.96674], [-6.5447, 41.94371], [-6.56752, 41.88429], [-6.51374, 41.8758], [-6.56426, 41.74219], [-6.54633, 41.68623], [-6.49907, 41.65823], [-6.44204, 41.68258], [-6.29863, 41.66432], [-6.19128, 41.57638], [-6.26777, 41.48796], [-6.3306, 41.37677], [-6.38553, 41.38655], [-6.38551, 41.35274], [-6.55937, 41.24417], [-6.65046, 41.24725], [-6.68286, 41.21641], [-6.69711, 41.1858], [-6.77319, 41.13049], [-6.75655, 41.10187], [-6.79241, 41.05397], [-6.80942, 41.03629], [-6.84781, 41.02692], [-6.88843, 41.03027], [-6.913, 41.03922], [-6.9357, 41.02888], [-6.8527, 40.93958], [-6.84292, 40.89771], [-6.80707, 40.88047], [-6.79892, 40.84842], [-6.82337, 40.84472], [-6.82826, 40.74603], [-6.79567, 40.65955], [-6.84292, 40.56801], [-6.80218, 40.55067], [-6.7973, 40.51723], [-6.84944, 40.46394], [-6.84618, 40.42177], [-6.78426, 40.36468], [-6.80218, 40.33239], [-6.86085, 40.2976], [-6.86085, 40.26776], [-7.00426, 40.23169], [-7.02544, 40.18564], [-7.00589, 40.12087], [-6.94233, 40.10716], [-6.86737, 40.01986], [-6.91463, 39.86618], [-6.97492, 39.81488], [-7.01613, 39.66877], [-7.24707, 39.66576], [-7.33507, 39.64569], [-7.54121, 39.66717], [-7.49477, 39.58794], [-7.2927, 39.45847], [-7.3149, 39.34857], [-7.23403, 39.27579], [-7.23566, 39.20132], [-7.12811, 39.17101], [-7.14929, 39.11287], [-7.10692, 39.10275], [-7.04011, 39.11919], [-6.97004, 39.07619], [-6.95211, 39.0243], [-7.051, 38.907], [-7.03848, 38.87221], [-7.26174, 38.72107], [-7.265, 38.61674], [-7.32529, 38.44336], [-7.15581, 38.27597], [-7.09389, 38.17227], [-6.93418, 38.21454], [-7.00375, 38.01914], [-7.05966, 38.01966], [-7.10366, 38.04404], [-7.12648, 38.00296], [-7.24544, 37.98884], [-7.27314, 37.90145], [-7.33441, 37.81193], [-7.41981, 37.75729], [-7.51759, 37.56119], [-7.46878, 37.47127], [-7.43974, 37.38913], [-7.43227, 37.25152], [-7.41854, 37.23813], [-7.41133, 37.20314], [-7.39769, 37.16868], [-7.37282, 36.96896], [-7.2725, 35.73269], [-5.10878, 36.05227], [-2.27707, 35.35051], [3.75438, 42.33445]], [[-5.27801, 36.14942], [-5.34064, 36.03744], [-5.40526, 36.15488], [-5.34536, 36.15501], [-5.33822, 36.15272], [-5.27801, 36.14942]]], [[[1.99838, 42.44682], [2.01564, 42.45171], [1.99216, 42.46208], [1.98579, 42.47486], [1.99766, 42.4858], [1.98916, 42.49351], [1.98022, 42.49569], [1.97697, 42.48568], [1.97227, 42.48487], [1.97003, 42.48081], [1.96215, 42.47854], [1.95606, 42.45785], [1.96125, 42.45364], [1.98378, 42.44697], [1.99838, 42.44682]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q98059339\", nameEn: \"Mainland Norway\", country: \"NO\", groups: [\"154\", \"150\", \"UN\"], callingCodes: [\"47\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[10.40861, 58.38489], [10.64958, 58.89391], [11.08911, 58.98745], [11.15367, 59.07862], [11.34459, 59.11672], [11.4601, 58.99022], [11.45199, 58.89604], [11.65732, 58.90177], [11.8213, 59.24985], [11.69297, 59.59442], [11.92112, 59.69531], [11.87121, 59.86039], [12.15641, 59.8926], [12.36317, 59.99259], [12.52003, 60.13846], [12.59133, 60.50559], [12.2277, 61.02442], [12.69115, 61.06584], [12.86939, 61.35427], [12.57707, 61.56547], [12.40595, 61.57226], [12.14746, 61.7147], [12.29187, 62.25699], [12.07085, 62.6297], [12.19919, 63.00104], [11.98529, 63.27487], [12.19919, 63.47935], [12.14928, 63.59373], [12.74105, 64.02171], [13.23411, 64.09087], [13.98222, 64.00953], [14.16051, 64.18725], [14.11117, 64.46674], [13.64276, 64.58402], [14.50926, 65.31786], [14.53778, 66.12399], [15.05113, 66.15572], [15.49318, 66.28509], [15.37197, 66.48217], [16.35589, 67.06419], [16.39154, 67.21653], [16.09922, 67.4364], [16.12774, 67.52106], [16.38441, 67.52923], [16.7409, 67.91037], [17.30416, 68.11591], [17.90787, 67.96537], [18.13836, 68.20874], [18.1241, 68.53721], [18.39503, 68.58672], [18.63032, 68.50849], [18.97255, 68.52416], [19.93508, 68.35911], [20.22027, 68.48759], [19.95647, 68.55546], [20.22027, 68.67246], [20.33435, 68.80174], [20.28444, 68.93283], [20.0695, 69.04469], [20.55258, 69.06069], [20.72171, 69.11874], [21.05775, 69.0356], [21.11099, 69.10291], [20.98641, 69.18809], [21.00732, 69.22755], [21.27827, 69.31281], [21.63833, 69.27485], [22.27276, 68.89514], [22.38367, 68.71561], [22.53321, 68.74393], [23.13064, 68.64684], [23.68017, 68.70276], [23.781, 68.84514], [24.02299, 68.81601], [24.18432, 68.73936], [24.74898, 68.65143], [24.90023, 68.55579], [24.93048, 68.61102], [25.10189, 68.63307], [25.12206, 68.78684], [25.42455, 68.90328], [25.61613, 68.89602], [25.75729, 68.99383], [25.69679, 69.27039], [25.96904, 69.68397], [26.40261, 69.91377], [26.64461, 69.96565], [27.05802, 69.92069], [27.57226, 70.06215], [27.95542, 70.0965], [27.97558, 69.99671], [28.32849, 69.88605], [28.36883, 69.81658], [29.12697, 69.69193], [29.31664, 69.47994], [28.8629, 69.22395], [28.81248, 69.11997], [28.91738, 69.04774], [29.0444, 69.0119], [29.26623, 69.13794], [29.27631, 69.2811], [29.97205, 69.41623], [30.16363, 69.65244], [30.52662, 69.54699], [30.95011, 69.54699], [30.84095, 69.80584], [31.59909, 70.16571], [32.07813, 72.01005], [-11.60274, 67.73467], [7.28637, 57.35913], [10.40861, 58.38489]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q98543636\", nameEn: \"Mainland Ecuador\", country: \"EC\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"593\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-84.52388, -3.36941], [-80.30602, -3.39149], [-80.20647, -3.431], [-80.24123, -3.46124], [-80.24586, -3.48677], [-80.23651, -3.48652], [-80.22629, -3.501], [-80.20535, -3.51667], [-80.21642, -3.5888], [-80.19848, -3.59249], [-80.18741, -3.63994], [-80.19926, -3.68894], [-80.13232, -3.90317], [-80.46386, -4.01342], [-80.4822, -4.05477], [-80.45023, -4.20938], [-80.32114, -4.21323], [-80.46386, -4.41516], [-80.39256, -4.48269], [-80.13945, -4.29786], [-79.79722, -4.47558], [-79.59402, -4.46848], [-79.26248, -4.95167], [-79.1162, -4.97774], [-79.01659, -5.01481], [-78.85149, -4.66795], [-78.68394, -4.60754], [-78.34362, -3.38633], [-78.24589, -3.39907], [-78.22642, -3.51113], [-78.14324, -3.47653], [-78.19369, -3.36431], [-77.94147, -3.05454], [-76.6324, -2.58397], [-76.05203, -2.12179], [-75.57429, -1.55961], [-75.3872, -0.9374], [-75.22862, -0.95588], [-75.22862, -0.60048], [-75.53615, -0.19213], [-75.60169, -0.18708], [-75.61997, -0.10012], [-75.40192, -0.17196], [-75.25764, -0.11943], [-75.82927, 0.09578], [-76.23441, 0.42294], [-76.41215, 0.38228], [-76.4094, 0.24015], [-76.89177, 0.24736], [-77.52001, 0.40782], [-77.49984, 0.64476], [-77.67815, 0.73863], [-77.66416, 0.81604], [-77.68613, 0.83029], [-77.7148, 0.85003], [-77.85677, 0.80197], [-78.42749, 1.15389], [-78.87137, 1.47457], [-82.12561, 4.00341], [-84.52388, -3.36941]]]] } },\n  { type: \"Feature\", properties: { m49: \"001\", wikidata: \"Q2\", nameEn: \"World\", aliases: [\"Earth\", \"Planet\"], level: \"world\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"002\", wikidata: \"Q15\", nameEn: \"Africa\", level: \"region\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"003\", wikidata: \"Q49\", nameEn: \"North America\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"005\", wikidata: \"Q18\", nameEn: \"South America\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"009\", wikidata: \"Q538\", nameEn: \"Oceania\", level: \"region\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"011\", wikidata: \"Q4412\", nameEn: \"Western Africa\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"013\", wikidata: \"Q27611\", nameEn: \"Central America\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"014\", wikidata: \"Q27407\", nameEn: \"Eastern Africa\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"015\", wikidata: \"Q27381\", nameEn: \"Northern Africa\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"017\", wikidata: \"Q27433\", nameEn: \"Middle Africa\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"018\", wikidata: \"Q27394\", nameEn: \"Southern Africa\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"019\", wikidata: \"Q828\", nameEn: \"Americas\", level: \"region\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"021\", wikidata: \"Q2017699\", nameEn: \"Northern America\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"029\", wikidata: \"Q664609\", nameEn: \"Caribbean\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"030\", wikidata: \"Q27231\", nameEn: \"Eastern Asia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"034\", wikidata: \"Q771405\", nameEn: \"Southern Asia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"035\", wikidata: \"Q11708\", nameEn: \"South-eastern Asia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"039\", wikidata: \"Q27449\", nameEn: \"Southern Europe\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"053\", wikidata: \"Q45256\", nameEn: \"Australia and New Zealand\", aliases: [\"Australasia\"], level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"054\", wikidata: \"Q37394\", nameEn: \"Melanesia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"057\", wikidata: \"Q3359409\", nameEn: \"Micronesia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"061\", wikidata: \"Q35942\", nameEn: \"Polynesia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"142\", wikidata: \"Q48\", nameEn: \"Asia\", level: \"region\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"143\", wikidata: \"Q27275\", nameEn: \"Central Asia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"145\", wikidata: \"Q27293\", nameEn: \"Western Asia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"150\", wikidata: \"Q46\", nameEn: \"Europe\", level: \"region\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"151\", wikidata: \"Q27468\", nameEn: \"Eastern Europe\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"154\", wikidata: \"Q27479\", nameEn: \"Northern Europe\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"155\", wikidata: \"Q27496\", nameEn: \"Western Europe\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"202\", wikidata: \"Q132959\", nameEn: \"Sub-Saharan Africa\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"419\", wikidata: \"Q72829598\", nameEn: \"Latin America and the Caribbean\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"680\", wikidata: \"Q3405693\", nameEn: \"Sark\", country: \"GB\", groups: [\"GG\", \"830\", \"Q185086\", \"154\", \"150\", \"UN\"], level: \"subterritory\", driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44 01481\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.36485, 49.48223], [-2.65349, 49.15373], [-2.09454, 49.46288], [-2.36485, 49.48223]]]] } },\n  { type: \"Feature\", properties: { m49: \"830\", wikidata: \"Q42314\", nameEn: \"Channel Islands\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"AC\", iso1A3: \"ASC\", wikidata: \"Q46197\", nameEn: \"Ascension Island\", aliases: [\"SH-AC\"], country: \"GB\", groups: [\"SH\", \"BOTS\", \"011\", \"202\", \"002\", \"UN\"], isoStatus: \"excRes\", driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"247\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-14.82771, -8.70814], [-13.33271, -8.07391], [-14.91926, -6.63386], [-14.82771, -8.70814]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AD\", iso1A3: \"AND\", iso1N3: \"020\", wikidata: \"Q228\", nameEn: \"Andorra\", groups: [\"Q12837\", \"039\", \"150\", \"UN\"], callingCodes: [\"376\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[1.72515, 42.50338], [1.73683, 42.55492], [1.7858, 42.57698], [1.72588, 42.59098], [1.73452, 42.61515], [1.68267, 42.62533], [1.6625, 42.61982], [1.63485, 42.62957], [1.60085, 42.62703], [1.55418, 42.65669], [1.50867, 42.64483], [1.48043, 42.65203], [1.46718, 42.63296], [1.47986, 42.61346], [1.44197, 42.60217], [1.42512, 42.58292], [1.44529, 42.56722], [1.4234, 42.55959], [1.41245, 42.53539], [1.44759, 42.54431], [1.46661, 42.50949], [1.41648, 42.48315], [1.43838, 42.47848], [1.44529, 42.43724], [1.5127, 42.42959], [1.55073, 42.43299], [1.55937, 42.45808], [1.57953, 42.44957], [1.58933, 42.46275], [1.65674, 42.47125], [1.66826, 42.50779], [1.70571, 42.48867], [1.72515, 42.50338]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AE\", iso1A3: \"ARE\", iso1N3: \"784\", wikidata: \"Q878\", nameEn: \"United Arab Emirates\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"971\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[56.26534, 25.62825], [56.25341, 25.61443], [56.26636, 25.60643], [56.25365, 25.60211], [56.20473, 25.61119], [56.18363, 25.65508], [56.14826, 25.66351], [56.13579, 25.73524], [56.17416, 25.77239], [56.13963, 25.82765], [56.19334, 25.9795], [56.15498, 26.06828], [56.08666, 26.05038], [55.81777, 26.18798], [55.14145, 25.62624], [53.97892, 24.64436], [52.82259, 25.51697], [52.35509, 25.00368], [52.02277, 24.75635], [51.83108, 24.71675], [51.58834, 24.66608], [51.41644, 24.39615], [51.58871, 24.27256], [51.59617, 24.12041], [52.56622, 22.94341], [55.13599, 22.63334], [55.2137, 22.71065], [55.22634, 23.10378], [55.57358, 23.669], [55.48677, 23.94946], [55.73301, 24.05994], [55.8308, 24.01633], [56.01799, 24.07426], [55.95472, 24.2172], [55.83367, 24.20193], [55.77658, 24.23476], [55.76558, 24.23227], [55.75257, 24.23466], [55.75382, 24.2466], [55.75939, 24.26114], [55.76781, 24.26209], [55.79145, 24.27914], [55.80747, 24.31069], [55.83395, 24.32776], [55.83271, 24.41521], [55.76461, 24.5287], [55.83271, 24.68567], [55.83408, 24.77858], [55.81348, 24.80102], [55.81116, 24.9116], [55.85094, 24.96858], [55.90849, 24.96771], [55.96316, 25.00857], [56.05715, 24.95727], [56.05106, 24.87461], [55.97467, 24.89639], [55.97836, 24.87673], [56.03535, 24.81161], [56.06128, 24.74457], [56.13684, 24.73699], [56.20062, 24.78565], [56.20568, 24.85063], [56.30269, 24.88334], [56.34873, 24.93205], [56.3227, 24.97284], [56.86325, 25.03856], [56.82555, 25.7713], [56.26534, 25.62825]], [[56.26062, 25.33108], [56.3005, 25.31815], [56.3111, 25.30107], [56.35172, 25.30681], [56.34438, 25.26653], [56.27628, 25.23404], [56.24341, 25.22867], [56.20872, 25.24104], [56.20838, 25.25668], [56.24465, 25.27505], [56.25008, 25.28843], [56.23362, 25.31253], [56.26062, 25.33108]]], [[[56.28423, 25.26344], [56.29379, 25.2754], [56.28102, 25.28486], [56.2716, 25.27916], [56.27086, 25.26128], [56.28423, 25.26344]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AF\", iso1A3: \"AFG\", iso1N3: \"004\", wikidata: \"Q889\", nameEn: \"Afghanistan\", groups: [\"034\", \"142\", \"UN\"], callingCodes: [\"93\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[70.61526, 38.34774], [70.60407, 38.28046], [70.54673, 38.24541], [70.4898, 38.12546], [70.17206, 37.93276], [70.1863, 37.84296], [70.27694, 37.81258], [70.28243, 37.66706], [70.15015, 37.52519], [69.95971, 37.5659], [69.93362, 37.61378], [69.84435, 37.60616], [69.80041, 37.5746], [69.51888, 37.5844], [69.44954, 37.4869], [69.36645, 37.40462], [69.45022, 37.23315], [69.39529, 37.16752], [69.25152, 37.09426], [69.03274, 37.25174], [68.96407, 37.32603], [68.88168, 37.33368], [68.91189, 37.26704], [68.80889, 37.32494], [68.81438, 37.23862], [68.6798, 37.27906], [68.61851, 37.19815], [68.41888, 37.13906], [68.41201, 37.10402], [68.29253, 37.10621], [68.27605, 37.00977], [68.18542, 37.02074], [68.02194, 36.91923], [67.87917, 37.0591], [67.7803, 37.08978], [67.78329, 37.1834], [67.51868, 37.26102], [67.2581, 37.17216], [67.2224, 37.24545], [67.13039, 37.27168], [67.08232, 37.35469], [66.95598, 37.40162], [66.64699, 37.32958], [66.55743, 37.35409], [66.30993, 37.32409], [65.72274, 37.55438], [65.64137, 37.45061], [65.64263, 37.34388], [65.51778, 37.23881], [64.97945, 37.21913], [64.61141, 36.6351], [64.62514, 36.44311], [64.57295, 36.34362], [64.43288, 36.24401], [64.05385, 36.10433], [63.98519, 36.03773], [63.56496, 35.95106], [63.53475, 35.90881], [63.29579, 35.85985], [63.12276, 35.86208], [63.10318, 35.81782], [63.23262, 35.67487], [63.10079, 35.63024], [63.12276, 35.53196], [63.0898, 35.43131], [62.90853, 35.37086], [62.74098, 35.25432], [62.62288, 35.22067], [62.48006, 35.28796], [62.29878, 35.13312], [62.29191, 35.25964], [62.15871, 35.33278], [62.05709, 35.43803], [61.97743, 35.4604], [61.77693, 35.41341], [61.58742, 35.43803], [61.27371, 35.61482], [61.18187, 35.30249], [61.0991, 35.27845], [61.12831, 35.09938], [61.06926, 34.82139], [61.00197, 34.70631], [60.99922, 34.63064], [60.72316, 34.52857], [60.91321, 34.30411], [60.66502, 34.31539], [60.50209, 34.13992], [60.5838, 33.80793], [60.5485, 33.73422], [60.57762, 33.59772], [60.69573, 33.56054], [60.91133, 33.55596], [60.88908, 33.50219], [60.56485, 33.12944], [60.86191, 32.22565], [60.84541, 31.49561], [61.70929, 31.37391], [61.80569, 31.16167], [61.80957, 31.12576], [61.83257, 31.0452], [61.8335, 30.97669], [61.78268, 30.92724], [61.80829, 30.84224], [60.87231, 29.86514], [62.47751, 29.40782], [63.5876, 29.50456], [64.12966, 29.39157], [64.19796, 29.50407], [64.62116, 29.58903], [65.04005, 29.53957], [66.24175, 29.85181], [66.36042, 29.9583], [66.23609, 30.06321], [66.34869, 30.404], [66.28413, 30.57001], [66.39194, 30.9408], [66.42645, 30.95309], [66.58175, 30.97532], [66.68166, 31.07597], [66.72561, 31.20526], [66.83273, 31.26867], [67.04147, 31.31561], [67.03323, 31.24519], [67.29964, 31.19586], [67.78854, 31.33203], [67.7748, 31.4188], [67.62374, 31.40473], [67.58323, 31.52772], [67.72056, 31.52304], [67.86887, 31.63536], [68.00071, 31.6564], [68.1655, 31.82691], [68.25614, 31.80357], [68.27605, 31.75863], [68.44222, 31.76446], [68.57475, 31.83158], [68.6956, 31.75687], [68.79997, 31.61665], [68.91078, 31.59687], [68.95995, 31.64822], [69.00939, 31.62249], [69.11514, 31.70782], [69.20577, 31.85957], [69.3225, 31.93186], [69.27032, 32.14141], [69.27932, 32.29119], [69.23599, 32.45946], [69.2868, 32.53938], [69.38155, 32.56601], [69.44747, 32.6678], [69.43649, 32.7302], [69.38018, 32.76601], [69.47082, 32.85834], [69.5436, 32.8768], [69.49854, 32.88843], [69.49004, 33.01509], [69.57656, 33.09911], [69.71526, 33.09911], [69.79766, 33.13247], [69.85259, 33.09451], [70.02563, 33.14282], [70.07369, 33.22557], [70.13686, 33.21064], [70.32775, 33.34496], [70.17062, 33.53535], [70.20141, 33.64387], [70.14785, 33.6553], [70.14236, 33.71701], [70.00503, 33.73528], [69.85671, 33.93719], [69.87307, 33.9689], [69.90203, 34.04194], [70.54336, 33.9463], [70.88119, 33.97933], [71.07345, 34.06242], [71.06933, 34.10564], [71.09307, 34.11961], [71.09453, 34.13524], [71.13078, 34.16503], [71.12815, 34.26619], [71.17662, 34.36769], [71.02401, 34.44835], [71.0089, 34.54568], [71.11602, 34.63047], [71.08718, 34.69034], [71.28356, 34.80882], [71.29472, 34.87728], [71.50329, 34.97328], [71.49917, 35.00478], [71.55273, 35.02615], [71.52938, 35.09023], [71.67495, 35.21262], [71.5541, 35.28776], [71.54294, 35.31037], [71.65435, 35.4479], [71.49917, 35.6267], [71.55273, 35.71483], [71.37969, 35.95865], [71.19505, 36.04134], [71.60491, 36.39429], [71.80267, 36.49924], [72.18135, 36.71838], [72.6323, 36.84601], [73.82685, 36.91421], [74.04856, 36.82648], [74.43389, 37.00977], [74.53739, 36.96224], [74.56453, 37.03023], [74.49981, 37.24518], [74.80605, 37.21565], [74.88887, 37.23275], [74.8294, 37.3435], [74.68383, 37.3948], [74.56161, 37.37734], [74.41055, 37.3948], [74.23339, 37.41116], [74.20308, 37.34208], [73.8564, 37.26158], [73.82552, 37.22659], [73.64974, 37.23643], [73.61129, 37.27469], [73.76647, 37.33913], [73.77197, 37.4417], [73.29633, 37.46495], [73.06884, 37.31729], [72.79693, 37.22222], [72.66381, 37.02014], [72.54095, 37.00007], [72.31676, 36.98115], [71.83229, 36.68084], [71.67083, 36.67346], [71.57195, 36.74943], [71.51502, 36.89128], [71.48481, 36.93218], [71.46923, 36.99925], [71.45578, 37.03094], [71.43097, 37.05855], [71.44127, 37.11856], [71.4494, 37.18137], [71.4555, 37.21418], [71.47386, 37.2269], [71.48339, 37.23937], [71.4824, 37.24921], [71.48536, 37.26017], [71.50674, 37.31502], [71.49821, 37.31975], [71.4862, 37.33405], [71.47685, 37.40281], [71.49612, 37.4279], [71.5256, 37.47971], [71.50616, 37.50733], [71.49693, 37.53527], [71.5065, 37.60912], [71.51972, 37.61945], [71.54186, 37.69691], [71.55234, 37.73209], [71.53053, 37.76534], [71.54324, 37.77104], [71.55752, 37.78677], [71.59255, 37.79956], [71.58843, 37.92425], [71.51565, 37.95349], [71.32871, 37.88564], [71.296, 37.93403], [71.2809, 37.91995], [71.24969, 37.93031], [71.27278, 37.96496], [71.27622, 37.99946], [71.28922, 38.01272], [71.29878, 38.04429], [71.36444, 38.15358], [71.37803, 38.25641], [71.33869, 38.27335], [71.33114, 38.30339], [71.21291, 38.32797], [71.1451, 38.40106], [71.10957, 38.40671], [71.10592, 38.42077], [71.09542, 38.42517], [71.0556, 38.40176], [71.03545, 38.44779], [70.98693, 38.48862], [70.92728, 38.43021], [70.88719, 38.46826], [70.84376, 38.44688], [70.82538, 38.45394], [70.81697, 38.44507], [70.80521, 38.44447], [70.79766, 38.44944], [70.78702, 38.45031], [70.78581, 38.45502], [70.77132, 38.45548], [70.75455, 38.4252], [70.72485, 38.4131], [70.69807, 38.41861], [70.67438, 38.40597], [70.6761, 38.39144], [70.69189, 38.37031], [70.64966, 38.34999], [70.61526, 38.34774]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AG\", iso1A3: \"ATG\", iso1N3: \"028\", wikidata: \"Q781\", nameEn: \"Antigua and Barbuda\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 268\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-61.66959, 18.6782], [-62.58307, 16.68909], [-62.1023, 16.97277], [-61.23098, 16.62484], [-61.66959, 18.6782]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AI\", iso1A3: \"AIA\", iso1N3: \"660\", wikidata: \"Q25228\", nameEn: \"Anguilla\", country: \"GB\", groups: [\"BOTS\", \"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 264\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-63.79029, 19.11219], [-63.35989, 18.06012], [-62.62718, 18.26185], [-63.79029, 19.11219]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AL\", iso1A3: \"ALB\", iso1N3: \"008\", wikidata: \"Q222\", nameEn: \"Albania\", groups: [\"039\", \"150\", \"UN\"], callingCodes: [\"355\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[20.07761, 42.55582], [20.01834, 42.54622], [20.00842, 42.5109], [19.9324, 42.51699], [19.82333, 42.46581], [19.76549, 42.50237], [19.74731, 42.57422], [19.77375, 42.58517], [19.73244, 42.66299], [19.65972, 42.62774], [19.4836, 42.40831], [19.42352, 42.36546], [19.42, 42.33019], [19.28623, 42.17745], [19.40687, 42.10024], [19.37548, 42.06835], [19.36867, 42.02564], [19.37691, 41.96977], [19.34601, 41.95675], [19.33812, 41.90669], [19.37451, 41.8842], [19.37597, 41.84849], [19.26406, 41.74971], [19.0384, 40.35325], [19.95905, 39.82857], [19.97622, 39.78684], [19.92466, 39.69533], [19.98042, 39.6504], [20.00957, 39.69227], [20.05189, 39.69112], [20.12956, 39.65805], [20.15988, 39.652], [20.22376, 39.64532], [20.22707, 39.67459], [20.27412, 39.69884], [20.31961, 39.72799], [20.29152, 39.80421], [20.30804, 39.81563], [20.38572, 39.78516], [20.41475, 39.81437], [20.41546, 39.82832], [20.31135, 39.99438], [20.37911, 39.99058], [20.42373, 40.06777], [20.48487, 40.06271], [20.51297, 40.08168], [20.55593, 40.06524], [20.61081, 40.07866], [20.62566, 40.0897], [20.67162, 40.09433], [20.71789, 40.27739], [20.78234, 40.35803], [20.7906, 40.42726], [20.83688, 40.47882], [20.94925, 40.46625], [20.96908, 40.51526], [21.03932, 40.56299], [21.05833, 40.66586], [20.98134, 40.76046], [20.95752, 40.76982], [20.98396, 40.79109], [20.97887, 40.85475], [20.97693, 40.90103], [20.94305, 40.92399], [20.83671, 40.92752], [20.81567, 40.89662], [20.73504, 40.9081], [20.71634, 40.91781], [20.65558, 41.08009], [20.63454, 41.0889], [20.59832, 41.09066], [20.58546, 41.11179], [20.59715, 41.13644], [20.51068, 41.2323], [20.49432, 41.33679], [20.52119, 41.34381], [20.55976, 41.4087], [20.51301, 41.442], [20.49039, 41.49277], [20.45331, 41.51436], [20.45809, 41.5549], [20.52103, 41.56473], [20.55508, 41.58113], [20.51769, 41.65975], [20.52937, 41.69292], [20.51301, 41.72433], [20.53405, 41.78099], [20.57144, 41.7897], [20.55976, 41.87068], [20.59524, 41.8818], [20.57946, 41.91593], [20.63069, 41.94913], [20.59434, 42.03879], [20.55633, 42.08173], [20.56955, 42.12097], [20.48857, 42.25444], [20.3819, 42.3029], [20.34479, 42.32656], [20.24399, 42.32168], [20.21797, 42.41237], [20.17127, 42.50469], [20.07761, 42.55582]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AM\", iso1A3: \"ARM\", iso1N3: \"051\", wikidata: \"Q399\", nameEn: \"Armenia\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"374\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[45.0133, 41.29747], [44.93493, 41.25685], [44.81437, 41.30371], [44.80053, 41.25949], [44.81749, 41.23488], [44.84358, 41.23088], [44.89911, 41.21366], [44.87887, 41.20195], [44.82084, 41.21513], [44.72814, 41.20338], [44.61462, 41.24018], [44.59322, 41.1933], [44.46791, 41.18204], [44.34417, 41.2382], [44.34337, 41.20312], [44.32139, 41.2079], [44.18148, 41.24644], [44.16591, 41.19141], [43.84835, 41.16329], [43.74717, 41.1117], [43.67712, 41.13398], [43.4717, 41.12611], [43.44984, 41.0988], [43.47319, 41.02251], [43.58683, 40.98961], [43.67712, 40.93084], [43.67712, 40.84846], [43.74872, 40.7365], [43.7425, 40.66805], [43.63664, 40.54159], [43.54791, 40.47413], [43.60862, 40.43267], [43.59928, 40.34019], [43.71136, 40.16673], [43.65221, 40.14889], [43.65688, 40.11199], [43.92307, 40.01787], [44.1057, 40.03555], [44.1778, 40.02845], [44.26973, 40.04866], [44.46635, 39.97733], [44.61845, 39.8281], [44.75779, 39.7148], [44.88354, 39.74432], [44.92869, 39.72157], [45.06604, 39.79277], [45.18554, 39.67846], [45.17464, 39.58614], [45.21784, 39.58074], [45.23535, 39.61373], [45.30385, 39.61373], [45.29606, 39.57654], [45.46992, 39.49888], [45.70547, 39.60174], [45.80804, 39.56716], [45.83, 39.46487], [45.79225, 39.3695], [45.99774, 39.28931], [46.02303, 39.09978], [46.06973, 39.0744], [46.14785, 38.84206], [46.20601, 38.85262], [46.34059, 38.92076], [46.53497, 38.86548], [46.51805, 38.94982], [46.54296, 39.07078], [46.44022, 39.19636], [46.52584, 39.18912], [46.54141, 39.15895], [46.58032, 39.21204], [46.63481, 39.23013], [46.56476, 39.24942], [46.50093, 39.33736], [46.43244, 39.35181], [46.37795, 39.42039], [46.4013, 39.45405], [46.53051, 39.47809], [46.51027, 39.52373], [46.57721, 39.54414], [46.57098, 39.56694], [46.52117, 39.58734], [46.42465, 39.57534], [46.40286, 39.63651], [46.18493, 39.60533], [45.96543, 39.78859], [45.82533, 39.82925], [45.7833, 39.9475], [45.60895, 39.97733], [45.59806, 40.0131], [45.78642, 40.03218], [45.83779, 39.98925], [45.97944, 40.181], [45.95609, 40.27846], [45.65098, 40.37696], [45.42994, 40.53804], [45.45484, 40.57707], [45.35366, 40.65979], [45.4206, 40.7424], [45.55914, 40.78366], [45.60584, 40.87436], [45.40814, 40.97904], [45.44083, 41.01663], [45.39725, 41.02603], [45.35677, 40.99784], [45.28859, 41.03757], [45.26162, 41.0228], [45.25897, 41.0027], [45.1994, 41.04518], [45.16493, 41.05068], [45.1634, 41.08082], [45.1313, 41.09369], [45.12923, 41.06059], [45.06784, 41.05379], [45.08028, 41.10917], [45.19942, 41.13299], [45.1969, 41.168], [45.11811, 41.19967], [45.05201, 41.19211], [45.02932, 41.2101], [45.05497, 41.2464], [45.0133, 41.29747]], [[45.21324, 40.9817], [45.21219, 40.99001], [45.20518, 40.99348], [45.19312, 40.98998], [45.18382, 41.0066], [45.20625, 41.01484], [45.23487, 41.00226], [45.23095, 40.97828], [45.21324, 40.9817]], [[45.00864, 41.03411], [44.9903, 41.05657], [44.96031, 41.06345], [44.95383, 41.07553], [44.97169, 41.09176], [45.00864, 41.09407], [45.03406, 41.07931], [45.04517, 41.06653], [45.03792, 41.03938], [45.00864, 41.03411]]], [[[45.50279, 40.58424], [45.56071, 40.64765], [45.51825, 40.67382], [45.47927, 40.65023], [45.50279, 40.58424]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AO\", iso1A3: \"AGO\", iso1N3: \"024\", wikidata: \"Q916\", nameEn: \"Angola\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"244\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[16.55507, -5.85631], [13.04371, -5.87078], [12.42245, -6.07585], [11.95767, -5.94705], [12.20376, -5.76338], [12.26557, -5.74031], [12.52318, -5.74353], [12.52301, -5.17481], [12.53599, -5.1618], [12.53586, -5.14658], [12.51589, -5.1332], [12.49815, -5.14058], [12.46297, -5.09408], [12.60251, -5.01715], [12.63465, -4.94632], [12.70868, -4.95505], [12.8733, -4.74346], [13.11195, -4.67745], [13.09648, -4.63739], [12.91489, -4.47907], [12.87096, -4.40315], [12.76844, -4.38709], [12.64835, -4.55937], [12.40964, -4.60609], [12.32324, -4.78415], [12.25587, -4.79437], [12.20901, -4.75642], [12.16068, -4.90089], [12.00924, -5.02627], [11.50888, -5.33417], [10.5065, -17.25284], [11.75063, -17.25013], [12.07076, -17.15165], [12.52111, -17.24495], [12.97145, -16.98567], [13.36212, -16.98048], [13.95896, -17.43141], [14.28743, -17.38814], [18.39229, -17.38927], [18.84226, -17.80375], [21.14283, -17.94318], [21.42741, -18.02787], [23.47474, -17.62877], [23.20038, -17.47563], [22.17217, -16.50269], [22.00323, -16.18028], [21.97988, -13.00148], [24.03339, -12.99091], [23.90937, -12.844], [24.06672, -12.29058], [23.98804, -12.13149], [24.02603, -11.15368], [24.00027, -10.89356], [23.86868, -11.02856], [23.45631, -10.946], [23.16602, -11.10577], [22.54205, -11.05784], [22.25951, -11.24911], [22.17954, -10.85884], [22.32604, -10.76291], [22.19039, -9.94628], [21.84856, -9.59871], [21.79824, -7.29628], [20.56263, -7.28566], [20.61689, -6.90876], [20.31846, -6.91953], [20.30218, -6.98955], [19.5469, -7.00195], [19.33698, -7.99743], [18.33635, -8.00126], [17.5828, -8.13784], [16.96282, -7.21787], [16.55507, -5.85631]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AQ\", iso1A3: \"ATA\", iso1N3: \"010\", wikidata: \"Q51\", nameEn: \"Antarctica\", level: \"region\", callingCodes: [\"672\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[180, -60], [-180, -60], [-180, -90], [180, -90], [180, -60]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AR\", iso1A3: \"ARG\", iso1N3: \"032\", wikidata: \"Q414\", nameEn: \"Argentina\", aliases: [\"RA\"], groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"54\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-72.31343, -50.58411], [-72.33873, -51.59954], [-71.99889, -51.98018], [-69.97824, -52.00845], [-68.41683, -52.33516], [-68.60702, -52.65781], [-68.60733, -54.9125], [-68.01394, -54.8753], [-67.46182, -54.92205], [-67.11046, -54.94199], [-66.07313, -55.19618], [-63.67376, -55.11859], [-54.78916, -36.21945], [-57.83001, -34.69099], [-58.34425, -34.15035], [-58.44442, -33.84033], [-58.40475, -33.11777], [-58.1224, -32.98842], [-58.22362, -32.52416], [-58.10036, -32.25338], [-58.20252, -31.86966], [-58.00076, -31.65016], [-58.0023, -31.53084], [-58.07569, -31.44916], [-57.98127, -31.3872], [-57.9908, -31.34924], [-57.86729, -31.06352], [-57.89476, -30.95994], [-57.8024, -30.77193], [-57.89115, -30.49572], [-57.64859, -30.35095], [-57.61478, -30.25165], [-57.65132, -30.19229], [-57.09386, -29.74211], [-56.81251, -29.48154], [-56.62789, -29.18073], [-56.57295, -29.11357], [-56.54171, -29.11447], [-56.05265, -28.62651], [-56.00458, -28.60421], [-56.01729, -28.51223], [-55.65418, -28.18304], [-55.6262, -28.17124], [-55.33303, -27.94661], [-55.16872, -27.86224], [-55.1349, -27.89759], [-54.90805, -27.73149], [-54.90159, -27.63132], [-54.67657, -27.57214], [-54.50416, -27.48232], [-54.41888, -27.40882], [-54.19268, -27.30751], [-54.19062, -27.27639], [-54.15978, -27.2889], [-53.80144, -27.09844], [-53.73372, -26.6131], [-53.68269, -26.33359], [-53.64505, -26.28089], [-53.64186, -26.25976], [-53.64632, -26.24798], [-53.63881, -26.25075], [-53.63739, -26.2496], [-53.65237, -26.23289], [-53.65018, -26.19501], [-53.73968, -26.10012], [-53.73391, -26.07006], [-53.7264, -26.0664], [-53.73086, -26.05842], [-53.73511, -26.04211], [-53.83691, -25.94849], [-53.90831, -25.55513], [-54.52926, -25.62846], [-54.5502, -25.58915], [-54.59398, -25.59224], [-54.62063, -25.91213], [-54.60664, -25.9691], [-54.67359, -25.98607], [-54.69333, -26.37705], [-54.70732, -26.45099], [-54.80868, -26.55669], [-55.00584, -26.78754], [-55.06351, -26.80195], [-55.16948, -26.96068], [-55.25243, -26.93808], [-55.39611, -26.97679], [-55.62322, -27.1941], [-55.59094, -27.32444], [-55.74475, -27.44485], [-55.89195, -27.3467], [-56.18313, -27.29851], [-56.85337, -27.5165], [-58.04205, -27.2387], [-58.59549, -27.29973], [-58.65321, -27.14028], [-58.3198, -26.83443], [-58.1188, -26.16704], [-57.87176, -25.93604], [-57.57431, -25.47269], [-57.80821, -25.13863], [-58.25492, -24.92528], [-58.33055, -24.97099], [-59.33886, -24.49935], [-59.45482, -24.34787], [-60.03367, -24.00701], [-60.28163, -24.04436], [-60.99754, -23.80934], [-61.0782, -23.62932], [-61.9756, -23.0507], [-62.22768, -22.55807], [-62.51761, -22.37684], [-62.64455, -22.25091], [-62.8078, -22.12534], [-62.81124, -21.9987], [-63.66482, -21.99918], [-63.68113, -22.0544], [-63.70963, -21.99934], [-63.93287, -21.99934], [-64.22918, -22.55807], [-64.31489, -22.88824], [-64.35108, -22.73282], [-64.4176, -22.67692], [-64.58888, -22.25035], [-64.67174, -22.18957], [-64.90014, -22.12136], [-64.99524, -22.08255], [-65.47435, -22.08908], [-65.57743, -22.07675], [-65.58694, -22.09794], [-65.61166, -22.09504], [-65.7467, -22.10105], [-65.9261, -21.93335], [-66.04832, -21.9187], [-66.03836, -21.84829], [-66.24077, -21.77837], [-66.29714, -22.08741], [-66.7298, -22.23644], [-67.18382, -22.81525], [-66.99632, -22.99839], [-67.33563, -24.04237], [-68.24825, -24.42596], [-68.56909, -24.69831], [-68.38372, -25.08636], [-68.57622, -25.32505], [-68.38372, -26.15353], [-68.56909, -26.28146], [-68.59048, -26.49861], [-68.27677, -26.90626], [-68.43363, -27.08414], [-68.77586, -27.16029], [-69.22504, -27.95042], [-69.66709, -28.44055], [-69.80969, -29.07185], [-69.99507, -29.28351], [-69.8596, -30.26131], [-70.14479, -30.36595], [-70.55832, -31.51559], [-69.88099, -33.34489], [-69.87386, -34.13344], [-70.49416, -35.24145], [-70.38008, -36.02375], [-70.95047, -36.4321], [-71.24279, -37.20264], [-70.89532, -38.6923], [-71.37826, -38.91474], [-71.92726, -40.72714], [-71.74901, -42.11711], [-72.15541, -42.15941], [-72.14828, -42.85321], [-71.64206, -43.64774], [-71.81318, -44.38097], [-71.16436, -44.46244], [-71.26418, -44.75684], [-72.06985, -44.81756], [-71.35687, -45.22075], [-71.75614, -45.61611], [-71.68577, -46.55385], [-71.94152, -47.13595], [-72.50478, -47.80586], [-72.27662, -48.28727], [-72.54042, -48.52392], [-72.56894, -48.81116], [-73.09655, -49.14342], [-73.45156, -49.79461], [-73.55259, -49.92488], [-73.15765, -50.78337], [-72.31343, -50.58411]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AS\", iso1A3: \"ASM\", iso1N3: \"016\", wikidata: \"Q16641\", nameEn: \"American Samoa\", aliases: [\"US-AS\"], country: \"US\", groups: [\"Q1352230\", \"061\", \"009\", \"UN\"], roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1 684\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-171.39864, -10.21587], [-170.99605, -15.1275], [-166.32598, -15.26169], [-171.39864, -10.21587]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AT\", iso1A3: \"AUT\", iso1N3: \"040\", wikidata: \"Q40\", nameEn: \"Austria\", groups: [\"EU\", \"155\", \"150\", \"UN\"], callingCodes: [\"43\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[15.34823, 48.98444], [15.28305, 48.98831], [15.26177, 48.95766], [15.16358, 48.94278], [15.15534, 48.99056], [14.99878, 49.01444], [14.97612, 48.96983], [14.98917, 48.90082], [14.95072, 48.79101], [14.98032, 48.77959], [14.9782, 48.7766], [14.98112, 48.77524], [14.9758, 48.76857], [14.95641, 48.75915], [14.94773, 48.76268], [14.81545, 48.7874], [14.80821, 48.77711], [14.80584, 48.73489], [14.72756, 48.69502], [14.71794, 48.59794], [14.66762, 48.58215], [14.60808, 48.62881], [14.56139, 48.60429], [14.4587, 48.64695], [14.43076, 48.58855], [14.33909, 48.55852], [14.20691, 48.5898], [14.09104, 48.5943], [14.01482, 48.63788], [14.06151, 48.66873], [13.84023, 48.76988], [13.82266, 48.75544], [13.81863, 48.73257], [13.79337, 48.71375], [13.81791, 48.69832], [13.81283, 48.68426], [13.81901, 48.6761], [13.82609, 48.62345], [13.80038, 48.59487], [13.80519, 48.58026], [13.76921, 48.55324], [13.7513, 48.5624], [13.74816, 48.53058], [13.72802, 48.51208], [13.66113, 48.53558], [13.65186, 48.55092], [13.62508, 48.55501], [13.59705, 48.57013], [13.57535, 48.55912], [13.51291, 48.59023], [13.50131, 48.58091], [13.50663, 48.57506], [13.46967, 48.55157], [13.45214, 48.56472], [13.43695, 48.55776], [13.45727, 48.51092], [13.42527, 48.45711], [13.43929, 48.43386], [13.40709, 48.37292], [13.30897, 48.31575], [13.26039, 48.29422], [13.18093, 48.29577], [13.126, 48.27867], [13.0851, 48.27711], [13.02083, 48.25689], [12.95306, 48.20629], [12.87126, 48.20318], [12.84475, 48.16556], [12.836, 48.1647], [12.8362, 48.15876], [12.82673, 48.15245], [12.80676, 48.14979], [12.78595, 48.12445], [12.7617, 48.12796], [12.74973, 48.10885], [12.76141, 48.07373], [12.8549, 48.01122], [12.87476, 47.96195], [12.91683, 47.95647], [12.9211, 47.95135], [12.91985, 47.94069], [12.92668, 47.93879], [12.93419, 47.94063], [12.93642, 47.94436], [12.93886, 47.94046], [12.94163, 47.92927], [13.00588, 47.84374], [12.98543, 47.82896], [12.96311, 47.79957], [12.93202, 47.77302], [12.94371, 47.76281], [12.9353, 47.74788], [12.91711, 47.74026], [12.90274, 47.72513], [12.91333, 47.7178], [12.92969, 47.71094], [12.98578, 47.7078], [13.01382, 47.72116], [13.07692, 47.68814], [13.09562, 47.63304], [13.06407, 47.60075], [13.06641, 47.58577], [13.04537, 47.58183], [13.05355, 47.56291], [13.03252, 47.53373], [13.04537, 47.49426], [12.9998, 47.46267], [12.98344, 47.48716], [12.9624, 47.47452], [12.85256, 47.52741], [12.84672, 47.54556], [12.80699, 47.54477], [12.77427, 47.58025], [12.82101, 47.61493], [12.76492, 47.64485], [12.77777, 47.66689], [12.7357, 47.6787], [12.6071, 47.6741], [12.57438, 47.63238], [12.53816, 47.63553], [12.50076, 47.62293], [12.44117, 47.6741], [12.43883, 47.6977], [12.37222, 47.68433], [12.336, 47.69534], [12.27991, 47.68827], [12.26004, 47.67725], [12.24017, 47.69534], [12.26238, 47.73544], [12.2542, 47.7433], [12.22571, 47.71776], [12.18303, 47.70065], [12.16217, 47.70105], [12.16769, 47.68167], [12.18347, 47.66663], [12.18507, 47.65984], [12.19895, 47.64085], [12.20801, 47.61082], [12.20398, 47.60667], [12.18568, 47.6049], [12.17737, 47.60121], [12.18145, 47.61019], [12.17824, 47.61506], [12.13734, 47.60639], [12.05788, 47.61742], [12.02282, 47.61033], [12.0088, 47.62451], [11.85572, 47.60166], [11.84052, 47.58354], [11.63934, 47.59202], [11.60681, 47.57881], [11.58811, 47.55515], [11.58578, 47.52281], [11.52618, 47.50939], [11.4362, 47.51413], [11.38128, 47.47465], [11.4175, 47.44621], [11.33804, 47.44937], [11.29597, 47.42566], [11.27844, 47.39956], [11.22002, 47.3964], [11.25157, 47.43277], [11.20482, 47.43198], [11.12536, 47.41222], [11.11835, 47.39719], [10.97111, 47.39561], [10.97111, 47.41617], [10.98513, 47.42882], [10.92437, 47.46991], [10.93839, 47.48018], [10.90918, 47.48571], [10.87061, 47.4786], [10.86945, 47.5015], [10.91268, 47.51334], [10.88814, 47.53701], [10.77596, 47.51729], [10.7596, 47.53228], [10.6965, 47.54253], [10.68832, 47.55752], [10.63456, 47.5591], [10.60337, 47.56755], [10.56912, 47.53584], [10.48849, 47.54057], [10.47329, 47.58552], [10.43473, 47.58394], [10.44992, 47.5524], [10.4324, 47.50111], [10.44291, 47.48453], [10.46278, 47.47901], [10.47446, 47.43318], [10.4359, 47.41183], [10.4324, 47.38494], [10.39851, 47.37623], [10.33424, 47.30813], [10.23257, 47.27088], [10.17531, 47.27167], [10.17648, 47.29149], [10.2147, 47.31014], [10.19998, 47.32832], [10.23757, 47.37609], [10.22774, 47.38904], [10.2127, 47.38019], [10.17648, 47.38889], [10.16362, 47.36674], [10.11805, 47.37228], [10.09819, 47.35724], [10.06897, 47.40709], [10.1052, 47.4316], [10.09001, 47.46005], [10.07131, 47.45531], [10.03859, 47.48927], [10.00003, 47.48216], [9.96029, 47.53899], [9.92407, 47.53111], [9.87733, 47.54688], [9.87499, 47.52953], [9.8189, 47.54688], [9.82591, 47.58158], [9.80254, 47.59419], [9.76748, 47.5934], [9.72736, 47.53457], [9.55125, 47.53629], [9.56312, 47.49495], [9.58208, 47.48344], [9.59482, 47.46305], [9.60205, 47.46165], [9.60484, 47.46358], [9.60841, 47.47178], [9.62158, 47.45858], [9.62475, 47.45685], [9.6423, 47.45599], [9.65728, 47.45383], [9.65863, 47.44847], [9.64483, 47.43842], [9.6446, 47.43233], [9.65043, 47.41937], [9.65136, 47.40504], [9.6629, 47.39591], [9.67334, 47.39191], [9.67445, 47.38429], [9.6711, 47.37824], [9.66243, 47.37136], [9.65427, 47.36824], [9.62476, 47.36639], [9.59978, 47.34671], [9.58513, 47.31334], [9.55857, 47.29919], [9.54773, 47.2809], [9.53116, 47.27029], [9.56766, 47.24281], [9.55176, 47.22585], [9.56981, 47.21926], [9.58264, 47.20673], [9.56539, 47.17124], [9.62623, 47.14685], [9.63395, 47.08443], [9.61216, 47.07732], [9.60717, 47.06091], [9.87935, 47.01337], [9.88266, 46.93343], [9.98058, 46.91434], [10.10715, 46.84296], [10.22675, 46.86942], [10.24128, 46.93147], [10.30031, 46.92093], [10.36933, 47.00212], [10.48376, 46.93891], [10.47197, 46.85698], [10.54783, 46.84505], [10.66405, 46.87614], [10.75753, 46.82258], [10.72974, 46.78972], [11.00764, 46.76896], [11.10618, 46.92966], [11.33355, 46.99862], [11.50739, 47.00644], [11.74789, 46.98484], [12.19254, 47.09331], [12.21781, 47.03996], [12.11675, 47.01241], [12.2006, 46.88854], [12.27591, 46.88651], [12.38708, 46.71529], [12.59992, 46.6595], [12.94445, 46.60401], [13.27627, 46.56059], [13.64088, 46.53438], [13.7148, 46.5222], [13.89837, 46.52331], [14.00422, 46.48474], [14.04002, 46.49117], [14.12097, 46.47724], [14.15989, 46.43327], [14.28326, 46.44315], [14.314, 46.43327], [14.42608, 46.44614], [14.45877, 46.41717], [14.52176, 46.42617], [14.56463, 46.37208], [14.5942, 46.43434], [14.66892, 46.44936], [14.72185, 46.49974], [14.81836, 46.51046], [14.83549, 46.56614], [14.86419, 46.59411], [14.87129, 46.61], [14.92283, 46.60848], [14.96002, 46.63459], [14.98024, 46.6009], [15.01451, 46.641], [15.14215, 46.66131], [15.23711, 46.63994], [15.41235, 46.65556], [15.45514, 46.63697], [15.46906, 46.61321], [15.54431, 46.6312], [15.55333, 46.64988], [15.54533, 46.66985], [15.59826, 46.68908], [15.62317, 46.67947], [15.63255, 46.68069], [15.6365, 46.6894], [15.6543, 46.69228], [15.6543, 46.70616], [15.67411, 46.70735], [15.69523, 46.69823], [15.72279, 46.69548], [15.73823, 46.70011], [15.76771, 46.69863], [15.78518, 46.70712], [15.8162, 46.71897], [15.87691, 46.7211], [15.94864, 46.68769], [15.98512, 46.68463], [15.99988, 46.67947], [16.04036, 46.6549], [16.04347, 46.68694], [16.02808, 46.71094], [15.99769, 46.7266], [15.98432, 46.74991], [15.99126, 46.78199], [15.99054, 46.82772], [16.05786, 46.83927], [16.10983, 46.867], [16.19904, 46.94134], [16.22403, 46.939], [16.27594, 46.9643], [16.28202, 47.00159], [16.51369, 47.00084], [16.43936, 47.03548], [16.52176, 47.05747], [16.46134, 47.09395], [16.52863, 47.13974], [16.44932, 47.14418], [16.46442, 47.16845], [16.4523, 47.18812], [16.42801, 47.18422], [16.41739, 47.20649], [16.43663, 47.21127], [16.44142, 47.25079], [16.47782, 47.25918], [16.45104, 47.41181], [16.49908, 47.39416], [16.52414, 47.41007], [16.57152, 47.40868], [16.6718, 47.46139], [16.64821, 47.50155], [16.71059, 47.52692], [16.64193, 47.63114], [16.58699, 47.61772], [16.4222, 47.66537], [16.55129, 47.72268], [16.53514, 47.73837], [16.54779, 47.75074], [16.61183, 47.76171], [16.65679, 47.74197], [16.72089, 47.73469], [16.7511, 47.67878], [16.82938, 47.68432], [16.86509, 47.72268], [16.87538, 47.68895], [17.08893, 47.70928], [17.05048, 47.79377], [17.07039, 47.81129], [17.00997, 47.86245], [17.08275, 47.87719], [17.11022, 47.92461], [17.09786, 47.97336], [17.16001, 48.00636], [17.07039, 48.0317], [17.09168, 48.09366], [17.05735, 48.14179], [17.02919, 48.13996], [16.97701, 48.17385], [16.89461, 48.31332], [16.90903, 48.32519], [16.84243, 48.35258], [16.83317, 48.38138], [16.83588, 48.3844], [16.8497, 48.38321], [16.85204, 48.44968], [16.94611, 48.53614], [16.93955, 48.60371], [16.90354, 48.71541], [16.79779, 48.70998], [16.71883, 48.73806], [16.68518, 48.7281], [16.67008, 48.77699], [16.46134, 48.80865], [16.40915, 48.74576], [16.37345, 48.729], [16.06034, 48.75436], [15.84404, 48.86921], [15.78087, 48.87644], [15.75341, 48.8516], [15.6921, 48.85973], [15.61622, 48.89541], [15.51357, 48.91549], [15.48027, 48.94481], [15.34823, 48.98444]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AU\", iso1A3: \"AUS\", iso1N3: \"036\", wikidata: \"Q408\", nameEn: \"Australia\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"AW\", iso1A3: \"ABW\", iso1N3: \"533\", wikidata: \"Q21203\", nameEn: \"Aruba\", aliases: [\"NL-AW\"], country: \"NL\", groups: [\"Q1451600\", \"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"297\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-70.00823, 12.98375], [-70.35625, 12.58277], [-69.60231, 12.17], [-70.00823, 12.98375]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AX\", iso1A3: \"ALA\", iso1N3: \"248\", wikidata: \"Q5689\", nameEn: \"\\xC5land Islands\", country: \"FI\", groups: [\"EU\", \"154\", \"150\", \"UN\"], callingCodes: [\"358 18\", \"358 457\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[19.08191, 60.19152], [20.5104, 59.15546], [21.35468, 59.67511], [21.02509, 60.12142], [21.08159, 60.20167], [21.15143, 60.54555], [20.96741, 60.71528], [19.23413, 60.61414], [19.08191, 60.19152]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AZ\", iso1A3: \"AZE\", iso1N3: \"031\", wikidata: \"Q227\", nameEn: \"Azerbaijan\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"994\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[46.42738, 41.91323], [46.3984, 41.84399], [46.30863, 41.79133], [46.23962, 41.75811], [46.20538, 41.77205], [46.17891, 41.72094], [46.19759, 41.62327], [46.24429, 41.59883], [46.26531, 41.63339], [46.28182, 41.60089], [46.3253, 41.60912], [46.34039, 41.5947], [46.34126, 41.57454], [46.29794, 41.5724], [46.33925, 41.4963], [46.40307, 41.48464], [46.4669, 41.43331], [46.63658, 41.37727], [46.72375, 41.28609], [46.66148, 41.20533], [46.63969, 41.09515], [46.55096, 41.1104], [46.48558, 41.0576], [46.456, 41.09984], [46.37661, 41.10805], [46.27698, 41.19011], [46.13221, 41.19479], [45.95786, 41.17956], [45.80842, 41.2229], [45.69946, 41.29545], [45.75705, 41.35157], [45.71035, 41.36208], [45.68389, 41.3539], [45.45973, 41.45898], [45.4006, 41.42402], [45.31352, 41.47168], [45.26285, 41.46433], [45.1797, 41.42231], [45.09867, 41.34065], [45.0133, 41.29747], [45.05497, 41.2464], [45.02932, 41.2101], [45.05201, 41.19211], [45.11811, 41.19967], [45.1969, 41.168], [45.19942, 41.13299], [45.08028, 41.10917], [45.06784, 41.05379], [45.12923, 41.06059], [45.1313, 41.09369], [45.1634, 41.08082], [45.16493, 41.05068], [45.1994, 41.04518], [45.25897, 41.0027], [45.26162, 41.0228], [45.28859, 41.03757], [45.35677, 40.99784], [45.39725, 41.02603], [45.44083, 41.01663], [45.40814, 40.97904], [45.60584, 40.87436], [45.55914, 40.78366], [45.4206, 40.7424], [45.35366, 40.65979], [45.45484, 40.57707], [45.42994, 40.53804], [45.65098, 40.37696], [45.95609, 40.27846], [45.97944, 40.181], [45.83779, 39.98925], [45.78642, 40.03218], [45.59806, 40.0131], [45.60895, 39.97733], [45.7833, 39.9475], [45.82533, 39.82925], [45.96543, 39.78859], [46.18493, 39.60533], [46.40286, 39.63651], [46.42465, 39.57534], [46.52117, 39.58734], [46.57098, 39.56694], [46.57721, 39.54414], [46.51027, 39.52373], [46.53051, 39.47809], [46.4013, 39.45405], [46.37795, 39.42039], [46.43244, 39.35181], [46.50093, 39.33736], [46.56476, 39.24942], [46.63481, 39.23013], [46.58032, 39.21204], [46.54141, 39.15895], [46.52584, 39.18912], [46.44022, 39.19636], [46.54296, 39.07078], [46.51805, 38.94982], [46.53497, 38.86548], [46.75752, 39.03231], [46.83822, 39.13143], [46.92539, 39.16644], [46.95341, 39.13505], [47.05771, 39.20143], [47.05927, 39.24846], [47.31301, 39.37492], [47.38978, 39.45999], [47.50099, 39.49615], [47.84774, 39.66285], [47.98977, 39.70999], [48.34264, 39.42935], [48.37385, 39.37584], [48.15984, 39.30028], [48.12404, 39.25208], [48.15361, 39.19419], [48.31239, 39.09278], [48.33884, 39.03022], [48.28437, 38.97186], [48.08627, 38.94434], [48.07734, 38.91616], [48.01409, 38.90333], [48.02581, 38.82705], [48.24773, 38.71883], [48.3146, 38.59958], [48.45084, 38.61013], [48.58793, 38.45076], [48.62217, 38.40198], [48.70001, 38.40564], [48.78979, 38.45026], [48.81072, 38.44853], [48.84969, 38.45015], [48.88288, 38.43975], [52.39847, 39.43556], [48.80971, 41.95365], [48.5867, 41.84306], [48.55078, 41.77917], [48.42301, 41.65444], [48.40277, 41.60441], [48.2878, 41.56221], [48.22064, 41.51472], [48.07587, 41.49957], [47.87973, 41.21798], [47.75831, 41.19455], [47.62288, 41.22969], [47.54504, 41.20275], [47.49004, 41.26366], [47.34579, 41.27884], [47.10762, 41.59044], [47.03757, 41.55434], [46.99554, 41.59743], [47.00955, 41.63583], [46.8134, 41.76252], [46.75269, 41.8623], [46.58924, 41.80547], [46.5332, 41.87389], [46.42738, 41.91323]], [[45.50279, 40.58424], [45.47927, 40.65023], [45.51825, 40.67382], [45.56071, 40.64765], [45.50279, 40.58424]]], [[[45.00864, 41.03411], [45.03792, 41.03938], [45.04517, 41.06653], [45.03406, 41.07931], [45.00864, 41.09407], [44.97169, 41.09176], [44.95383, 41.07553], [44.96031, 41.06345], [44.9903, 41.05657], [45.00864, 41.03411]]], [[[45.21324, 40.9817], [45.23095, 40.97828], [45.23487, 41.00226], [45.20625, 41.01484], [45.18382, 41.0066], [45.19312, 40.98998], [45.20518, 40.99348], [45.21219, 40.99001], [45.21324, 40.9817]]], [[[45.46992, 39.49888], [45.29606, 39.57654], [45.30385, 39.61373], [45.23535, 39.61373], [45.21784, 39.58074], [45.17464, 39.58614], [45.18554, 39.67846], [45.06604, 39.79277], [44.92869, 39.72157], [44.88354, 39.74432], [44.75779, 39.7148], [44.80977, 39.65768], [44.81043, 39.62677], [44.88916, 39.59653], [44.96746, 39.42998], [45.05932, 39.36435], [45.08751, 39.35052], [45.16168, 39.21952], [45.30489, 39.18333], [45.40148, 39.09007], [45.40452, 39.07224], [45.44811, 39.04927], [45.44966, 38.99243], [45.6131, 38.964], [45.6155, 38.94304], [45.65172, 38.95199], [45.83883, 38.90768], [45.90266, 38.87739], [45.94624, 38.89072], [46.00228, 38.87376], [46.06766, 38.87861], [46.14785, 38.84206], [46.06973, 39.0744], [46.02303, 39.09978], [45.99774, 39.28931], [45.79225, 39.3695], [45.83, 39.46487], [45.80804, 39.56716], [45.70547, 39.60174], [45.46992, 39.49888]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BA\", iso1A3: \"BIH\", iso1N3: \"070\", wikidata: \"Q225\", nameEn: \"Bosnia and Herzegovina\", groups: [\"039\", \"150\", \"UN\"], callingCodes: [\"387\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[17.84826, 45.04489], [17.66571, 45.13408], [17.59104, 45.10816], [17.51469, 45.10791], [17.47589, 45.12656], [17.45615, 45.12523], [17.4498, 45.16119], [17.41229, 45.13335], [17.33573, 45.14521], [17.32092, 45.16246], [17.26815, 45.18444], [17.25131, 45.14957], [17.24325, 45.146], [17.18438, 45.14764], [17.0415, 45.20759], [16.9385, 45.22742], [16.92405, 45.27607], [16.83804, 45.18951], [16.81137, 45.18434], [16.78219, 45.19002], [16.74845, 45.20393], [16.64962, 45.20714], [16.60194, 45.23042], [16.56559, 45.22307], [16.5501, 45.2212], [16.52982, 45.22713], [16.49155, 45.21153], [16.4634, 45.14522], [16.40023, 45.1147], [16.38309, 45.05955], [16.38219, 45.05139], [16.3749, 45.05206], [16.35863, 45.03529], [16.35404, 45.00241], [16.29036, 44.99732], [16.12153, 45.09616], [15.98412, 45.23088], [15.83512, 45.22459], [15.76371, 45.16508], [15.78842, 45.11519], [15.74585, 45.0638], [15.78568, 44.97401], [15.74723, 44.96818], [15.76096, 44.87045], [15.79472, 44.8455], [15.72584, 44.82334], [15.8255, 44.71501], [15.89348, 44.74964], [16.05828, 44.61538], [16.00884, 44.58605], [16.03012, 44.55572], [16.10566, 44.52586], [16.16814, 44.40679], [16.12969, 44.38275], [16.21346, 44.35231], [16.18688, 44.27012], [16.36864, 44.08263], [16.43662, 44.07523], [16.43629, 44.02826], [16.50528, 44.0244], [16.55472, 43.95326], [16.70922, 43.84887], [16.75316, 43.77157], [16.80736, 43.76011], [17.00585, 43.58037], [17.15828, 43.49376], [17.24411, 43.49376], [17.29699, 43.44542], [17.25579, 43.40353], [17.286, 43.33065], [17.46986, 43.16559], [17.64268, 43.08595], [17.70879, 42.97223], [17.5392, 42.92787], [17.6444, 42.88641], [17.68151, 42.92725], [17.7948, 42.89556], [17.80854, 42.9182], [17.88201, 42.83668], [18.24318, 42.6112], [18.36197, 42.61423], [18.43735, 42.55921], [18.49778, 42.58409], [18.53751, 42.57376], [18.55504, 42.58409], [18.52232, 42.62279], [18.57373, 42.64429], [18.54841, 42.68328], [18.54603, 42.69171], [18.55221, 42.69045], [18.56789, 42.72074], [18.47324, 42.74992], [18.45921, 42.81682], [18.47633, 42.85829], [18.4935, 42.86433], [18.49661, 42.89306], [18.49076, 42.95553], [18.52232, 43.01451], [18.66254, 43.03928], [18.64735, 43.14766], [18.66605, 43.2056], [18.71747, 43.2286], [18.6976, 43.25243], [18.76538, 43.29838], [18.85342, 43.32426], [18.84794, 43.33735], [18.83912, 43.34795], [18.90911, 43.36383], [18.95819, 43.32899], [18.95001, 43.29327], [19.00844, 43.24988], [19.04233, 43.30008], [19.08206, 43.29668], [19.08673, 43.31453], [19.04071, 43.397], [19.01078, 43.43854], [18.96053, 43.45042], [18.95469, 43.49367], [18.91379, 43.50299], [19.01078, 43.55806], [19.04934, 43.50384], [19.13933, 43.5282], [19.15685, 43.53943], [19.22807, 43.5264], [19.24774, 43.53061], [19.2553, 43.5938], [19.33426, 43.58833], [19.36653, 43.60921], [19.41941, 43.54056], [19.42696, 43.57987], [19.50455, 43.58385], [19.5176, 43.71403], [19.3986, 43.79668], [19.23465, 43.98764], [19.24363, 44.01502], [19.38439, 43.96611], [19.52515, 43.95573], [19.56498, 43.99922], [19.61836, 44.01464], [19.61991, 44.05254], [19.57467, 44.04716], [19.55999, 44.06894], [19.51167, 44.08158], [19.47321, 44.1193], [19.48386, 44.14332], [19.47338, 44.15034], [19.43905, 44.13088], [19.40927, 44.16722], [19.3588, 44.18353], [19.34773, 44.23244], [19.32464, 44.27185], [19.26945, 44.26957], [19.23306, 44.26097], [19.20508, 44.2917], [19.18328, 44.28383], [19.16741, 44.28648], [19.13332, 44.31492], [19.13556, 44.338], [19.11547, 44.34218], [19.1083, 44.3558], [19.11865, 44.36712], [19.10298, 44.36924], [19.10365, 44.37795], [19.10704, 44.38249], [19.10749, 44.39421], [19.11785, 44.40313], [19.14681, 44.41463], [19.14837, 44.45253], [19.12278, 44.50132], [19.13369, 44.52521], [19.16699, 44.52197], [19.26388, 44.65412], [19.32543, 44.74058], [19.36722, 44.88164], [19.18183, 44.92055], [19.01994, 44.85493], [18.8704, 44.85097], [18.76347, 44.90669], [18.76369, 44.93707], [18.80661, 44.93561], [18.78357, 44.97741], [18.65723, 45.07544], [18.47939, 45.05871], [18.41896, 45.11083], [18.32077, 45.1021], [18.24387, 45.13699], [18.1624, 45.07654], [18.03121, 45.12632], [18.01594, 45.15163], [17.99479, 45.14958], [17.97834, 45.13831], [17.97336, 45.12245], [17.93706, 45.08016], [17.87148, 45.04645], [17.84826, 45.04489]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BB\", iso1A3: \"BRB\", iso1N3: \"052\", wikidata: \"Q244\", nameEn: \"Barbados\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", callingCodes: [\"1 246\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-58.56442, 13.24471], [-59.80731, 13.87556], [-59.82929, 12.70644], [-58.56442, 13.24471]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BD\", iso1A3: \"BGD\", iso1N3: \"050\", wikidata: \"Q902\", nameEn: \"Bangladesh\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"880\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[89.15869, 26.13708], [89.08899, 26.38845], [88.95612, 26.4564], [88.92357, 26.40711], [88.91321, 26.37984], [89.05328, 26.2469], [88.85004, 26.23211], [88.78961, 26.31093], [88.67837, 26.26291], [88.69485, 26.38353], [88.62144, 26.46783], [88.4298, 26.54489], [88.41196, 26.63837], [88.33093, 26.48929], [88.35153, 26.45241], [88.36938, 26.48683], [88.48749, 26.45855], [88.51649, 26.35923], [88.35153, 26.29123], [88.34757, 26.22216], [88.1844, 26.14417], [88.16581, 26.0238], [88.08804, 25.91334], [88.13138, 25.78773], [88.242, 25.80811], [88.45103, 25.66245], [88.4559, 25.59227], [88.677, 25.46959], [88.81296, 25.51546], [88.85278, 25.34679], [89.01105, 25.30303], [89.00463, 25.26583], [88.94067, 25.18534], [88.44766, 25.20149], [88.46277, 25.07468], [88.33917, 24.86803], [88.27325, 24.88796], [88.21832, 24.96642], [88.14004, 24.93529], [88.15515, 24.85806], [88.00683, 24.66477], [88.08786, 24.63232], [88.12296, 24.51301], [88.50934, 24.32474], [88.68801, 24.31464], [88.74841, 24.1959], [88.6976, 24.14703], [88.73743, 23.91751], [88.66189, 23.87607], [88.58087, 23.87105], [88.56507, 23.64044], [88.74841, 23.47361], [88.79351, 23.50535], [88.79254, 23.46028], [88.71133, 23.2492], [88.99148, 23.21134], [88.86377, 23.08759], [88.88327, 23.03885], [88.87063, 22.95235], [88.96713, 22.83346], [88.9151, 22.75228], [88.94614, 22.66941], [88.9367, 22.58527], [89.07114, 22.15335], [89.08044, 21.41871], [92.47409, 20.38654], [92.26071, 21.05697], [92.17752, 21.17445], [92.20087, 21.337], [92.37939, 21.47764], [92.43158, 21.37025], [92.55105, 21.3856], [92.60187, 21.24615], [92.68152, 21.28454], [92.59775, 21.6092], [92.62187, 21.87037], [92.60949, 21.97638], [92.56616, 22.13554], [92.60029, 22.1522], [92.5181, 22.71441], [92.37665, 22.9435], [92.38214, 23.28705], [92.26541, 23.70392], [92.15417, 23.73409], [92.04706, 23.64229], [91.95093, 23.73284], [91.95642, 23.47361], [91.84789, 23.42235], [91.76417, 23.26619], [91.81634, 23.08001], [91.7324, 23.00043], [91.61571, 22.93929], [91.54993, 23.01051], [91.46615, 23.2328], [91.4035, 23.27522], [91.40848, 23.07117], [91.36453, 23.06612], [91.28293, 23.37538], [91.15579, 23.6599], [91.25192, 23.83463], [91.22308, 23.89616], [91.29587, 24.0041], [91.35741, 23.99072], [91.37414, 24.10693], [91.55542, 24.08687], [91.63782, 24.1132], [91.65292, 24.22095], [91.73257, 24.14703], [91.76004, 24.23848], [91.82596, 24.22345], [91.89258, 24.14674], [91.96603, 24.3799], [92.11662, 24.38997], [92.15796, 24.54435], [92.25854, 24.9191], [92.38626, 24.86055], [92.49887, 24.88796], [92.39147, 25.01471], [92.33957, 25.07593], [92.0316, 25.1834], [91.63648, 25.12846], [91.25517, 25.20677], [90.87427, 25.15799], [90.65042, 25.17788], [90.40034, 25.1534], [90.1155, 25.22686], [89.90478, 25.31038], [89.87629, 25.28337], [89.83371, 25.29548], [89.84086, 25.31854], [89.81208, 25.37244], [89.86129, 25.61714], [89.84388, 25.70042], [89.80585, 25.82489], [89.86592, 25.93115], [89.77728, 26.04254], [89.77865, 26.08387], [89.73581, 26.15818], [89.70201, 26.15138], [89.63968, 26.22595], [89.57101, 25.9682], [89.53515, 26.00382], [89.35953, 26.0077], [89.15869, 26.13708]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BE\", iso1A3: \"BEL\", iso1N3: \"056\", wikidata: \"Q31\", nameEn: \"Belgium\", groups: [\"EU\", \"155\", \"150\", \"UN\"], callingCodes: [\"32\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[4.93295, 51.44945], [4.93909, 51.44632], [4.9524, 51.45014], [4.95244, 51.45207], [4.93295, 51.44945]]], [[[4.91493, 51.4353], [4.92652, 51.43329], [4.92952, 51.42984], [4.93986, 51.43064], [4.94265, 51.44003], [4.93471, 51.43861], [4.93416, 51.44185], [4.94025, 51.44193], [4.93544, 51.44634], [4.92879, 51.44161], [4.92815, 51.43856], [4.92566, 51.44273], [4.92811, 51.4437], [4.92287, 51.44741], [4.91811, 51.44621], [4.92227, 51.44252], [4.91935, 51.43634], [4.91493, 51.4353]]], [[[4.82946, 51.4213], [4.82409, 51.44736], [4.84139, 51.4799], [4.78803, 51.50284], [4.77321, 51.50529], [4.74578, 51.48937], [4.72935, 51.48424], [4.65442, 51.42352], [4.57489, 51.4324], [4.53521, 51.4243], [4.52846, 51.45002], [4.54675, 51.47265], [4.5388, 51.48184], [4.47736, 51.4778], [4.38122, 51.44905], [4.39747, 51.43316], [4.38064, 51.41965], [4.43777, 51.36989], [4.39292, 51.35547], [4.34086, 51.35738], [4.33265, 51.37687], [4.21923, 51.37443], [4.24024, 51.35371], [4.16721, 51.29348], [4.05165, 51.24171], [4.01957, 51.24504], [3.97889, 51.22537], [3.90125, 51.20371], [3.78783, 51.2151], [3.78999, 51.25766], [3.58939, 51.30064], [3.51502, 51.28697], [3.52698, 51.2458], [3.43488, 51.24135], [3.41704, 51.25933], [3.38289, 51.27331], [3.35847, 51.31572], [3.38696, 51.33436], [3.36263, 51.37112], [2.56575, 51.85301], [2.18458, 51.52087], [2.55904, 51.07014], [2.57551, 51.00326], [2.63074, 50.94746], [2.59093, 50.91751], [2.63331, 50.81457], [2.71165, 50.81295], [2.81056, 50.71773], [2.8483, 50.72276], [2.86985, 50.7033], [2.87937, 50.70298], [2.88504, 50.70656], [2.90069, 50.69263], [2.91036, 50.6939], [2.90873, 50.702], [2.95019, 50.75138], [2.96778, 50.75242], [3.00537, 50.76588], [3.04314, 50.77674], [3.09163, 50.77717], [3.10614, 50.78303], [3.11206, 50.79416], [3.11987, 50.79188], [3.1257, 50.78603], [3.15017, 50.79031], [3.16476, 50.76843], [3.18339, 50.74981], [3.18811, 50.74025], [3.20064, 50.73547], [3.19017, 50.72569], [3.20845, 50.71662], [3.22042, 50.71019], [3.24593, 50.71389], [3.26063, 50.70086], [3.26141, 50.69151], [3.2536, 50.68977], [3.264, 50.67668], [3.23951, 50.6585], [3.2729, 50.60718], [3.28575, 50.52724], [3.37693, 50.49538], [3.44629, 50.51009], [3.47385, 50.53397], [3.51564, 50.5256], [3.49509, 50.48885], [3.5683, 50.50192], [3.58361, 50.49049], [3.61014, 50.49568], [3.64426, 50.46275], [3.66153, 50.45165], [3.67494, 50.40239], [3.67262, 50.38663], [3.65709, 50.36873], [3.66976, 50.34563], [3.71009, 50.30305], [3.70987, 50.3191], [3.73911, 50.34809], [3.84314, 50.35219], [3.90781, 50.32814], [3.96771, 50.34989], [4.0268, 50.35793], [4.0689, 50.3254], [4.10237, 50.31247], [4.10957, 50.30234], [4.11954, 50.30425], [4.13665, 50.25609], [4.16808, 50.25786], [4.15524, 50.2833], [4.17347, 50.28838], [4.17861, 50.27443], [4.20651, 50.27333], [4.21945, 50.25539], [4.15524, 50.21103], [4.16014, 50.19239], [4.13561, 50.13078], [4.20147, 50.13535], [4.23101, 50.06945], [4.16294, 50.04719], [4.13508, 50.01976], [4.14239, 49.98034], [4.20532, 49.95803], [4.31963, 49.97043], [4.35051, 49.95315], [4.43488, 49.94122], [4.51098, 49.94659], [4.5414, 49.96911], [4.68695, 49.99685], [4.70064, 50.09384], [4.75237, 50.11314], [4.82438, 50.16878], [4.83279, 50.15331], [4.88602, 50.15182], [4.8382, 50.06738], [4.78827, 49.95609], [4.88529, 49.9236], [4.85134, 49.86457], [4.86965, 49.82271], [4.85464, 49.78995], [4.96714, 49.79872], [5.09249, 49.76193], [5.14545, 49.70287], [5.26232, 49.69456], [5.31465, 49.66846], [5.33039, 49.6555], [5.30214, 49.63055], [5.3137, 49.61225], [5.33851, 49.61599], [5.34837, 49.62889], [5.3974, 49.61596], [5.43713, 49.5707], [5.46734, 49.52648], [5.46541, 49.49825], [5.55001, 49.52729], [5.60909, 49.51228], [5.64505, 49.55146], [5.75649, 49.54321], [5.7577, 49.55915], [5.77435, 49.56298], [5.79195, 49.55228], [5.81838, 49.54777], [5.84143, 49.5533], [5.84692, 49.55663], [5.8424, 49.56082], [5.87256, 49.57539], [5.86986, 49.58756], [5.84971, 49.58674], [5.84826, 49.5969], [5.8762, 49.60898], [5.87609, 49.62047], [5.88393, 49.62802], [5.88552, 49.63507], [5.90599, 49.63853], [5.90164, 49.6511], [5.9069, 49.66377], [5.86175, 49.67862], [5.86527, 49.69291], [5.88677, 49.70951], [5.86503, 49.72739], [5.84193, 49.72161], [5.82562, 49.72395], [5.83149, 49.74729], [5.82245, 49.75048], [5.78871, 49.7962], [5.75409, 49.79239], [5.74953, 49.81428], [5.74364, 49.82058], [5.74844, 49.82435], [5.7404, 49.83452], [5.74076, 49.83823], [5.74975, 49.83933], [5.74953, 49.84709], [5.75884, 49.84811], [5.74567, 49.85368], [5.75861, 49.85631], [5.75269, 49.8711], [5.78415, 49.87922], [5.73621, 49.89796], [5.77314, 49.93646], [5.77291, 49.96056], [5.80833, 49.96451], [5.81163, 49.97142], [5.83467, 49.97823], [5.83968, 49.9892], [5.82331, 49.99662], [5.81866, 50.01286], [5.8551, 50.02683], [5.86904, 50.04614], [5.85474, 50.06342], [5.8857, 50.07824], [5.89488, 50.11476], [5.95929, 50.13295], [5.96453, 50.17259], [6.02488, 50.18283], [6.03093, 50.16362], [6.06406, 50.15344], [6.08577, 50.17246], [6.12028, 50.16374], [6.1137, 50.13668], [6.1379, 50.12964], [6.15298, 50.14126], [6.14132, 50.14971], [6.14588, 50.17106], [6.18739, 50.1822], [6.18364, 50.20815], [6.16853, 50.2234], [6.208, 50.25179], [6.28797, 50.27458], [6.29949, 50.30887], [6.32488, 50.32333], [6.35701, 50.31139], [6.40641, 50.32425], [6.40785, 50.33557], [6.3688, 50.35898], [6.34406, 50.37994], [6.36852, 50.40776], [6.37219, 50.45397], [6.34005, 50.46083], [6.3465, 50.48833], [6.30809, 50.50058], [6.26637, 50.50272], [6.22335, 50.49578], [6.20599, 50.52089], [6.19193, 50.5212], [6.18716, 50.52653], [6.19579, 50.5313], [6.19735, 50.53576], [6.17802, 50.54179], [6.17739, 50.55875], [6.20281, 50.56952], [6.22581, 50.5907], [6.24005, 50.58732], [6.24888, 50.59869], [6.2476, 50.60392], [6.26957, 50.62444], [6.17852, 50.6245], [6.11707, 50.72231], [6.04428, 50.72861], [6.0406, 50.71848], [6.0326, 50.72647], [6.03889, 50.74618], [6.01976, 50.75398], [5.97545, 50.75441], [5.95942, 50.7622], [5.89132, 50.75124], [5.89129, 50.75125], [5.88734, 50.77092], [5.84888, 50.75448], [5.84548, 50.76542], [5.80673, 50.7558], [5.77513, 50.78308], [5.76533, 50.78159], [5.74356, 50.7691], [5.73904, 50.75674], [5.72216, 50.76398], [5.69469, 50.75529], [5.68091, 50.75804], [5.70107, 50.7827], [5.68995, 50.79641], [5.70118, 50.80764], [5.65259, 50.82309], [5.64009, 50.84742], [5.64504, 50.87107], [5.67886, 50.88142], [5.69858, 50.91046], [5.71626, 50.90796], [5.72644, 50.91167], [5.72545, 50.92312], [5.74644, 50.94723], [5.75927, 50.95601], [5.74752, 50.96202], [5.72875, 50.95428], [5.71864, 50.96092], [5.76242, 50.99703], [5.77688, 51.02483], [5.75961, 51.03113], [5.77258, 51.06196], [5.79835, 51.05834], [5.79903, 51.09371], [5.82921, 51.09328], [5.83226, 51.10585], [5.8109, 51.10861], [5.80798, 51.11661], [5.85508, 51.14445], [5.82564, 51.16753], [5.77697, 51.1522], [5.77735, 51.17845], [5.74617, 51.18928], [5.70344, 51.1829], [5.65528, 51.18736], [5.65145, 51.19788], [5.5603, 51.22249], [5.5569, 51.26544], [5.515, 51.29462], [5.48476, 51.30053], [5.46519, 51.2849], [5.4407, 51.28169], [5.41672, 51.26248], [5.347, 51.27502], [5.33886, 51.26314], [5.29716, 51.26104], [5.26461, 51.26693], [5.23814, 51.26064], [5.22542, 51.26888], [5.24244, 51.30495], [5.2002, 51.32243], [5.16222, 51.31035], [5.13377, 51.31592], [5.13105, 51.34791], [5.07102, 51.39469], [5.10456, 51.43163], [5.07891, 51.4715], [5.04774, 51.47022], [5.03281, 51.48679], [5.0106, 51.47167], [5.00393, 51.44406], [4.92152, 51.39487], [4.90016, 51.41404], [4.84988, 51.41502], [4.78941, 51.41102], [4.77229, 51.41337], [4.76577, 51.43046], [4.78314, 51.43319], [4.82946, 51.4213]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BF\", iso1A3: \"BFA\", iso1N3: \"854\", wikidata: \"Q965\", nameEn: \"Burkina Faso\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"226\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[0.23859, 15.00135], [0.06588, 14.96961], [-0.24673, 15.07805], [-0.72004, 15.08655], [-1.05875, 14.7921], [-1.32166, 14.72774], [-1.68083, 14.50023], [-1.97945, 14.47709], [-1.9992, 14.19011], [-2.10223, 14.14878], [-2.47587, 14.29671], [-2.66175, 14.14713], [-2.84667, 14.05532], [-2.90831, 13.81174], [-2.88189, 13.64921], [-3.26407, 13.70699], [-3.28396, 13.5422], [-3.23599, 13.29035], [-3.43507, 13.27272], [-3.4313, 13.1588], [-3.54454, 13.1781], [-3.7911, 13.36665], [-3.96282, 13.38164], [-3.90558, 13.44375], [-3.96501, 13.49778], [-4.34477, 13.12927], [-4.21819, 12.95722], [-4.238, 12.71467], [-4.47356, 12.71252], [-4.41412, 12.31922], [-4.57703, 12.19875], [-4.54841, 12.1385], [-4.62546, 12.13204], [-4.62987, 12.06531], [-4.70692, 12.06746], [-4.72893, 12.01579], [-5.07897, 11.97918], [-5.26389, 11.84778], [-5.40258, 11.8327], [-5.26389, 11.75728], [-5.29251, 11.61715], [-5.22867, 11.60421], [-5.20665, 11.43811], [-5.25509, 11.36905], [-5.25949, 11.24816], [-5.32553, 11.21578], [-5.32994, 11.13371], [-5.49284, 11.07538], [-5.41579, 10.84628], [-5.47083, 10.75329], [-5.46643, 10.56074], [-5.51058, 10.43177], [-5.39602, 10.2929], [-5.12465, 10.29788], [-4.96453, 9.99923], [-4.96621, 9.89132], [-4.6426, 9.70696], [-4.31392, 9.60062], [-4.25999, 9.76012], [-3.69703, 9.94279], [-3.31779, 9.91125], [-3.27228, 9.84981], [-3.19306, 9.93781], [-3.16609, 9.85147], [-3.00765, 9.74019], [-2.93012, 9.57403], [-2.76494, 9.40778], [-2.68802, 9.49343], [-2.76534, 9.56589], [-2.74174, 9.83172], [-2.83108, 10.40252], [-2.94232, 10.64281], [-2.83373, 11.0067], [-0.67143, 10.99811], [-0.61937, 10.91305], [-0.44298, 11.04292], [-0.42391, 11.11661], [-0.38219, 11.12596], [-0.35955, 11.07801], [-0.28566, 11.12713], [-0.27374, 11.17157], [-0.13493, 11.14075], [0.50388, 11.01011], [0.48852, 10.98561], [0.50521, 10.98035], [0.4958, 10.93269], [0.66104, 10.99964], [0.91245, 10.99597], [0.9813, 11.08876], [1.03409, 11.04719], [1.42823, 11.46822], [2.00988, 11.42227], [2.29983, 11.68254], [2.39723, 11.89473], [2.05785, 12.35539], [2.26349, 12.41915], [0.99167, 13.10727], [0.99253, 13.37515], [1.18873, 13.31771], [1.21217, 13.37853], [1.24516, 13.33968], [1.28509, 13.35488], [1.24429, 13.39373], [1.20088, 13.38951], [1.02813, 13.46635], [0.99514, 13.5668], [0.77637, 13.64442], [0.77377, 13.6866], [0.61924, 13.68491], [0.38051, 14.05575], [0.16936, 14.51654], [0.23859, 15.00135]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BG\", iso1A3: \"BGR\", iso1N3: \"100\", wikidata: \"Q219\", nameEn: \"Bulgaria\", groups: [\"EU\", \"151\", \"150\", \"UN\"], callingCodes: [\"359\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[23.05288, 43.79494], [22.85314, 43.84452], [22.83753, 43.88055], [22.87873, 43.9844], [23.01674, 44.01946], [23.04988, 44.07694], [22.67173, 44.21564], [22.61711, 44.16938], [22.61688, 44.06534], [22.41449, 44.00514], [22.35558, 43.81281], [22.41043, 43.69566], [22.47582, 43.6558], [22.53397, 43.47225], [22.82036, 43.33665], [22.89727, 43.22417], [23.00806, 43.19279], [22.98104, 43.11199], [22.89521, 43.03625], [22.78397, 42.98253], [22.74826, 42.88701], [22.54302, 42.87774], [22.43309, 42.82057], [22.4997, 42.74144], [22.43983, 42.56851], [22.55669, 42.50144], [22.51961, 42.3991], [22.47498, 42.3915], [22.45919, 42.33822], [22.34773, 42.31725], [22.38136, 42.30339], [22.47251, 42.20393], [22.50289, 42.19527], [22.51224, 42.15457], [22.67701, 42.06614], [22.86749, 42.02275], [22.90254, 41.87587], [22.96682, 41.77137], [23.01239, 41.76527], [23.03342, 41.71034], [22.95513, 41.63265], [22.96331, 41.35782], [22.93334, 41.34104], [23.1833, 41.31755], [23.21953, 41.33773], [23.22771, 41.37106], [23.31301, 41.40525], [23.33639, 41.36317], [23.40416, 41.39999], [23.52453, 41.40262], [23.63203, 41.37632], [23.67644, 41.41139], [23.76525, 41.40175], [23.80148, 41.43943], [23.89613, 41.45257], [23.91483, 41.47971], [23.96975, 41.44118], [24.06908, 41.46132], [24.06323, 41.53222], [24.10063, 41.54796], [24.18126, 41.51735], [24.27124, 41.57682], [24.30513, 41.51297], [24.52599, 41.56808], [24.61129, 41.42278], [24.71529, 41.41928], [24.8041, 41.34913], [24.82514, 41.4035], [24.86136, 41.39298], [24.90928, 41.40876], [24.942, 41.38685], [25.11611, 41.34212], [25.28322, 41.23411], [25.48187, 41.28506], [25.52394, 41.2798], [25.55082, 41.31667], [25.61042, 41.30614], [25.66183, 41.31316], [25.70507, 41.29209], [25.8266, 41.34563], [25.87919, 41.30526], [26.12926, 41.35878], [26.16548, 41.42278], [26.20288, 41.43943], [26.14796, 41.47533], [26.176, 41.50072], [26.17951, 41.55409], [26.14328, 41.55496], [26.15146, 41.60828], [26.07083, 41.64584], [26.06148, 41.70345], [26.16841, 41.74858], [26.21325, 41.73223], [26.22888, 41.74139], [26.2654, 41.71544], [26.30255, 41.70925], [26.35957, 41.71149], [26.32952, 41.73637], [26.33589, 41.76802], [26.36952, 41.82265], [26.53968, 41.82653], [26.57961, 41.90024], [26.56051, 41.92995], [26.62996, 41.97644], [26.79143, 41.97386], [26.95638, 42.00741], [27.03277, 42.0809], [27.08486, 42.08735], [27.19251, 42.06028], [27.22376, 42.10152], [27.27411, 42.10409], [27.45478, 41.96591], [27.52379, 41.93756], [27.55191, 41.90928], [27.69949, 41.97515], [27.81235, 41.94803], [27.83492, 41.99709], [27.91479, 41.97902], [28.02971, 41.98066], [28.32297, 41.98371], [29.24336, 43.70874], [28.23293, 43.76], [27.99558, 43.84193], [27.92008, 44.00761], [27.73468, 43.95326], [27.64542, 44.04958], [27.60834, 44.01206], [27.39757, 44.0141], [27.26845, 44.12602], [26.95141, 44.13555], [26.62712, 44.05698], [26.38764, 44.04356], [26.10115, 43.96908], [26.05584, 43.90925], [25.94911, 43.85745], [25.72792, 43.69263], [25.39528, 43.61866], [25.17144, 43.70261], [25.10718, 43.6831], [24.96682, 43.72693], [24.73542, 43.68523], [24.62281, 43.74082], [24.50264, 43.76314], [24.35364, 43.70211], [24.18149, 43.68218], [23.73978, 43.80627], [23.61687, 43.79289], [23.4507, 43.84936], [23.26772, 43.84843], [23.05288, 43.79494]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BH\", iso1A3: \"BHR\", iso1N3: \"048\", wikidata: \"Q398\", nameEn: \"Bahrain\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"973\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[50.93865, 26.30758], [50.71771, 26.73086], [50.38162, 26.53976], [50.26923, 26.08243], [50.302, 25.87592], [50.57069, 25.57887], [50.80824, 25.54641], [50.7801, 25.595], [50.86149, 25.6965], [50.81266, 25.88946], [50.93865, 26.30758]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BI\", iso1A3: \"BDI\", iso1N3: \"108\", wikidata: \"Q967\", nameEn: \"Burundi\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"257\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[30.54501, -2.41404], [30.42933, -2.31064], [30.14034, -2.43626], [29.95911, -2.33348], [29.88237, -2.75105], [29.36805, -2.82933], [29.32234, -2.6483], [29.0562, -2.58632], [29.04081, -2.7416], [29.00167, -2.78523], [29.00404, -2.81978], [29.0505, -2.81774], [29.09119, -2.87871], [29.09797, -2.91935], [29.16037, -2.95457], [29.17258, -2.99385], [29.25633, -3.05471], [29.21463, -3.3514], [29.23708, -3.75856], [29.43673, -4.44845], [29.63827, -4.44681], [29.75109, -4.45836], [29.77289, -4.41733], [29.82885, -4.36153], [29.88172, -4.35743], [30.03323, -4.26631], [30.22042, -4.01738], [30.45915, -3.56532], [30.84165, -3.25152], [30.83823, -2.97837], [30.6675, -2.98987], [30.57926, -2.89791], [30.4987, -2.9573], [30.40662, -2.86151], [30.52747, -2.65841], [30.41789, -2.66266], [30.54501, -2.41404]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BJ\", iso1A3: \"BEN\", iso1N3: \"204\", wikidata: \"Q962\", nameEn: \"Benin\", aliases: [\"DY\"], groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"229\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[3.59375, 11.70269], [3.48187, 11.86092], [3.31613, 11.88495], [3.25352, 12.01467], [2.83978, 12.40585], [2.6593, 12.30631], [2.37783, 12.24804], [2.39657, 12.10952], [2.45824, 11.98672], [2.39723, 11.89473], [2.29983, 11.68254], [2.00988, 11.42227], [1.42823, 11.46822], [1.03409, 11.04719], [0.9813, 11.08876], [0.91245, 10.99597], [0.8804, 10.803], [0.80358, 10.71459], [0.77666, 10.37665], [1.35507, 9.99525], [1.36624, 9.5951], [1.33675, 9.54765], [1.41746, 9.3226], [1.5649, 9.16941], [1.61838, 9.0527], [1.64249, 6.99562], [1.55877, 6.99737], [1.61812, 6.74843], [1.58105, 6.68619], [1.76906, 6.43189], [1.79826, 6.28221], [1.62913, 6.24075], [1.67336, 6.02702], [2.74181, 6.13349], [2.70566, 6.38038], [2.70464, 6.50831], [2.74334, 6.57291], [2.7325, 6.64057], [2.78204, 6.70514], [2.78823, 6.76356], [2.73405, 6.78508], [2.74024, 6.92802], [2.71702, 6.95722], [2.76965, 7.13543], [2.74489, 7.42565], [2.79442, 7.43486], [2.78668, 7.5116], [2.73405, 7.5423], [2.73095, 7.7755], [2.67523, 7.87825], [2.77907, 9.06924], [3.08017, 9.10006], [3.14147, 9.28375], [3.13928, 9.47167], [3.25093, 9.61632], [3.34726, 9.70696], [3.32099, 9.78032], [3.35383, 9.83641], [3.54429, 9.87739], [3.66908, 10.18136], [3.57275, 10.27185], [3.6844, 10.46351], [3.78292, 10.40538], [3.84243, 10.59316], [3.71505, 11.13015], [3.49175, 11.29765], [3.59375, 11.70269]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BL\", iso1A3: \"BLM\", iso1N3: \"652\", wikidata: \"Q25362\", nameEn: \"Saint-Barth\\xE9lemy\", country: \"FR\", groups: [\"Q1451600\", \"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"590\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-62.62718, 18.26185], [-63.1055, 17.86651], [-62.34423, 17.49165], [-62.62718, 18.26185]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BM\", iso1A3: \"BMU\", iso1N3: \"060\", wikidata: \"Q23635\", nameEn: \"Bermuda\", country: \"GB\", groups: [\"BOTS\", \"021\", \"003\", \"019\", \"UN\"], driveSide: \"left\", callingCodes: [\"1 441\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-63.20987, 32.6953], [-65.31453, 32.68437], [-65.63955, 31.43417], [-63.20987, 32.6953]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BN\", iso1A3: \"BRN\", iso1N3: \"096\", wikidata: \"Q921\", nameEn: \"Brunei\", groups: [\"Q36117\", \"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"673\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[115.16236, 5.01011], [115.02521, 5.35005], [114.10166, 4.76112], [114.07448, 4.58441], [114.15813, 4.57], [114.26876, 4.49878], [114.32176, 4.34942], [114.32176, 4.2552], [114.4416, 4.27588], [114.49922, 4.13108], [114.64211, 4.00694], [114.78539, 4.12205], [114.88039, 4.4257], [114.83189, 4.42387], [114.77303, 4.72871], [114.8266, 4.75062], [114.88841, 4.81905], [114.96982, 4.81146], [114.99417, 4.88201], [115.05038, 4.90275], [115.02955, 4.82087], [115.02278, 4.74137], [115.04064, 4.63706], [115.07737, 4.53418], [115.09978, 4.39123], [115.31275, 4.30806], [115.36346, 4.33563], [115.2851, 4.42295], [115.27819, 4.63661], [115.20737, 4.8256], [115.15092, 4.87604], [115.16236, 5.01011]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BO\", iso1A3: \"BOL\", iso1N3: \"068\", wikidata: \"Q750\", nameEn: \"Bolivia\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"591\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-63.90248, -12.52544], [-64.22539, -12.45267], [-64.30708, -12.46398], [-64.99778, -11.98604], [-65.30027, -11.48749], [-65.28141, -10.86289], [-65.35402, -10.78685], [-65.37923, -10.35141], [-65.29019, -9.86253], [-65.40615, -9.63894], [-65.56244, -9.84266], [-65.68343, -9.75323], [-67.17784, -10.34016], [-68.71533, -11.14749], [-68.7651, -11.0496], [-68.75179, -11.03688], [-68.75265, -11.02383], [-68.74802, -11.00891], [-69.42792, -10.93451], [-69.47839, -10.95254], [-69.57156, -10.94555], [-68.98115, -11.8979], [-68.65044, -12.50689], [-68.85615, -12.87769], [-68.8864, -13.40792], [-69.05265, -13.68546], [-68.88135, -14.18639], [-69.36254, -14.94634], [-69.14856, -15.23478], [-69.40336, -15.61358], [-69.20291, -16.16668], [-69.09986, -16.22693], [-68.96238, -16.194], [-68.79464, -16.33272], [-68.98358, -16.42165], [-69.04027, -16.57214], [-69.00853, -16.66769], [-69.16896, -16.72233], [-69.62883, -17.28142], [-69.46863, -17.37466], [-69.46897, -17.4988], [-69.46623, -17.60518], [-69.34126, -17.72753], [-69.28671, -17.94844], [-69.07496, -18.03715], [-69.14807, -18.16893], [-69.07432, -18.28259], [-68.94987, -18.93302], [-68.87082, -19.06003], [-68.80602, -19.08355], [-68.61989, -19.27584], [-68.41218, -19.40499], [-68.66761, -19.72118], [-68.54611, -19.84651], [-68.57132, -20.03134], [-68.74273, -20.08817], [-68.7276, -20.46178], [-68.44023, -20.62701], [-68.55383, -20.7355], [-68.53957, -20.91542], [-68.40403, -20.94562], [-68.18816, -21.28614], [-67.85114, -22.87076], [-67.54284, -22.89771], [-67.18382, -22.81525], [-66.7298, -22.23644], [-66.29714, -22.08741], [-66.24077, -21.77837], [-66.03836, -21.84829], [-66.04832, -21.9187], [-65.9261, -21.93335], [-65.7467, -22.10105], [-65.61166, -22.09504], [-65.58694, -22.09794], [-65.57743, -22.07675], [-65.47435, -22.08908], [-64.99524, -22.08255], [-64.90014, -22.12136], [-64.67174, -22.18957], [-64.58888, -22.25035], [-64.4176, -22.67692], [-64.35108, -22.73282], [-64.31489, -22.88824], [-64.22918, -22.55807], [-63.93287, -21.99934], [-63.70963, -21.99934], [-63.68113, -22.0544], [-63.66482, -21.99918], [-62.81124, -21.9987], [-62.8078, -22.12534], [-62.64455, -22.25091], [-62.2757, -21.06657], [-62.26883, -20.55311], [-61.93912, -20.10053], [-61.73723, -19.63958], [-60.00638, -19.2981], [-59.06965, -19.29148], [-58.23216, -19.80058], [-58.16225, -20.16193], [-57.8496, -19.98346], [-58.14215, -19.76276], [-57.78463, -19.03259], [-57.71113, -19.03161], [-57.69134, -19.00544], [-57.71995, -18.97546], [-57.71995, -18.89573], [-57.76764, -18.90087], [-57.56807, -18.25655], [-57.48237, -18.24219], [-57.69877, -17.8431], [-57.73949, -17.56095], [-57.90082, -17.44555], [-57.99661, -17.5273], [-58.32935, -17.28195], [-58.5058, -16.80958], [-58.30918, -16.3699], [-58.32431, -16.25861], [-58.41506, -16.32636], [-60.16069, -16.26479], [-60.23797, -15.50267], [-60.58224, -15.09887], [-60.23968, -15.09515], [-60.27887, -14.63021], [-60.46037, -14.22496], [-60.48053, -13.77981], [-61.05527, -13.50054], [-61.81151, -13.49564], [-63.76259, -12.42952], [-63.90248, -12.52544]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BQ\", iso1A3: \"BES\", iso1N3: \"535\", wikidata: \"Q27561\", nameEn: \"Caribbean Netherlands\", country: \"NL\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"BR\", iso1A3: \"BRA\", iso1N3: \"076\", wikidata: \"Q155\", nameEn: \"Brazil\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"55\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-59.69361, 4.34069], [-59.78878, 4.45637], [-60.15953, 4.53456], [-60.04189, 4.69801], [-59.98129, 5.07097], [-60.20944, 5.28754], [-60.32352, 5.21299], [-60.73204, 5.20931], [-60.5802, 4.94312], [-60.86539, 4.70512], [-60.98303, 4.54167], [-61.15703, 4.49839], [-61.31457, 4.54167], [-61.29675, 4.44216], [-61.48569, 4.43149], [-61.54629, 4.2822], [-62.13094, 4.08309], [-62.44822, 4.18621], [-62.57656, 4.04754], [-62.74411, 4.03331], [-62.7655, 3.73099], [-62.98296, 3.59935], [-63.21111, 3.96219], [-63.4464, 3.9693], [-63.42233, 3.89995], [-63.50611, 3.83592], [-63.67099, 4.01731], [-63.70218, 3.91417], [-63.86082, 3.94796], [-63.99183, 3.90172], [-64.14512, 4.12932], [-64.57648, 4.12576], [-64.72977, 4.28931], [-64.84028, 4.24665], [-64.48379, 3.7879], [-64.02908, 2.79797], [-64.0257, 2.48156], [-63.39114, 2.4317], [-63.39827, 2.16098], [-64.06135, 1.94722], [-64.08274, 1.64792], [-64.34654, 1.35569], [-64.38932, 1.5125], [-65.11657, 1.12046], [-65.57288, 0.62856], [-65.50158, 0.92086], [-65.6727, 1.01353], [-66.28507, 0.74585], [-66.85795, 1.22998], [-67.08222, 1.17441], [-67.15784, 1.80439], [-67.299, 1.87494], [-67.40488, 2.22258], [-67.9292, 1.82455], [-68.18632, 2.00091], [-68.26699, 1.83463], [-68.18128, 1.72881], [-69.38621, 1.70865], [-69.53746, 1.76408], [-69.83491, 1.69353], [-69.82987, 1.07864], [-69.26017, 1.06856], [-69.14422, 0.84172], [-69.20976, 0.57958], [-69.47696, 0.71065], [-70.04162, 0.55437], [-70.03658, -0.19681], [-69.603, -0.51947], [-69.59796, -0.75136], [-69.4215, -1.01853], [-69.43395, -1.42219], [-69.94708, -4.2431], [-70.00888, -4.37833], [-70.11305, -4.27281], [-70.19582, -4.3607], [-70.33236, -4.15214], [-70.77601, -4.15717], [-70.96814, -4.36915], [-71.87003, -4.51661], [-72.64391, -5.0391], [-72.83973, -5.14765], [-73.24579, -6.05764], [-73.12983, -6.43852], [-73.73986, -6.87919], [-73.77011, -7.28944], [-73.96938, -7.58465], [-73.65485, -7.77897], [-73.76576, -7.89884], [-72.92886, -9.04074], [-73.21498, -9.40904], [-72.72216, -9.41397], [-72.31883, -9.5184], [-72.14742, -9.98049], [-71.23394, -9.9668], [-70.53373, -9.42628], [-70.58453, -9.58303], [-70.55429, -9.76692], [-70.62487, -9.80666], [-70.64134, -11.0108], [-70.51395, -10.92249], [-70.38791, -11.07096], [-69.90896, -10.92744], [-69.57835, -10.94051], [-69.57156, -10.94555], [-69.47839, -10.95254], [-69.42792, -10.93451], [-68.74802, -11.00891], [-68.75265, -11.02383], [-68.75179, -11.03688], [-68.7651, -11.0496], [-68.71533, -11.14749], [-67.17784, -10.34016], [-65.68343, -9.75323], [-65.56244, -9.84266], [-65.40615, -9.63894], [-65.29019, -9.86253], [-65.37923, -10.35141], [-65.35402, -10.78685], [-65.28141, -10.86289], [-65.30027, -11.48749], [-64.99778, -11.98604], [-64.30708, -12.46398], [-64.22539, -12.45267], [-63.90248, -12.52544], [-63.76259, -12.42952], [-61.81151, -13.49564], [-61.05527, -13.50054], [-60.48053, -13.77981], [-60.46037, -14.22496], [-60.27887, -14.63021], [-60.23968, -15.09515], [-60.58224, -15.09887], [-60.23797, -15.50267], [-60.16069, -16.26479], [-58.41506, -16.32636], [-58.32431, -16.25861], [-58.30918, -16.3699], [-58.5058, -16.80958], [-58.32935, -17.28195], [-57.99661, -17.5273], [-57.90082, -17.44555], [-57.73949, -17.56095], [-57.69877, -17.8431], [-57.48237, -18.24219], [-57.56807, -18.25655], [-57.76764, -18.90087], [-57.71995, -18.89573], [-57.71995, -18.97546], [-57.69134, -19.00544], [-57.71113, -19.03161], [-57.78463, -19.03259], [-58.14215, -19.76276], [-57.8496, -19.98346], [-58.16225, -20.16193], [-57.84536, -20.93155], [-57.93492, -21.65505], [-57.88239, -21.6868], [-57.94642, -21.73799], [-57.98625, -22.09157], [-56.6508, -22.28387], [-56.5212, -22.11556], [-56.45893, -22.08072], [-56.23206, -22.25347], [-55.8331, -22.29008], [-55.74941, -22.46436], [-55.741, -22.52018], [-55.72366, -22.5519], [-55.6986, -22.56268], [-55.68742, -22.58407], [-55.62493, -22.62765], [-55.63849, -22.95122], [-55.5446, -23.22811], [-55.52288, -23.2595], [-55.5555, -23.28237], [-55.43585, -23.87157], [-55.44117, -23.9185], [-55.41784, -23.9657], [-55.12292, -23.99669], [-55.0518, -23.98666], [-55.02691, -23.97317], [-54.6238, -23.83078], [-54.32807, -24.01865], [-54.28207, -24.07305], [-54.4423, -25.13381], [-54.62033, -25.46026], [-54.60196, -25.48397], [-54.59509, -25.53696], [-54.59398, -25.59224], [-54.5502, -25.58915], [-54.52926, -25.62846], [-53.90831, -25.55513], [-53.83691, -25.94849], [-53.73511, -26.04211], [-53.73086, -26.05842], [-53.7264, -26.0664], [-53.73391, -26.07006], [-53.73968, -26.10012], [-53.65018, -26.19501], [-53.65237, -26.23289], [-53.63739, -26.2496], [-53.63881, -26.25075], [-53.64632, -26.24798], [-53.64186, -26.25976], [-53.64505, -26.28089], [-53.68269, -26.33359], [-53.73372, -26.6131], [-53.80144, -27.09844], [-54.15978, -27.2889], [-54.19062, -27.27639], [-54.19268, -27.30751], [-54.41888, -27.40882], [-54.50416, -27.48232], [-54.67657, -27.57214], [-54.90159, -27.63132], [-54.90805, -27.73149], [-55.1349, -27.89759], [-55.16872, -27.86224], [-55.33303, -27.94661], [-55.6262, -28.17124], [-55.65418, -28.18304], [-56.01729, -28.51223], [-56.00458, -28.60421], [-56.05265, -28.62651], [-56.54171, -29.11447], [-56.57295, -29.11357], [-56.62789, -29.18073], [-56.81251, -29.48154], [-57.09386, -29.74211], [-57.65132, -30.19229], [-57.22502, -30.26121], [-56.90236, -30.02578], [-56.49267, -30.39471], [-56.4795, -30.3899], [-56.4619, -30.38457], [-55.87388, -31.05053], [-55.58866, -30.84117], [-55.5634, -30.8686], [-55.55373, -30.8732], [-55.55218, -30.88193], [-55.54572, -30.89051], [-55.53431, -30.89714], [-55.53276, -30.90218], [-55.52712, -30.89997], [-55.51862, -30.89828], [-55.50841, -30.9027], [-55.50821, -30.91349], [-54.17384, -31.86168], [-53.76024, -32.0751], [-53.39572, -32.58596], [-53.37671, -32.57005], [-53.1111, -32.71147], [-53.53459, -33.16843], [-53.52794, -33.68908], [-53.44031, -33.69344], [-53.39593, -33.75169], [-53.37138, -33.74313], [-52.83257, -34.01481], [-28.34015, -20.99094], [-28.99601, 1.86593], [-51.35485, 4.8383], [-51.63798, 4.51394], [-51.61983, 4.14596], [-51.79599, 3.89336], [-51.82312, 3.85825], [-51.85573, 3.83427], [-52.31787, 3.17896], [-52.6906, 2.37298], [-52.96539, 2.1881], [-53.78743, 2.34412], [-54.16286, 2.10779], [-54.6084, 2.32856], [-55.01919, 2.564], [-55.71493, 2.40342], [-55.96292, 2.53188], [-56.13054, 2.27723], [-55.92159, 2.05236], [-55.89863, 1.89861], [-55.99278, 1.83137], [-56.47045, 1.95135], [-56.7659, 1.89509], [-57.07092, 1.95304], [-57.09109, 2.01854], [-57.23981, 1.95808], [-57.35073, 1.98327], [-57.55743, 1.69605], [-57.77281, 1.73344], [-57.97336, 1.64566], [-58.01873, 1.51966], [-58.33887, 1.58014], [-58.4858, 1.48399], [-58.53571, 1.29154], [-58.84229, 1.17749], [-58.92072, 1.31293], [-59.25583, 1.40559], [-59.74066, 1.87596], [-59.7264, 2.27497], [-59.91177, 2.36759], [-59.99733, 2.92312], [-59.79769, 3.37162], [-59.86899, 3.57089], [-59.51963, 3.91951], [-59.73353, 4.20399], [-59.69361, 4.34069]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BS\", iso1A3: \"BHS\", iso1N3: \"044\", wikidata: \"Q778\", nameEn: \"The Bahamas\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 242\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-72.98446, 20.4801], [-71.70065, 25.7637], [-78.91214, 27.76553], [-80.65727, 23.71953], [-72.98446, 20.4801]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BT\", iso1A3: \"BTN\", iso1N3: \"064\", wikidata: \"Q917\", nameEn: \"Bhutan\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"975\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[91.6469, 27.76358], [91.5629, 27.84823], [91.48973, 27.93903], [91.46327, 28.0064], [91.25779, 28.07509], [91.20019, 27.98715], [90.69894, 28.07784], [90.58842, 28.02838], [90.13387, 28.19178], [89.79762, 28.23979], [89.59525, 28.16433], [89.12825, 27.62502], [89.0582, 27.60985], [88.97213, 27.51671], [88.95355, 27.4106], [89.00216, 27.32532], [88.96947, 27.30319], [88.93678, 27.33777], [88.91901, 27.32483], [88.74219, 27.144], [88.86984, 27.10937], [88.8714, 26.97488], [88.92301, 26.99286], [88.95807, 26.92668], [89.09554, 26.89089], [89.12825, 26.81661], [89.1926, 26.81329], [89.37913, 26.86224], [89.38319, 26.85963], [89.3901, 26.84225], [89.42349, 26.83727], [89.63369, 26.74402], [89.86124, 26.73307], [90.04535, 26.72422], [90.30402, 26.85098], [90.39271, 26.90704], [90.48504, 26.8594], [90.67715, 26.77215], [91.50067, 26.79223], [91.83181, 26.87318], [92.05523, 26.8692], [92.11863, 26.893], [92.03457, 27.07334], [92.04702, 27.26861], [92.12019, 27.27829], [92.01132, 27.47352], [91.65007, 27.48287], [91.55819, 27.6144], [91.6469, 27.76358]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BV\", iso1A3: \"BVT\", iso1N3: \"074\", wikidata: \"Q23408\", nameEn: \"Bouvet Island\", country: \"NO\", groups: [\"005\", \"419\", \"019\", \"UN\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[4.54042, -54.0949], [2.28941, -54.13089], [3.35353, -55.17558], [4.54042, -54.0949]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BW\", iso1A3: \"BWA\", iso1N3: \"072\", wikidata: \"Q963\", nameEn: \"Botswana\", groups: [\"018\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"267\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[25.26433, -17.79571], [25.16882, -17.78253], [25.05895, -17.84452], [24.95586, -17.79674], [24.73364, -17.89338], [24.71887, -17.9218], [24.6303, -17.9863], [24.57485, -18.07151], [24.40577, -17.95726], [24.19416, -18.01919], [23.61088, -18.4881], [23.29618, -17.99855], [23.0996, -18.00075], [21.45556, -18.31795], [20.99904, -18.31743], [20.99751, -22.00026], [19.99912, -21.99991], [19.99817, -24.76768], [20.02809, -24.78725], [20.03678, -24.81004], [20.29826, -24.94869], [20.64795, -25.47827], [20.86081, -26.14892], [20.61754, -26.4692], [20.63275, -26.78181], [20.68596, -26.9039], [20.87031, -26.80047], [21.13353, -26.86661], [21.37869, -26.82083], [21.69322, -26.86152], [21.7854, -26.79199], [21.77114, -26.69015], [21.83291, -26.65959], [21.90703, -26.66808], [22.06192, -26.61882], [22.21206, -26.3773], [22.41921, -26.23078], [22.56365, -26.19668], [22.70808, -25.99186], [22.86012, -25.50572], [23.03497, -25.29971], [23.47588, -25.29971], [23.9244, -25.64286], [24.18287, -25.62916], [24.36531, -25.773], [24.44703, -25.73021], [24.67319, -25.81749], [24.8946, -25.80723], [25.01718, -25.72507], [25.12266, -25.75931], [25.33076, -25.76616], [25.58543, -25.6343], [25.6643, -25.4491], [25.69661, -25.29284], [25.72702, -25.25503], [25.88571, -24.87802], [25.84295, -24.78661], [25.8515, -24.75727], [26.39409, -24.63468], [26.46346, -24.60358], [26.51667, -24.47219], [26.84165, -24.24885], [26.99749, -23.65486], [27.33768, -23.40917], [27.52393, -23.37952], [27.6066, -23.21894], [27.74154, -23.2137], [27.93539, -23.04941], [27.93729, -22.96194], [28.04752, -22.90243], [28.04562, -22.8394], [28.34874, -22.5694], [28.63287, -22.55887], [28.91889, -22.44299], [29.0151, -22.22907], [29.10881, -22.21202], [29.15268, -22.21399], [29.18974, -22.18599], [29.21955, -22.17771], [29.37703, -22.19581], [29.3533, -22.18363], [29.24648, -22.05967], [29.1974, -22.07472], [29.14501, -22.07275], [29.08495, -22.04867], [29.04108, -22.00563], [29.02191, -21.95665], [29.02191, -21.90647], [29.04023, -21.85864], [29.07763, -21.81877], [28.58114, -21.63455], [28.49942, -21.66634], [28.29416, -21.59037], [28.01669, -21.57624], [27.91407, -21.31621], [27.69171, -21.08409], [27.72972, -20.51735], [27.69361, -20.48531], [27.28865, -20.49873], [27.29831, -20.28935], [27.21278, -20.08244], [26.72246, -19.92707], [26.17227, -19.53709], [25.96226, -19.08152], [25.99837, -19.02943], [25.94326, -18.90362], [25.82353, -18.82808], [25.79217, -18.6355], [25.68859, -18.56165], [25.53465, -18.39041], [25.39972, -18.12691], [25.31799, -18.07091], [25.23909, -17.90832], [25.26433, -17.79571]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BY\", iso1A3: \"BLR\", iso1N3: \"112\", wikidata: \"Q184\", nameEn: \"Belarus\", groups: [\"151\", \"150\", \"UN\"], callingCodes: [\"375\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[28.15217, 56.16964], [27.97865, 56.11849], [27.63065, 55.89687], [27.61683, 55.78558], [27.3541, 55.8089], [27.27804, 55.78299], [27.1559, 55.85032], [26.97153, 55.8102], [26.87448, 55.7172], [26.76872, 55.67658], [26.71802, 55.70645], [26.64888, 55.70515], [26.63231, 55.67968], [26.63167, 55.57887], [26.55094, 55.5093], [26.5522, 55.40277], [26.44937, 55.34832], [26.5709, 55.32572], [26.6714, 55.33902], [26.80929, 55.31642], [26.83266, 55.30444], [26.835, 55.28182], [26.73017, 55.24226], [26.72983, 55.21788], [26.68075, 55.19787], [26.69243, 55.16718], [26.54753, 55.14181], [26.51481, 55.16051], [26.46249, 55.12814], [26.35121, 55.1525], [26.30628, 55.12536], [26.23202, 55.10439], [26.26941, 55.08032], [26.20397, 54.99729], [26.13386, 54.98924], [26.05907, 54.94631], [25.99129, 54.95705], [25.89462, 54.93438], [25.74122, 54.80108], [25.75977, 54.57252], [25.68045, 54.5321], [25.64813, 54.48704], [25.62203, 54.4656], [25.63371, 54.42075], [25.5376, 54.33158], [25.55425, 54.31591], [25.68513, 54.31727], [25.78553, 54.23327], [25.78563, 54.15747], [25.71084, 54.16704], [25.64875, 54.1259], [25.54724, 54.14925], [25.51452, 54.17799], [25.56823, 54.25212], [25.509, 54.30267], [25.35559, 54.26544], [25.22705, 54.26271], [25.19199, 54.219], [25.0728, 54.13419], [24.991, 54.14241], [24.96894, 54.17589], [24.77131, 54.11091], [24.85311, 54.02862], [24.74279, 53.96663], [24.69185, 53.96543], [24.69652, 54.01901], [24.62275, 54.00217], [24.44411, 53.90076], [24.34128, 53.90076], [24.19638, 53.96405], [23.98837, 53.92554], [23.95098, 53.9613], [23.81309, 53.94205], [23.80543, 53.89558], [23.71726, 53.93379], [23.61677, 53.92691], [23.51284, 53.95052], [23.62004, 53.60942], [23.81995, 53.24131], [23.85657, 53.22923], [23.91393, 53.16469], [23.87548, 53.0831], [23.92184, 53.02079], [23.94689, 52.95919], [23.91805, 52.94016], [23.93763, 52.71332], [23.73615, 52.6149], [23.58296, 52.59868], [23.45112, 52.53774], [23.34141, 52.44845], [23.18196, 52.28812], [23.20071, 52.22848], [23.47859, 52.18215], [23.54314, 52.12148], [23.61, 52.11264], [23.64066, 52.07626], [23.68733, 51.9906], [23.61523, 51.92066], [23.62691, 51.78208], [23.53198, 51.74298], [23.57053, 51.55938], [23.56236, 51.53673], [23.62751, 51.50512], [23.6736, 51.50255], [23.60906, 51.62122], [23.7766, 51.66809], [23.91118, 51.63316], [23.8741, 51.59734], [23.99907, 51.58369], [24.13075, 51.66979], [24.3163, 51.75063], [24.29021, 51.80841], [24.37123, 51.88222], [24.98784, 51.91273], [25.20228, 51.97143], [25.46163, 51.92205], [25.73673, 51.91973], [25.80574, 51.94556], [25.83217, 51.92587], [26.00408, 51.92967], [26.19084, 51.86781], [26.39367, 51.87315], [26.46962, 51.80501], [26.69759, 51.82284], [26.80043, 51.75777], [26.9489, 51.73788], [26.99422, 51.76933], [27.20602, 51.77291], [27.20948, 51.66713], [27.26613, 51.65957], [27.24828, 51.60161], [27.47212, 51.61184], [27.51058, 51.5854], [27.55727, 51.63486], [27.71932, 51.60672], [27.67125, 51.50854], [27.76052, 51.47604], [27.85253, 51.62293], [27.91844, 51.61952], [27.95827, 51.56065], [28.10658, 51.57857], [28.23452, 51.66988], [28.37592, 51.54505], [28.47051, 51.59734], [28.64429, 51.5664], [28.69161, 51.44695], [28.73143, 51.46236], [28.75615, 51.41442], [28.78224, 51.45294], [28.76027, 51.48802], [28.81795, 51.55552], [28.95528, 51.59222], [28.99098, 51.56833], [29.1187, 51.65872], [29.16402, 51.64679], [29.20659, 51.56918], [29.25603, 51.57089], [29.25191, 51.49828], [29.32881, 51.37843], [29.42357, 51.4187], [29.49773, 51.39814], [29.54372, 51.48372], [29.7408, 51.53417], [29.77376, 51.4461], [30.17888, 51.51025], [30.34642, 51.42555], [30.36153, 51.33984], [30.56203, 51.25655], [30.64992, 51.35014], [30.51946, 51.59649], [30.68804, 51.82806], [30.76443, 51.89739], [30.90897, 52.00699], [30.95589, 52.07775], [31.13332, 52.1004], [31.25142, 52.04131], [31.38326, 52.12991], [31.7822, 52.11406], [31.77877, 52.18636], [31.6895, 52.1973], [31.70735, 52.26711], [31.57971, 52.32146], [31.62084, 52.33849], [31.61397, 52.48843], [31.56316, 52.51518], [31.63869, 52.55361], [31.50406, 52.69707], [31.57277, 52.71613], [31.592, 52.79011], [31.35667, 52.97854], [31.24147, 53.031], [31.32283, 53.04101], [31.33519, 53.08805], [31.3915, 53.09712], [31.36403, 53.13504], [31.40523, 53.21406], [31.56316, 53.19432], [31.62496, 53.22886], [31.787, 53.18033], [31.82373, 53.10042], [32.15368, 53.07594], [32.40773, 53.18856], [32.51725, 53.28431], [32.73257, 53.33494], [32.74968, 53.45597], [32.47777, 53.5548], [32.40499, 53.6656], [32.50112, 53.68594], [32.45717, 53.74039], [32.36663, 53.7166], [32.12621, 53.81586], [31.89137, 53.78099], [31.77028, 53.80015], [31.85019, 53.91801], [31.88744, 54.03653], [31.89599, 54.0837], [31.57002, 54.14535], [31.30791, 54.25315], [31.3177, 54.34067], [31.22945, 54.46585], [31.08543, 54.50361], [31.21399, 54.63113], [31.19339, 54.66947], [30.99187, 54.67046], [30.98226, 54.68872], [31.0262, 54.70698], [30.97127, 54.71967], [30.95479, 54.74346], [30.75165, 54.80699], [30.8264, 54.90062], [30.81759, 54.94064], [30.93144, 54.9585], [30.95754, 54.98609], [30.9081, 55.02232], [30.94243, 55.03964], [31.00972, 55.02783], [31.02071, 55.06167], [30.97369, 55.17134], [30.87944, 55.28223], [30.81946, 55.27931], [30.8257, 55.3313], [30.93144, 55.3914], [30.90123, 55.46621], [30.95204, 55.50667], [30.93419, 55.6185], [30.86003, 55.63169], [30.7845, 55.58514], [30.72957, 55.66268], [30.67464, 55.64176], [30.63344, 55.73079], [30.51037, 55.76568], [30.51346, 55.78982], [30.48257, 55.81066], [30.30987, 55.83592], [30.27776, 55.86819], [30.12136, 55.8358], [29.97975, 55.87281], [29.80672, 55.79569], [29.61446, 55.77716], [29.51283, 55.70294], [29.3604, 55.75862], [29.44692, 55.95978], [29.21717, 55.98971], [29.08299, 56.03427], [28.73418, 55.97131], [28.63668, 56.07262], [28.68337, 56.10173], [28.5529, 56.11705], [28.43068, 56.09407], [28.37987, 56.11399], [28.36888, 56.05805], [28.30571, 56.06035], [28.15217, 56.16964]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BZ\", iso1A3: \"BLZ\", iso1N3: \"084\", wikidata: \"Q242\", nameEn: \"Belize\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], roadSpeedUnit: \"mph\", callingCodes: [\"501\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-88.3268, 18.49048], [-88.48242, 18.49164], [-88.71505, 18.0707], [-88.8716, 17.89535], [-89.03839, 18.0067], [-89.15105, 17.95104], [-89.14985, 17.81563], [-89.15025, 17.04813], [-89.22683, 15.88619], [-89.17418, 15.90898], [-89.02415, 15.9063], [-88.95358, 15.88698], [-88.40779, 16.09624], [-86.92368, 17.61462], [-87.84815, 18.18511], [-87.85693, 18.18266], [-87.86657, 18.19971], [-87.87604, 18.18313], [-87.90671, 18.15213], [-88.03165, 18.16657], [-88.03238, 18.41778], [-88.26593, 18.47617], [-88.29909, 18.47591], [-88.3268, 18.49048]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CA\", iso1A3: \"CAN\", iso1N3: \"124\", wikidata: \"Q16\", nameEn: \"Canada\", groups: [\"021\", \"003\", \"019\", \"UN\"], callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-67.20349, 45.1722], [-67.19603, 45.16771], [-67.15965, 45.16179], [-67.11316, 45.11176], [-67.0216, 44.95333], [-66.96824, 44.90965], [-66.98249, 44.87071], [-66.96824, 44.83078], [-66.93432, 44.82597], [-67.16117, 44.20069], [-61.98255, 37.34815], [-56.27503, 47.39728], [-53.12387, 41.40385], [-46.37635, 57.3249], [-77.52957, 77.23408], [-68.21821, 80.48551], [-49.33696, 84.57952], [-140.97446, 84.39275], [-141.00116, 60.30648], [-140.5227, 60.22077], [-140.45648, 60.30919], [-139.98024, 60.18027], [-139.68991, 60.33693], [-139.05831, 60.35205], [-139.20603, 60.08896], [-139.05365, 59.99655], [-138.71149, 59.90728], [-138.62145, 59.76431], [-137.60623, 59.24465], [-137.4925, 58.89415], [-136.82619, 59.16198], [-136.52365, 59.16752], [-136.47323, 59.46617], [-136.33727, 59.44466], [-136.22381, 59.55526], [-136.31566, 59.59083], [-135.48007, 59.79937], [-135.03069, 59.56208], [-135.00267, 59.28745], [-134.7047, 59.2458], [-134.55699, 59.1297], [-134.48059, 59.13231], [-134.27175, 58.8634], [-133.84645, 58.73543], [-133.38523, 58.42773], [-131.8271, 56.62247], [-130.77769, 56.36185], [-130.33965, 56.10849], [-130.10173, 56.12178], [-130.00093, 56.00325], [-130.00857, 55.91344], [-130.15373, 55.74895], [-129.97513, 55.28029], [-130.08035, 55.21556], [-130.18765, 55.07744], [-130.27203, 54.97174], [-130.44184, 54.85377], [-130.64499, 54.76912], [-130.61931, 54.70835], [-133.92876, 54.62289], [-133.36909, 48.51151], [-125.03842, 48.53282], [-123.50039, 48.21223], [-123.15614, 48.35395], [-123.26565, 48.6959], [-123.0093, 48.76586], [-123.0093, 48.83186], [-123.32163, 49.00419], [-95.15355, 48.9996], [-95.15357, 49.384], [-95.12903, 49.37056], [-95.05825, 49.35311], [-95.01419, 49.35647], [-94.99532, 49.36579], [-94.95681, 49.37035], [-94.85381, 49.32492], [-94.8159, 49.32299], [-94.82487, 49.29483], [-94.77355, 49.11998], [-94.75017, 49.09931], [-94.687, 48.84077], [-94.70087, 48.8339], [-94.70486, 48.82365], [-94.69669, 48.80918], [-94.69335, 48.77883], [-94.58903, 48.71803], [-94.54885, 48.71543], [-94.53826, 48.70216], [-94.44258, 48.69223], [-94.4174, 48.71049], [-94.27153, 48.70232], [-94.25172, 48.68404], [-94.25104, 48.65729], [-94.23215, 48.65202], [-93.85769, 48.63284], [-93.83288, 48.62745], [-93.80676, 48.58232], [-93.80939, 48.52439], [-93.79267, 48.51631], [-93.66382, 48.51845], [-93.47022, 48.54357], [-93.44472, 48.59147], [-93.40693, 48.60948], [-93.39758, 48.60364], [-93.3712, 48.60599], [-93.33946, 48.62787], [-93.25391, 48.64266], [-92.94973, 48.60866], [-92.7287, 48.54005], [-92.6342, 48.54133], [-92.62747, 48.50278], [-92.69927, 48.49573], [-92.71323, 48.46081], [-92.65606, 48.43471], [-92.50712, 48.44921], [-92.45588, 48.40624], [-92.48147, 48.36609], [-92.37185, 48.22259], [-92.27167, 48.25046], [-92.30939, 48.31251], [-92.26662, 48.35651], [-92.202, 48.35252], [-92.14732, 48.36578], [-92.05339, 48.35958], [-91.98929, 48.25409], [-91.86125, 48.21278], [-91.71231, 48.19875], [-91.70451, 48.11805], [-91.55649, 48.10611], [-91.58025, 48.04339], [-91.45829, 48.07454], [-91.43248, 48.04912], [-91.25025, 48.08522], [-91.08016, 48.18096], [-90.87588, 48.2484], [-90.75045, 48.09143], [-90.56444, 48.12184], [-90.56312, 48.09488], [-90.07418, 48.11043], [-89.89974, 47.98109], [-89.77248, 48.02607], [-89.57972, 48.00023], [-89.48837, 48.01412], [-88.37033, 48.30586], [-84.85871, 46.88881], [-84.55635, 46.45974], [-84.47607, 46.45225], [-84.4481, 46.48972], [-84.42101, 46.49853], [-84.34174, 46.50683], [-84.29893, 46.49127], [-84.26351, 46.49508], [-84.2264, 46.53337], [-84.1945, 46.54061], [-84.17723, 46.52753], [-84.12885, 46.53068], [-84.11196, 46.50248], [-84.13451, 46.39218], [-84.11254, 46.32329], [-84.11615, 46.2681], [-84.09756, 46.25512], [-84.1096, 46.23987], [-83.95399, 46.05634], [-83.90453, 46.05922], [-83.83329, 46.12169], [-83.57017, 46.105], [-83.43746, 45.99749], [-83.59589, 45.82131], [-82.48419, 45.30225], [-82.42469, 42.992], [-82.4146, 42.97626], [-82.4253, 42.95423], [-82.45331, 42.93139], [-82.4826, 42.8068], [-82.46613, 42.76615], [-82.51063, 42.66025], [-82.51858, 42.611], [-82.57583, 42.5718], [-82.58873, 42.54984], [-82.64242, 42.55594], [-82.82964, 42.37355], [-83.02253, 42.33045], [-83.07837, 42.30978], [-83.09837, 42.28877], [-83.12724, 42.2376], [-83.14962, 42.04089], [-83.11184, 41.95671], [-82.67862, 41.67615], [-78.93684, 42.82887], [-78.90712, 42.89733], [-78.90905, 42.93022], [-78.93224, 42.95229], [-78.96312, 42.95509], [-78.98126, 42.97], [-79.02074, 42.98444], [-79.02424, 43.01983], [-78.99941, 43.05612], [-79.01055, 43.06659], [-79.07486, 43.07845], [-79.05671, 43.10937], [-79.06881, 43.12029], [-79.0427, 43.13934], [-79.04652, 43.16396], [-79.05384, 43.17418], [-79.05002, 43.20133], [-79.05544, 43.21224], [-79.05512, 43.25375], [-79.06921, 43.26183], [-79.25796, 43.54052], [-76.79706, 43.63099], [-76.43859, 44.09393], [-76.35324, 44.13493], [-76.31222, 44.19894], [-76.244, 44.19643], [-76.1664, 44.23051], [-76.16285, 44.28262], [-76.00018, 44.34896], [-75.95947, 44.34463], [-75.8217, 44.43176], [-75.76813, 44.51537], [-75.41441, 44.76614], [-75.2193, 44.87821], [-75.01363, 44.95608], [-74.99101, 44.98051], [-74.8447, 45.00606], [-74.66689, 45.00646], [-74.32699, 44.99029], [-73.35025, 45.00942], [-71.50067, 45.01357], [-71.48735, 45.07784], [-71.42778, 45.12624], [-71.40364, 45.21382], [-71.44252, 45.2361], [-71.37133, 45.24624], [-71.29371, 45.29996], [-71.22338, 45.25184], [-71.19723, 45.25438], [-71.14568, 45.24128], [-71.08364, 45.30623], [-71.01866, 45.31573], [-71.0107, 45.34819], [-70.95193, 45.33895], [-70.91169, 45.29849], [-70.89864, 45.2398], [-70.84816, 45.22698], [-70.80236, 45.37444], [-70.82638, 45.39828], [-70.78372, 45.43269], [-70.65383, 45.37592], [-70.62518, 45.42286], [-70.72651, 45.49771], [-70.68516, 45.56964], [-70.54019, 45.67291], [-70.38934, 45.73215], [-70.41523, 45.79497], [-70.25976, 45.89675], [-70.24694, 45.95138], [-70.31025, 45.96424], [-70.23855, 46.1453], [-70.29078, 46.18832], [-70.18547, 46.35357], [-70.05812, 46.41768], [-69.99966, 46.69543], [-69.22119, 47.46461], [-69.05148, 47.42012], [-69.05073, 47.30076], [-69.05039, 47.2456], [-68.89222, 47.1807], [-68.70125, 47.24399], [-68.60575, 47.24659], [-68.57914, 47.28431], [-68.38332, 47.28723], [-68.37458, 47.35851], [-68.23244, 47.35712], [-67.94843, 47.1925], [-67.87993, 47.10377], [-67.78578, 47.06473], [-67.78111, 45.9392], [-67.75196, 45.91814], [-67.80961, 45.87531], [-67.75654, 45.82324], [-67.80653, 45.80022], [-67.80705, 45.69528], [-67.6049, 45.60725], [-67.43815, 45.59162], [-67.42144, 45.50584], [-67.50578, 45.48971], [-67.42394, 45.37969], [-67.48201, 45.27351], [-67.34927, 45.122], [-67.29754, 45.14865], [-67.29748, 45.18173], [-67.27039, 45.1934], [-67.22751, 45.16344], [-67.20349, 45.1722]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CC\", iso1A3: \"CCK\", iso1N3: \"166\", wikidata: \"Q36004\", nameEn: \"Cocos (Keeling) Islands\", country: \"AU\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"61\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[96.61846, -10.82438], [96.02343, -12.68334], [97.93979, -12.33309], [96.61846, -10.82438]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CD\", iso1A3: \"COD\", iso1N3: \"180\", wikidata: \"Q974\", nameEn: \"Democratic Republic of the Congo\", aliases: [\"ZR\"], groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"243\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[27.44012, 5.07349], [27.09575, 5.22305], [26.93064, 5.13535], [26.85579, 5.03887], [26.74572, 5.10685], [26.48595, 5.04984], [26.13371, 5.25594], [25.86073, 5.19455], [25.53271, 5.37431], [25.34558, 5.29101], [25.31256, 5.03668], [24.71816, 4.90509], [24.46719, 5.0915], [23.38847, 4.60013], [22.94817, 4.82392], [22.89094, 4.79321], [22.84691, 4.69887], [22.78526, 4.71423], [22.6928, 4.47285], [22.60915, 4.48821], [22.5431, 4.22041], [22.45504, 4.13039], [22.27682, 4.11347], [22.10721, 4.20723], [21.6405, 4.317], [21.55904, 4.25553], [21.25744, 4.33676], [21.21341, 4.29285], [21.11214, 4.33895], [21.08793, 4.39603], [20.90383, 4.44877], [20.60184, 4.42394], [18.62755, 3.47564], [18.63857, 3.19342], [18.10683, 2.26876], [18.08034, 1.58553], [17.85887, 1.04327], [17.86989, 0.58873], [17.95255, 0.48128], [17.93877, 0.32424], [17.81204, 0.23884], [17.66051, -0.26535], [17.72112, -0.52707], [17.32438, -0.99265], [16.97999, -1.12762], [16.70724, -1.45815], [16.50336, -1.8795], [16.16173, -2.16586], [16.22785, -2.59528], [16.1755, -3.25014], [16.21407, -3.2969], [15.89448, -3.9513], [15.53081, -4.042], [15.48121, -4.22062], [15.41785, -4.28381], [15.32693, -4.27282], [15.25411, -4.31121], [15.1978, -4.32388], [14.83101, -4.80838], [14.67948, -4.92093], [14.5059, -4.84956], [14.41499, -4.8825], [14.37366, -4.56125], [14.47284, -4.42941], [14.3957, -4.36623], [14.40672, -4.28381], [13.9108, -4.50906], [13.81162, -4.41842], [13.71794, -4.44864], [13.70417, -4.72601], [13.50305, -4.77818], [13.41764, -4.89897], [13.11182, -4.5942], [13.09648, -4.63739], [13.11195, -4.67745], [12.8733, -4.74346], [12.70868, -4.95505], [12.63465, -4.94632], [12.60251, -5.01715], [12.46297, -5.09408], [12.49815, -5.14058], [12.51589, -5.1332], [12.53586, -5.14658], [12.53599, -5.1618], [12.52301, -5.17481], [12.52318, -5.74353], [12.26557, -5.74031], [12.20376, -5.76338], [11.95767, -5.94705], [12.42245, -6.07585], [13.04371, -5.87078], [16.55507, -5.85631], [16.96282, -7.21787], [17.5828, -8.13784], [18.33635, -8.00126], [19.33698, -7.99743], [19.5469, -7.00195], [20.30218, -6.98955], [20.31846, -6.91953], [20.61689, -6.90876], [20.56263, -7.28566], [21.79824, -7.29628], [21.84856, -9.59871], [22.19039, -9.94628], [22.32604, -10.76291], [22.17954, -10.85884], [22.25951, -11.24911], [22.54205, -11.05784], [23.16602, -11.10577], [23.45631, -10.946], [23.86868, -11.02856], [24.00027, -10.89356], [24.34528, -11.06816], [24.42612, -11.44975], [25.34069, -11.19707], [25.33058, -11.65767], [26.01777, -11.91488], [26.88687, -12.01868], [27.04351, -11.61312], [27.22541, -11.60323], [27.21025, -11.76157], [27.59932, -12.22123], [28.33199, -12.41375], [29.01918, -13.41353], [29.60531, -13.21685], [29.65078, -13.41844], [29.81551, -13.44683], [29.8139, -12.14898], [29.48404, -12.23604], [29.4992, -12.43843], [29.18592, -12.37921], [28.48357, -11.87532], [28.37241, -11.57848], [28.65032, -10.65133], [28.62795, -9.92942], [28.68532, -9.78], [28.56208, -9.49122], [28.51627, -9.44726], [28.52636, -9.35379], [28.36562, -9.30091], [28.38526, -9.23393], [28.9711, -8.66935], [28.88917, -8.4831], [30.79243, -8.27382], [30.2567, -7.14121], [29.52552, -6.2731], [29.43673, -4.44845], [29.23708, -3.75856], [29.21463, -3.3514], [29.25633, -3.05471], [29.17258, -2.99385], [29.16037, -2.95457], [29.09797, -2.91935], [29.09119, -2.87871], [29.0505, -2.81774], [29.00404, -2.81978], [29.00167, -2.78523], [29.04081, -2.7416], [29.00357, -2.70596], [28.94346, -2.69124], [28.89793, -2.66111], [28.90226, -2.62385], [28.89288, -2.55848], [28.87943, -2.55165], [28.86193, -2.53185], [28.86209, -2.5231], [28.87497, -2.50887], [28.88846, -2.50493], [28.89342, -2.49017], [28.89132, -2.47557], [28.86846, -2.44866], [28.86826, -2.41888], [28.89601, -2.37321], [28.95642, -2.37321], [29.00051, -2.29001], [29.105, -2.27043], [29.17562, -2.12278], [29.11847, -1.90576], [29.24458, -1.69663], [29.24323, -1.66826], [29.36322, -1.50887], [29.45038, -1.5054], [29.53062, -1.40499], [29.59061, -1.39016], [29.58388, -0.89821], [29.63006, -0.8997], [29.62708, -0.71055], [29.67176, -0.55714], [29.67474, -0.47969], [29.65091, -0.46777], [29.72687, -0.08051], [29.7224, 0.07291], [29.77454, 0.16675], [29.81922, 0.16824], [29.87284, 0.39166], [29.97413, 0.52124], [29.95477, 0.64486], [29.98307, 0.84295], [30.1484, 0.89805], [30.22139, 0.99635], [30.24671, 1.14974], [30.48503, 1.21675], [31.30127, 2.11006], [31.28042, 2.17853], [31.20148, 2.2217], [31.1985, 2.29462], [31.12104, 2.27676], [31.07934, 2.30207], [31.06593, 2.35862], [30.96911, 2.41071], [30.91102, 2.33332], [30.83059, 2.42559], [30.74271, 2.43601], [30.75612, 2.5863], [30.8857, 2.83923], [30.8574, 2.9508], [30.77101, 3.04897], [30.84251, 3.26908], [30.93486, 3.40737], [30.94081, 3.50847], [30.85153, 3.48867], [30.85997, 3.5743], [30.80713, 3.60506], [30.78512, 3.67097], [30.56277, 3.62703], [30.57378, 3.74567], [30.55396, 3.84451], [30.47691, 3.83353], [30.27658, 3.95653], [30.22374, 3.93896], [30.1621, 4.10586], [30.06964, 4.13221], [29.79666, 4.37809], [29.82087, 4.56246], [29.49726, 4.7007], [29.43341, 4.50101], [29.22207, 4.34297], [29.03054, 4.48784], [28.8126, 4.48784], [28.6651, 4.42638], [28.20719, 4.35614], [27.79551, 4.59976], [27.76469, 4.79284], [27.65462, 4.89375], [27.56656, 4.89375], [27.44012, 5.07349]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CF\", iso1A3: \"CAF\", iso1N3: \"140\", wikidata: \"Q929\", nameEn: \"Central African Republic\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"236\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[22.87758, 10.91915], [22.45889, 11.00246], [21.72139, 10.64136], [21.71479, 10.29932], [21.63553, 10.217], [21.52766, 10.2105], [21.34934, 9.95907], [21.26348, 9.97642], [20.82979, 9.44696], [20.36748, 9.11019], [19.06421, 9.00367], [18.86388, 8.87971], [19.11044, 8.68172], [18.79783, 8.25929], [18.67455, 8.22226], [18.62612, 8.14163], [18.64153, 8.08714], [18.6085, 8.05009], [18.02731, 8.01085], [17.93926, 7.95853], [17.67288, 7.98905], [16.8143, 7.53971], [16.6668, 7.67281], [16.658, 7.75353], [16.59415, 7.76444], [16.58315, 7.88657], [16.41583, 7.77971], [16.40703, 7.68809], [15.79942, 7.44149], [15.73118, 7.52006], [15.49743, 7.52179], [15.23397, 7.25135], [15.04717, 6.77085], [14.96311, 6.75693], [14.79966, 6.39043], [14.80122, 6.34866], [14.74206, 6.26356], [14.56149, 6.18928], [14.43073, 6.08867], [14.42917, 6.00508], [14.49455, 5.91683], [14.60974, 5.91838], [14.62375, 5.70466], [14.58951, 5.59777], [14.62531, 5.51411], [14.52724, 5.28319], [14.57083, 5.23979], [14.65489, 5.21343], [14.73383, 4.6135], [15.00825, 4.41458], [15.08609, 4.30282], [15.10644, 4.1362], [15.17482, 4.05131], [15.07686, 4.01805], [15.73522, 3.24348], [15.77725, 3.26835], [16.05449, 3.02306], [16.08252, 2.45708], [16.19357, 2.21537], [16.50126, 2.84739], [16.46701, 2.92512], [16.57598, 3.47999], [16.68283, 3.54257], [17.01746, 3.55136], [17.35649, 3.63045], [17.46876, 3.70515], [17.60966, 3.63705], [17.83421, 3.61068], [17.85842, 3.53378], [18.05656, 3.56893], [18.14902, 3.54476], [18.17323, 3.47665], [18.24148, 3.50302], [18.2723, 3.57992], [18.39558, 3.58212], [18.49245, 3.63924], [18.58711, 3.49423], [18.62755, 3.47564], [20.60184, 4.42394], [20.90383, 4.44877], [21.08793, 4.39603], [21.11214, 4.33895], [21.21341, 4.29285], [21.25744, 4.33676], [21.55904, 4.25553], [21.6405, 4.317], [22.10721, 4.20723], [22.27682, 4.11347], [22.45504, 4.13039], [22.5431, 4.22041], [22.60915, 4.48821], [22.6928, 4.47285], [22.78526, 4.71423], [22.84691, 4.69887], [22.89094, 4.79321], [22.94817, 4.82392], [23.38847, 4.60013], [24.46719, 5.0915], [24.71816, 4.90509], [25.31256, 5.03668], [25.34558, 5.29101], [25.53271, 5.37431], [25.86073, 5.19455], [26.13371, 5.25594], [26.48595, 5.04984], [26.74572, 5.10685], [26.85579, 5.03887], [26.93064, 5.13535], [27.09575, 5.22305], [27.44012, 5.07349], [27.26886, 5.25876], [27.23017, 5.37167], [27.28621, 5.56382], [27.22705, 5.62889], [27.22705, 5.71254], [26.51721, 6.09655], [26.58259, 6.1987], [26.32729, 6.36272], [26.38022, 6.63493], [25.90076, 7.09549], [25.37461, 7.33024], [25.35281, 7.42595], [25.20337, 7.50312], [25.20649, 7.61115], [25.29214, 7.66675], [25.25319, 7.8487], [24.98855, 7.96588], [24.85156, 8.16933], [24.35965, 8.26177], [24.13238, 8.36959], [24.25691, 8.69288], [23.51905, 8.71749], [23.59065, 8.99743], [23.44744, 8.99128], [23.4848, 9.16959], [23.56263, 9.19418], [23.64358, 9.28637], [23.64981, 9.44303], [23.62179, 9.53823], [23.69155, 9.67566], [23.67164, 9.86923], [23.3128, 10.45214], [23.02221, 10.69235], [22.87758, 10.91915]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CG\", iso1A3: \"COG\", iso1N3: \"178\", wikidata: \"Q971\", nameEn: \"Republic of the Congo\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"242\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[18.62755, 3.47564], [18.58711, 3.49423], [18.49245, 3.63924], [18.39558, 3.58212], [18.2723, 3.57992], [18.24148, 3.50302], [18.17323, 3.47665], [18.14902, 3.54476], [18.05656, 3.56893], [17.85842, 3.53378], [17.83421, 3.61068], [17.60966, 3.63705], [17.46876, 3.70515], [17.35649, 3.63045], [17.01746, 3.55136], [16.68283, 3.54257], [16.57598, 3.47999], [16.46701, 2.92512], [16.50126, 2.84739], [16.19357, 2.21537], [16.15568, 2.18955], [16.08563, 2.19733], [16.05294, 1.9811], [16.14634, 1.70259], [16.02647, 1.65591], [16.02959, 1.76483], [15.48942, 1.98265], [15.34776, 1.91264], [15.22634, 2.03243], [15.00996, 1.98887], [14.61145, 2.17866], [13.29457, 2.16106], [13.13461, 1.57238], [13.25447, 1.32339], [13.15519, 1.23368], [13.89582, 1.4261], [14.25186, 1.39842], [14.48179, 0.9152], [14.26066, 0.57255], [14.10909, 0.58563], [13.88648, 0.26652], [13.90632, -0.2287], [14.06862, -0.20826], [14.2165, -0.38261], [14.41887, -0.44799], [14.52569, -0.57818], [14.41838, -1.89412], [14.25932, -1.97624], [14.23518, -2.15671], [14.16202, -2.23916], [14.23829, -2.33715], [14.10442, -2.49268], [13.85846, -2.46935], [13.92073, -2.35581], [13.75884, -2.09293], [13.47977, -2.43224], [13.02759, -2.33098], [12.82172, -1.91091], [12.61312, -1.8129], [12.44656, -1.92025], [12.47925, -2.32626], [12.04895, -2.41704], [11.96866, -2.33559], [11.74605, -2.39936], [11.57637, -2.33379], [11.64487, -2.61865], [11.5359, -2.85654], [11.64798, -2.81146], [11.80365, -3.00424], [11.70558, -3.0773], [11.70227, -3.17465], [11.96554, -3.30267], [11.8318, -3.5812], [11.92719, -3.62768], [11.87083, -3.71571], [11.68608, -3.68942], [11.57949, -3.52798], [11.48764, -3.51089], [11.22301, -3.69888], [11.12647, -3.94169], [10.75913, -4.39519], [11.50888, -5.33417], [12.00924, -5.02627], [12.16068, -4.90089], [12.20901, -4.75642], [12.25587, -4.79437], [12.32324, -4.78415], [12.40964, -4.60609], [12.64835, -4.55937], [12.76844, -4.38709], [12.87096, -4.40315], [12.91489, -4.47907], [13.09648, -4.63739], [13.11182, -4.5942], [13.41764, -4.89897], [13.50305, -4.77818], [13.70417, -4.72601], [13.71794, -4.44864], [13.81162, -4.41842], [13.9108, -4.50906], [14.40672, -4.28381], [14.3957, -4.36623], [14.47284, -4.42941], [14.37366, -4.56125], [14.41499, -4.8825], [14.5059, -4.84956], [14.67948, -4.92093], [14.83101, -4.80838], [15.1978, -4.32388], [15.25411, -4.31121], [15.32693, -4.27282], [15.41785, -4.28381], [15.48121, -4.22062], [15.53081, -4.042], [15.89448, -3.9513], [16.21407, -3.2969], [16.1755, -3.25014], [16.22785, -2.59528], [16.16173, -2.16586], [16.50336, -1.8795], [16.70724, -1.45815], [16.97999, -1.12762], [17.32438, -0.99265], [17.72112, -0.52707], [17.66051, -0.26535], [17.81204, 0.23884], [17.93877, 0.32424], [17.95255, 0.48128], [17.86989, 0.58873], [17.85887, 1.04327], [18.08034, 1.58553], [18.10683, 2.26876], [18.63857, 3.19342], [18.62755, 3.47564]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CH\", iso1A3: \"CHE\", iso1N3: \"756\", wikidata: \"Q39\", nameEn: \"Switzerland\", groups: [\"155\", \"150\", \"UN\"], callingCodes: [\"41\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[8.72809, 47.69282], [8.72617, 47.69651], [8.73671, 47.7169], [8.70543, 47.73121], [8.74251, 47.75168], [8.71778, 47.76571], [8.68985, 47.75686], [8.68022, 47.78599], [8.65292, 47.80066], [8.64425, 47.76398], [8.62408, 47.7626], [8.61657, 47.79998], [8.56415, 47.80633], [8.56814, 47.78001], [8.48868, 47.77215], [8.45771, 47.7493], [8.44807, 47.72426], [8.40569, 47.69855], [8.4211, 47.68407], [8.40473, 47.67499], [8.41346, 47.66676], [8.42264, 47.66667], [8.44711, 47.65379], [8.4667, 47.65747], [8.46605, 47.64103], [8.49656, 47.64709], [8.5322, 47.64687], [8.52801, 47.66059], [8.56141, 47.67088], [8.57683, 47.66158], [8.6052, 47.67258], [8.61113, 47.66332], [8.62884, 47.65098], [8.62049, 47.63757], [8.60412, 47.63735], [8.61471, 47.64514], [8.60701, 47.65271], [8.59545, 47.64298], [8.60348, 47.61204], [8.57586, 47.59537], [8.55756, 47.62394], [8.51686, 47.63476], [8.50747, 47.61897], [8.45578, 47.60121], [8.46637, 47.58389], [8.48949, 47.588], [8.49431, 47.58107], [8.43235, 47.56617], [8.39477, 47.57826], [8.38273, 47.56608], [8.32735, 47.57133], [8.30277, 47.58607], [8.29524, 47.5919], [8.29722, 47.60603], [8.2824, 47.61225], [8.26313, 47.6103], [8.25863, 47.61571], [8.23809, 47.61204], [8.22577, 47.60385], [8.22011, 47.6181], [8.20617, 47.62141], [8.19378, 47.61636], [8.1652, 47.5945], [8.14947, 47.59558], [8.13823, 47.59147], [8.13662, 47.58432], [8.11543, 47.5841], [8.10395, 47.57918], [8.10002, 47.56504], [8.08557, 47.55768], [8.06663, 47.56374], [8.04383, 47.55443], [8.02136, 47.55096], [8.00113, 47.55616], [7.97581, 47.55493], [7.95682, 47.55789], [7.94494, 47.54511], [7.91251, 47.55031], [7.90673, 47.57674], [7.88664, 47.58854], [7.84412, 47.5841], [7.81901, 47.58798], [7.79486, 47.55691], [7.75261, 47.54599], [7.71961, 47.54219], [7.69642, 47.53297], [7.68101, 47.53232], [7.6656, 47.53752], [7.66174, 47.54554], [7.65083, 47.54662], [7.63338, 47.56256], [7.67655, 47.56435], [7.68904, 47.57133], [7.67115, 47.5871], [7.68486, 47.59601], [7.69385, 47.60099], [7.68229, 47.59905], [7.67395, 47.59212], [7.64599, 47.59695], [7.64213, 47.5944], [7.64309, 47.59151], [7.61929, 47.57683], [7.60459, 47.57869], [7.60523, 47.58519], [7.58945, 47.59017], [7.58386, 47.57536], [7.56684, 47.57785], [7.56548, 47.57617], [7.55689, 47.57232], [7.55652, 47.56779], [7.53634, 47.55553], [7.52831, 47.55347], [7.51723, 47.54578], [7.50873, 47.54546], [7.49691, 47.53821], [7.50588, 47.52856], [7.51904, 47.53515], [7.53199, 47.5284], [7.5229, 47.51644], [7.49804, 47.51798], [7.51076, 47.49651], [7.47534, 47.47932], [7.43356, 47.49712], [7.42923, 47.48628], [7.4583, 47.47216], [7.4462, 47.46264], [7.43088, 47.45846], [7.40308, 47.43638], [7.35603, 47.43432], [7.33526, 47.44186], [7.24669, 47.4205], [7.17026, 47.44312], [7.19583, 47.49455], [7.16249, 47.49025], [7.12781, 47.50371], [7.07425, 47.48863], [7.0231, 47.50522], [6.98425, 47.49432], [7.0024, 47.45264], [6.93953, 47.43388], [6.93744, 47.40714], [6.88542, 47.37262], [6.87959, 47.35335], [7.03125, 47.36996], [7.0564, 47.35134], [7.05305, 47.33304], [6.94316, 47.28747], [6.95108, 47.26428], [6.9508, 47.24338], [6.8489, 47.15933], [6.76788, 47.1208], [6.68823, 47.06616], [6.71531, 47.0494], [6.43341, 46.92703], [6.46456, 46.88865], [6.43216, 46.80336], [6.45209, 46.77502], [6.38351, 46.73171], [6.27135, 46.68251], [6.11084, 46.57649], [6.1567, 46.54402], [6.07269, 46.46244], [6.08427, 46.44305], [6.06407, 46.41676], [6.09926, 46.40768], [6.15016, 46.3778], [6.15985, 46.37721], [6.16987, 46.36759], [6.15738, 46.3491], [6.13876, 46.33844], [6.1198, 46.31157], [6.11697, 46.29547], [6.1013, 46.28512], [6.11926, 46.2634], [6.12446, 46.25059], [6.10071, 46.23772], [6.08563, 46.24651], [6.07072, 46.24085], [6.0633, 46.24583], [6.05029, 46.23518], [6.04602, 46.23127], [6.03342, 46.2383], [6.02461, 46.23313], [5.97542, 46.21525], [5.96515, 46.19638], [5.99573, 46.18587], [5.98846, 46.17046], [5.98188, 46.17392], [5.97508, 46.15863], [5.9641, 46.14412], [5.95781, 46.12925], [5.97893, 46.13303], [5.9871, 46.14499], [6.01791, 46.14228], [6.03614, 46.13712], [6.04564, 46.14031], [6.05203, 46.15191], [6.07491, 46.14879], [6.09199, 46.15191], [6.09926, 46.14373], [6.13397, 46.1406], [6.15305, 46.15194], [6.18116, 46.16187], [6.18871, 46.16644], [6.18707, 46.17999], [6.19552, 46.18401], [6.19807, 46.18369], [6.20539, 46.19163], [6.21114, 46.1927], [6.21273, 46.19409], [6.21603, 46.19507], [6.21844, 46.19837], [6.22222, 46.19888], [6.22175, 46.20045], [6.23544, 46.20714], [6.23913, 46.20511], [6.24821, 46.20531], [6.26007, 46.21165], [6.27694, 46.21566], [6.29663, 46.22688], [6.31041, 46.24417], [6.29474, 46.26221], [6.26749, 46.24745], [6.24952, 46.26255], [6.23775, 46.27822], [6.25137, 46.29014], [6.24826, 46.30175], [6.21981, 46.31304], [6.25432, 46.3632], [6.53358, 46.45431], [6.82312, 46.42661], [6.8024, 46.39171], [6.77152, 46.34784], [6.86052, 46.28512], [6.78968, 46.14058], [6.89321, 46.12548], [6.87868, 46.03855], [6.93862, 46.06502], [7.00946, 45.9944], [7.04151, 45.92435], [7.10685, 45.85653], [7.56343, 45.97421], [7.85949, 45.91485], [7.9049, 45.99945], [7.98881, 45.99867], [8.02906, 46.10331], [8.11383, 46.11577], [8.16866, 46.17817], [8.08814, 46.26692], [8.31162, 46.38044], [8.30648, 46.41587], [8.42464, 46.46367], [8.46317, 46.43712], [8.45032, 46.26869], [8.62242, 46.12112], [8.75697, 46.10395], [8.80778, 46.10085], [8.85617, 46.0748], [8.79414, 46.00913], [8.78585, 45.98973], [8.79362, 45.99207], [8.8319, 45.9879], [8.85121, 45.97239], [8.86688, 45.96135], [8.88904, 45.95465], [8.93649, 45.86775], [8.94372, 45.86587], [8.93504, 45.86245], [8.91129, 45.8388], [8.94737, 45.84285], [8.9621, 45.83707], [8.99663, 45.83466], [9.00324, 45.82055], [9.0298, 45.82127], [9.03279, 45.82865], [9.03793, 45.83548], [9.03505, 45.83976], [9.04059, 45.8464], [9.04546, 45.84968], [9.06642, 45.8761], [9.09065, 45.89906], [8.99257, 45.9698], [9.01618, 46.04928], [9.24503, 46.23616], [9.29226, 46.32717], [9.25502, 46.43743], [9.28136, 46.49685], [9.36128, 46.5081], [9.40487, 46.46621], [9.45936, 46.50873], [9.46117, 46.37481], [9.57015, 46.2958], [9.71273, 46.29266], [9.73086, 46.35071], [9.95249, 46.38045], [10.07055, 46.21668], [10.14439, 46.22992], [10.17862, 46.25626], [10.10506, 46.3372], [10.165, 46.41051], [10.03715, 46.44479], [10.10307, 46.61003], [10.23674, 46.63484], [10.25309, 46.57432], [10.46136, 46.53164], [10.49375, 46.62049], [10.44686, 46.64162], [10.40475, 46.63671], [10.38659, 46.67847], [10.47197, 46.85698], [10.48376, 46.93891], [10.36933, 47.00212], [10.30031, 46.92093], [10.24128, 46.93147], [10.22675, 46.86942], [10.10715, 46.84296], [9.98058, 46.91434], [9.88266, 46.93343], [9.87935, 47.01337], [9.60717, 47.06091], [9.55721, 47.04762], [9.54041, 47.06495], [9.47548, 47.05257], [9.47139, 47.06402], [9.51362, 47.08505], [9.52089, 47.10019], [9.51044, 47.13727], [9.48774, 47.17402], [9.4891, 47.19346], [9.50318, 47.22153], [9.52406, 47.24959], [9.53116, 47.27029], [9.54773, 47.2809], [9.55857, 47.29919], [9.58513, 47.31334], [9.59978, 47.34671], [9.62476, 47.36639], [9.65427, 47.36824], [9.66243, 47.37136], [9.6711, 47.37824], [9.67445, 47.38429], [9.67334, 47.39191], [9.6629, 47.39591], [9.65136, 47.40504], [9.65043, 47.41937], [9.6446, 47.43233], [9.64483, 47.43842], [9.65863, 47.44847], [9.65728, 47.45383], [9.6423, 47.45599], [9.62475, 47.45685], [9.62158, 47.45858], [9.60841, 47.47178], [9.60484, 47.46358], [9.60205, 47.46165], [9.59482, 47.46305], [9.58208, 47.48344], [9.56312, 47.49495], [9.55125, 47.53629], [9.25619, 47.65939], [9.18203, 47.65598], [9.17593, 47.65399], [9.1755, 47.65584], [9.1705, 47.65513], [9.15181, 47.66904], [9.13845, 47.66389], [9.09891, 47.67801], [9.02093, 47.6868], [8.94093, 47.65596], [8.89946, 47.64769], [8.87625, 47.65441], [8.87383, 47.67045], [8.85065, 47.68209], [8.86989, 47.70504], [8.82002, 47.71458], [8.80663, 47.73821], [8.77309, 47.72059], [8.76965, 47.7075], [8.79966, 47.70222], [8.79511, 47.67462], [8.75856, 47.68969], [8.72809, 47.69282]], [[8.95861, 45.96485], [8.96668, 45.98436], [8.97741, 45.98317], [8.97604, 45.96151], [8.95861, 45.96485]], [[8.70847, 47.68904], [8.68985, 47.69552], [8.66837, 47.68437], [8.65769, 47.68928], [8.67508, 47.6979], [8.66416, 47.71367], [8.70237, 47.71453], [8.71773, 47.69088], [8.70847, 47.68904]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CI\", iso1A3: \"CIV\", iso1N3: \"384\", wikidata: \"Q1008\", nameEn: \"C\\xF4te d'Ivoire\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"225\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-7.52774, 3.7105], [-3.34019, 4.17519], [-3.10675, 5.08515], [-3.11073, 5.12675], [-3.063, 5.13665], [-2.96554, 5.10397], [-2.95261, 5.12477], [-2.75502, 5.10657], [-2.73074, 5.1364], [-2.77625, 5.34621], [-2.72737, 5.34789], [-2.76614, 5.60963], [-2.85378, 5.65156], [-2.93132, 5.62137], [-2.96671, 5.6415], [-2.95323, 5.71865], [-3.01896, 5.71697], [-3.25999, 6.62521], [-3.21954, 6.74407], [-3.23327, 6.81744], [-2.95438, 7.23737], [-2.97822, 7.27165], [-2.92339, 7.60847], [-2.79467, 7.86002], [-2.78395, 7.94974], [-2.74819, 7.92613], [-2.67787, 8.02055], [-2.61232, 8.02645], [-2.62901, 8.11495], [-2.49037, 8.20872], [-2.58243, 8.7789], [-2.66357, 9.01771], [-2.77799, 9.04949], [-2.69814, 9.22717], [-2.68802, 9.49343], [-2.76494, 9.40778], [-2.93012, 9.57403], [-3.00765, 9.74019], [-3.16609, 9.85147], [-3.19306, 9.93781], [-3.27228, 9.84981], [-3.31779, 9.91125], [-3.69703, 9.94279], [-4.25999, 9.76012], [-4.31392, 9.60062], [-4.6426, 9.70696], [-4.96621, 9.89132], [-4.96453, 9.99923], [-5.12465, 10.29788], [-5.39602, 10.2929], [-5.51058, 10.43177], [-5.65135, 10.46767], [-5.78124, 10.43952], [-5.99478, 10.19694], [-6.18851, 10.24244], [-6.1731, 10.46983], [-6.24795, 10.74248], [-6.325, 10.68624], [-6.40646, 10.69922], [-6.42847, 10.5694], [-6.52974, 10.59104], [-6.63541, 10.66893], [-6.68164, 10.35074], [-6.93921, 10.35291], [-7.01186, 10.25111], [-6.97444, 10.21644], [-7.00966, 10.15794], [-7.0603, 10.14711], [-7.13331, 10.24877], [-7.3707, 10.24677], [-7.44555, 10.44602], [-7.52261, 10.4655], [-7.54462, 10.40921], [-7.63048, 10.46334], [-7.92107, 10.15577], [-7.97971, 10.17117], [-8.01225, 10.1021], [-8.11921, 10.04577], [-8.15652, 9.94288], [-8.09434, 9.86936], [-8.14657, 9.55062], [-8.03463, 9.39604], [-7.85056, 9.41812], [-7.90777, 9.20456], [-7.73862, 9.08422], [-7.92518, 8.99332], [-7.95503, 8.81146], [-7.69882, 8.66148], [-7.65653, 8.36873], [-7.92518, 8.50652], [-8.22991, 8.48438], [-8.2411, 8.24196], [-8.062, 8.16071], [-7.98675, 8.20134], [-7.99919, 8.11023], [-7.94695, 8.00925], [-8.06449, 8.04989], [-8.13414, 7.87991], [-8.09931, 7.78626], [-8.21374, 7.54466], [-8.4003, 7.6285], [-8.47114, 7.55676], [-8.41935, 7.51203], [-8.37458, 7.25794], [-8.29249, 7.1691], [-8.31736, 6.82837], [-8.59456, 6.50612], [-8.48652, 6.43797], [-8.45666, 6.49977], [-8.38453, 6.35887], [-8.3298, 6.36381], [-8.17557, 6.28222], [-8.00642, 6.31684], [-7.90692, 6.27728], [-7.83478, 6.20309], [-7.8497, 6.08932], [-7.79747, 6.07696], [-7.78254, 5.99037], [-7.70294, 5.90625], [-7.67309, 5.94337], [-7.48155, 5.80974], [-7.46165, 5.84934], [-7.43677, 5.84687], [-7.43926, 5.74787], [-7.37209, 5.61173], [-7.43428, 5.42355], [-7.36463, 5.32944], [-7.46165, 5.26256], [-7.48901, 5.14118], [-7.55369, 5.08667], [-7.53876, 4.94294], [-7.59349, 4.8909], [-7.53259, 4.35145], [-7.52774, 3.7105]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CK\", iso1A3: \"COK\", iso1N3: \"184\", wikidata: \"Q26988\", nameEn: \"Cook Islands\", country: \"NZ\", groups: [\"061\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"682\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-168.15106, -10.26955], [-156.45576, -31.75456], [-156.48634, -15.52824], [-156.50903, -7.4975], [-168.15106, -10.26955]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CL\", iso1A3: \"CHL\", iso1N3: \"152\", wikidata: \"Q298\", nameEn: \"Chile\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"56\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-68.60702, -52.65781], [-68.41683, -52.33516], [-69.97824, -52.00845], [-71.99889, -51.98018], [-72.33873, -51.59954], [-72.31343, -50.58411], [-73.15765, -50.78337], [-73.55259, -49.92488], [-73.45156, -49.79461], [-73.09655, -49.14342], [-72.56894, -48.81116], [-72.54042, -48.52392], [-72.27662, -48.28727], [-72.50478, -47.80586], [-71.94152, -47.13595], [-71.68577, -46.55385], [-71.75614, -45.61611], [-71.35687, -45.22075], [-72.06985, -44.81756], [-71.26418, -44.75684], [-71.16436, -44.46244], [-71.81318, -44.38097], [-71.64206, -43.64774], [-72.14828, -42.85321], [-72.15541, -42.15941], [-71.74901, -42.11711], [-71.92726, -40.72714], [-71.37826, -38.91474], [-70.89532, -38.6923], [-71.24279, -37.20264], [-70.95047, -36.4321], [-70.38008, -36.02375], [-70.49416, -35.24145], [-69.87386, -34.13344], [-69.88099, -33.34489], [-70.55832, -31.51559], [-70.14479, -30.36595], [-69.8596, -30.26131], [-69.99507, -29.28351], [-69.80969, -29.07185], [-69.66709, -28.44055], [-69.22504, -27.95042], [-68.77586, -27.16029], [-68.43363, -27.08414], [-68.27677, -26.90626], [-68.59048, -26.49861], [-68.56909, -26.28146], [-68.38372, -26.15353], [-68.57622, -25.32505], [-68.38372, -25.08636], [-68.56909, -24.69831], [-68.24825, -24.42596], [-67.33563, -24.04237], [-66.99632, -22.99839], [-67.18382, -22.81525], [-67.54284, -22.89771], [-67.85114, -22.87076], [-68.18816, -21.28614], [-68.40403, -20.94562], [-68.53957, -20.91542], [-68.55383, -20.7355], [-68.44023, -20.62701], [-68.7276, -20.46178], [-68.74273, -20.08817], [-68.57132, -20.03134], [-68.54611, -19.84651], [-68.66761, -19.72118], [-68.41218, -19.40499], [-68.61989, -19.27584], [-68.80602, -19.08355], [-68.87082, -19.06003], [-68.94987, -18.93302], [-69.07432, -18.28259], [-69.14807, -18.16893], [-69.07496, -18.03715], [-69.28671, -17.94844], [-69.34126, -17.72753], [-69.46623, -17.60518], [-69.46897, -17.4988], [-69.66483, -17.65083], [-69.79087, -17.65563], [-69.82868, -17.72048], [-69.75305, -17.94605], [-69.81607, -18.12582], [-69.96732, -18.25992], [-70.16394, -18.31737], [-70.31267, -18.31258], [-70.378, -18.3495], [-70.59118, -18.35072], [-113.52687, -26.52828], [-68.11646, -58.14883], [-66.07313, -55.19618], [-67.11046, -54.94199], [-67.46182, -54.92205], [-68.01394, -54.8753], [-68.60733, -54.9125], [-68.60702, -52.65781]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CM\", iso1A3: \"CMR\", iso1N3: \"120\", wikidata: \"Q1009\", nameEn: \"Cameroon\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"237\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[14.83314, 12.62963], [14.55058, 12.78256], [14.56101, 12.91036], [14.46881, 13.08259], [14.08251, 13.0797], [14.20204, 12.53405], [14.17523, 12.41916], [14.22215, 12.36533], [14.4843, 12.35223], [14.6474, 12.17466], [14.61612, 11.7798], [14.55207, 11.72001], [14.64591, 11.66166], [14.6124, 11.51283], [14.17821, 11.23831], [13.97489, 11.30258], [13.78945, 11.00154], [13.7403, 11.00593], [13.70753, 10.94451], [13.73434, 10.9255], [13.54964, 10.61236], [13.5705, 10.53183], [13.43644, 10.13326], [13.34111, 10.12299], [13.25025, 10.03647], [13.25323, 10.00127], [13.286, 9.9822], [13.27409, 9.93232], [13.24132, 9.91031], [13.25025, 9.86042], [13.29941, 9.8296], [13.25472, 9.76795], [13.22642, 9.57266], [13.02385, 9.49334], [12.85628, 9.36698], [12.91958, 9.33905], [12.90022, 9.11411], [12.81085, 8.91992], [12.79, 8.75361], [12.71701, 8.7595], [12.68722, 8.65938], [12.44146, 8.6152], [12.4489, 8.52536], [12.26123, 8.43696], [12.24782, 8.17904], [12.19271, 8.10826], [12.20909, 7.97553], [11.99908, 7.67302], [12.01844, 7.52981], [11.93205, 7.47812], [11.84864, 7.26098], [11.87396, 7.09398], [11.63117, 6.9905], [11.55818, 6.86186], [11.57755, 6.74059], [11.51499, 6.60892], [11.42264, 6.5882], [11.42041, 6.53789], [11.09495, 6.51717], [11.09644, 6.68437], [10.94302, 6.69325], [10.8179, 6.83377], [10.83727, 6.9358], [10.60789, 7.06885], [10.59746, 7.14719], [10.57214, 7.16345], [10.53639, 6.93432], [10.21466, 6.88996], [10.15135, 7.03781], [9.86314, 6.77756], [9.77824, 6.79088], [9.70674, 6.51717], [9.51757, 6.43874], [8.84209, 5.82562], [8.88156, 5.78857], [8.83687, 5.68483], [8.92029, 5.58403], [8.78027, 5.1243], [8.60302, 4.87353], [8.34397, 4.30689], [9.22018, 3.72052], [9.81162, 2.33797], [9.82123, 2.35097], [9.83754, 2.32428], [9.83238, 2.29079], [9.84716, 2.24676], [9.89012, 2.20457], [9.90749, 2.20049], [9.991, 2.16561], [11.3561, 2.17217], [11.37116, 2.29975], [13.28534, 2.25716], [13.29457, 2.16106], [14.61145, 2.17866], [15.00996, 1.98887], [15.22634, 2.03243], [15.34776, 1.91264], [15.48942, 1.98265], [16.02959, 1.76483], [16.02647, 1.65591], [16.14634, 1.70259], [16.05294, 1.9811], [16.08563, 2.19733], [16.15568, 2.18955], [16.19357, 2.21537], [16.08252, 2.45708], [16.05449, 3.02306], [15.77725, 3.26835], [15.73522, 3.24348], [15.07686, 4.01805], [15.17482, 4.05131], [15.10644, 4.1362], [15.08609, 4.30282], [15.00825, 4.41458], [14.73383, 4.6135], [14.65489, 5.21343], [14.57083, 5.23979], [14.52724, 5.28319], [14.62531, 5.51411], [14.58951, 5.59777], [14.62375, 5.70466], [14.60974, 5.91838], [14.49455, 5.91683], [14.42917, 6.00508], [14.43073, 6.08867], [14.56149, 6.18928], [14.74206, 6.26356], [14.80122, 6.34866], [14.79966, 6.39043], [14.96311, 6.75693], [15.04717, 6.77085], [15.23397, 7.25135], [15.49743, 7.52179], [15.56964, 7.58936], [15.59272, 7.7696], [15.50743, 7.79302], [15.20426, 8.50892], [15.09484, 8.65982], [14.83566, 8.80557], [14.35707, 9.19611], [14.37094, 9.2954], [13.97544, 9.6365], [14.01793, 9.73169], [14.1317, 9.82413], [14.20411, 10.00055], [14.4673, 10.00264], [14.80082, 9.93818], [14.95722, 9.97926], [15.05999, 9.94845], [15.14043, 9.99246], [15.24618, 9.99246], [15.41408, 9.92876], [15.68761, 9.99344], [15.50535, 10.1098], [15.30874, 10.31063], [15.23724, 10.47764], [15.14936, 10.53915], [15.15532, 10.62846], [15.06737, 10.80921], [15.09127, 10.87431], [15.04957, 11.02347], [15.10021, 11.04101], [15.0585, 11.40481], [15.13149, 11.5537], [15.06595, 11.71126], [15.11579, 11.79313], [15.04808, 11.8731], [15.05786, 12.0608], [15.0349, 12.10698], [15.00146, 12.1223], [14.96952, 12.0925], [14.89019, 12.16593], [14.90827, 12.3269], [14.83314, 12.62963]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CN\", iso1A3: \"CHN\", iso1N3: \"156\", wikidata: \"Q148\", nameEn: \"People's Republic of China\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"CO\", iso1A3: \"COL\", iso1N3: \"170\", wikidata: \"Q739\", nameEn: \"Colombia\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"57\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-71.19849, 12.65801], [-81.58685, 18.0025], [-82.06974, 14.49418], [-82.56142, 11.91792], [-78.79327, 9.93766], [-77.58292, 9.22278], [-77.32389, 8.81247], [-77.45064, 8.49991], [-77.17257, 7.97422], [-77.57185, 7.51147], [-77.72514, 7.72348], [-77.72157, 7.47612], [-77.81426, 7.48319], [-77.89178, 7.22681], [-78.06168, 7.07793], [-82.12561, 4.00341], [-78.87137, 1.47457], [-78.42749, 1.15389], [-77.85677, 0.80197], [-77.7148, 0.85003], [-77.68613, 0.83029], [-77.66416, 0.81604], [-77.67815, 0.73863], [-77.49984, 0.64476], [-77.52001, 0.40782], [-76.89177, 0.24736], [-76.4094, 0.24015], [-76.41215, 0.38228], [-76.23441, 0.42294], [-75.82927, 0.09578], [-75.25764, -0.11943], [-75.18513, -0.0308], [-74.42701, -0.50218], [-74.26675, -0.97229], [-73.65312, -1.26222], [-72.92587, -2.44514], [-71.75223, -2.15058], [-70.94377, -2.23142], [-70.04609, -2.73906], [-70.71396, -3.7921], [-70.52393, -3.87553], [-70.3374, -3.79505], [-69.94708, -4.2431], [-69.43395, -1.42219], [-69.4215, -1.01853], [-69.59796, -0.75136], [-69.603, -0.51947], [-70.03658, -0.19681], [-70.04162, 0.55437], [-69.47696, 0.71065], [-69.20976, 0.57958], [-69.14422, 0.84172], [-69.26017, 1.06856], [-69.82987, 1.07864], [-69.83491, 1.69353], [-69.53746, 1.76408], [-69.38621, 1.70865], [-68.18128, 1.72881], [-68.26699, 1.83463], [-68.18632, 2.00091], [-67.9292, 1.82455], [-67.40488, 2.22258], [-67.299, 1.87494], [-67.15784, 1.80439], [-67.08222, 1.17441], [-66.85795, 1.22998], [-67.21967, 2.35778], [-67.65696, 2.81691], [-67.85862, 2.79173], [-67.85862, 2.86727], [-67.30945, 3.38393], [-67.50067, 3.75812], [-67.62671, 3.74303], [-67.85358, 4.53249], [-67.83341, 5.31104], [-67.59141, 5.5369], [-67.63914, 5.64963], [-67.58558, 5.84537], [-67.43513, 5.98835], [-67.4625, 6.20625], [-67.60654, 6.2891], [-69.41843, 6.1072], [-70.10716, 6.96516], [-70.7596, 7.09799], [-71.03941, 6.98163], [-71.37234, 7.01588], [-71.42212, 7.03854], [-71.44118, 7.02116], [-71.82441, 7.04314], [-72.04895, 7.03837], [-72.19437, 7.37034], [-72.43132, 7.40034], [-72.47415, 7.48928], [-72.45321, 7.57232], [-72.47827, 7.65604], [-72.46763, 7.79518], [-72.44454, 7.86031], [-72.46183, 7.90682], [-72.45806, 7.91141], [-72.47042, 7.92306], [-72.48183, 7.92909], [-72.48801, 7.94329], [-72.47213, 7.96106], [-72.39137, 8.03534], [-72.35163, 8.01163], [-72.36987, 8.19976], [-72.4042, 8.36513], [-72.65474, 8.61428], [-72.77415, 9.10165], [-72.94052, 9.10663], [-73.02119, 9.27584], [-73.36905, 9.16636], [-72.98085, 9.85253], [-72.88002, 10.44309], [-72.4767, 11.1117], [-72.24983, 11.14138], [-71.9675, 11.65536], [-71.3275, 11.85], [-70.92579, 11.96275], [-71.19849, 12.65801]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CP\", iso1A3: \"CPT\", wikidata: \"Q161258\", nameEn: \"Clipperton Island\", country: \"FR\", groups: [\"013\", \"003\", \"019\", \"UN\"], isoStatus: \"excRes\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-110.36279, 9.79626], [-108.755, 9.84085], [-109.04145, 11.13245], [-110.36279, 9.79626]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CR\", iso1A3: \"CRI\", iso1N3: \"188\", wikidata: \"Q800\", nameEn: \"Costa Rica\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"506\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-83.68276, 11.01562], [-83.66597, 10.79916], [-83.90838, 10.71161], [-84.68197, 11.07568], [-84.92439, 10.9497], [-85.60529, 11.22607], [-85.71223, 11.06868], [-86.14524, 11.09059], [-87.41779, 5.02401], [-82.94503, 7.93865], [-82.89978, 8.04083], [-82.89137, 8.05755], [-82.88641, 8.10219], [-82.9388, 8.26634], [-83.05209, 8.33394], [-82.93056, 8.43465], [-82.8679, 8.44042], [-82.8382, 8.48117], [-82.83322, 8.52464], [-82.83975, 8.54755], [-82.82739, 8.60153], [-82.8794, 8.6981], [-82.92068, 8.74832], [-82.91377, 8.774], [-82.88253, 8.83331], [-82.72126, 8.97125], [-82.93516, 9.07687], [-82.93516, 9.46741], [-82.84871, 9.4973], [-82.87919, 9.62645], [-82.77206, 9.59573], [-82.66667, 9.49746], [-82.61345, 9.49881], [-82.56507, 9.57279], [-82.51044, 9.65379], [-83.54024, 10.96805], [-83.68276, 11.01562]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CU\", iso1A3: \"CUB\", iso1N3: \"192\", wikidata: \"Q241\", nameEn: \"Cuba\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"53\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-73.62304, 20.6935], [-82.02215, 24.23074], [-85.77883, 21.92705], [-74.81171, 18.82201], [-73.62304, 20.6935]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CV\", iso1A3: \"CPV\", iso1N3: \"132\", wikidata: \"Q1011\", nameEn: \"Cape Verde\", groups: [\"Q105472\", \"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"238\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-28.81604, 14.57305], [-20.39702, 14.12816], [-23.37101, 19.134], [-28.81604, 14.57305]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CW\", iso1A3: \"CUW\", iso1N3: \"531\", wikidata: \"Q25279\", nameEn: \"Cura\\xE7ao\", aliases: [\"NL-CW\"], country: \"NL\", groups: [\"Q1451600\", \"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"599\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-68.90012, 12.62309], [-69.59009, 12.46019], [-68.99639, 11.79035], [-68.33524, 11.78151], [-68.90012, 12.62309]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CX\", iso1A3: \"CXR\", iso1N3: \"162\", wikidata: \"Q31063\", nameEn: \"Christmas Island\", country: \"AU\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"61\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[105.66835, -9.31927], [104.67494, -11.2566], [106.66176, -11.14349], [105.66835, -9.31927]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CY\", iso1A3: \"CYP\", iso1N3: \"196\", wikidata: \"Q229\", nameEn: \"Republic of Cyprus\", groups: [\"Q644636\", \"EU\", \"145\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"357\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[32.46489, 35.48584], [30.15137, 34.08517], [32.74412, 34.43926], [32.75515, 34.64985], [32.76136, 34.68318], [32.79433, 34.67883], [32.82717, 34.70622], [32.86014, 34.70585], [32.86167, 34.68734], [32.9068, 34.66102], [32.91398, 34.67343], [32.93043, 34.67091], [32.92807, 34.66736], [32.93449, 34.66241], [32.93693, 34.67027], [32.94379, 34.67111], [32.94683, 34.67907], [32.95539, 34.68471], [32.99135, 34.68061], [32.98668, 34.67268], [32.99014, 34.65518], [32.97736, 34.65277], [32.97079, 34.66112], [32.95325, 34.66462], [32.94796, 34.6587], [32.94976, 34.65204], [32.95471, 34.64528], [32.95323, 34.64075], [32.95891, 34.62919], [32.96718, 34.63446], [32.96968, 34.64046], [33.0138, 34.64424], [33.26744, 34.49942], [33.83531, 34.73974], [33.70575, 34.97947], [33.70639, 34.99303], [33.71514, 35.00294], [33.69731, 35.01754], [33.69938, 35.03123], [33.67678, 35.03866], [33.63765, 35.03869], [33.61215, 35.0527], [33.59658, 35.03635], [33.567, 35.04803], [33.57478, 35.06049], [33.53975, 35.08151], [33.48915, 35.06594], [33.47666, 35.00701], [33.45256, 35.00288], [33.45178, 35.02078], [33.47825, 35.04103], [33.48136, 35.0636], [33.46813, 35.10564], [33.41675, 35.16325], [33.4076, 35.20062], [33.38575, 35.2018], [33.37248, 35.18698], [33.3717, 35.1788], [33.36569, 35.17479], [33.35612, 35.17402], [33.35596, 35.17942], [33.34964, 35.17803], [33.35056, 35.18328], [33.31955, 35.18096], [33.3072, 35.16816], [33.27068, 35.16815], [33.15138, 35.19504], [33.11105, 35.15639], [33.08249, 35.17319], [33.01192, 35.15639], [32.94471, 35.09422], [32.86406, 35.1043], [32.85733, 35.07742], [32.70779, 35.14127], [32.70947, 35.18328], [32.64864, 35.19967], [32.60361, 35.16647], [32.46489, 35.48584]]], [[[33.74144, 35.01053], [33.7492, 35.01319], [33.74983, 35.02274], [33.74265, 35.02329], [33.73781, 35.02181], [33.7343, 35.01178], [33.74144, 35.01053]]], [[[33.77312, 34.9976], [33.75994, 35.00113], [33.75682, 34.99916], [33.76605, 34.99543], [33.76738, 34.99188], [33.7778, 34.98981], [33.77843, 34.988], [33.78149, 34.98854], [33.78318, 34.98699], [33.78571, 34.98951], [33.78917, 34.98854], [33.79191, 34.98914], [33.78516, 34.99582], [33.77553, 34.99518], [33.77312, 34.9976]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CZ\", iso1A3: \"CZE\", iso1N3: \"203\", wikidata: \"Q213\", nameEn: \"Czechia\", groups: [\"EU\", \"151\", \"150\", \"UN\"], callingCodes: [\"420\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[14.82803, 50.86966], [14.79139, 50.81438], [14.70661, 50.84096], [14.61993, 50.86049], [14.63434, 50.8883], [14.65259, 50.90513], [14.64802, 50.93241], [14.58024, 50.91443], [14.56374, 50.922], [14.59702, 50.96148], [14.59908, 50.98685], [14.58215, 50.99306], [14.56432, 51.01008], [14.53438, 51.00374], [14.53321, 51.01679], [14.49873, 51.02242], [14.50809, 51.0427], [14.49991, 51.04692], [14.49154, 51.04382], [14.49202, 51.02286], [14.45827, 51.03712], [14.41335, 51.02086], [14.30098, 51.05515], [14.25665, 50.98935], [14.28776, 50.97718], [14.32353, 50.98556], [14.32793, 50.97379], [14.30251, 50.96606], [14.31422, 50.95243], [14.39848, 50.93866], [14.38691, 50.89907], [14.30098, 50.88448], [14.27123, 50.89386], [14.24314, 50.88761], [14.22331, 50.86049], [14.02982, 50.80662], [13.98864, 50.8177], [13.89113, 50.78533], [13.89444, 50.74142], [13.82942, 50.7251], [13.76316, 50.73487], [13.70204, 50.71771], [13.65977, 50.73096], [13.52474, 50.70394], [13.53748, 50.67654], [13.5226, 50.64721], [13.49742, 50.63133], [13.46413, 50.60102], [13.42189, 50.61243], [13.37485, 50.64931], [13.37805, 50.627], [13.32264, 50.60317], [13.32594, 50.58009], [13.29454, 50.57904], [13.25158, 50.59268], [13.19043, 50.50237], [13.13424, 50.51709], [13.08301, 50.50132], [13.0312, 50.50944], [13.02038, 50.4734], [13.02147, 50.44763], [12.98433, 50.42016], [12.94058, 50.40944], [12.82465, 50.45738], [12.73476, 50.43237], [12.73044, 50.42268], [12.70731, 50.39948], [12.67261, 50.41949], [12.51356, 50.39694], [12.48747, 50.37278], [12.49214, 50.35228], [12.48256, 50.34784], [12.46643, 50.35527], [12.43722, 50.33774], [12.43371, 50.32506], [12.39924, 50.32302], [12.40158, 50.29521], [12.36594, 50.28289], [12.35425, 50.23993], [12.33263, 50.24367], [12.32445, 50.20442], [12.33847, 50.19432], [12.32596, 50.17146], [12.29232, 50.17524], [12.28063, 50.19544], [12.28755, 50.22429], [12.23943, 50.24594], [12.24791, 50.25525], [12.26953, 50.25189], [12.25119, 50.27079], [12.20823, 50.2729], [12.18013, 50.32146], [12.10907, 50.32041], [12.13716, 50.27396], [12.09287, 50.25032], [12.19335, 50.19997], [12.21484, 50.16399], [12.1917, 50.13434], [12.2073, 50.10315], [12.23709, 50.10213], [12.27433, 50.0771], [12.26111, 50.06331], [12.30798, 50.05719], [12.49908, 49.97305], [12.47264, 49.94222], [12.55197, 49.92094], [12.48256, 49.83575], [12.46603, 49.78882], [12.40489, 49.76321], [12.4462, 49.70233], [12.52553, 49.68415], [12.53544, 49.61888], [12.56188, 49.6146], [12.60155, 49.52887], [12.64782, 49.52565], [12.64121, 49.47628], [12.669, 49.42935], [12.71227, 49.42363], [12.75854, 49.3989], [12.78168, 49.34618], [12.88414, 49.33541], [12.88249, 49.35479], [12.94859, 49.34079], [13.03618, 49.30417], [13.02957, 49.27399], [13.05883, 49.26259], [13.17665, 49.16713], [13.17019, 49.14339], [13.20405, 49.12303], [13.23689, 49.11412], [13.28242, 49.1228], [13.39479, 49.04812], [13.40802, 48.98851], [13.50221, 48.93752], [13.50552, 48.97441], [13.58319, 48.96899], [13.61624, 48.9462], [13.67739, 48.87886], [13.73854, 48.88538], [13.76994, 48.83537], [13.78977, 48.83319], [13.8096, 48.77877], [13.84023, 48.76988], [14.06151, 48.66873], [14.01482, 48.63788], [14.09104, 48.5943], [14.20691, 48.5898], [14.33909, 48.55852], [14.43076, 48.58855], [14.4587, 48.64695], [14.56139, 48.60429], [14.60808, 48.62881], [14.66762, 48.58215], [14.71794, 48.59794], [14.72756, 48.69502], [14.80584, 48.73489], [14.80821, 48.77711], [14.81545, 48.7874], [14.94773, 48.76268], [14.95641, 48.75915], [14.9758, 48.76857], [14.98112, 48.77524], [14.9782, 48.7766], [14.98032, 48.77959], [14.95072, 48.79101], [14.98917, 48.90082], [14.97612, 48.96983], [14.99878, 49.01444], [15.15534, 48.99056], [15.16358, 48.94278], [15.26177, 48.95766], [15.28305, 48.98831], [15.34823, 48.98444], [15.48027, 48.94481], [15.51357, 48.91549], [15.61622, 48.89541], [15.6921, 48.85973], [15.75341, 48.8516], [15.78087, 48.87644], [15.84404, 48.86921], [16.06034, 48.75436], [16.37345, 48.729], [16.40915, 48.74576], [16.46134, 48.80865], [16.67008, 48.77699], [16.68518, 48.7281], [16.71883, 48.73806], [16.79779, 48.70998], [16.90354, 48.71541], [16.93955, 48.60371], [17.00215, 48.70887], [17.11202, 48.82925], [17.19355, 48.87602], [17.29054, 48.85546], [17.3853, 48.80936], [17.45671, 48.85004], [17.5295, 48.81117], [17.7094, 48.86721], [17.73126, 48.87885], [17.77944, 48.92318], [17.87831, 48.92679], [17.91814, 49.01784], [18.06885, 49.03157], [18.1104, 49.08624], [18.15022, 49.24518], [18.18456, 49.28909], [18.36446, 49.3267], [18.4139, 49.36517], [18.4084, 49.40003], [18.44686, 49.39467], [18.54848, 49.47059], [18.53063, 49.49022], [18.57183, 49.51162], [18.6144, 49.49824], [18.67757, 49.50895], [18.74761, 49.492], [18.84521, 49.51672], [18.84786, 49.5446], [18.80479, 49.6815], [18.72838, 49.68163], [18.69817, 49.70473], [18.62676, 49.71983], [18.62943, 49.74603], [18.62645, 49.75002], [18.61368, 49.75426], [18.61278, 49.7618], [18.57183, 49.83334], [18.60341, 49.86256], [18.57045, 49.87849], [18.57697, 49.91565], [18.54299, 49.92537], [18.54495, 49.9079], [18.53423, 49.89906], [18.41604, 49.93498], [18.33562, 49.94747], [18.33278, 49.92415], [18.31914, 49.91565], [18.27794, 49.93863], [18.27107, 49.96779], [18.21752, 49.97309], [18.20241, 49.99958], [18.10628, 50.00223], [18.07898, 50.04535], [18.03212, 50.06574], [18.00396, 50.04954], [18.04585, 50.03311], [18.04585, 50.01194], [18.00191, 50.01723], [17.86886, 49.97452], [17.77669, 50.02253], [17.7506, 50.07896], [17.6888, 50.12037], [17.66683, 50.10275], [17.59404, 50.16437], [17.70528, 50.18812], [17.76296, 50.23382], [17.72176, 50.25665], [17.74648, 50.29966], [17.69292, 50.32859], [17.67764, 50.28977], [17.58889, 50.27837], [17.3702, 50.28123], [17.34548, 50.2628], [17.34273, 50.32947], [17.27681, 50.32246], [17.19991, 50.3654], [17.19579, 50.38817], [17.14498, 50.38117], [17.1224, 50.39494], [16.89229, 50.45117], [16.85933, 50.41093], [16.90877, 50.38642], [16.94448, 50.31281], [16.99803, 50.30316], [17.02138, 50.27772], [16.99803, 50.25753], [17.02825, 50.23118], [17.00353, 50.21449], [16.98018, 50.24172], [16.8456, 50.20834], [16.7014, 50.09659], [16.63137, 50.1142], [16.55446, 50.16613], [16.56407, 50.21009], [16.42674, 50.32509], [16.39379, 50.3207], [16.3622, 50.34875], [16.36495, 50.37679], [16.30289, 50.38292], [16.28118, 50.36891], [16.22821, 50.41054], [16.21585, 50.40627], [16.19526, 50.43291], [16.31413, 50.50274], [16.34572, 50.49575], [16.44597, 50.58041], [16.33611, 50.66579], [16.23174, 50.67101], [16.20839, 50.63096], [16.10265, 50.66405], [16.02437, 50.60046], [15.98317, 50.61528], [16.0175, 50.63009], [15.97219, 50.69799], [15.87331, 50.67188], [15.81683, 50.75666], [15.73186, 50.73885], [15.43798, 50.80833], [15.3803, 50.77187], [15.36656, 50.83956], [15.2773, 50.8907], [15.27043, 50.97724], [15.2361, 50.99886], [15.1743, 50.9833], [15.16744, 51.01959], [15.11937, 50.99021], [15.10152, 51.01095], [15.06218, 51.02269], [15.03895, 51.0123], [15.02433, 51.0242], [14.96419, 50.99108], [15.01088, 50.97984], [14.99852, 50.86817], [14.82803, 50.86966]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"DE\", iso1A3: \"DEU\", iso1N3: \"276\", wikidata: \"Q183\", nameEn: \"Germany\", groups: [\"EU\", \"155\", \"150\", \"UN\"], callingCodes: [\"49\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[8.70847, 47.68904], [8.71773, 47.69088], [8.70237, 47.71453], [8.66416, 47.71367], [8.67508, 47.6979], [8.65769, 47.68928], [8.66837, 47.68437], [8.68985, 47.69552], [8.70847, 47.68904]]], [[[8.72617, 47.69651], [8.72809, 47.69282], [8.75856, 47.68969], [8.79511, 47.67462], [8.79966, 47.70222], [8.76965, 47.7075], [8.77309, 47.72059], [8.80663, 47.73821], [8.82002, 47.71458], [8.86989, 47.70504], [8.85065, 47.68209], [8.87383, 47.67045], [8.87625, 47.65441], [8.89946, 47.64769], [8.94093, 47.65596], [9.02093, 47.6868], [9.09891, 47.67801], [9.13845, 47.66389], [9.15181, 47.66904], [9.1705, 47.65513], [9.1755, 47.65584], [9.17593, 47.65399], [9.18203, 47.65598], [9.25619, 47.65939], [9.55125, 47.53629], [9.72736, 47.53457], [9.76748, 47.5934], [9.80254, 47.59419], [9.82591, 47.58158], [9.8189, 47.54688], [9.87499, 47.52953], [9.87733, 47.54688], [9.92407, 47.53111], [9.96029, 47.53899], [10.00003, 47.48216], [10.03859, 47.48927], [10.07131, 47.45531], [10.09001, 47.46005], [10.1052, 47.4316], [10.06897, 47.40709], [10.09819, 47.35724], [10.11805, 47.37228], [10.16362, 47.36674], [10.17648, 47.38889], [10.2127, 47.38019], [10.22774, 47.38904], [10.23757, 47.37609], [10.19998, 47.32832], [10.2147, 47.31014], [10.17648, 47.29149], [10.17531, 47.27167], [10.23257, 47.27088], [10.33424, 47.30813], [10.39851, 47.37623], [10.4324, 47.38494], [10.4359, 47.41183], [10.47446, 47.43318], [10.46278, 47.47901], [10.44291, 47.48453], [10.4324, 47.50111], [10.44992, 47.5524], [10.43473, 47.58394], [10.47329, 47.58552], [10.48849, 47.54057], [10.56912, 47.53584], [10.60337, 47.56755], [10.63456, 47.5591], [10.68832, 47.55752], [10.6965, 47.54253], [10.7596, 47.53228], [10.77596, 47.51729], [10.88814, 47.53701], [10.91268, 47.51334], [10.86945, 47.5015], [10.87061, 47.4786], [10.90918, 47.48571], [10.93839, 47.48018], [10.92437, 47.46991], [10.98513, 47.42882], [10.97111, 47.41617], [10.97111, 47.39561], [11.11835, 47.39719], [11.12536, 47.41222], [11.20482, 47.43198], [11.25157, 47.43277], [11.22002, 47.3964], [11.27844, 47.39956], [11.29597, 47.42566], [11.33804, 47.44937], [11.4175, 47.44621], [11.38128, 47.47465], [11.4362, 47.51413], [11.52618, 47.50939], [11.58578, 47.52281], [11.58811, 47.55515], [11.60681, 47.57881], [11.63934, 47.59202], [11.84052, 47.58354], [11.85572, 47.60166], [12.0088, 47.62451], [12.02282, 47.61033], [12.05788, 47.61742], [12.13734, 47.60639], [12.17824, 47.61506], [12.18145, 47.61019], [12.17737, 47.60121], [12.18568, 47.6049], [12.20398, 47.60667], [12.20801, 47.61082], [12.19895, 47.64085], [12.18507, 47.65984], [12.18347, 47.66663], [12.16769, 47.68167], [12.16217, 47.70105], [12.18303, 47.70065], [12.22571, 47.71776], [12.2542, 47.7433], [12.26238, 47.73544], [12.24017, 47.69534], [12.26004, 47.67725], [12.27991, 47.68827], [12.336, 47.69534], [12.37222, 47.68433], [12.43883, 47.6977], [12.44117, 47.6741], [12.50076, 47.62293], [12.53816, 47.63553], [12.57438, 47.63238], [12.6071, 47.6741], [12.7357, 47.6787], [12.77777, 47.66689], [12.76492, 47.64485], [12.82101, 47.61493], [12.77427, 47.58025], [12.80699, 47.54477], [12.84672, 47.54556], [12.85256, 47.52741], [12.9624, 47.47452], [12.98344, 47.48716], [12.9998, 47.46267], [13.04537, 47.49426], [13.03252, 47.53373], [13.05355, 47.56291], [13.04537, 47.58183], [13.06641, 47.58577], [13.06407, 47.60075], [13.09562, 47.63304], [13.07692, 47.68814], [13.01382, 47.72116], [12.98578, 47.7078], [12.92969, 47.71094], [12.91333, 47.7178], [12.90274, 47.72513], [12.91711, 47.74026], [12.9353, 47.74788], [12.94371, 47.76281], [12.93202, 47.77302], [12.96311, 47.79957], [12.98543, 47.82896], [13.00588, 47.84374], [12.94163, 47.92927], [12.93886, 47.94046], [12.93642, 47.94436], [12.93419, 47.94063], [12.92668, 47.93879], [12.91985, 47.94069], [12.9211, 47.95135], [12.91683, 47.95647], [12.87476, 47.96195], [12.8549, 48.01122], [12.76141, 48.07373], [12.74973, 48.10885], [12.7617, 48.12796], [12.78595, 48.12445], [12.80676, 48.14979], [12.82673, 48.15245], [12.8362, 48.15876], [12.836, 48.1647], [12.84475, 48.16556], [12.87126, 48.20318], [12.95306, 48.20629], [13.02083, 48.25689], [13.0851, 48.27711], [13.126, 48.27867], [13.18093, 48.29577], [13.26039, 48.29422], [13.30897, 48.31575], [13.40709, 48.37292], [13.43929, 48.43386], [13.42527, 48.45711], [13.45727, 48.51092], [13.43695, 48.55776], [13.45214, 48.56472], [13.46967, 48.55157], [13.50663, 48.57506], [13.50131, 48.58091], [13.51291, 48.59023], [13.57535, 48.55912], [13.59705, 48.57013], [13.62508, 48.55501], [13.65186, 48.55092], [13.66113, 48.53558], [13.72802, 48.51208], [13.74816, 48.53058], [13.7513, 48.5624], [13.76921, 48.55324], [13.80519, 48.58026], [13.80038, 48.59487], [13.82609, 48.62345], [13.81901, 48.6761], [13.81283, 48.68426], [13.81791, 48.69832], [13.79337, 48.71375], [13.81863, 48.73257], [13.82266, 48.75544], [13.84023, 48.76988], [13.8096, 48.77877], [13.78977, 48.83319], [13.76994, 48.83537], [13.73854, 48.88538], [13.67739, 48.87886], [13.61624, 48.9462], [13.58319, 48.96899], [13.50552, 48.97441], [13.50221, 48.93752], [13.40802, 48.98851], [13.39479, 49.04812], [13.28242, 49.1228], [13.23689, 49.11412], [13.20405, 49.12303], [13.17019, 49.14339], [13.17665, 49.16713], [13.05883, 49.26259], [13.02957, 49.27399], [13.03618, 49.30417], [12.94859, 49.34079], [12.88249, 49.35479], [12.88414, 49.33541], [12.78168, 49.34618], [12.75854, 49.3989], [12.71227, 49.42363], [12.669, 49.42935], [12.64121, 49.47628], [12.64782, 49.52565], [12.60155, 49.52887], [12.56188, 49.6146], [12.53544, 49.61888], [12.52553, 49.68415], [12.4462, 49.70233], [12.40489, 49.76321], [12.46603, 49.78882], [12.48256, 49.83575], [12.55197, 49.92094], [12.47264, 49.94222], [12.49908, 49.97305], [12.30798, 50.05719], [12.26111, 50.06331], [12.27433, 50.0771], [12.23709, 50.10213], [12.2073, 50.10315], [12.1917, 50.13434], [12.21484, 50.16399], [12.19335, 50.19997], [12.09287, 50.25032], [12.13716, 50.27396], [12.10907, 50.32041], [12.18013, 50.32146], [12.20823, 50.2729], [12.25119, 50.27079], [12.26953, 50.25189], [12.24791, 50.25525], [12.23943, 50.24594], [12.28755, 50.22429], [12.28063, 50.19544], [12.29232, 50.17524], [12.32596, 50.17146], [12.33847, 50.19432], [12.32445, 50.20442], [12.33263, 50.24367], [12.35425, 50.23993], [12.36594, 50.28289], [12.40158, 50.29521], [12.39924, 50.32302], [12.43371, 50.32506], [12.43722, 50.33774], [12.46643, 50.35527], [12.48256, 50.34784], [12.49214, 50.35228], [12.48747, 50.37278], [12.51356, 50.39694], [12.67261, 50.41949], [12.70731, 50.39948], [12.73044, 50.42268], [12.73476, 50.43237], [12.82465, 50.45738], [12.94058, 50.40944], [12.98433, 50.42016], [13.02147, 50.44763], [13.02038, 50.4734], [13.0312, 50.50944], [13.08301, 50.50132], [13.13424, 50.51709], [13.19043, 50.50237], [13.25158, 50.59268], [13.29454, 50.57904], [13.32594, 50.58009], [13.32264, 50.60317], [13.37805, 50.627], [13.37485, 50.64931], [13.42189, 50.61243], [13.46413, 50.60102], [13.49742, 50.63133], [13.5226, 50.64721], [13.53748, 50.67654], [13.52474, 50.70394], [13.65977, 50.73096], [13.70204, 50.71771], [13.76316, 50.73487], [13.82942, 50.7251], [13.89444, 50.74142], [13.89113, 50.78533], [13.98864, 50.8177], [14.02982, 50.80662], [14.22331, 50.86049], [14.24314, 50.88761], [14.27123, 50.89386], [14.30098, 50.88448], [14.38691, 50.89907], [14.39848, 50.93866], [14.31422, 50.95243], [14.30251, 50.96606], [14.32793, 50.97379], [14.32353, 50.98556], [14.28776, 50.97718], [14.25665, 50.98935], [14.30098, 51.05515], [14.41335, 51.02086], [14.45827, 51.03712], [14.49202, 51.02286], [14.49154, 51.04382], [14.49991, 51.04692], [14.50809, 51.0427], [14.49873, 51.02242], [14.53321, 51.01679], [14.53438, 51.00374], [14.56432, 51.01008], [14.58215, 50.99306], [14.59908, 50.98685], [14.59702, 50.96148], [14.56374, 50.922], [14.58024, 50.91443], [14.64802, 50.93241], [14.65259, 50.90513], [14.63434, 50.8883], [14.61993, 50.86049], [14.70661, 50.84096], [14.79139, 50.81438], [14.82803, 50.86966], [14.81664, 50.88148], [14.89681, 50.9422], [14.89252, 50.94999], [14.92942, 50.99744], [14.95529, 51.04552], [14.97938, 51.07742], [14.98229, 51.11354], [14.99689, 51.12205], [14.99079, 51.14284], [14.99646, 51.14365], [15.00083, 51.14974], [14.99414, 51.15813], [14.99311, 51.16249], [15.0047, 51.16874], [15.01242, 51.21285], [15.04288, 51.28387], [14.98008, 51.33449], [14.96899, 51.38367], [14.9652, 51.44793], [14.94749, 51.47155], [14.73219, 51.52922], [14.72652, 51.53902], [14.73047, 51.54606], [14.71125, 51.56209], [14.7727, 51.61263], [14.75759, 51.62318], [14.75392, 51.67445], [14.69065, 51.70842], [14.66386, 51.73282], [14.64625, 51.79472], [14.60493, 51.80473], [14.59089, 51.83302], [14.6588, 51.88359], [14.6933, 51.9044], [14.70601, 51.92944], [14.7177, 51.94048], [14.72163, 51.95188], [14.71836, 51.95606], [14.7139, 51.95643], [14.70488, 51.97679], [14.71339, 52.00337], [14.76026, 52.06624], [14.72971, 52.09167], [14.6917, 52.10283], [14.67683, 52.13936], [14.70616, 52.16927], [14.68344, 52.19612], [14.71319, 52.22144], [14.70139, 52.25038], [14.58149, 52.28007], [14.56378, 52.33838], [14.55228, 52.35264], [14.54423, 52.42568], [14.63056, 52.48993], [14.60081, 52.53116], [14.6289, 52.57136], [14.61073, 52.59847], [14.22071, 52.81175], [14.13806, 52.82392], [14.12256, 52.84311], [14.15873, 52.87715], [14.14056, 52.95786], [14.25954, 53.00264], [14.35044, 53.05829], [14.38679, 53.13669], [14.36696, 53.16444], [14.37853, 53.20405], [14.40662, 53.21098], [14.45125, 53.26241], [14.44133, 53.27427], [14.4215, 53.27724], [14.35209, 53.49506], [14.3273, 53.50587], [14.30416, 53.55499], [14.31904, 53.61581], [14.2853, 53.63392], [14.28477, 53.65955], [14.27133, 53.66613], [14.2836, 53.67721], [14.26782, 53.69866], [14.27249, 53.74464], [14.21323, 53.8664], [14.20823, 53.90776], [14.18544, 53.91258], [14.20647, 53.91671], [14.22634, 53.9291], [14.20811, 54.12784], [13.93395, 54.84044], [12.85844, 54.82438], [11.90309, 54.38543], [11.00303, 54.63689], [10.31111, 54.65968], [10.16755, 54.73883], [9.89314, 54.84171], [9.73563, 54.8247], [9.61187, 54.85548], [9.62734, 54.88057], [9.58937, 54.88785], [9.4659, 54.83131], [9.43155, 54.82586], [9.41213, 54.84254], [9.38532, 54.83968], [9.36496, 54.81749], [9.33849, 54.80233], [9.32771, 54.80602], [9.2474, 54.8112], [9.23445, 54.83432], [9.24631, 54.84726], [9.20571, 54.85841], [9.14275, 54.87421], [9.04629, 54.87249], [8.92795, 54.90452], [8.81178, 54.90518], [8.76387, 54.8948], [8.63979, 54.91069], [8.55769, 54.91837], [8.45719, 55.06747], [8.02459, 55.09613], [5.45168, 54.20039], [6.91025, 53.44221], [7.00198, 53.32672], [7.19052, 53.31866], [7.21679, 53.20058], [7.22681, 53.18165], [7.17898, 53.13817], [7.21694, 53.00742], [7.07253, 52.81083], [7.04557, 52.63318], [6.77307, 52.65375], [6.71641, 52.62905], [6.69507, 52.488], [6.94293, 52.43597], [6.99041, 52.47235], [7.03417, 52.40237], [7.07044, 52.37805], [7.02703, 52.27941], [7.06365, 52.23789], [7.03729, 52.22695], [6.9897, 52.2271], [6.97189, 52.20329], [6.83984, 52.11728], [6.76117, 52.11895], [6.68128, 52.05052], [6.83035, 51.9905], [6.82357, 51.96711], [6.72319, 51.89518], [6.68386, 51.91861], [6.58556, 51.89386], [6.50231, 51.86313], [6.47179, 51.85395], [6.38815, 51.87257], [6.40704, 51.82771], [6.30593, 51.84998], [6.29872, 51.86801], [6.21443, 51.86801], [6.15349, 51.90439], [6.11551, 51.89769], [6.16902, 51.84094], [6.10337, 51.84829], [6.06705, 51.86136], [5.99848, 51.83195], [5.94568, 51.82786], [5.98665, 51.76944], [5.95003, 51.7493], [6.04091, 51.71821], [6.02767, 51.6742], [6.11759, 51.65609], [6.09055, 51.60564], [6.18017, 51.54096], [6.21724, 51.48568], [6.20654, 51.40049], [6.22641, 51.39948], [6.22674, 51.36135], [6.16977, 51.33169], [6.07889, 51.24432], [6.07889, 51.17038], [6.17384, 51.19589], [6.16706, 51.15677], [5.98292, 51.07469], [5.9541, 51.03496], [5.9134, 51.06736], [5.86735, 51.05182], [5.87849, 51.01969], [5.90493, 51.00198], [5.90296, 50.97356], [5.95282, 50.98728], [6.02697, 50.98303], [6.01615, 50.93367], [6.09297, 50.92066], [6.07486, 50.89307], [6.08805, 50.87223], [6.07693, 50.86025], [6.07431, 50.84674], [6.05702, 50.85179], [6.05623, 50.8572], [6.01921, 50.84435], [6.02328, 50.81694], [6.00462, 50.80065], [5.98404, 50.80988], [5.97497, 50.79992], [6.02624, 50.77453], [6.01976, 50.75398], [6.03889, 50.74618], [6.0326, 50.72647], [6.0406, 50.71848], [6.04428, 50.72861], [6.11707, 50.72231], [6.17852, 50.6245], [6.26957, 50.62444], [6.2476, 50.60392], [6.24888, 50.59869], [6.24005, 50.58732], [6.22581, 50.5907], [6.20281, 50.56952], [6.17739, 50.55875], [6.17802, 50.54179], [6.19735, 50.53576], [6.19579, 50.5313], [6.18716, 50.52653], [6.19193, 50.5212], [6.20599, 50.52089], [6.22335, 50.49578], [6.26637, 50.50272], [6.30809, 50.50058], [6.3465, 50.48833], [6.34005, 50.46083], [6.37219, 50.45397], [6.36852, 50.40776], [6.34406, 50.37994], [6.3688, 50.35898], [6.40785, 50.33557], [6.40641, 50.32425], [6.35701, 50.31139], [6.32488, 50.32333], [6.29949, 50.30887], [6.28797, 50.27458], [6.208, 50.25179], [6.16853, 50.2234], [6.18364, 50.20815], [6.18739, 50.1822], [6.14588, 50.17106], [6.14132, 50.14971], [6.15298, 50.14126], [6.1379, 50.12964], [6.12055, 50.09171], [6.11274, 50.05916], [6.13458, 50.04141], [6.13044, 50.02929], [6.14666, 50.02207], [6.13794, 50.01466], [6.13273, 50.02019], [6.1295, 50.01849], [6.13806, 50.01056], [6.14948, 50.00908], [6.14147, 49.99563], [6.1701, 49.98518], [6.16466, 49.97086], [6.17872, 49.9537], [6.18554, 49.95622], [6.18045, 49.96611], [6.19089, 49.96991], [6.19856, 49.95053], [6.22094, 49.94955], [6.22608, 49.929], [6.21882, 49.92403], [6.22926, 49.92096], [6.23496, 49.89972], [6.26146, 49.88203], [6.28874, 49.87592], [6.29692, 49.86685], [6.30963, 49.87021], [6.32303, 49.85133], [6.32098, 49.83728], [6.33585, 49.83785], [6.34267, 49.84974], [6.36576, 49.85032], [6.40022, 49.82029], [6.42521, 49.81591], [6.42905, 49.81091], [6.44131, 49.81443], [6.45425, 49.81164], [6.47111, 49.82263], [6.48718, 49.81267], [6.50647, 49.80916], [6.51215, 49.80124], [6.52121, 49.81338], [6.53122, 49.80666], [6.52169, 49.79787], [6.50534, 49.78952], [6.51669, 49.78336], [6.51056, 49.77515], [6.51828, 49.76855], [6.51646, 49.75961], [6.50174, 49.75292], [6.50193, 49.73291], [6.51805, 49.72425], [6.51397, 49.72058], [6.50261, 49.72718], [6.49535, 49.72645], [6.49694, 49.72205], [6.5042, 49.71808], [6.50647, 49.71353], [6.49785, 49.71118], [6.48014, 49.69767], [6.46048, 49.69092], [6.44654, 49.67799], [6.42937, 49.66857], [6.42726, 49.66078], [6.43768, 49.66021], [6.4413, 49.65722], [6.41861, 49.61723], [6.39822, 49.60081], [6.385, 49.59946], [6.37464, 49.58886], [6.38342, 49.5799], [6.38024, 49.57593], [6.36676, 49.57813], [6.35825, 49.57053], [6.38228, 49.55855], [6.38072, 49.55171], [6.35666, 49.52931], [6.36788, 49.50377], [6.36907, 49.48931], [6.36778, 49.46937], [6.38352, 49.46463], [6.39168, 49.4667], [6.40274, 49.46546], [6.42432, 49.47683], [6.55404, 49.42464], [6.533, 49.40748], [6.60091, 49.36864], [6.58807, 49.35358], [6.572, 49.35027], [6.60186, 49.31055], [6.66583, 49.28065], [6.69274, 49.21661], [6.71843, 49.2208], [6.73256, 49.20486], [6.71137, 49.18808], [6.73765, 49.16375], [6.78265, 49.16793], [6.83385, 49.15162], [6.84703, 49.15734], [6.86225, 49.18185], [6.85016, 49.19354], [6.85119, 49.20038], [6.83555, 49.21249], [6.85939, 49.22376], [6.89298, 49.20863], [6.91875, 49.22261], [6.93831, 49.2223], [6.94028, 49.21641], [6.95963, 49.203], [6.97273, 49.2099], [7.01318, 49.19018], [7.03459, 49.19096], [7.0274, 49.17042], [7.03178, 49.15734], [7.04662, 49.13724], [7.04409, 49.12123], [7.04843, 49.11422], [7.05548, 49.11185], [7.06642, 49.11415], [7.07162, 49.1255], [7.09007, 49.13094], [7.07859, 49.15031], [7.10715, 49.15631], [7.10384, 49.13787], [7.12504, 49.14253], [7.1358, 49.1282], [7.1593, 49.1204], [7.23473, 49.12971], [7.29514, 49.11426], [7.3195, 49.14231], [7.35995, 49.14399], [7.3662, 49.17308], [7.44052, 49.18354], [7.44455, 49.16765], [7.49473, 49.17], [7.49172, 49.13915], [7.53012, 49.09818], [7.56416, 49.08136], [7.62575, 49.07654], [7.63618, 49.05428], [7.75948, 49.04562], [7.79557, 49.06583], [7.86386, 49.03499], [7.93641, 49.05544], [7.97783, 49.03161], [8.14189, 48.97833], [8.22604, 48.97352], [8.20031, 48.95856], [8.19989, 48.95825], [8.12813, 48.87985], [8.10253, 48.81829], [8.06802, 48.78957], [8.0326, 48.79017], [8.01534, 48.76085], [7.96994, 48.75606], [7.96812, 48.72491], [7.89002, 48.66317], [7.84098, 48.64217], [7.80057, 48.5857], [7.80167, 48.54758], [7.80647, 48.51239], [7.76833, 48.48945], [7.73109, 48.39192], [7.74562, 48.32736], [7.69022, 48.30018], [7.6648, 48.22219], [7.57137, 48.12292], [7.56966, 48.03265], [7.62302, 47.97898], [7.55673, 47.87371], [7.52921, 47.77747], [7.54761, 47.72912], [7.53722, 47.71635], [7.51266, 47.70197], [7.51915, 47.68335], [7.52067, 47.66437], [7.53384, 47.65115], [7.5591, 47.63849], [7.57423, 47.61628], [7.58851, 47.60794], [7.59301, 47.60058], [7.58945, 47.59017], [7.60523, 47.58519], [7.60459, 47.57869], [7.61929, 47.57683], [7.64309, 47.59151], [7.64213, 47.5944], [7.64599, 47.59695], [7.67395, 47.59212], [7.68229, 47.59905], [7.69385, 47.60099], [7.68486, 47.59601], [7.67115, 47.5871], [7.68904, 47.57133], [7.67655, 47.56435], [7.63338, 47.56256], [7.65083, 47.54662], [7.66174, 47.54554], [7.6656, 47.53752], [7.68101, 47.53232], [7.69642, 47.53297], [7.71961, 47.54219], [7.75261, 47.54599], [7.79486, 47.55691], [7.81901, 47.58798], [7.84412, 47.5841], [7.88664, 47.58854], [7.90673, 47.57674], [7.91251, 47.55031], [7.94494, 47.54511], [7.95682, 47.55789], [7.97581, 47.55493], [8.00113, 47.55616], [8.02136, 47.55096], [8.04383, 47.55443], [8.06663, 47.56374], [8.08557, 47.55768], [8.10002, 47.56504], [8.10395, 47.57918], [8.11543, 47.5841], [8.13662, 47.58432], [8.13823, 47.59147], [8.14947, 47.59558], [8.1652, 47.5945], [8.19378, 47.61636], [8.20617, 47.62141], [8.22011, 47.6181], [8.22577, 47.60385], [8.23809, 47.61204], [8.25863, 47.61571], [8.26313, 47.6103], [8.2824, 47.61225], [8.29722, 47.60603], [8.29524, 47.5919], [8.30277, 47.58607], [8.32735, 47.57133], [8.35512, 47.57014], [8.38273, 47.56608], [8.39477, 47.57826], [8.43235, 47.56617], [8.49431, 47.58107], [8.48949, 47.588], [8.46637, 47.58389], [8.45578, 47.60121], [8.50747, 47.61897], [8.51686, 47.63476], [8.55756, 47.62394], [8.57586, 47.59537], [8.60348, 47.61204], [8.59545, 47.64298], [8.60701, 47.65271], [8.61471, 47.64514], [8.60412, 47.63735], [8.62049, 47.63757], [8.62884, 47.65098], [8.61113, 47.66332], [8.6052, 47.67258], [8.57683, 47.66158], [8.56141, 47.67088], [8.52801, 47.66059], [8.5322, 47.64687], [8.49656, 47.64709], [8.46605, 47.64103], [8.4667, 47.65747], [8.44711, 47.65379], [8.42264, 47.66667], [8.41346, 47.66676], [8.40473, 47.67499], [8.4211, 47.68407], [8.40569, 47.69855], [8.44807, 47.72426], [8.45771, 47.7493], [8.48868, 47.77215], [8.56814, 47.78001], [8.56415, 47.80633], [8.61657, 47.79998], [8.62408, 47.7626], [8.64425, 47.76398], [8.65292, 47.80066], [8.68022, 47.78599], [8.68985, 47.75686], [8.71778, 47.76571], [8.74251, 47.75168], [8.70543, 47.73121], [8.73671, 47.7169], [8.72617, 47.69651]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"DG\", iso1A3: \"DGA\", wikidata: \"Q184851\", nameEn: \"Diego Garcia\", country: \"GB\", groups: [\"IO\", \"BOTS\", \"014\", \"202\", \"002\", \"UN\"], isoStatus: \"excRes\", callingCodes: [\"246\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[73.14823, -7.76302], [73.09982, -6.07324], [71.43792, -7.73904], [73.14823, -7.76302]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"DJ\", iso1A3: \"DJI\", iso1N3: \"262\", wikidata: \"Q977\", nameEn: \"Djibouti\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"253\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[43.90659, 12.3823], [43.90659, 12.3823], [43.32909, 12.59711], [43.29075, 12.79154], [42.86195, 12.58747], [42.7996, 12.42629], [42.6957, 12.36201], [42.46941, 12.52661], [42.4037, 12.46478], [41.95461, 11.81157], [41.82878, 11.72361], [41.77727, 11.49902], [41.8096, 11.33606], [41.80056, 10.97127], [42.06302, 10.92599], [42.13691, 10.97586], [42.42669, 10.98493], [42.62989, 11.09711], [42.75111, 11.06992], [42.79037, 10.98493], [42.95776, 10.98533], [43.90659, 12.3823]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"DK\", iso1A3: \"DNK\", iso1N3: \"208\", wikidata: \"Q756617\", nameEn: \"Kingdom of Denmark\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"DM\", iso1A3: \"DMA\", iso1N3: \"212\", wikidata: \"Q784\", nameEn: \"Dominica\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 767\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-61.32485, 14.91445], [-60.86656, 15.82603], [-61.95646, 15.5094], [-61.32485, 14.91445]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"DO\", iso1A3: \"DOM\", iso1N3: \"214\", wikidata: \"Q786\", nameEn: \"Dominican Republic\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"1 809\", \"1 829\", \"1 849\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-67.87844, 21.7938], [-72.38946, 20.27111], [-71.77419, 19.73128], [-71.75865, 19.70231], [-71.7429, 19.58445], [-71.71449, 19.55364], [-71.71268, 19.53374], [-71.6802, 19.45008], [-71.69448, 19.37866], [-71.77766, 19.33823], [-71.73229, 19.26686], [-71.62642, 19.21212], [-71.65337, 19.11759], [-71.69938, 19.10916], [-71.71088, 19.08353], [-71.74088, 19.0437], [-71.88102, 18.95007], [-71.77766, 18.95007], [-71.72624, 18.87802], [-71.71885, 18.78423], [-71.82556, 18.62551], [-71.95412, 18.64939], [-72.00201, 18.62312], [-71.88102, 18.50125], [-71.90875, 18.45821], [-71.69952, 18.34101], [-71.78271, 18.18302], [-71.75465, 18.14405], [-71.74994, 18.11115], [-71.73783, 18.07177], [-71.75671, 18.03456], [-72.29523, 17.48026], [-68.39466, 16.14167], [-67.87844, 21.7938]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"DZ\", iso1A3: \"DZA\", iso1N3: \"012\", wikidata: \"Q262\", nameEn: \"Algeria\", groups: [\"015\", \"002\", \"UN\"], callingCodes: [\"213\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[8.59123, 37.14286], [5.10072, 39.89531], [-2.27707, 35.35051], [-2.21248, 35.08532], [-2.21445, 35.04378], [-2.04734, 34.93218], [-1.97833, 34.93218], [-1.97469, 34.886], [-1.73707, 34.74226], [-1.84569, 34.61907], [-1.69788, 34.48056], [-1.78042, 34.39018], [-1.64666, 34.10405], [-1.73494, 33.71721], [-1.59508, 33.59929], [-1.67067, 33.27084], [-1.46249, 33.0499], [-1.54244, 32.95499], [-1.37794, 32.73628], [-0.9912, 32.52467], [-1.24998, 32.32993], [-1.24453, 32.1917], [-1.15735, 32.12096], [-1.22829, 32.07832], [-2.46166, 32.16603], [-2.93873, 32.06557], [-2.82784, 31.79459], [-3.66314, 31.6339], [-3.66386, 31.39202], [-3.77647, 31.31912], [-3.77103, 31.14984], [-3.54944, 31.0503], [-3.65418, 30.85566], [-3.64735, 30.67539], [-4.31774, 30.53229], [-4.6058, 30.28343], [-5.21671, 29.95253], [-5.58831, 29.48103], [-5.72121, 29.52322], [-5.75616, 29.61407], [-6.69965, 29.51623], [-6.78351, 29.44634], [-6.95824, 29.50924], [-7.61585, 29.36252], [-8.6715, 28.71194], [-8.66879, 27.6666], [-8.66674, 27.31569], [-4.83423, 24.99935], [1.15698, 21.12843], [1.20992, 20.73533], [3.24648, 19.81703], [3.12501, 19.1366], [3.36082, 18.9745], [4.26651, 19.14224], [5.8153, 19.45101], [7.38361, 20.79165], [7.48273, 20.87258], [11.96886, 23.51735], [11.62498, 24.26669], [11.41061, 24.21456], [10.85323, 24.5595], [10.33159, 24.5465], [10.02432, 24.98124], [10.03146, 25.35635], [9.38834, 26.19288], [9.51696, 26.39148], [9.89569, 26.57696], [9.78136, 29.40961], [9.3876, 30.16738], [9.55544, 30.23971], [9.07483, 32.07865], [8.35999, 32.50101], [8.31895, 32.83483], [8.1179, 33.05086], [8.11433, 33.10175], [7.83028, 33.18851], [7.73687, 33.42114], [7.54088, 33.7726], [7.52851, 34.06493], [7.66174, 34.20167], [7.74207, 34.16492], [7.81242, 34.21841], [7.86264, 34.3987], [8.20482, 34.57575], [8.29655, 34.72798], [8.25189, 34.92009], [8.30727, 34.95378], [8.3555, 35.10007], [8.47318, 35.23376], [8.30329, 35.29884], [8.36086, 35.47774], [8.35371, 35.66373], [8.26472, 35.73669], [8.2626, 35.91733], [8.40731, 36.42208], [8.18936, 36.44939], [8.16167, 36.48817], [8.47609, 36.66607], [8.46537, 36.7706], [8.57613, 36.78062], [8.67706, 36.8364], [8.62972, 36.86499], [8.64044, 36.9401], [8.59123, 37.14286]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"EA\", wikidata: \"Q28868874\", nameEn: \"Ceuta, Melilla\", country: \"ES\", level: \"territory\", isoStatus: \"excRes\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"EC\", iso1A3: \"ECU\", iso1N3: \"218\", wikidata: \"Q736\", nameEn: \"Ecuador\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"EE\", iso1A3: \"EST\", iso1N3: \"233\", wikidata: \"Q191\", nameEn: \"Estonia\", aliases: [\"EW\"], groups: [\"EU\", \"154\", \"150\", \"UN\"], callingCodes: [\"372\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[26.32936, 60.00121], [20.5104, 59.15546], [19.84909, 57.57876], [22.80496, 57.87798], [23.20055, 57.56697], [24.26221, 57.91787], [24.3579, 57.87471], [25.19484, 58.0831], [25.28237, 57.98539], [25.29581, 58.08288], [25.73499, 57.90193], [26.05949, 57.84744], [26.0324, 57.79037], [26.02456, 57.78342], [26.027, 57.78158], [26.0266, 57.77441], [26.02069, 57.77169], [26.02415, 57.76865], [26.03332, 57.7718], [26.0543, 57.76105], [26.08098, 57.76619], [26.2029, 57.7206], [26.1866, 57.6849], [26.29253, 57.59244], [26.46527, 57.56885], [26.54675, 57.51813], [26.90364, 57.62823], [27.34698, 57.52242], [27.31919, 57.57672], [27.40393, 57.62125], [27.3746, 57.66834], [27.52615, 57.72843], [27.50171, 57.78842], [27.56689, 57.83356], [27.78526, 57.83963], [27.81841, 57.89244], [27.67282, 57.92627], [27.62393, 58.09462], [27.48541, 58.22615], [27.55489, 58.39525], [27.36366, 58.78381], [27.74429, 58.98351], [27.80482, 59.1116], [27.87978, 59.18097], [27.90911, 59.24353], [28.00689, 59.28351], [28.14215, 59.28934], [28.19284, 59.35791], [28.20537, 59.36491], [28.21137, 59.38058], [28.19061, 59.39962], [28.04187, 59.47017], [27.85643, 59.58538], [26.90044, 59.63819], [26.32936, 60.00121]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"EG\", iso1A3: \"EGY\", iso1N3: \"818\", wikidata: \"Q79\", nameEn: \"Egypt\", groups: [\"015\", \"002\", \"UN\"], callingCodes: [\"20\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.62659, 31.82938], [26.92891, 33.39516], [24.8458, 31.39877], [25.01077, 30.73861], [24.71117, 30.17441], [24.99968, 29.24574], [24.99885, 21.99535], [33.17563, 22.00405], [34.0765, 22.00501], [37.8565, 22.00903], [34.4454, 27.91479], [34.8812, 29.36878], [34.92298, 29.45305], [34.26742, 31.21998], [34.24012, 31.29591], [34.23572, 31.2966], [34.21853, 31.32363], [34.052, 31.46619], [33.62659, 31.82938]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"EH\", iso1A3: \"ESH\", iso1N3: \"732\", wikidata: \"Q6250\", nameEn: \"Western Sahara\", groups: [\"015\", \"002\"], callingCodes: [\"212\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-8.66879, 27.6666], [-8.77527, 27.66663], [-8.71787, 26.9898], [-9.08698, 26.98639], [-9.56957, 26.90042], [-9.81998, 26.71379], [-10.68417, 26.90984], [-11.35695, 26.8505], [-11.23622, 26.72023], [-11.38635, 26.611], [-11.62052, 26.05229], [-12.06001, 26.04442], [-12.12281, 25.13682], [-12.92147, 24.39502], [-13.00628, 24.01923], [-13.75627, 23.77231], [-14.10361, 22.75501], [-14.1291, 22.41636], [-14.48112, 22.00886], [-14.47329, 21.63839], [-14.78487, 21.36587], [-16.44269, 21.39745], [-16.9978, 21.36239], [-17.02707, 21.34022], [-17.21511, 21.34226], [-17.35589, 20.80492], [-17.0471, 20.76408], [-17.0695, 20.85742], [-17.06781, 20.92697], [-17.0396, 20.9961], [-17.0357, 21.05368], [-16.99806, 21.12142], [-16.95474, 21.33997], [-13.01525, 21.33343], [-13.08438, 22.53866], [-13.15313, 22.75649], [-13.10753, 22.89493], [-13.00412, 23.02297], [-12.5741, 23.28975], [-12.36213, 23.3187], [-12.14969, 23.41935], [-12.00251, 23.4538], [-12.0002, 25.9986], [-8.66721, 25.99918], [-8.66674, 27.31569], [-8.66879, 27.6666]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ER\", iso1A3: \"ERI\", iso1N3: \"232\", wikidata: \"Q986\", nameEn: \"Eritrea\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"291\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[40.99158, 15.81743], [39.63762, 18.37348], [38.57727, 17.98125], [38.45916, 17.87167], [38.37133, 17.66269], [38.13362, 17.53906], [37.50967, 17.32199], [37.42694, 17.04041], [36.99777, 17.07172], [36.92193, 16.23451], [36.76371, 15.80831], [36.69761, 15.75323], [36.54276, 15.23478], [36.44337, 15.14963], [36.54376, 14.25597], [36.56536, 14.26177], [36.55659, 14.28237], [36.63364, 14.31172], [36.85787, 14.32201], [37.01622, 14.2561], [37.09486, 14.27155], [37.13206, 14.40746], [37.3106, 14.44657], [37.47319, 14.2149], [37.528, 14.18413], [37.91287, 14.89447], [38.0364, 14.72745], [38.25562, 14.67287], [38.3533, 14.51323], [38.45748, 14.41445], [38.78306, 14.4754], [38.98058, 14.54895], [39.02834, 14.63717], [39.16074, 14.65187], [39.14772, 14.61827], [39.19547, 14.56996], [39.23888, 14.56365], [39.26927, 14.48801], [39.2302, 14.44598], [39.2519, 14.40393], [39.37685, 14.54402], [39.52756, 14.49011], [39.50585, 14.55735], [39.58182, 14.60987], [39.76632, 14.54264], [39.9443, 14.41024], [40.07236, 14.54264], [40.14649, 14.53969], [40.21128, 14.39342], [40.25686, 14.41445], [40.9167, 14.11152], [41.25097, 13.60787], [41.62864, 13.38626], [42.05841, 12.80912], [42.21469, 12.75832], [42.2798, 12.6355], [42.4037, 12.46478], [42.46941, 12.52661], [42.6957, 12.36201], [42.7996, 12.42629], [42.86195, 12.58747], [43.29075, 12.79154], [40.99158, 15.81743]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ES\", iso1A3: \"ESP\", iso1N3: \"724\", wikidata: \"Q29\", nameEn: \"Spain\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"ET\", iso1A3: \"ETH\", iso1N3: \"231\", wikidata: \"Q115\", nameEn: \"Ethiopia\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"251\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[42.4037, 12.46478], [42.2798, 12.6355], [42.21469, 12.75832], [42.05841, 12.80912], [41.62864, 13.38626], [41.25097, 13.60787], [40.9167, 14.11152], [40.25686, 14.41445], [40.21128, 14.39342], [40.14649, 14.53969], [40.07236, 14.54264], [39.9443, 14.41024], [39.76632, 14.54264], [39.58182, 14.60987], [39.50585, 14.55735], [39.52756, 14.49011], [39.37685, 14.54402], [39.2519, 14.40393], [39.2302, 14.44598], [39.26927, 14.48801], [39.23888, 14.56365], [39.19547, 14.56996], [39.14772, 14.61827], [39.16074, 14.65187], [39.02834, 14.63717], [38.98058, 14.54895], [38.78306, 14.4754], [38.45748, 14.41445], [38.3533, 14.51323], [38.25562, 14.67287], [38.0364, 14.72745], [37.91287, 14.89447], [37.528, 14.18413], [37.47319, 14.2149], [37.3106, 14.44657], [37.13206, 14.40746], [37.09486, 14.27155], [37.01622, 14.2561], [36.85787, 14.32201], [36.63364, 14.31172], [36.55659, 14.28237], [36.56536, 14.26177], [36.54376, 14.25597], [36.44653, 13.95666], [36.48824, 13.83954], [36.38993, 13.56459], [36.24545, 13.36759], [36.13374, 12.92665], [36.16651, 12.88019], [36.14268, 12.70879], [36.01458, 12.72478], [35.70476, 12.67101], [35.24302, 11.91132], [35.11492, 11.85156], [35.05832, 11.71158], [35.09556, 11.56278], [34.95704, 11.24448], [35.01215, 11.19626], [34.93172, 10.95946], [34.97789, 10.91559], [34.97491, 10.86147], [34.86916, 10.78832], [34.86618, 10.74588], [34.77532, 10.69027], [34.77383, 10.74588], [34.59062, 10.89072], [34.4372, 10.781], [34.2823, 10.53508], [34.34783, 10.23914], [34.32102, 10.11599], [34.22718, 10.02506], [34.20484, 9.9033], [34.13186, 9.7492], [34.08717, 9.55243], [34.10229, 9.50238], [34.14304, 9.04654], [34.14453, 8.60204], [34.01346, 8.50041], [33.89579, 8.4842], [33.87195, 8.41938], [33.71407, 8.3678], [33.66938, 8.44442], [33.54575, 8.47094], [33.3119, 8.45474], [33.19721, 8.40317], [33.1853, 8.29264], [33.18083, 8.13047], [33.08401, 8.05822], [33.0006, 7.90333], [33.04944, 7.78989], [33.24637, 7.77939], [33.32531, 7.71297], [33.44745, 7.7543], [33.71407, 7.65983], [33.87642, 7.5491], [34.02984, 7.36449], [34.03878, 7.27437], [34.01495, 7.25664], [34.19369, 7.12807], [34.19369, 7.04382], [34.35753, 6.91963], [34.47669, 6.91076], [34.53925, 6.82794], [34.53776, 6.74808], [34.65096, 6.72589], [34.77459, 6.5957], [34.87736, 6.60161], [35.01738, 6.46991], [34.96227, 6.26415], [35.00546, 5.89387], [35.12611, 5.68937], [35.13058, 5.62118], [35.31188, 5.50106], [35.29938, 5.34042], [35.50792, 5.42431], [35.8576, 5.33413], [35.81968, 5.10757], [35.82118, 4.77382], [35.9419, 4.61933], [35.95449, 4.53244], [36.03924, 4.44406], [36.84474, 4.44518], [37.07724, 4.33503], [38.14168, 3.62487], [38.45812, 3.60445], [38.52336, 3.62551], [38.91938, 3.51198], [39.07736, 3.5267], [39.19954, 3.47834], [39.49444, 3.45521], [39.51551, 3.40895], [39.55132, 3.39634], [39.58339, 3.47434], [39.76808, 3.67058], [39.86043, 3.86974], [40.77498, 4.27683], [41.1754, 3.94079], [41.89488, 3.97375], [42.07619, 4.17667], [42.55853, 4.20518], [42.84526, 4.28357], [42.97746, 4.44032], [43.04177, 4.57923], [43.40263, 4.79289], [44.02436, 4.9451], [44.98104, 4.91821], [47.97917, 8.00124], [47.92477, 8.00111], [46.99339, 7.9989], [44.19222, 8.93028], [43.32613, 9.59205], [43.23518, 9.84605], [43.0937, 9.90579], [42.87643, 10.18441], [42.69452, 10.62672], [42.95776, 10.98533], [42.79037, 10.98493], [42.75111, 11.06992], [42.62989, 11.09711], [42.42669, 10.98493], [42.13691, 10.97586], [42.06302, 10.92599], [41.80056, 10.97127], [41.8096, 11.33606], [41.77727, 11.49902], [41.82878, 11.72361], [41.95461, 11.81157], [42.4037, 12.46478]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"EU\", iso1A3: \"EUE\", wikidata: \"Q458\", nameEn: \"European Union\", level: \"union\", isoStatus: \"excRes\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"FI\", iso1A3: \"FIN\", iso1N3: \"246\", wikidata: \"Q33\", nameEn: \"Finland\", aliases: [\"SF\"] }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"FJ\", iso1A3: \"FJI\", iso1N3: \"242\", wikidata: \"Q712\", nameEn: \"Fiji\", groups: [\"054\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"679\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[174.245, -23.1974], [179.99999, -22.5], [179.99999, -11.5], [174, -11.5], [174.245, -23.1974]]], [[[-176.76826, -14.95183], [-180, -14.96041], [-180, -22.90585], [-176.74538, -22.89767], [-176.76826, -14.95183]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"FK\", iso1A3: \"FLK\", iso1N3: \"238\", wikidata: \"Q9648\", nameEn: \"Falkland Islands\", country: \"GB\", groups: [\"BOTS\", \"005\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"500\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-63.67376, -55.11859], [-54.56126, -51.26248], [-61.26735, -50.63919], [-63.67376, -55.11859]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"FM\", iso1A3: \"FSM\", iso1N3: \"583\", wikidata: \"Q702\", nameEn: \"Federated States of Micronesia\", groups: [\"057\", \"009\", \"UN\"], roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"691\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[138.20583, 13.3783], [136.27107, 6.73747], [156.88247, -1.39237], [165.19726, 6.22546], [138.20583, 13.3783]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"FO\", iso1A3: \"FRO\", iso1N3: \"234\", wikidata: \"Q4628\", nameEn: \"Faroe Islands\", country: \"DK\", groups: [\"154\", \"150\", \"UN\"], callingCodes: [\"298\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-8.51774, 62.35338], [-6.51083, 60.95272], [-5.70102, 62.77194], [-8.51774, 62.35338]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"FR\", iso1A3: \"FRA\", iso1N3: \"250\", wikidata: \"Q142\", nameEn: \"France\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"FX\", iso1A3: \"FXX\", iso1N3: \"249\", wikidata: \"Q212429\", nameEn: \"Metropolitan France\", country: \"FR\", groups: [\"EU\", \"155\", \"150\", \"UN\"], isoStatus: \"excRes\", callingCodes: [\"33\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[2.55904, 51.07014], [2.18458, 51.52087], [1.17405, 50.74239], [-2.02963, 49.91866], [-2.09454, 49.46288], [-1.83944, 49.23037], [-2.00491, 48.86706], [-2.65349, 49.15373], [-6.28985, 48.93406], [-1.81005, 43.59738], [-1.77289, 43.38957], [-1.79319, 43.37497], [-1.78332, 43.36399], [-1.78714, 43.35476], [-1.77068, 43.34396], [-1.75334, 43.34107], [-1.75079, 43.3317], [-1.7397, 43.32979], [-1.73074, 43.29481], [-1.69407, 43.31378], [-1.62481, 43.30726], [-1.63052, 43.28591], [-1.61341, 43.25269], [-1.57674, 43.25269], [-1.55963, 43.28828], [-1.50992, 43.29481], [-1.45289, 43.27049], [-1.40942, 43.27272], [-1.3758, 43.24511], [-1.41562, 43.12815], [-1.47555, 43.08372], [-1.44067, 43.047], [-1.35272, 43.02658], [-1.34419, 43.09665], [-1.32209, 43.1127], [-1.27118, 43.11961], [-1.30052, 43.09581], [-1.30531, 43.06859], [-1.25244, 43.04164], [-1.22881, 43.05534], [-1.10333, 43.0059], [-1.00963, 42.99279], [-0.97133, 42.96239], [-0.81652, 42.95166], [-0.75478, 42.96916], [-0.72037, 42.92541], [-0.73422, 42.91228], [-0.72608, 42.89318], [-0.69837, 42.87945], [-0.67637, 42.88303], [-0.55497, 42.77846], [-0.50863, 42.82713], [-0.44334, 42.79939], [-0.41319, 42.80776], [-0.38833, 42.80132], [-0.3122, 42.84788], [-0.17939, 42.78974], [-0.16141, 42.79535], [-0.10519, 42.72761], [-0.02468, 42.68513], [0.17569, 42.73424], [0.25336, 42.7174], [0.29407, 42.67431], [0.36251, 42.72282], [0.40214, 42.69779], [0.67873, 42.69458], [0.65421, 42.75872], [0.66121, 42.84021], [0.711, 42.86372], [0.93089, 42.79154], [0.96166, 42.80629], [0.98292, 42.78754], [1.0804, 42.78569], [1.15928, 42.71407], [1.35562, 42.71944], [1.44197, 42.60217], [1.47986, 42.61346], [1.46718, 42.63296], [1.48043, 42.65203], [1.50867, 42.64483], [1.55418, 42.65669], [1.60085, 42.62703], [1.63485, 42.62957], [1.6625, 42.61982], [1.68267, 42.62533], [1.73452, 42.61515], [1.72588, 42.59098], [1.7858, 42.57698], [1.73683, 42.55492], [1.72515, 42.50338], [1.76335, 42.48863], [1.83037, 42.48395], [1.88853, 42.4501], [1.93663, 42.45439], [1.94292, 42.44316], [1.94061, 42.43333], [1.94084, 42.43039], [1.9574, 42.42401], [1.96482, 42.37787], [2.00488, 42.35399], [2.06241, 42.35906], [2.11621, 42.38393], [2.12789, 42.41291], [2.16599, 42.42314], [2.20578, 42.41633], [2.25551, 42.43757], [2.38504, 42.39977], [2.43299, 42.39423], [2.43508, 42.37568], [2.48457, 42.33933], [2.54382, 42.33406], [2.55516, 42.35351], [2.57934, 42.35808], [2.6747, 42.33974], [2.65311, 42.38771], [2.72056, 42.42298], [2.75497, 42.42578], [2.77464, 42.41046], [2.84335, 42.45724], [2.85675, 42.45444], [2.86983, 42.46843], [2.88413, 42.45938], [2.92107, 42.4573], [2.94283, 42.48174], [2.96518, 42.46692], [3.03734, 42.47363], [3.08167, 42.42748], [3.10027, 42.42621], [3.11379, 42.43646], [3.17156, 42.43545], [3.75438, 42.33445], [7.60802, 41.05927], [10.09675, 41.44089], [9.56115, 43.20816], [7.50102, 43.51859], [7.42422, 43.72209], [7.40903, 43.7296], [7.41113, 43.73156], [7.41291, 43.73168], [7.41298, 43.73311], [7.41233, 43.73439], [7.42062, 43.73977], [7.42299, 43.74176], [7.42443, 43.74087], [7.42809, 43.74396], [7.43013, 43.74895], [7.43624, 43.75014], [7.43708, 43.75197], [7.4389, 43.75151], [7.4379, 43.74963], [7.47823, 43.73341], [7.53006, 43.78405], [7.50423, 43.84345], [7.49355, 43.86551], [7.51162, 43.88301], [7.56075, 43.89932], [7.56858, 43.94506], [7.60771, 43.95772], [7.65266, 43.9763], [7.66848, 43.99943], [7.6597, 44.03009], [7.72508, 44.07578], [7.66878, 44.12795], [7.68694, 44.17487], [7.63245, 44.17877], [7.62155, 44.14881], [7.36364, 44.11882], [7.34547, 44.14359], [7.27827, 44.1462], [7.16929, 44.20352], [7.00764, 44.23736], [6.98221, 44.28289], [6.89171, 44.36637], [6.88784, 44.42043], [6.94504, 44.43112], [6.86233, 44.49834], [6.85507, 44.53072], [6.96042, 44.62129], [6.95133, 44.66264], [7.00582, 44.69364], [7.07484, 44.68073], [7.00401, 44.78782], [7.02217, 44.82519], [6.93499, 44.8664], [6.90774, 44.84322], [6.75518, 44.89915], [6.74519, 44.93661], [6.74791, 45.01939], [6.66981, 45.02324], [6.62803, 45.11175], [6.7697, 45.16044], [6.85144, 45.13226], [6.96706, 45.20841], [7.07074, 45.21228], [7.13115, 45.25386], [7.10572, 45.32924], [7.18019, 45.40071], [7.00037, 45.509], [6.98948, 45.63869], [6.80785, 45.71864], [6.80785, 45.83265], [6.95315, 45.85163], [7.04151, 45.92435], [7.00946, 45.9944], [6.93862, 46.06502], [6.87868, 46.03855], [6.89321, 46.12548], [6.78968, 46.14058], [6.86052, 46.28512], [6.77152, 46.34784], [6.8024, 46.39171], [6.82312, 46.42661], [6.53358, 46.45431], [6.25432, 46.3632], [6.21981, 46.31304], [6.24826, 46.30175], [6.25137, 46.29014], [6.23775, 46.27822], [6.24952, 46.26255], [6.26749, 46.24745], [6.29474, 46.26221], [6.31041, 46.24417], [6.29663, 46.22688], [6.27694, 46.21566], [6.26007, 46.21165], [6.24821, 46.20531], [6.23913, 46.20511], [6.23544, 46.20714], [6.22175, 46.20045], [6.22222, 46.19888], [6.21844, 46.19837], [6.21603, 46.19507], [6.21273, 46.19409], [6.21114, 46.1927], [6.20539, 46.19163], [6.19807, 46.18369], [6.19552, 46.18401], [6.18707, 46.17999], [6.18871, 46.16644], [6.18116, 46.16187], [6.15305, 46.15194], [6.13397, 46.1406], [6.09926, 46.14373], [6.09199, 46.15191], [6.07491, 46.14879], [6.05203, 46.15191], [6.04564, 46.14031], [6.03614, 46.13712], [6.01791, 46.14228], [5.9871, 46.14499], [5.97893, 46.13303], [5.95781, 46.12925], [5.9641, 46.14412], [5.97508, 46.15863], [5.98188, 46.17392], [5.98846, 46.17046], [5.99573, 46.18587], [5.96515, 46.19638], [5.97542, 46.21525], [6.02461, 46.23313], [6.03342, 46.2383], [6.04602, 46.23127], [6.05029, 46.23518], [6.0633, 46.24583], [6.07072, 46.24085], [6.08563, 46.24651], [6.10071, 46.23772], [6.12446, 46.25059], [6.11926, 46.2634], [6.1013, 46.28512], [6.11697, 46.29547], [6.1198, 46.31157], [6.13876, 46.33844], [6.15738, 46.3491], [6.16987, 46.36759], [6.15985, 46.37721], [6.15016, 46.3778], [6.09926, 46.40768], [6.06407, 46.41676], [6.08427, 46.44305], [6.07269, 46.46244], [6.1567, 46.54402], [6.11084, 46.57649], [6.27135, 46.68251], [6.38351, 46.73171], [6.45209, 46.77502], [6.43216, 46.80336], [6.46456, 46.88865], [6.43341, 46.92703], [6.71531, 47.0494], [6.68823, 47.06616], [6.76788, 47.1208], [6.8489, 47.15933], [6.9508, 47.24338], [6.95108, 47.26428], [6.94316, 47.28747], [7.05305, 47.33304], [7.0564, 47.35134], [7.03125, 47.36996], [6.87959, 47.35335], [6.88542, 47.37262], [6.93744, 47.40714], [6.93953, 47.43388], [7.0024, 47.45264], [6.98425, 47.49432], [7.0231, 47.50522], [7.07425, 47.48863], [7.12781, 47.50371], [7.16249, 47.49025], [7.19583, 47.49455], [7.17026, 47.44312], [7.24669, 47.4205], [7.33526, 47.44186], [7.35603, 47.43432], [7.40308, 47.43638], [7.43088, 47.45846], [7.4462, 47.46264], [7.4583, 47.47216], [7.42923, 47.48628], [7.43356, 47.49712], [7.47534, 47.47932], [7.51076, 47.49651], [7.49804, 47.51798], [7.5229, 47.51644], [7.53199, 47.5284], [7.51904, 47.53515], [7.50588, 47.52856], [7.49691, 47.53821], [7.50873, 47.54546], [7.51723, 47.54578], [7.52831, 47.55347], [7.53634, 47.55553], [7.55652, 47.56779], [7.55689, 47.57232], [7.56548, 47.57617], [7.56684, 47.57785], [7.58386, 47.57536], [7.58945, 47.59017], [7.59301, 47.60058], [7.58851, 47.60794], [7.57423, 47.61628], [7.5591, 47.63849], [7.53384, 47.65115], [7.52067, 47.66437], [7.51915, 47.68335], [7.51266, 47.70197], [7.53722, 47.71635], [7.54761, 47.72912], [7.52921, 47.77747], [7.55673, 47.87371], [7.62302, 47.97898], [7.56966, 48.03265], [7.57137, 48.12292], [7.6648, 48.22219], [7.69022, 48.30018], [7.74562, 48.32736], [7.73109, 48.39192], [7.76833, 48.48945], [7.80647, 48.51239], [7.80167, 48.54758], [7.80057, 48.5857], [7.84098, 48.64217], [7.89002, 48.66317], [7.96812, 48.72491], [7.96994, 48.75606], [8.01534, 48.76085], [8.0326, 48.79017], [8.06802, 48.78957], [8.10253, 48.81829], [8.12813, 48.87985], [8.19989, 48.95825], [8.20031, 48.95856], [8.22604, 48.97352], [8.14189, 48.97833], [7.97783, 49.03161], [7.93641, 49.05544], [7.86386, 49.03499], [7.79557, 49.06583], [7.75948, 49.04562], [7.63618, 49.05428], [7.62575, 49.07654], [7.56416, 49.08136], [7.53012, 49.09818], [7.49172, 49.13915], [7.49473, 49.17], [7.44455, 49.16765], [7.44052, 49.18354], [7.3662, 49.17308], [7.35995, 49.14399], [7.3195, 49.14231], [7.29514, 49.11426], [7.23473, 49.12971], [7.1593, 49.1204], [7.1358, 49.1282], [7.12504, 49.14253], [7.10384, 49.13787], [7.10715, 49.15631], [7.07859, 49.15031], [7.09007, 49.13094], [7.07162, 49.1255], [7.06642, 49.11415], [7.05548, 49.11185], [7.04843, 49.11422], [7.04409, 49.12123], [7.04662, 49.13724], [7.03178, 49.15734], [7.0274, 49.17042], [7.03459, 49.19096], [7.01318, 49.19018], [6.97273, 49.2099], [6.95963, 49.203], [6.94028, 49.21641], [6.93831, 49.2223], [6.91875, 49.22261], [6.89298, 49.20863], [6.85939, 49.22376], [6.83555, 49.21249], [6.85119, 49.20038], [6.85016, 49.19354], [6.86225, 49.18185], [6.84703, 49.15734], [6.83385, 49.15162], [6.78265, 49.16793], [6.73765, 49.16375], [6.71137, 49.18808], [6.73256, 49.20486], [6.71843, 49.2208], [6.69274, 49.21661], [6.66583, 49.28065], [6.60186, 49.31055], [6.572, 49.35027], [6.58807, 49.35358], [6.60091, 49.36864], [6.533, 49.40748], [6.55404, 49.42464], [6.42432, 49.47683], [6.40274, 49.46546], [6.39168, 49.4667], [6.38352, 49.46463], [6.36778, 49.46937], [6.3687, 49.4593], [6.28818, 49.48465], [6.27875, 49.503], [6.25029, 49.50609], [6.2409, 49.51408], [6.19543, 49.50536], [6.17386, 49.50934], [6.15366, 49.50226], [6.16115, 49.49297], [6.14321, 49.48796], [6.12814, 49.49365], [6.12346, 49.4735], [6.10325, 49.4707], [6.09845, 49.46351], [6.10072, 49.45268], [6.08373, 49.45594], [6.07887, 49.46399], [6.05553, 49.46663], [6.04176, 49.44801], [6.02743, 49.44845], [6.02648, 49.45451], [5.97693, 49.45513], [5.96876, 49.49053], [5.94224, 49.49608], [5.94128, 49.50034], [5.86571, 49.50015], [5.83389, 49.52152], [5.83467, 49.52717], [5.84466, 49.53027], [5.83648, 49.5425], [5.81664, 49.53775], [5.80871, 49.5425], [5.81838, 49.54777], [5.79195, 49.55228], [5.77435, 49.56298], [5.7577, 49.55915], [5.75649, 49.54321], [5.64505, 49.55146], [5.60909, 49.51228], [5.55001, 49.52729], [5.46541, 49.49825], [5.46734, 49.52648], [5.43713, 49.5707], [5.3974, 49.61596], [5.34837, 49.62889], [5.33851, 49.61599], [5.3137, 49.61225], [5.30214, 49.63055], [5.33039, 49.6555], [5.31465, 49.66846], [5.26232, 49.69456], [5.14545, 49.70287], [5.09249, 49.76193], [4.96714, 49.79872], [4.85464, 49.78995], [4.86965, 49.82271], [4.85134, 49.86457], [4.88529, 49.9236], [4.78827, 49.95609], [4.8382, 50.06738], [4.88602, 50.15182], [4.83279, 50.15331], [4.82438, 50.16878], [4.75237, 50.11314], [4.70064, 50.09384], [4.68695, 49.99685], [4.5414, 49.96911], [4.51098, 49.94659], [4.43488, 49.94122], [4.35051, 49.95315], [4.31963, 49.97043], [4.20532, 49.95803], [4.14239, 49.98034], [4.13508, 50.01976], [4.16294, 50.04719], [4.23101, 50.06945], [4.20147, 50.13535], [4.13561, 50.13078], [4.16014, 50.19239], [4.15524, 50.21103], [4.21945, 50.25539], [4.20651, 50.27333], [4.17861, 50.27443], [4.17347, 50.28838], [4.15524, 50.2833], [4.16808, 50.25786], [4.13665, 50.25609], [4.11954, 50.30425], [4.10957, 50.30234], [4.10237, 50.31247], [4.0689, 50.3254], [4.0268, 50.35793], [3.96771, 50.34989], [3.90781, 50.32814], [3.84314, 50.35219], [3.73911, 50.34809], [3.70987, 50.3191], [3.71009, 50.30305], [3.66976, 50.34563], [3.65709, 50.36873], [3.67262, 50.38663], [3.67494, 50.40239], [3.66153, 50.45165], [3.64426, 50.46275], [3.61014, 50.49568], [3.58361, 50.49049], [3.5683, 50.50192], [3.49509, 50.48885], [3.51564, 50.5256], [3.47385, 50.53397], [3.44629, 50.51009], [3.37693, 50.49538], [3.28575, 50.52724], [3.2729, 50.60718], [3.23951, 50.6585], [3.264, 50.67668], [3.2536, 50.68977], [3.26141, 50.69151], [3.26063, 50.70086], [3.24593, 50.71389], [3.22042, 50.71019], [3.20845, 50.71662], [3.19017, 50.72569], [3.20064, 50.73547], [3.18811, 50.74025], [3.18339, 50.74981], [3.16476, 50.76843], [3.15017, 50.79031], [3.1257, 50.78603], [3.11987, 50.79188], [3.11206, 50.79416], [3.10614, 50.78303], [3.09163, 50.77717], [3.04314, 50.77674], [3.00537, 50.76588], [2.96778, 50.75242], [2.95019, 50.75138], [2.90873, 50.702], [2.91036, 50.6939], [2.90069, 50.69263], [2.88504, 50.70656], [2.87937, 50.70298], [2.86985, 50.7033], [2.8483, 50.72276], [2.81056, 50.71773], [2.71165, 50.81295], [2.63331, 50.81457], [2.59093, 50.91751], [2.63074, 50.94746], [2.57551, 51.00326], [2.55904, 51.07014]], [[1.99838, 42.44682], [1.98378, 42.44697], [1.96125, 42.45364], [1.95606, 42.45785], [1.96215, 42.47854], [1.97003, 42.48081], [1.97227, 42.48487], [1.97697, 42.48568], [1.98022, 42.49569], [1.98916, 42.49351], [1.99766, 42.4858], [1.98579, 42.47486], [1.99216, 42.46208], [2.01564, 42.45171], [1.99838, 42.44682]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GA\", iso1A3: \"GAB\", iso1N3: \"266\", wikidata: \"Q1000\", nameEn: \"Gabon\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"241\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[13.29457, 2.16106], [13.28534, 2.25716], [11.37116, 2.29975], [11.3561, 2.17217], [11.35307, 1.00251], [9.79648, 1.0019], [9.75065, 1.06753], [9.66433, 1.06723], [7.24416, -0.64092], [10.75913, -4.39519], [11.12647, -3.94169], [11.22301, -3.69888], [11.48764, -3.51089], [11.57949, -3.52798], [11.68608, -3.68942], [11.87083, -3.71571], [11.92719, -3.62768], [11.8318, -3.5812], [11.96554, -3.30267], [11.70227, -3.17465], [11.70558, -3.0773], [11.80365, -3.00424], [11.64798, -2.81146], [11.5359, -2.85654], [11.64487, -2.61865], [11.57637, -2.33379], [11.74605, -2.39936], [11.96866, -2.33559], [12.04895, -2.41704], [12.47925, -2.32626], [12.44656, -1.92025], [12.61312, -1.8129], [12.82172, -1.91091], [13.02759, -2.33098], [13.47977, -2.43224], [13.75884, -2.09293], [13.92073, -2.35581], [13.85846, -2.46935], [14.10442, -2.49268], [14.23829, -2.33715], [14.16202, -2.23916], [14.23518, -2.15671], [14.25932, -1.97624], [14.41838, -1.89412], [14.52569, -0.57818], [14.41887, -0.44799], [14.2165, -0.38261], [14.06862, -0.20826], [13.90632, -0.2287], [13.88648, 0.26652], [14.10909, 0.58563], [14.26066, 0.57255], [14.48179, 0.9152], [14.25186, 1.39842], [13.89582, 1.4261], [13.15519, 1.23368], [13.25447, 1.32339], [13.13461, 1.57238], [13.29457, 2.16106]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GB\", iso1A3: \"GBR\", iso1N3: \"826\", wikidata: \"Q145\", ccTLD: \".uk\", nameEn: \"United Kingdom\", aliases: [\"UK\"] }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"GD\", iso1A3: \"GRD\", iso1N3: \"308\", wikidata: \"Q769\", nameEn: \"Grenada\", aliases: [\"WG\"], groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 473\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-62.64026, 12.69984], [-61.77886, 11.36496], [-59.94058, 12.34011], [-62.64026, 12.69984]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GE\", iso1A3: \"GEO\", iso1N3: \"268\", wikidata: \"Q230\", nameEn: \"Georgia\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"995\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[46.42738, 41.91323], [45.61676, 42.20768], [45.78692, 42.48358], [45.36501, 42.55268], [45.15318, 42.70598], [44.88754, 42.74934], [44.80941, 42.61277], [44.70002, 42.74679], [44.54202, 42.75699], [43.95517, 42.55396], [43.73119, 42.62043], [43.81453, 42.74297], [43.0419, 43.02413], [43.03322, 43.08883], [42.75889, 43.19651], [42.66667, 43.13917], [42.40563, 43.23226], [41.64935, 43.22331], [40.65957, 43.56212], [40.10657, 43.57344], [40.04445, 43.47776], [40.03312, 43.44262], [40.01007, 43.42411], [40.01552, 43.42025], [40.00853, 43.40578], [40.0078, 43.38551], [39.81147, 43.06294], [40.89217, 41.72528], [41.54366, 41.52185], [41.7148, 41.4932], [41.7124, 41.47417], [41.81939, 41.43621], [41.95134, 41.52466], [42.26387, 41.49346], [42.51772, 41.43606], [42.59202, 41.58183], [42.72794, 41.59714], [42.84471, 41.58912], [42.78995, 41.50126], [42.84899, 41.47265], [42.8785, 41.50516], [43.02956, 41.37891], [43.21707, 41.30331], [43.13373, 41.25503], [43.1945, 41.25242], [43.23096, 41.17536], [43.36118, 41.2028], [43.44973, 41.17666], [43.4717, 41.12611], [43.67712, 41.13398], [43.74717, 41.1117], [43.84835, 41.16329], [44.16591, 41.19141], [44.18148, 41.24644], [44.32139, 41.2079], [44.34337, 41.20312], [44.34417, 41.2382], [44.46791, 41.18204], [44.59322, 41.1933], [44.61462, 41.24018], [44.72814, 41.20338], [44.82084, 41.21513], [44.87887, 41.20195], [44.89911, 41.21366], [44.84358, 41.23088], [44.81749, 41.23488], [44.80053, 41.25949], [44.81437, 41.30371], [44.93493, 41.25685], [45.0133, 41.29747], [45.09867, 41.34065], [45.1797, 41.42231], [45.26285, 41.46433], [45.31352, 41.47168], [45.4006, 41.42402], [45.45973, 41.45898], [45.68389, 41.3539], [45.71035, 41.36208], [45.75705, 41.35157], [45.69946, 41.29545], [45.80842, 41.2229], [45.95786, 41.17956], [46.13221, 41.19479], [46.27698, 41.19011], [46.37661, 41.10805], [46.456, 41.09984], [46.48558, 41.0576], [46.55096, 41.1104], [46.63969, 41.09515], [46.66148, 41.20533], [46.72375, 41.28609], [46.63658, 41.37727], [46.4669, 41.43331], [46.40307, 41.48464], [46.33925, 41.4963], [46.29794, 41.5724], [46.34126, 41.57454], [46.34039, 41.5947], [46.3253, 41.60912], [46.28182, 41.60089], [46.26531, 41.63339], [46.24429, 41.59883], [46.19759, 41.62327], [46.17891, 41.72094], [46.20538, 41.77205], [46.23962, 41.75811], [46.30863, 41.79133], [46.3984, 41.84399], [46.42738, 41.91323]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GF\", iso1A3: \"GUF\", iso1N3: \"254\", wikidata: \"Q3769\", nameEn: \"French Guiana\", country: \"FR\", groups: [\"Q3320166\", \"EU\", \"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"594\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-51.35485, 4.8383], [-53.7094, 6.2264], [-54.01074, 5.68785], [-54.01877, 5.52789], [-54.26916, 5.26909], [-54.4717, 4.91964], [-54.38444, 4.13222], [-54.19367, 3.84387], [-54.05128, 3.63557], [-53.98914, 3.627], [-53.9849, 3.58697], [-54.28534, 2.67798], [-54.42864, 2.42442], [-54.6084, 2.32856], [-54.16286, 2.10779], [-53.78743, 2.34412], [-52.96539, 2.1881], [-52.6906, 2.37298], [-52.31787, 3.17896], [-51.85573, 3.83427], [-51.82312, 3.85825], [-51.79599, 3.89336], [-51.61983, 4.14596], [-51.63798, 4.51394], [-51.35485, 4.8383]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GG\", iso1A3: \"GGY\", iso1N3: \"831\", wikidata: \"Q25230\", nameEn: \"Bailiwick of Guernsey\", country: \"GB\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"GH\", iso1A3: \"GHA\", iso1N3: \"288\", wikidata: \"Q117\", nameEn: \"Ghana\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"233\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-0.13493, 11.14075], [-0.27374, 11.17157], [-0.28566, 11.12713], [-0.35955, 11.07801], [-0.38219, 11.12596], [-0.42391, 11.11661], [-0.44298, 11.04292], [-0.61937, 10.91305], [-0.67143, 10.99811], [-2.83373, 11.0067], [-2.94232, 10.64281], [-2.83108, 10.40252], [-2.74174, 9.83172], [-2.76534, 9.56589], [-2.68802, 9.49343], [-2.69814, 9.22717], [-2.77799, 9.04949], [-2.66357, 9.01771], [-2.58243, 8.7789], [-2.49037, 8.20872], [-2.62901, 8.11495], [-2.61232, 8.02645], [-2.67787, 8.02055], [-2.74819, 7.92613], [-2.78395, 7.94974], [-2.79467, 7.86002], [-2.92339, 7.60847], [-2.97822, 7.27165], [-2.95438, 7.23737], [-3.23327, 6.81744], [-3.21954, 6.74407], [-3.25999, 6.62521], [-3.01896, 5.71697], [-2.95323, 5.71865], [-2.96671, 5.6415], [-2.93132, 5.62137], [-2.85378, 5.65156], [-2.76614, 5.60963], [-2.72737, 5.34789], [-2.77625, 5.34621], [-2.73074, 5.1364], [-2.75502, 5.10657], [-2.95261, 5.12477], [-2.96554, 5.10397], [-3.063, 5.13665], [-3.11073, 5.12675], [-3.10675, 5.08515], [-3.34019, 4.17519], [1.07031, 5.15655], [1.27574, 5.93551], [1.19771, 6.11522], [1.19966, 6.17069], [1.09187, 6.17074], [1.05969, 6.22998], [1.03108, 6.24064], [0.99652, 6.33779], [0.89283, 6.33779], [0.71048, 6.53083], [0.74862, 6.56517], [0.63659, 6.63857], [0.6497, 6.73682], [0.58176, 6.76049], [0.57406, 6.80348], [0.52853, 6.82921], [0.56508, 6.92971], [0.52098, 6.94391], [0.52217, 6.9723], [0.59606, 7.01252], [0.65327, 7.31643], [0.62943, 7.41099], [0.57223, 7.39326], [0.52455, 7.45354], [0.51979, 7.58706], [0.58295, 7.62368], [0.62943, 7.85751], [0.58891, 8.12779], [0.6056, 8.13959], [0.61156, 8.18324], [0.5913, 8.19622], [0.63897, 8.25873], [0.73432, 8.29529], [0.64731, 8.48866], [0.47211, 8.59945], [0.37319, 8.75262], [0.52455, 8.87746], [0.45424, 9.04581], [0.56388, 9.40697], [0.49118, 9.48339], [0.36485, 9.49749], [0.33148, 9.44812], [0.25758, 9.42696], [0.2254, 9.47869], [0.31241, 9.50337], [0.30406, 9.521], [0.2409, 9.52335], [0.23851, 9.57389], [0.38153, 9.58682], [0.36008, 9.6256], [0.29334, 9.59387], [0.26712, 9.66437], [0.28261, 9.69022], [0.32313, 9.6491], [0.34816, 9.66907], [0.34816, 9.71607], [0.32075, 9.72781], [0.36366, 10.03309], [0.41252, 10.02018], [0.41371, 10.06361], [0.35293, 10.09412], [0.39584, 10.31112], [0.33028, 10.30408], [0.29453, 10.41546], [0.18846, 10.4096], [0.12886, 10.53149], [-0.05945, 10.63458], [-0.09141, 10.7147], [-0.07327, 10.71845], [-0.07183, 10.76794], [-0.0228, 10.81916], [-0.02685, 10.8783], [-908e-5, 10.91644], [-63e-4, 10.96417], [0.03355, 10.9807], [0.02395, 11.06229], [342e-5, 11.08317], [-514e-5, 11.10763], [-0.0275, 11.11202], [-0.05733, 11.08628], [-0.14462, 11.10811], [-0.13493, 11.14075]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GI\", iso1A3: \"GIB\", iso1N3: \"292\", wikidata: \"Q1410\", nameEn: \"Gibraltar\", country: \"GB\", groups: [\"Q12837\", \"BOTS\", \"039\", \"150\", \"UN\"], callingCodes: [\"350\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-5.34064, 36.03744], [-5.27801, 36.14942], [-5.33822, 36.15272], [-5.34536, 36.15501], [-5.40526, 36.15488], [-5.34064, 36.03744]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GL\", iso1A3: \"GRL\", iso1N3: \"304\", wikidata: \"Q223\", nameEn: \"Greenland\", country: \"DK\", groups: [\"Q1451600\", \"021\", \"003\", \"019\", \"UN\"], callingCodes: [\"299\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-49.33696, 84.57952], [-68.21821, 80.48551], [-77.52957, 77.23408], [-46.37635, 57.3249], [-9.68082, 72.73731], [-5.7106, 84.28058], [-49.33696, 84.57952]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GM\", iso1A3: \"GMB\", iso1N3: \"270\", wikidata: \"Q1005\", nameEn: \"The Gambia\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"220\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-15.14917, 13.57989], [-14.36795, 13.23033], [-13.79409, 13.34472], [-13.8955, 13.59126], [-14.34721, 13.46578], [-14.93719, 13.80173], [-15.36504, 13.79313], [-15.47902, 13.58758], [-17.43598, 13.59273], [-17.43966, 13.04579], [-16.74676, 13.06025], [-16.69343, 13.16791], [-15.80355, 13.16729], [-15.80478, 13.34832], [-15.26908, 13.37768], [-15.14917, 13.57989]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GN\", iso1A3: \"GIN\", iso1N3: \"324\", wikidata: \"Q1006\", nameEn: \"Guinea\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"224\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-11.37536, 12.40788], [-11.46267, 12.44559], [-11.91331, 12.42008], [-12.35415, 12.32758], [-12.87336, 12.51892], [-13.06603, 12.49342], [-13.05296, 12.64003], [-13.70523, 12.68013], [-13.7039, 12.60313], [-13.65089, 12.49515], [-13.64168, 12.42764], [-13.70851, 12.24978], [-13.92745, 12.24077], [-13.94589, 12.16869], [-13.7039, 12.00869], [-13.7039, 11.70195], [-14.09799, 11.63649], [-14.26623, 11.67486], [-14.31513, 11.60713], [-14.51173, 11.49708], [-14.66677, 11.51188], [-14.77786, 11.36323], [-14.95993, 10.99244], [-15.07174, 10.89557], [-15.96748, 10.162], [-14.36218, 8.64107], [-13.29911, 9.04245], [-13.18586, 9.0925], [-13.08953, 9.0409], [-12.94095, 9.26335], [-12.76788, 9.3133], [-12.47254, 9.86834], [-12.24262, 9.92386], [-12.12634, 9.87203], [-11.91023, 9.93927], [-11.89624, 9.99763], [-11.2118, 10.00098], [-10.6534, 9.29919], [-10.74484, 9.07998], [-10.5783, 9.06386], [-10.56197, 8.81225], [-10.47707, 8.67669], [-10.61422, 8.5314], [-10.70565, 8.29235], [-10.63934, 8.35326], [-10.54891, 8.31174], [-10.37257, 8.48941], [-10.27575, 8.48711], [-10.203, 8.47991], [-10.14579, 8.52665], [-10.05375, 8.50697], [-10.05873, 8.42578], [-9.77763, 8.54633], [-9.47415, 8.35195], [-9.50898, 8.18455], [-9.41445, 8.02448], [-9.44928, 7.9284], [-9.35724, 7.74111], [-9.37465, 7.62032], [-9.48161, 7.37122], [-9.41943, 7.41809], [-9.305, 7.42056], [-9.20798, 7.38109], [-9.18311, 7.30461], [-9.09107, 7.1985], [-8.93435, 7.2824], [-8.85724, 7.26019], [-8.8448, 7.35149], [-8.72789, 7.51429], [-8.67814, 7.69428], [-8.55874, 7.70167], [-8.55874, 7.62525], [-8.47114, 7.55676], [-8.4003, 7.6285], [-8.21374, 7.54466], [-8.09931, 7.78626], [-8.13414, 7.87991], [-8.06449, 8.04989], [-7.94695, 8.00925], [-7.99919, 8.11023], [-7.98675, 8.20134], [-8.062, 8.16071], [-8.2411, 8.24196], [-8.22991, 8.48438], [-7.92518, 8.50652], [-7.65653, 8.36873], [-7.69882, 8.66148], [-7.95503, 8.81146], [-7.92518, 8.99332], [-7.73862, 9.08422], [-7.90777, 9.20456], [-7.85056, 9.41812], [-8.03463, 9.39604], [-8.14657, 9.55062], [-8.09434, 9.86936], [-8.15652, 9.94288], [-8.11921, 10.04577], [-8.01225, 10.1021], [-7.97971, 10.17117], [-7.9578, 10.2703], [-8.10207, 10.44649], [-8.22711, 10.41722], [-8.32614, 10.69273], [-8.2667, 10.91762], [-8.35083, 11.06234], [-8.66923, 10.99397], [-8.40058, 11.37466], [-8.80854, 11.66715], [-8.94784, 12.34842], [-9.13689, 12.50875], [-9.38067, 12.48446], [-9.32097, 12.29009], [-9.63938, 12.18312], [-9.714, 12.0226], [-10.30604, 12.24634], [-10.71897, 11.91552], [-10.80355, 12.1053], [-10.99758, 12.24634], [-11.24136, 12.01286], [-11.50006, 12.17826], [-11.37536, 12.40788]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GP\", iso1A3: \"GLP\", iso1N3: \"312\", wikidata: \"Q17012\", nameEn: \"Guadeloupe\", country: \"FR\", groups: [\"Q3320166\", \"EU\", \"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"590\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-60.03183, 16.1129], [-61.60296, 16.73066], [-63.00549, 15.26166], [-60.03183, 16.1129]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GQ\", iso1A3: \"GNQ\", iso1N3: \"226\", wikidata: \"Q983\", nameEn: \"Equatorial Guinea\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"240\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[9.22018, 3.72052], [8.34397, 4.30689], [7.71762, 0.6674], [3.35016, -3.29031], [9.66433, 1.06723], [9.75065, 1.06753], [9.79648, 1.0019], [11.35307, 1.00251], [11.3561, 2.17217], [9.991, 2.16561], [9.90749, 2.20049], [9.89012, 2.20457], [9.84716, 2.24676], [9.83238, 2.29079], [9.83754, 2.32428], [9.82123, 2.35097], [9.81162, 2.33797], [9.22018, 3.72052]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GR\", iso1A3: \"GRC\", iso1N3: \"300\", wikidata: \"Q41\", nameEn: \"Greece\", aliases: [\"EL\"], groups: [\"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"30\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[26.03489, 40.73051], [26.0754, 40.72772], [26.08638, 40.73214], [26.12495, 40.74283], [26.12854, 40.77339], [26.15685, 40.80709], [26.21351, 40.83298], [26.20856, 40.86048], [26.26169, 40.9168], [26.29441, 40.89119], [26.28623, 40.93005], [26.32259, 40.94042], [26.35894, 40.94292], [26.33297, 40.98388], [26.3606, 41.02027], [26.31928, 41.07386], [26.32259, 41.24929], [26.39861, 41.25053], [26.5209, 41.33993], [26.5837, 41.32131], [26.62997, 41.34613], [26.61767, 41.42281], [26.59742, 41.48058], [26.59196, 41.60491], [26.5209, 41.62592], [26.47958, 41.67037], [26.35957, 41.71149], [26.30255, 41.70925], [26.2654, 41.71544], [26.22888, 41.74139], [26.21325, 41.73223], [26.16841, 41.74858], [26.06148, 41.70345], [26.07083, 41.64584], [26.15146, 41.60828], [26.14328, 41.55496], [26.17951, 41.55409], [26.176, 41.50072], [26.14796, 41.47533], [26.20288, 41.43943], [26.16548, 41.42278], [26.12926, 41.35878], [25.87919, 41.30526], [25.8266, 41.34563], [25.70507, 41.29209], [25.66183, 41.31316], [25.61042, 41.30614], [25.55082, 41.31667], [25.52394, 41.2798], [25.48187, 41.28506], [25.28322, 41.23411], [25.11611, 41.34212], [24.942, 41.38685], [24.90928, 41.40876], [24.86136, 41.39298], [24.82514, 41.4035], [24.8041, 41.34913], [24.71529, 41.41928], [24.61129, 41.42278], [24.52599, 41.56808], [24.30513, 41.51297], [24.27124, 41.57682], [24.18126, 41.51735], [24.10063, 41.54796], [24.06323, 41.53222], [24.06908, 41.46132], [23.96975, 41.44118], [23.91483, 41.47971], [23.89613, 41.45257], [23.80148, 41.43943], [23.76525, 41.40175], [23.67644, 41.41139], [23.63203, 41.37632], [23.52453, 41.40262], [23.40416, 41.39999], [23.33639, 41.36317], [23.31301, 41.40525], [23.22771, 41.37106], [23.21953, 41.33773], [23.1833, 41.31755], [22.93334, 41.34104], [22.81199, 41.3398], [22.76408, 41.32225], [22.74538, 41.16321], [22.71266, 41.13945], [22.65306, 41.18168], [22.62852, 41.14385], [22.58295, 41.11568], [22.5549, 41.13065], [22.42285, 41.11921], [22.26744, 41.16409], [22.17629, 41.15969], [22.1424, 41.12449], [22.06527, 41.15617], [21.90869, 41.09191], [21.91102, 41.04786], [21.7556, 40.92525], [21.69601, 40.9429], [21.57448, 40.86076], [21.53007, 40.90759], [21.41555, 40.9173], [21.35595, 40.87578], [21.25779, 40.86165], [21.21105, 40.8855], [21.15262, 40.85546], [20.97887, 40.85475], [20.98396, 40.79109], [20.95752, 40.76982], [20.98134, 40.76046], [21.05833, 40.66586], [21.03932, 40.56299], [20.96908, 40.51526], [20.94925, 40.46625], [20.83688, 40.47882], [20.7906, 40.42726], [20.78234, 40.35803], [20.71789, 40.27739], [20.67162, 40.09433], [20.62566, 40.0897], [20.61081, 40.07866], [20.55593, 40.06524], [20.51297, 40.08168], [20.48487, 40.06271], [20.42373, 40.06777], [20.37911, 39.99058], [20.31135, 39.99438], [20.41546, 39.82832], [20.41475, 39.81437], [20.38572, 39.78516], [20.30804, 39.81563], [20.29152, 39.80421], [20.31961, 39.72799], [20.27412, 39.69884], [20.22707, 39.67459], [20.22376, 39.64532], [20.15988, 39.652], [20.12956, 39.65805], [20.05189, 39.69112], [20.00957, 39.69227], [19.98042, 39.6504], [19.92466, 39.69533], [19.97622, 39.78684], [19.95905, 39.82857], [19.0384, 40.35325], [19.20409, 39.7532], [22.5213, 33.45682], [29.73302, 35.92555], [29.69611, 36.10365], [29.61805, 36.14179], [29.61002, 36.1731], [29.48192, 36.18377], [29.30783, 36.01033], [28.23708, 36.56812], [27.95037, 36.46155], [27.89482, 36.69898], [27.46117, 36.53789], [27.24613, 36.71622], [27.45627, 36.9008], [27.20312, 36.94571], [27.14757, 37.32], [26.95583, 37.64989], [26.99377, 37.69034], [27.16428, 37.72343], [27.05537, 37.9131], [26.21136, 38.17558], [26.24183, 38.44695], [26.32173, 38.48731], [26.21136, 38.65436], [26.61814, 38.81372], [26.70773, 39.0312], [26.43357, 39.43096], [25.94257, 39.39358], [25.61285, 40.17161], [26.04292, 40.3958], [25.94795, 40.72797], [26.03489, 40.73051]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GS\", iso1A3: \"SGS\", iso1N3: \"239\", wikidata: \"Q35086\", nameEn: \"South Georgia and South Sandwich Islands\", country: \"GB\", groups: [\"BOTS\", \"005\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"500\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-35.26394, -43.68272], [-53.39656, -59.87088], [-22.31757, -59.85974], [-35.26394, -43.68272]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GT\", iso1A3: \"GTM\", iso1N3: \"320\", wikidata: \"Q774\", nameEn: \"Guatemala\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"502\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-89.14985, 17.81563], [-90.98678, 17.81655], [-90.99199, 17.25192], [-91.43809, 17.25373], [-91.04436, 16.92175], [-90.69064, 16.70697], [-90.61212, 16.49832], [-90.40499, 16.40524], [-90.44567, 16.07573], [-91.73182, 16.07371], [-92.20983, 15.26077], [-92.0621, 15.07406], [-92.1454, 14.98143], [-92.1423, 14.88647], [-92.18161, 14.84147], [-92.1454, 14.6804], [-92.2261, 14.53423], [-92.37213, 14.39277], [-90.55276, 12.8866], [-90.11344, 13.73679], [-90.10505, 13.85104], [-89.88937, 14.0396], [-89.81807, 14.07073], [-89.76103, 14.02923], [-89.73251, 14.04133], [-89.75569, 14.07073], [-89.70756, 14.1537], [-89.61844, 14.21937], [-89.52397, 14.22628], [-89.50614, 14.26084], [-89.58814, 14.33165], [-89.57441, 14.41637], [-89.39028, 14.44561], [-89.34776, 14.43013], [-89.35189, 14.47553], [-89.23719, 14.58046], [-89.15653, 14.57802], [-89.13132, 14.71582], [-89.23467, 14.85596], [-89.15149, 14.97775], [-89.18048, 14.99967], [-89.15149, 15.07392], [-88.97343, 15.14039], [-88.32467, 15.63665], [-88.31459, 15.66942], [-88.24022, 15.69247], [-88.22552, 15.72294], [-88.20359, 16.03858], [-88.40779, 16.09624], [-88.95358, 15.88698], [-89.02415, 15.9063], [-89.17418, 15.90898], [-89.22683, 15.88619], [-89.15025, 17.04813], [-89.14985, 17.81563]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GU\", iso1A3: \"GUM\", iso1N3: \"316\", wikidata: \"Q16635\", nameEn: \"Guam\", aliases: [\"US-GU\"], country: \"US\", groups: [\"Q1352230\", \"Q153732\", \"057\", \"009\", \"UN\"], roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1 671\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[146.25931, 13.85876], [143.82485, 13.92273], [144.61642, 12.82462], [146.25931, 13.85876]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GW\", iso1A3: \"GNB\", iso1N3: \"624\", wikidata: \"Q1007\", nameEn: \"Guinea-Bissau\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"245\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-14.31513, 11.60713], [-14.26623, 11.67486], [-14.09799, 11.63649], [-13.7039, 11.70195], [-13.7039, 12.00869], [-13.94589, 12.16869], [-13.92745, 12.24077], [-13.70851, 12.24978], [-13.64168, 12.42764], [-13.65089, 12.49515], [-13.7039, 12.60313], [-13.70523, 12.68013], [-15.17582, 12.6847], [-15.67302, 12.42974], [-16.20591, 12.46157], [-16.38191, 12.36449], [-16.70562, 12.34803], [-17.4623, 11.92379], [-15.96748, 10.162], [-15.07174, 10.89557], [-14.95993, 10.99244], [-14.77786, 11.36323], [-14.66677, 11.51188], [-14.51173, 11.49708], [-14.31513, 11.60713]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GY\", iso1A3: \"GUY\", iso1N3: \"328\", wikidata: \"Q734\", nameEn: \"Guyana\", groups: [\"005\", \"419\", \"019\", \"UN\"], driveSide: \"left\", callingCodes: [\"592\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-56.84822, 6.73257], [-59.54058, 8.6862], [-59.98508, 8.53046], [-59.85562, 8.35213], [-59.80661, 8.28906], [-59.83156, 8.23261], [-59.97059, 8.20791], [-60.02407, 8.04557], [-60.38056, 7.8302], [-60.51959, 7.83373], [-60.64793, 7.56877], [-60.71923, 7.55817], [-60.59802, 7.33194], [-60.63367, 7.25061], [-60.54098, 7.14804], [-60.44116, 7.20817], [-60.28074, 7.1162], [-60.39419, 6.94847], [-60.54873, 6.8631], [-61.13632, 6.70922], [-61.20762, 6.58174], [-61.15058, 6.19558], [-61.4041, 5.95304], [-60.73204, 5.20931], [-60.32352, 5.21299], [-60.20944, 5.28754], [-59.98129, 5.07097], [-60.04189, 4.69801], [-60.15953, 4.53456], [-59.78878, 4.45637], [-59.69361, 4.34069], [-59.73353, 4.20399], [-59.51963, 3.91951], [-59.86899, 3.57089], [-59.79769, 3.37162], [-59.99733, 2.92312], [-59.91177, 2.36759], [-59.7264, 2.27497], [-59.74066, 1.87596], [-59.25583, 1.40559], [-58.92072, 1.31293], [-58.84229, 1.17749], [-58.53571, 1.29154], [-58.4858, 1.48399], [-58.33887, 1.58014], [-58.01873, 1.51966], [-57.97336, 1.64566], [-57.77281, 1.73344], [-57.55743, 1.69605], [-57.35073, 1.98327], [-57.23981, 1.95808], [-57.09109, 2.01854], [-57.07092, 1.95304], [-56.7659, 1.89509], [-56.47045, 1.95135], [-56.55439, 2.02003], [-56.70519, 2.02964], [-57.35891, 3.32121], [-58.0307, 3.95513], [-57.8699, 4.89394], [-57.37442, 5.0208], [-57.22536, 5.15605], [-57.31629, 5.33714], [-56.84822, 6.73257]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"HK\", iso1A3: \"HKG\", iso1N3: \"344\", wikidata: \"Q8646\", nameEn: \"Hong Kong\", country: \"CN\", groups: [\"030\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"852\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[113.92195, 22.13873], [114.50148, 22.15017], [114.44998, 22.55977], [114.25154, 22.55977], [114.22888, 22.5436], [114.22185, 22.55343], [114.20655, 22.55706], [114.18338, 22.55444], [114.17247, 22.55944], [114.1597, 22.56041], [114.15123, 22.55163], [114.1482, 22.54091], [114.13823, 22.54319], [114.12665, 22.54003], [114.11656, 22.53415], [114.11181, 22.52878], [114.1034, 22.5352], [114.09692, 22.53435], [114.09048, 22.53716], [114.08606, 22.53276], [114.07817, 22.52997], [114.07267, 22.51855], [114.06272, 22.51617], [114.05729, 22.51104], [114.05438, 22.5026], [114.03113, 22.5065], [113.86771, 22.42972], [113.81621, 22.2163], [113.83338, 22.1826], [113.92195, 22.13873]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"HM\", iso1A3: \"HMD\", iso1N3: \"334\", wikidata: \"Q131198\", nameEn: \"Heard Island and McDonald Islands\", country: \"AU\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[71.08716, -53.87687], [75.44182, -53.99822], [72.87012, -51.48322], [71.08716, -53.87687]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"HN\", iso1A3: \"HND\", iso1N3: \"340\", wikidata: \"Q783\", nameEn: \"Honduras\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"504\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-83.86109, 17.73736], [-88.20359, 16.03858], [-88.22552, 15.72294], [-88.24022, 15.69247], [-88.31459, 15.66942], [-88.32467, 15.63665], [-88.97343, 15.14039], [-89.15149, 15.07392], [-89.18048, 14.99967], [-89.15149, 14.97775], [-89.23467, 14.85596], [-89.13132, 14.71582], [-89.15653, 14.57802], [-89.23719, 14.58046], [-89.35189, 14.47553], [-89.34776, 14.43013], [-89.04187, 14.33644], [-88.94608, 14.20207], [-88.85785, 14.17763], [-88.815, 14.11652], [-88.73182, 14.10919], [-88.70661, 14.04317], [-88.49738, 13.97224], [-88.48982, 13.86458], [-88.25791, 13.91108], [-88.23018, 13.99915], [-88.07641, 13.98447], [-88.00331, 13.86948], [-87.7966, 13.91353], [-87.68821, 13.80829], [-87.73106, 13.75443], [-87.78148, 13.52906], [-87.71657, 13.50577], [-87.72115, 13.46083], [-87.73841, 13.44169], [-87.77354, 13.45767], [-87.83467, 13.44655], [-87.84675, 13.41078], [-87.80177, 13.35689], [-87.73714, 13.32715], [-87.69751, 13.25228], [-87.55124, 13.12523], [-87.37107, 12.98646], [-87.06306, 13.00892], [-87.03785, 12.98682], [-86.93197, 13.05313], [-86.93383, 13.18677], [-86.87066, 13.30641], [-86.71267, 13.30348], [-86.76812, 13.79605], [-86.35219, 13.77157], [-86.14801, 14.04317], [-86.00685, 14.08474], [-86.03458, 13.99181], [-85.75477, 13.8499], [-85.73964, 13.9698], [-85.45762, 14.11304], [-85.32149, 14.2562], [-85.18602, 14.24929], [-85.1575, 14.53934], [-84.90082, 14.80489], [-84.82596, 14.82212], [-84.70119, 14.68078], [-84.48373, 14.63249], [-84.10584, 14.76353], [-83.89551, 14.76697], [-83.62101, 14.89448], [-83.49268, 15.01158], [-83.13724, 15.00002], [-83.04763, 15.03256], [-82.06974, 14.49418], [-81.58685, 18.0025], [-83.86109, 17.73736]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"HR\", iso1A3: \"HRV\", iso1N3: \"191\", wikidata: \"Q224\", nameEn: \"Croatia\", groups: [\"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"385\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[17.6444, 42.88641], [17.5392, 42.92787], [17.70879, 42.97223], [17.64268, 43.08595], [17.46986, 43.16559], [17.286, 43.33065], [17.25579, 43.40353], [17.29699, 43.44542], [17.24411, 43.49376], [17.15828, 43.49376], [17.00585, 43.58037], [16.80736, 43.76011], [16.75316, 43.77157], [16.70922, 43.84887], [16.55472, 43.95326], [16.50528, 44.0244], [16.43629, 44.02826], [16.43662, 44.07523], [16.36864, 44.08263], [16.18688, 44.27012], [16.21346, 44.35231], [16.12969, 44.38275], [16.16814, 44.40679], [16.10566, 44.52586], [16.03012, 44.55572], [16.00884, 44.58605], [16.05828, 44.61538], [15.89348, 44.74964], [15.8255, 44.71501], [15.72584, 44.82334], [15.79472, 44.8455], [15.76096, 44.87045], [15.74723, 44.96818], [15.78568, 44.97401], [15.74585, 45.0638], [15.78842, 45.11519], [15.76371, 45.16508], [15.83512, 45.22459], [15.98412, 45.23088], [16.12153, 45.09616], [16.29036, 44.99732], [16.35404, 45.00241], [16.35863, 45.03529], [16.3749, 45.05206], [16.38219, 45.05139], [16.38309, 45.05955], [16.40023, 45.1147], [16.4634, 45.14522], [16.49155, 45.21153], [16.52982, 45.22713], [16.5501, 45.2212], [16.56559, 45.22307], [16.60194, 45.23042], [16.64962, 45.20714], [16.74845, 45.20393], [16.78219, 45.19002], [16.81137, 45.18434], [16.83804, 45.18951], [16.92405, 45.27607], [16.9385, 45.22742], [17.0415, 45.20759], [17.18438, 45.14764], [17.24325, 45.146], [17.25131, 45.14957], [17.26815, 45.18444], [17.32092, 45.16246], [17.33573, 45.14521], [17.41229, 45.13335], [17.4498, 45.16119], [17.45615, 45.12523], [17.47589, 45.12656], [17.51469, 45.10791], [17.59104, 45.10816], [17.66571, 45.13408], [17.84826, 45.04489], [17.87148, 45.04645], [17.93706, 45.08016], [17.97336, 45.12245], [17.97834, 45.13831], [17.99479, 45.14958], [18.01594, 45.15163], [18.03121, 45.12632], [18.1624, 45.07654], [18.24387, 45.13699], [18.32077, 45.1021], [18.41896, 45.11083], [18.47939, 45.05871], [18.65723, 45.07544], [18.78357, 44.97741], [18.80661, 44.93561], [18.76369, 44.93707], [18.76347, 44.90669], [18.8704, 44.85097], [19.01994, 44.85493], [18.98957, 44.90645], [19.02871, 44.92541], [19.06853, 44.89915], [19.15573, 44.95409], [19.05205, 44.97692], [19.1011, 45.01191], [19.07952, 45.14668], [19.14063, 45.12972], [19.19144, 45.17863], [19.43589, 45.17137], [19.41941, 45.23475], [19.28208, 45.23813], [19.10774, 45.29547], [18.97446, 45.37528], [18.99918, 45.49333], [19.08364, 45.48804], [19.07471, 45.53086], [18.94562, 45.53712], [18.88776, 45.57253], [18.96691, 45.66731], [18.90305, 45.71863], [18.85783, 45.85493], [18.81394, 45.91329], [18.80211, 45.87995], [18.6792, 45.92057], [18.57483, 45.80772], [18.44368, 45.73972], [18.12439, 45.78905], [18.08869, 45.76511], [17.99805, 45.79671], [17.87377, 45.78522], [17.66545, 45.84207], [17.56821, 45.93728], [17.35672, 45.95209], [17.14592, 46.16697], [16.8903, 46.28122], [16.8541, 46.36255], [16.7154, 46.39523], [16.6639, 46.45203], [16.59527, 46.47524], [16.52604, 46.47831], [16.5007, 46.49644], [16.44036, 46.5171], [16.38771, 46.53608], [16.37193, 46.55008], [16.29793, 46.5121], [16.26733, 46.51505], [16.26759, 46.50566], [16.23961, 46.49653], [16.25124, 46.48067], [16.27398, 46.42875], [16.27329, 46.41467], [16.30162, 46.40437], [16.30233, 46.37837], [16.18824, 46.38282], [16.14859, 46.40547], [16.05281, 46.39141], [16.05065, 46.3833], [16.07314, 46.36458], [16.07616, 46.3463], [15.97965, 46.30652], [15.79284, 46.25811], [15.78817, 46.21719], [15.75479, 46.20336], [15.75436, 46.21969], [15.67395, 46.22478], [15.6434, 46.21396], [15.64904, 46.19229], [15.59909, 46.14761], [15.6083, 46.11992], [15.62317, 46.09103], [15.72977, 46.04682], [15.71246, 46.01196], [15.70327, 46.00015], [15.70636, 45.92116], [15.67967, 45.90455], [15.68383, 45.88867], [15.68232, 45.86819], [15.70411, 45.8465], [15.66662, 45.84085], [15.64185, 45.82915], [15.57952, 45.84953], [15.52234, 45.82195], [15.47325, 45.8253], [15.47531, 45.79802], [15.40836, 45.79491], [15.25423, 45.72275], [15.30872, 45.69014], [15.34919, 45.71623], [15.4057, 45.64727], [15.38952, 45.63682], [15.34214, 45.64702], [15.34695, 45.63382], [15.31027, 45.6303], [15.27747, 45.60504], [15.29837, 45.5841], [15.30249, 45.53224], [15.38188, 45.48752], [15.33051, 45.45258], [15.27758, 45.46678], [15.16862, 45.42309], [15.05187, 45.49079], [15.02385, 45.48533], [14.92266, 45.52788], [14.90554, 45.47769], [14.81992, 45.45913], [14.80124, 45.49515], [14.71718, 45.53442], [14.68605, 45.53006], [14.69694, 45.57366], [14.59576, 45.62812], [14.60977, 45.66403], [14.57397, 45.67165], [14.53816, 45.6205], [14.5008, 45.60852], [14.49769, 45.54424], [14.36693, 45.48642], [14.32487, 45.47142], [14.27681, 45.4902], [14.26611, 45.48239], [14.24239, 45.50607], [14.22371, 45.50388], [14.20348, 45.46896], [14.07116, 45.48752], [14.00578, 45.52352], [13.96063, 45.50825], [13.99488, 45.47551], [13.97309, 45.45258], [13.90771, 45.45149], [13.88124, 45.42637], [13.81742, 45.43729], [13.7785, 45.46787], [13.67398, 45.4436], [13.62902, 45.45898], [13.56979, 45.4895], [13.45644, 45.59464], [13.05142, 45.33128], [13.12821, 44.48877], [16.15283, 42.18525], [18.45131, 42.21682], [18.54128, 42.39171], [18.52152, 42.42302], [18.43588, 42.48556], [18.44307, 42.51077], [18.43735, 42.55921], [18.36197, 42.61423], [18.24318, 42.6112], [17.88201, 42.83668], [17.80854, 42.9182], [17.7948, 42.89556], [17.68151, 42.92725], [17.6444, 42.88641]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"HT\", iso1A3: \"HTI\", iso1N3: \"332\", wikidata: \"Q790\", nameEn: \"Haiti\", aliases: [\"RH\"], groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"509\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-71.71885, 18.78423], [-71.72624, 18.87802], [-71.77766, 18.95007], [-71.88102, 18.95007], [-71.74088, 19.0437], [-71.71088, 19.08353], [-71.69938, 19.10916], [-71.65337, 19.11759], [-71.62642, 19.21212], [-71.73229, 19.26686], [-71.77766, 19.33823], [-71.69448, 19.37866], [-71.6802, 19.45008], [-71.71268, 19.53374], [-71.71449, 19.55364], [-71.7429, 19.58445], [-71.75865, 19.70231], [-71.77419, 19.73128], [-72.38946, 20.27111], [-73.37289, 20.43199], [-74.7289, 18.71009], [-74.76465, 18.06252], [-72.29523, 17.48026], [-71.75671, 18.03456], [-71.73783, 18.07177], [-71.74994, 18.11115], [-71.75465, 18.14405], [-71.78271, 18.18302], [-71.69952, 18.34101], [-71.90875, 18.45821], [-71.88102, 18.50125], [-72.00201, 18.62312], [-71.95412, 18.64939], [-71.82556, 18.62551], [-71.71885, 18.78423]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"HU\", iso1A3: \"HUN\", iso1N3: \"348\", wikidata: \"Q28\", nameEn: \"Hungary\", groups: [\"EU\", \"151\", \"150\", \"UN\"], callingCodes: [\"36\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[21.72525, 48.34628], [21.67134, 48.3989], [21.6068, 48.50365], [21.44063, 48.58456], [21.11516, 48.49546], [20.83248, 48.5824], [20.5215, 48.53336], [20.29943, 48.26104], [20.24312, 48.2784], [19.92452, 48.1283], [19.63338, 48.25006], [19.52489, 48.19791], [19.47957, 48.09437], [19.28182, 48.08336], [19.23924, 48.0595], [19.01952, 48.07052], [18.82176, 48.04206], [18.76134, 47.97499], [18.76821, 47.87469], [18.8506, 47.82308], [18.74074, 47.8157], [18.66521, 47.76772], [18.56496, 47.76588], [18.29305, 47.73541], [18.02938, 47.75665], [17.71215, 47.7548], [17.23699, 48.02094], [17.16001, 48.00636], [17.09786, 47.97336], [17.11022, 47.92461], [17.08275, 47.87719], [17.00997, 47.86245], [17.07039, 47.81129], [17.05048, 47.79377], [17.08893, 47.70928], [16.87538, 47.68895], [16.86509, 47.72268], [16.82938, 47.68432], [16.7511, 47.67878], [16.72089, 47.73469], [16.65679, 47.74197], [16.61183, 47.76171], [16.54779, 47.75074], [16.53514, 47.73837], [16.55129, 47.72268], [16.4222, 47.66537], [16.58699, 47.61772], [16.64193, 47.63114], [16.71059, 47.52692], [16.64821, 47.50155], [16.6718, 47.46139], [16.57152, 47.40868], [16.52414, 47.41007], [16.49908, 47.39416], [16.45104, 47.41181], [16.47782, 47.25918], [16.44142, 47.25079], [16.43663, 47.21127], [16.41739, 47.20649], [16.42801, 47.18422], [16.4523, 47.18812], [16.46442, 47.16845], [16.44932, 47.14418], [16.52863, 47.13974], [16.46134, 47.09395], [16.52176, 47.05747], [16.43936, 47.03548], [16.51369, 47.00084], [16.28202, 47.00159], [16.27594, 46.9643], [16.22403, 46.939], [16.19904, 46.94134], [16.10983, 46.867], [16.14365, 46.8547], [16.15711, 46.85434], [16.21892, 46.86961], [16.2365, 46.87775], [16.2941, 46.87137], [16.34547, 46.83836], [16.3408, 46.80641], [16.31303, 46.79838], [16.30966, 46.7787], [16.37816, 46.69975], [16.42641, 46.69228], [16.41863, 46.66238], [16.38594, 46.6549], [16.39217, 46.63673], [16.50139, 46.56684], [16.52885, 46.53303], [16.52604, 46.5051], [16.59527, 46.47524], [16.6639, 46.45203], [16.7154, 46.39523], [16.8541, 46.36255], [16.8903, 46.28122], [17.14592, 46.16697], [17.35672, 45.95209], [17.56821, 45.93728], [17.66545, 45.84207], [17.87377, 45.78522], [17.99805, 45.79671], [18.08869, 45.76511], [18.12439, 45.78905], [18.44368, 45.73972], [18.57483, 45.80772], [18.6792, 45.92057], [18.80211, 45.87995], [18.81394, 45.91329], [18.99712, 45.93537], [19.01284, 45.96529], [19.0791, 45.96458], [19.10388, 46.04015], [19.14543, 45.9998], [19.28826, 45.99694], [19.52473, 46.1171], [19.56113, 46.16824], [19.66007, 46.19005], [19.81491, 46.1313], [19.93508, 46.17553], [20.01816, 46.17696], [20.03533, 46.14509], [20.09713, 46.17315], [20.26068, 46.12332], [20.28324, 46.1438], [20.35573, 46.16629], [20.45377, 46.14405], [20.49718, 46.18721], [20.63863, 46.12728], [20.76085, 46.21002], [20.74574, 46.25467], [20.86797, 46.28884], [21.06572, 46.24897], [21.16872, 46.30118], [21.28061, 46.44941], [21.26929, 46.4993], [21.33214, 46.63035], [21.43926, 46.65109], [21.5151, 46.72147], [21.48935, 46.7577], [21.52028, 46.84118], [21.59307, 46.86935], [21.59581, 46.91628], [21.68645, 46.99595], [21.648, 47.03902], [21.78395, 47.11104], [21.94463, 47.38046], [22.01055, 47.37767], [22.03389, 47.42508], [22.00917, 47.50492], [22.31816, 47.76126], [22.41979, 47.7391], [22.46559, 47.76583], [22.67247, 47.7871], [22.76617, 47.8417], [22.77991, 47.87211], [22.89849, 47.95851], [22.84276, 47.98602], [22.87847, 48.04665], [22.81804, 48.11363], [22.73427, 48.12005], [22.66835, 48.09162], [22.58733, 48.10813], [22.59007, 48.15121], [22.49806, 48.25189], [22.38133, 48.23726], [22.2083, 48.42534], [22.14689, 48.4005], [21.83339, 48.36242], [21.8279, 48.33321], [21.72525, 48.34628]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"IC\", wikidata: \"Q5813\", nameEn: \"Canary Islands\", country: \"ES\", groups: [\"Q3320166\", \"Q105472\", \"EU\", \"039\", \"150\", \"UN\"], isoStatus: \"excRes\", callingCodes: [\"34\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-12.00985, 30.24121], [-25.3475, 27.87574], [-14.43883, 27.02969], [-12.00985, 30.24121]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ID\", iso1A3: \"IDN\", iso1N3: \"360\", wikidata: \"Q252\", nameEn: \"Indonesia\", aliases: [\"RI\"] }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"IE\", iso1A3: \"IRL\", iso1N3: \"372\", wikidata: \"Q27\", nameEn: \"Republic of Ireland\", groups: [\"EU\", \"Q22890\", \"154\", \"150\", \"UN\"], driveSide: \"left\", callingCodes: [\"353\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-6.26218, 54.09785], [-6.29003, 54.11278], [-6.32694, 54.09337], [-6.36279, 54.11248], [-6.36605, 54.07234], [-6.47849, 54.06947], [-6.62842, 54.03503], [-6.66264, 54.0666], [-6.6382, 54.17071], [-6.70175, 54.20218], [-6.74575, 54.18788], [-6.81583, 54.22791], [-6.85179, 54.29176], [-6.87775, 54.34682], [-7.02034, 54.4212], [-7.19145, 54.31296], [-7.14908, 54.22732], [-7.25012, 54.20063], [-7.26316, 54.13863], [-7.29493, 54.12013], [-7.29687, 54.1354], [-7.28017, 54.16714], [-7.29157, 54.17191], [-7.34005, 54.14698], [-7.30553, 54.11869], [-7.32834, 54.11475], [-7.44567, 54.1539], [-7.4799, 54.12239], [-7.55812, 54.12239], [-7.69501, 54.20731], [-7.81397, 54.20159], [-7.8596, 54.21779], [-7.87101, 54.29299], [-8.04555, 54.36292], [-8.179, 54.46763], [-8.04538, 54.48941], [-7.99812, 54.54427], [-7.8596, 54.53671], [-7.70315, 54.62077], [-7.93293, 54.66603], [-7.83352, 54.73854], [-7.75041, 54.7103], [-7.64449, 54.75265], [-7.54671, 54.74606], [-7.54508, 54.79401], [-7.47626, 54.83084], [-7.4473, 54.87003], [-7.44404, 54.9403], [-7.40004, 54.94498], [-7.4033, 55.00391], [-7.34464, 55.04688], [-7.2471, 55.06933], [-6.34755, 55.49206], [-7.75229, 55.93854], [-22.01468, 48.19557], [-6.03913, 51.13217], [-5.37267, 53.63269], [-6.26218, 54.09785]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"IL\", iso1A3: \"ISR\", iso1N3: \"376\", wikidata: \"Q801\", nameEn: \"Israel\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"972\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[34.052, 31.46619], [34.29262, 31.70393], [34.48681, 31.59711], [34.56797, 31.54197], [34.48892, 31.48365], [34.40077, 31.40926], [34.36505, 31.36404], [34.37381, 31.30598], [34.36523, 31.28963], [34.29417, 31.24194], [34.26742, 31.21998], [34.92298, 29.45305], [34.97718, 29.54294], [34.98207, 29.58147], [35.02147, 29.66343], [35.14108, 30.07374], [35.19183, 30.34636], [35.16218, 30.43535], [35.19595, 30.50297], [35.21379, 30.60401], [35.29311, 30.71365], [35.33456, 30.81224], [35.33984, 30.8802], [35.41371, 30.95565], [35.43658, 31.12444], [35.40316, 31.25535], [35.47672, 31.49578], [35.39675, 31.49572], [35.22921, 31.37445], [35.13033, 31.3551], [35.02459, 31.35979], [34.92571, 31.34337], [34.88932, 31.37093], [34.87833, 31.39321], [34.89756, 31.43891], [34.93258, 31.47816], [34.94356, 31.50743], [34.9415, 31.55601], [34.95249, 31.59813], [35.00879, 31.65426], [35.08226, 31.69107], [35.10782, 31.71594], [35.11895, 31.71454], [35.12933, 31.7325], [35.13931, 31.73012], [35.15119, 31.73634], [35.15474, 31.73352], [35.16478, 31.73242], [35.18023, 31.72067], [35.20538, 31.72388], [35.21937, 31.71578], [35.22392, 31.71899], [35.23972, 31.70896], [35.24315, 31.71244], [35.2438, 31.7201], [35.24981, 31.72543], [35.25182, 31.73945], [35.26319, 31.74846], [35.25225, 31.7678], [35.26058, 31.79064], [35.25573, 31.81362], [35.26404, 31.82567], [35.251, 31.83085], [35.25753, 31.8387], [35.24816, 31.8458], [35.2304, 31.84222], [35.2249, 31.85433], [35.22817, 31.8638], [35.22567, 31.86745], [35.22294, 31.87889], [35.22014, 31.88264], [35.2136, 31.88241], [35.21276, 31.88153], [35.21016, 31.88237], [35.20945, 31.8815], [35.20791, 31.8821], [35.20673, 31.88151], [35.20381, 31.86716], [35.21128, 31.863], [35.216, 31.83894], [35.21469, 31.81835], [35.19461, 31.82687], [35.18169, 31.82542], [35.18603, 31.80901], [35.14174, 31.81325], [35.07677, 31.85627], [35.05617, 31.85685], [35.01978, 31.82944], [34.9724, 31.83352], [34.99712, 31.85569], [35.03489, 31.85919], [35.03978, 31.89276], [35.03489, 31.92448], [35.00124, 31.93264], [34.98682, 31.96935], [35.00261, 32.027], [34.9863, 32.09551], [34.99437, 32.10962], [34.98507, 32.12606], [34.99039, 32.14626], [34.96009, 32.17503], [34.95703, 32.19522], [34.98885, 32.20758], [35.01841, 32.23981], [35.02939, 32.2671], [35.01119, 32.28684], [35.01772, 32.33863], [35.04243, 32.35008], [35.05142, 32.3667], [35.0421, 32.38242], [35.05311, 32.4024], [35.05423, 32.41754], [35.07059, 32.4585], [35.08564, 32.46948], [35.09236, 32.47614], [35.10024, 32.47856], [35.10882, 32.4757], [35.15937, 32.50466], [35.2244, 32.55289], [35.25049, 32.52453], [35.29306, 32.50947], [35.30685, 32.51024], [35.35212, 32.52047], [35.40224, 32.50136], [35.42034, 32.46009], [35.41598, 32.45593], [35.41048, 32.43706], [35.42078, 32.41562], [35.55807, 32.38674], [35.55494, 32.42687], [35.57485, 32.48669], [35.56614, 32.64393], [35.59813, 32.65159], [35.61669, 32.67999], [35.66527, 32.681], [35.68467, 32.70715], [35.75983, 32.74803], [35.78745, 32.77938], [35.83758, 32.82817], [35.84021, 32.8725], [35.87012, 32.91976], [35.89298, 32.9456], [35.87188, 32.98028], [35.84802, 33.1031], [35.81911, 33.11077], [35.81911, 33.1336], [35.84285, 33.16673], [35.83846, 33.19397], [35.81647, 33.2028], [35.81295, 33.24841], [35.77513, 33.27342], [35.813, 33.3172], [35.77477, 33.33609], [35.62019, 33.27278], [35.62283, 33.24226], [35.58502, 33.26653], [35.58326, 33.28381], [35.56523, 33.28969], [35.55555, 33.25844], [35.54544, 33.25513], [35.54808, 33.236], [35.5362, 33.23196], [35.54228, 33.19865], [35.52573, 33.11921], [35.50335, 33.114], [35.50272, 33.09056], [35.448, 33.09264], [35.43059, 33.06659], [35.35223, 33.05617], [35.31429, 33.10515], [35.1924, 33.08743], [35.10645, 33.09318], [34.78515, 33.20368], [33.62659, 31.82938], [34.052, 31.46619]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"IM\", iso1A3: \"IMN\", iso1N3: \"833\", wikidata: \"Q9676\", nameEn: \"Isle of Man\", country: \"GB\", groups: [\"Q185086\", \"154\", \"150\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44 01624\", \"44 07624\", \"44 07524\", \"44 07924\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-3.98763, 54.07351], [-4.1819, 54.57861], [-5.6384, 53.81157], [-3.98763, 54.07351]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"IN\", iso1A3: \"IND\", iso1N3: \"356\", wikidata: \"Q668\", nameEn: \"India\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"IO\", iso1A3: \"IOT\", iso1N3: \"086\", wikidata: \"Q43448\", nameEn: \"British Indian Ocean Territory\", country: \"GB\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"IQ\", iso1A3: \"IRQ\", iso1N3: \"368\", wikidata: \"Q796\", nameEn: \"Iraq\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"964\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[42.78887, 37.38615], [42.56725, 37.14878], [42.35724, 37.10998], [42.36697, 37.0627], [41.81736, 36.58782], [41.40058, 36.52502], [41.28864, 36.35368], [41.2564, 36.06012], [41.37027, 35.84095], [41.38184, 35.62502], [41.26569, 35.42708], [41.21654, 35.1508], [41.2345, 34.80049], [41.12388, 34.65742], [40.97676, 34.39788], [40.64314, 34.31604], [38.79171, 33.37328], [39.08202, 32.50304], [38.98762, 32.47694], [39.04251, 32.30203], [39.26157, 32.35555], [39.29903, 32.23259], [40.01521, 32.05667], [42.97601, 30.72204], [42.97796, 30.48295], [44.72255, 29.19736], [46.42415, 29.05947], [46.5527, 29.10283], [46.89695, 29.50584], [47.15166, 30.01044], [47.37192, 30.10421], [47.7095, 30.10453], [48.01114, 29.98906], [48.06782, 30.02906], [48.17332, 30.02448], [48.40479, 29.85763], [48.59531, 29.66815], [48.83867, 29.78572], [48.61441, 29.93675], [48.51011, 29.96238], [48.44785, 30.00148], [48.4494, 30.04456], [48.43384, 30.08233], [48.38869, 30.11062], [48.38714, 30.13485], [48.41671, 30.17254], [48.41117, 30.19846], [48.26393, 30.3408], [48.24385, 30.33846], [48.21279, 30.31644], [48.19425, 30.32796], [48.18321, 30.39703], [48.14585, 30.44133], [48.02443, 30.4789], [48.03221, 30.9967], [47.68219, 31.00004], [47.6804, 31.39086], [47.86337, 31.78422], [47.64771, 32.07666], [47.52474, 32.15972], [47.57144, 32.20583], [47.37529, 32.47808], [47.17218, 32.45393], [46.46788, 32.91992], [46.32298, 32.9731], [46.17198, 32.95612], [46.09103, 32.98354], [46.15175, 33.07229], [46.03966, 33.09577], [46.05367, 33.13097], [46.11905, 33.11924], [46.20623, 33.20395], [45.99919, 33.5082], [45.86687, 33.49263], [45.96183, 33.55751], [45.89801, 33.63661], [45.77814, 33.60938], [45.50261, 33.94968], [45.42789, 33.9458], [45.41077, 33.97421], [45.47264, 34.03099], [45.56176, 34.15088], [45.58667, 34.30147], [45.53552, 34.35148], [45.49171, 34.3439], [45.46697, 34.38221], [45.43879, 34.45949], [45.51883, 34.47692], [45.53219, 34.60441], [45.59074, 34.55558], [45.60224, 34.55057], [45.73923, 34.54416], [45.70031, 34.69277], [45.65672, 34.7222], [45.68284, 34.76624], [45.70031, 34.82322], [45.73641, 34.83975], [45.79682, 34.85133], [45.78904, 34.91135], [45.86532, 34.89858], [45.89477, 34.95805], [45.87864, 35.03441], [45.92173, 35.0465], [45.92203, 35.09538], [45.93108, 35.08148], [45.94756, 35.09188], [46.06508, 35.03699], [46.07747, 35.0838], [46.11763, 35.07551], [46.19116, 35.11097], [46.15642, 35.1268], [46.16229, 35.16984], [46.19738, 35.18536], [46.18457, 35.22561], [46.11367, 35.23729], [46.15474, 35.2883], [46.13152, 35.32548], [46.05358, 35.38568], [45.98453, 35.49848], [46.01518, 35.52012], [45.97584, 35.58132], [46.03028, 35.57416], [46.01307, 35.59756], [46.0165, 35.61501], [45.99452, 35.63574], [46.0117, 35.65059], [46.01631, 35.69139], [46.23736, 35.71414], [46.34166, 35.78363], [46.32921, 35.82655], [46.17198, 35.8013], [46.08325, 35.8581], [45.94711, 35.82218], [45.89784, 35.83708], [45.81442, 35.82107], [45.76145, 35.79898], [45.6645, 35.92872], [45.60018, 35.96069], [45.55245, 35.99943], [45.46594, 36.00042], [45.38275, 35.97156], [45.33916, 35.99424], [45.37652, 36.06222], [45.37312, 36.09917], [45.32235, 36.17383], [45.30038, 36.27769], [45.26261, 36.3001], [45.27394, 36.35846], [45.23953, 36.43257], [45.11811, 36.40751], [45.00759, 36.5402], [45.06985, 36.62645], [45.06985, 36.6814], [45.01537, 36.75128], [44.84725, 36.77622], [44.83479, 36.81362], [44.90173, 36.86096], [44.91199, 36.91468], [44.89862, 37.01897], [44.81611, 37.04383], [44.75229, 37.11958], [44.78319, 37.1431], [44.76698, 37.16162], [44.63179, 37.19229], [44.42631, 37.05825], [44.38117, 37.05825], [44.35315, 37.04955], [44.35937, 37.02843], [44.30645, 36.97373], [44.25975, 36.98119], [44.18503, 37.09551], [44.22239, 37.15756], [44.27998, 37.16501], [44.2613, 37.25055], [44.13521, 37.32486], [44.02002, 37.33229], [43.90949, 37.22453], [43.84878, 37.22205], [43.82699, 37.19477], [43.8052, 37.22825], [43.7009, 37.23692], [43.63085, 37.21957], [43.56702, 37.25675], [43.50787, 37.24436], [43.33508, 37.33105], [43.30083, 37.30629], [43.11403, 37.37436], [42.93705, 37.32015], [42.78887, 37.38615]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"IR\", iso1A3: \"IRN\", iso1N3: \"364\", wikidata: \"Q794\", nameEn: \"Iran\", groups: [\"034\", \"142\", \"UN\"], callingCodes: [\"98\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[44.96746, 39.42998], [44.88916, 39.59653], [44.81043, 39.62677], [44.71806, 39.71124], [44.65422, 39.72163], [44.6137, 39.78393], [44.47298, 39.68788], [44.48111, 39.61579], [44.41849, 39.56659], [44.42832, 39.4131], [44.37921, 39.4131], [44.29818, 39.378], [44.22452, 39.4169], [44.03667, 39.39223], [44.1043, 39.19842], [44.20946, 39.13975], [44.18863, 38.93881], [44.30322, 38.81581], [44.26155, 38.71427], [44.28065, 38.6465], [44.32058, 38.62752], [44.3207, 38.49799], [44.3119, 38.37887], [44.38309, 38.36117], [44.44386, 38.38295], [44.50115, 38.33939], [44.42476, 38.25763], [44.22509, 37.88859], [44.3883, 37.85433], [44.45948, 37.77065], [44.55498, 37.783], [44.62096, 37.71985], [44.56887, 37.6429], [44.61401, 37.60165], [44.58449, 37.45018], [44.81021, 37.2915], [44.75986, 37.21549], [44.7868, 37.16644], [44.78319, 37.1431], [44.75229, 37.11958], [44.81611, 37.04383], [44.89862, 37.01897], [44.91199, 36.91468], [44.90173, 36.86096], [44.83479, 36.81362], [44.84725, 36.77622], [45.01537, 36.75128], [45.06985, 36.6814], [45.06985, 36.62645], [45.00759, 36.5402], [45.11811, 36.40751], [45.23953, 36.43257], [45.27394, 36.35846], [45.26261, 36.3001], [45.30038, 36.27769], [45.32235, 36.17383], [45.37312, 36.09917], [45.37652, 36.06222], [45.33916, 35.99424], [45.38275, 35.97156], [45.46594, 36.00042], [45.55245, 35.99943], [45.60018, 35.96069], [45.6645, 35.92872], [45.76145, 35.79898], [45.81442, 35.82107], [45.89784, 35.83708], [45.94711, 35.82218], [46.08325, 35.8581], [46.17198, 35.8013], [46.32921, 35.82655], [46.34166, 35.78363], [46.23736, 35.71414], [46.01631, 35.69139], [46.0117, 35.65059], [45.99452, 35.63574], [46.0165, 35.61501], [46.01307, 35.59756], [46.03028, 35.57416], [45.97584, 35.58132], [46.01518, 35.52012], [45.98453, 35.49848], [46.05358, 35.38568], [46.13152, 35.32548], [46.15474, 35.2883], [46.11367, 35.23729], [46.18457, 35.22561], [46.19738, 35.18536], [46.16229, 35.16984], [46.15642, 35.1268], [46.19116, 35.11097], [46.11763, 35.07551], [46.07747, 35.0838], [46.06508, 35.03699], [45.94756, 35.09188], [45.93108, 35.08148], [45.92203, 35.09538], [45.92173, 35.0465], [45.87864, 35.03441], [45.89477, 34.95805], [45.86532, 34.89858], [45.78904, 34.91135], [45.79682, 34.85133], [45.73641, 34.83975], [45.70031, 34.82322], [45.68284, 34.76624], [45.65672, 34.7222], [45.70031, 34.69277], [45.73923, 34.54416], [45.60224, 34.55057], [45.59074, 34.55558], [45.53219, 34.60441], [45.51883, 34.47692], [45.43879, 34.45949], [45.46697, 34.38221], [45.49171, 34.3439], [45.53552, 34.35148], [45.58667, 34.30147], [45.56176, 34.15088], [45.47264, 34.03099], [45.41077, 33.97421], [45.42789, 33.9458], [45.50261, 33.94968], [45.77814, 33.60938], [45.89801, 33.63661], [45.96183, 33.55751], [45.86687, 33.49263], [45.99919, 33.5082], [46.20623, 33.20395], [46.11905, 33.11924], [46.05367, 33.13097], [46.03966, 33.09577], [46.15175, 33.07229], [46.09103, 32.98354], [46.17198, 32.95612], [46.32298, 32.9731], [46.46788, 32.91992], [47.17218, 32.45393], [47.37529, 32.47808], [47.57144, 32.20583], [47.52474, 32.15972], [47.64771, 32.07666], [47.86337, 31.78422], [47.6804, 31.39086], [47.68219, 31.00004], [48.03221, 30.9967], [48.02443, 30.4789], [48.14585, 30.44133], [48.18321, 30.39703], [48.19425, 30.32796], [48.21279, 30.31644], [48.24385, 30.33846], [48.26393, 30.3408], [48.41117, 30.19846], [48.41671, 30.17254], [48.38714, 30.13485], [48.38869, 30.11062], [48.43384, 30.08233], [48.4494, 30.04456], [48.44785, 30.00148], [48.51011, 29.96238], [48.61441, 29.93675], [48.83867, 29.78572], [49.98877, 27.87827], [50.37726, 27.89227], [54.39838, 25.68383], [55.14145, 25.62624], [55.81777, 26.18798], [56.2644, 26.58649], [56.68954, 26.76645], [56.79239, 26.41236], [56.82555, 25.7713], [56.86325, 25.03856], [61.46682, 24.57869], [61.6433, 25.27541], [61.683, 25.66638], [61.83968, 25.7538], [61.83831, 26.07249], [61.89391, 26.26251], [62.05117, 26.31647], [62.21304, 26.26601], [62.31484, 26.528], [62.77352, 26.64099], [63.1889, 26.65072], [63.18688, 26.83844], [63.25005, 26.84212], [63.25005, 27.08692], [63.32283, 27.14437], [63.19649, 27.25674], [62.80604, 27.22412], [62.79684, 27.34381], [62.84905, 27.47627], [62.7638, 28.02992], [62.79412, 28.28108], [62.59499, 28.24842], [62.40259, 28.42703], [61.93581, 28.55284], [61.65978, 28.77937], [61.53765, 29.00507], [61.31508, 29.38903], [60.87231, 29.86514], [61.80829, 30.84224], [61.78268, 30.92724], [61.8335, 30.97669], [61.83257, 31.0452], [61.80957, 31.12576], [61.80569, 31.16167], [61.70929, 31.37391], [60.84541, 31.49561], [60.86191, 32.22565], [60.56485, 33.12944], [60.88908, 33.50219], [60.91133, 33.55596], [60.69573, 33.56054], [60.57762, 33.59772], [60.5485, 33.73422], [60.5838, 33.80793], [60.50209, 34.13992], [60.66502, 34.31539], [60.91321, 34.30411], [60.72316, 34.52857], [60.99922, 34.63064], [61.00197, 34.70631], [61.06926, 34.82139], [61.12831, 35.09938], [61.0991, 35.27845], [61.18187, 35.30249], [61.27371, 35.61482], [61.22719, 35.67038], [61.26152, 35.80749], [61.22444, 35.92879], [61.12007, 35.95992], [61.22719, 36.12759], [61.1393, 36.38782], [61.18187, 36.55348], [61.14516, 36.64644], [60.34767, 36.63214], [60.00768, 37.04102], [59.74678, 37.12499], [59.55178, 37.13594], [59.39385, 37.34257], [59.39797, 37.47892], [59.33507, 37.53146], [59.22905, 37.51161], [58.9338, 37.67374], [58.6921, 37.64548], [58.5479, 37.70526], [58.47786, 37.6433], [58.39959, 37.63134], [58.22999, 37.6856], [58.21399, 37.77281], [57.79534, 37.89299], [57.35042, 37.98546], [57.37236, 38.09321], [57.21169, 38.28965], [57.03453, 38.18717], [56.73928, 38.27887], [56.62255, 38.24005], [56.43303, 38.26054], [56.32454, 38.18502], [56.33278, 38.08132], [55.97847, 38.08024], [55.76561, 38.12238], [55.44152, 38.08564], [55.13412, 37.94705], [54.851, 37.75739], [54.77684, 37.62264], [54.81804, 37.61285], [54.77822, 37.51597], [54.67247, 37.43532], [54.58664, 37.45809], [54.36211, 37.34912], [54.24565, 37.32047], [53.89734, 37.3464], [48.88288, 38.43975], [48.84969, 38.45015], [48.81072, 38.44853], [48.78979, 38.45026], [48.70001, 38.40564], [48.62217, 38.40198], [48.58793, 38.45076], [48.45084, 38.61013], [48.3146, 38.59958], [48.24773, 38.71883], [48.02581, 38.82705], [48.01409, 38.90333], [48.07734, 38.91616], [48.08627, 38.94434], [48.28437, 38.97186], [48.33884, 39.03022], [48.31239, 39.09278], [48.15361, 39.19419], [48.12404, 39.25208], [48.15984, 39.30028], [48.37385, 39.37584], [48.34264, 39.42935], [47.98977, 39.70999], [47.84774, 39.66285], [47.50099, 39.49615], [47.38978, 39.45999], [47.31301, 39.37492], [47.05927, 39.24846], [47.05771, 39.20143], [46.95341, 39.13505], [46.92539, 39.16644], [46.83822, 39.13143], [46.75752, 39.03231], [46.53497, 38.86548], [46.34059, 38.92076], [46.20601, 38.85262], [46.14785, 38.84206], [46.06766, 38.87861], [46.00228, 38.87376], [45.94624, 38.89072], [45.90266, 38.87739], [45.83883, 38.90768], [45.65172, 38.95199], [45.6155, 38.94304], [45.6131, 38.964], [45.44966, 38.99243], [45.44811, 39.04927], [45.40452, 39.07224], [45.40148, 39.09007], [45.30489, 39.18333], [45.16168, 39.21952], [45.08751, 39.35052], [45.05932, 39.36435], [44.96746, 39.42998]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"IS\", iso1A3: \"ISL\", iso1N3: \"352\", wikidata: \"Q189\", nameEn: \"Iceland\", groups: [\"154\", \"150\", \"UN\"], callingCodes: [\"354\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-33.15676, 62.62995], [-8.25539, 63.0423], [-15.70914, 69.67442], [-33.15676, 62.62995]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"IT\", iso1A3: \"ITA\", iso1N3: \"380\", wikidata: \"Q38\", nameEn: \"Italy\", groups: [\"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"39\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[8.95861, 45.96485], [8.97604, 45.96151], [8.97741, 45.98317], [8.96668, 45.98436], [8.95861, 45.96485]]], [[[7.63035, 43.57419], [9.56115, 43.20816], [10.09675, 41.44089], [7.60802, 41.05927], [7.89009, 38.19924], [11.2718, 37.6713], [12.13667, 34.20326], [14.02721, 36.53141], [17.67657, 35.68918], [18.83516, 40.36999], [16.15283, 42.18525], [13.12821, 44.48877], [13.05142, 45.33128], [13.45644, 45.59464], [13.6076, 45.64761], [13.7198, 45.59352], [13.74587, 45.59811], [13.78445, 45.5825], [13.84106, 45.58185], [13.86771, 45.59898], [13.8695, 45.60835], [13.9191, 45.6322], [13.87933, 45.65207], [13.83422, 45.68703], [13.83332, 45.70855], [13.8235, 45.7176], [13.66986, 45.79955], [13.59784, 45.8072], [13.58858, 45.83503], [13.57563, 45.8425], [13.58644, 45.88173], [13.59565, 45.89446], [13.60857, 45.89907], [13.61931, 45.91782], [13.63815, 45.93607], [13.6329, 45.94894], [13.64307, 45.98326], [13.63458, 45.98947], [13.62074, 45.98388], [13.58903, 45.99009], [13.56759, 45.96991], [13.52963, 45.96588], [13.50104, 45.98078], [13.47474, 46.00546], [13.49702, 46.01832], [13.50998, 46.04498], [13.49568, 46.04839], [13.50104, 46.05986], [13.57072, 46.09022], [13.64053, 46.13587], [13.66472, 46.17392], [13.64451, 46.18966], [13.56682, 46.18703], [13.56114, 46.2054], [13.47587, 46.22725], [13.42218, 46.20758], [13.37671, 46.29668], [13.44808, 46.33507], [13.43418, 46.35992], [13.47019, 46.3621], [13.5763, 46.40915], [13.5763, 46.42613], [13.59777, 46.44137], [13.68684, 46.43881], [13.7148, 46.5222], [13.64088, 46.53438], [13.27627, 46.56059], [12.94445, 46.60401], [12.59992, 46.6595], [12.38708, 46.71529], [12.27591, 46.88651], [12.2006, 46.88854], [12.11675, 47.01241], [12.21781, 47.03996], [12.19254, 47.09331], [11.74789, 46.98484], [11.50739, 47.00644], [11.33355, 46.99862], [11.10618, 46.92966], [11.00764, 46.76896], [10.72974, 46.78972], [10.75753, 46.82258], [10.66405, 46.87614], [10.54783, 46.84505], [10.47197, 46.85698], [10.38659, 46.67847], [10.40475, 46.63671], [10.44686, 46.64162], [10.49375, 46.62049], [10.46136, 46.53164], [10.25309, 46.57432], [10.23674, 46.63484], [10.10307, 46.61003], [10.03715, 46.44479], [10.165, 46.41051], [10.10506, 46.3372], [10.17862, 46.25626], [10.14439, 46.22992], [10.07055, 46.21668], [9.95249, 46.38045], [9.73086, 46.35071], [9.71273, 46.29266], [9.57015, 46.2958], [9.46117, 46.37481], [9.45936, 46.50873], [9.40487, 46.46621], [9.36128, 46.5081], [9.28136, 46.49685], [9.25502, 46.43743], [9.29226, 46.32717], [9.24503, 46.23616], [9.01618, 46.04928], [8.99257, 45.9698], [9.09065, 45.89906], [9.06642, 45.8761], [9.04546, 45.84968], [9.04059, 45.8464], [9.03505, 45.83976], [9.03793, 45.83548], [9.03279, 45.82865], [9.0298, 45.82127], [9.00324, 45.82055], [8.99663, 45.83466], [8.9621, 45.83707], [8.94737, 45.84285], [8.91129, 45.8388], [8.93504, 45.86245], [8.94372, 45.86587], [8.93649, 45.86775], [8.88904, 45.95465], [8.86688, 45.96135], [8.85121, 45.97239], [8.8319, 45.9879], [8.79362, 45.99207], [8.78585, 45.98973], [8.79414, 46.00913], [8.85617, 46.0748], [8.80778, 46.10085], [8.75697, 46.10395], [8.62242, 46.12112], [8.45032, 46.26869], [8.46317, 46.43712], [8.42464, 46.46367], [8.30648, 46.41587], [8.31162, 46.38044], [8.08814, 46.26692], [8.16866, 46.17817], [8.11383, 46.11577], [8.02906, 46.10331], [7.98881, 45.99867], [7.9049, 45.99945], [7.85949, 45.91485], [7.56343, 45.97421], [7.10685, 45.85653], [7.04151, 45.92435], [6.95315, 45.85163], [6.80785, 45.83265], [6.80785, 45.71864], [6.98948, 45.63869], [7.00037, 45.509], [7.18019, 45.40071], [7.10572, 45.32924], [7.13115, 45.25386], [7.07074, 45.21228], [6.96706, 45.20841], [6.85144, 45.13226], [6.7697, 45.16044], [6.62803, 45.11175], [6.66981, 45.02324], [6.74791, 45.01939], [6.74519, 44.93661], [6.75518, 44.89915], [6.90774, 44.84322], [6.93499, 44.8664], [7.02217, 44.82519], [7.00401, 44.78782], [7.07484, 44.68073], [7.00582, 44.69364], [6.95133, 44.66264], [6.96042, 44.62129], [6.85507, 44.53072], [6.86233, 44.49834], [6.94504, 44.43112], [6.88784, 44.42043], [6.89171, 44.36637], [6.98221, 44.28289], [7.00764, 44.23736], [7.16929, 44.20352], [7.27827, 44.1462], [7.34547, 44.14359], [7.36364, 44.11882], [7.62155, 44.14881], [7.63245, 44.17877], [7.68694, 44.17487], [7.66878, 44.12795], [7.72508, 44.07578], [7.6597, 44.03009], [7.66848, 43.99943], [7.65266, 43.9763], [7.60771, 43.95772], [7.56858, 43.94506], [7.56075, 43.89932], [7.51162, 43.88301], [7.49355, 43.86551], [7.50423, 43.84345], [7.53006, 43.78405], [7.63035, 43.57419]], [[12.45181, 41.90056], [12.44834, 41.90095], [12.44582, 41.90194], [12.44815, 41.90326], [12.44984, 41.90545], [12.45091, 41.90625], [12.45543, 41.90738], [12.45561, 41.90629], [12.45762, 41.9058], [12.45755, 41.9033], [12.45826, 41.90281], [12.45834, 41.90174], [12.4577, 41.90115], [12.45691, 41.90125], [12.45626, 41.90172], [12.45435, 41.90143], [12.45446, 41.90028], [12.45181, 41.90056]], [[12.45648, 43.89369], [12.44184, 43.90498], [12.41641, 43.89991], [12.40935, 43.9024], [12.41233, 43.90956], [12.40733, 43.92379], [12.41551, 43.92984], [12.41165, 43.93769], [12.40506, 43.94325], [12.40415, 43.95485], [12.41414, 43.95273], [12.42005, 43.9578], [12.43662, 43.95698], [12.44684, 43.96597], [12.46205, 43.97463], [12.47853, 43.98052], [12.49406, 43.98492], [12.50678, 43.99113], [12.51463, 43.99122], [12.5154, 43.98508], [12.51064, 43.98165], [12.51109, 43.97201], [12.50622, 43.97131], [12.50875, 43.96198], [12.50655, 43.95796], [12.51427, 43.94897], [12.51553, 43.94096], [12.50496, 43.93017], [12.50269, 43.92363], [12.49724, 43.92248], [12.49247, 43.91774], [12.49429, 43.90973], [12.48771, 43.89706], [12.45648, 43.89369]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"JE\", iso1A3: \"JEY\", iso1N3: \"832\", wikidata: \"Q785\", nameEn: \"Bailiwick of Jersey\", country: \"GB\", groups: [\"830\", \"Q185086\", \"154\", \"150\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44 01534\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.00491, 48.86706], [-1.83944, 49.23037], [-2.09454, 49.46288], [-2.65349, 49.15373], [-2.00491, 48.86706]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"JM\", iso1A3: \"JAM\", iso1N3: \"388\", wikidata: \"Q766\", nameEn: \"Jamaica\", aliases: [\"JA\"], groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", callingCodes: [\"1 876\", \"1 658\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-74.09729, 17.36817], [-78.9741, 19.59515], [-78.34606, 16.57862], [-74.09729, 17.36817]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"JO\", iso1A3: \"JOR\", iso1N3: \"400\", wikidata: \"Q810\", nameEn: \"Jordan\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"962\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[39.04251, 32.30203], [38.98762, 32.47694], [39.08202, 32.50304], [38.79171, 33.37328], [36.83946, 32.31293], [36.40959, 32.37908], [36.23948, 32.50108], [36.20875, 32.49529], [36.20379, 32.52751], [36.08074, 32.51463], [36.02239, 32.65911], [35.96633, 32.66237], [35.93307, 32.71966], [35.88405, 32.71321], [35.75983, 32.74803], [35.68467, 32.70715], [35.66527, 32.681], [35.61669, 32.67999], [35.59813, 32.65159], [35.56614, 32.64393], [35.57485, 32.48669], [35.55494, 32.42687], [35.55807, 32.38674], [35.57111, 32.21877], [35.52012, 32.04076], [35.54375, 31.96587], [35.52758, 31.9131], [35.55941, 31.76535], [35.47672, 31.49578], [35.40316, 31.25535], [35.43658, 31.12444], [35.41371, 30.95565], [35.33984, 30.8802], [35.33456, 30.81224], [35.29311, 30.71365], [35.21379, 30.60401], [35.19595, 30.50297], [35.16218, 30.43535], [35.19183, 30.34636], [35.14108, 30.07374], [35.02147, 29.66343], [34.98207, 29.58147], [34.97718, 29.54294], [34.92298, 29.45305], [34.8812, 29.36878], [36.07081, 29.18469], [36.50005, 29.49696], [36.75083, 29.86903], [37.4971, 29.99949], [37.66395, 30.33245], [37.99354, 30.49998], [36.99791, 31.50081], [38.99233, 31.99721], [39.29903, 32.23259], [39.26157, 32.35555], [39.04251, 32.30203]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"JP\", iso1A3: \"JPN\", iso1N3: \"392\", wikidata: \"Q17\", nameEn: \"Japan\", groups: [\"030\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"81\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[145.82361, 43.38904], [145.23667, 43.76813], [145.82343, 44.571], [140.9182, 45.92937], [133.61399, 37.41], [129.2669, 34.87122], [122.26612, 25.98197], [123.92912, 17.8782], [155.16731, 23.60141], [145.82361, 43.38904]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KE\", iso1A3: \"KEN\", iso1N3: \"404\", wikidata: \"Q114\", nameEn: \"Kenya\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"254\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[35.9419, 4.61933], [35.51424, 4.61643], [35.42366, 4.76969], [35.47843, 4.91872], [35.30992, 4.90402], [35.34151, 5.02364], [34.47601, 4.72162], [33.9873, 4.23316], [34.06046, 4.15235], [34.15429, 3.80464], [34.45815, 3.67385], [34.44922, 3.51627], [34.39112, 3.48802], [34.41794, 3.44342], [34.40006, 3.37949], [34.45815, 3.18319], [34.56242, 3.11478], [34.60114, 2.93034], [34.65774, 2.8753], [34.73967, 2.85447], [34.78137, 2.76223], [34.77244, 2.70272], [34.95267, 2.47209], [34.90947, 2.42447], [34.98692, 1.97348], [34.9899, 1.6668], [34.92734, 1.56109], [34.87819, 1.5596], [34.7918, 1.36752], [34.82606, 1.30944], [34.82606, 1.26626], [34.80223, 1.22754], [34.67562, 1.21265], [34.58029, 1.14712], [34.57427, 1.09868], [34.52369, 1.10692], [34.43349, 0.85254], [34.40041, 0.80266], [34.31516, 0.75693], [34.27345, 0.63182], [34.20196, 0.62289], [34.13493, 0.58118], [34.11408, 0.48884], [34.08727, 0.44713], [34.10067, 0.36372], [33.90936, 0.10581], [33.98449, -0.13079], [33.9264, -0.54188], [33.93107, -0.99298], [34.02286, -1.00779], [34.03084, -1.05101], [34.0824, -1.02264], [37.67199, -3.06222], [37.71745, -3.304], [37.5903, -3.42735], [37.63099, -3.50723], [37.75036, -3.54243], [37.81321, -3.69179], [39.21631, -4.67835], [39.44306, -4.93877], [39.62121, -4.68136], [41.75542, -1.85308], [41.56362, -1.66375], [41.56, -1.59812], [41.00099, -0.83068], [40.98767, 2.82959], [41.31368, 3.14314], [41.89488, 3.97375], [41.1754, 3.94079], [40.77498, 4.27683], [39.86043, 3.86974], [39.76808, 3.67058], [39.58339, 3.47434], [39.55132, 3.39634], [39.51551, 3.40895], [39.49444, 3.45521], [39.19954, 3.47834], [39.07736, 3.5267], [38.91938, 3.51198], [38.52336, 3.62551], [38.45812, 3.60445], [38.14168, 3.62487], [37.07724, 4.33503], [36.84474, 4.44518], [36.03924, 4.44406], [35.95449, 4.53244], [35.9419, 4.61933]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KG\", iso1A3: \"KGZ\", iso1N3: \"417\", wikidata: \"Q813\", nameEn: \"Kyrgyzstan\", groups: [\"143\", \"142\", \"UN\"], callingCodes: [\"996\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[74.88756, 42.98612], [74.75, 42.99029], [74.70331, 43.02519], [74.64615, 43.05881], [74.57491, 43.13702], [74.22489, 43.24657], [73.55634, 43.03071], [73.50992, 42.82356], [73.44393, 42.43098], [71.88792, 42.83578], [71.62405, 42.76613], [71.53272, 42.8014], [71.2724, 42.77853], [71.22785, 42.69248], [71.17807, 42.67381], [71.15232, 42.60486], [70.97717, 42.50147], [70.85973, 42.30188], [70.94483, 42.26238], [71.13263, 42.28356], [71.28719, 42.18033], [70.69777, 41.92554], [70.17682, 41.5455], [70.48909, 41.40335], [70.67586, 41.47953], [70.78572, 41.36419], [70.77885, 41.24813], [70.86263, 41.23833], [70.9615, 41.16393], [71.02193, 41.19494], [71.11806, 41.15359], [71.25813, 41.18796], [71.27187, 41.11015], [71.34877, 41.16807], [71.40198, 41.09436], [71.46148, 41.13958], [71.43814, 41.19644], [71.46688, 41.31883], [71.57227, 41.29175], [71.6787, 41.42111], [71.65914, 41.49599], [71.73054, 41.54713], [71.71132, 41.43012], [71.76625, 41.4466], [71.83914, 41.3546], [71.91457, 41.2982], [71.85964, 41.19081], [72.07249, 41.11739], [72.10745, 41.15483], [72.16433, 41.16483], [72.17594, 41.15522], [72.14864, 41.13363], [72.1792, 41.10621], [72.21061, 41.05607], [72.17594, 41.02377], [72.18339, 40.99571], [72.324, 41.03381], [72.34026, 41.04539], [72.34757, 41.06104], [72.36138, 41.04384], [72.38511, 41.02785], [72.45206, 41.03018], [72.48742, 40.97136], [72.55109, 40.96046], [72.59136, 40.86947], [72.68157, 40.84942], [72.84291, 40.85512], [72.94454, 40.8094], [73.01869, 40.84681], [73.13267, 40.83512], [73.13412, 40.79122], [73.0612, 40.76678], [72.99133, 40.76457], [72.93296, 40.73089], [72.8722, 40.71111], [72.85372, 40.7116], [72.84754, 40.67229], [72.80137, 40.67856], [72.74866, 40.60873], [72.74894, 40.59592], [72.75982, 40.57273], [72.74862, 40.57131], [72.74768, 40.58051], [72.73995, 40.58409], [72.69579, 40.59778], [72.66713, 40.59076], [72.66713, 40.5219], [72.47795, 40.5532], [72.40517, 40.61917], [72.34406, 40.60144], [72.41714, 40.55736], [72.38384, 40.51535], [72.41513, 40.50856], [72.44191, 40.48222], [72.40346, 40.4007], [72.24368, 40.46091], [72.18648, 40.49893], [71.96401, 40.31907], [72.05464, 40.27586], [71.85002, 40.25647], [71.82646, 40.21872], [71.73054, 40.14818], [71.71719, 40.17886], [71.69621, 40.18492], [71.70569, 40.20391], [71.68386, 40.26984], [71.61931, 40.26775], [71.61725, 40.20615], [71.51549, 40.22986], [71.51215, 40.26943], [71.4246, 40.28619], [71.36663, 40.31593], [71.13042, 40.34106], [71.05901, 40.28765], [70.95789, 40.28761], [70.9818, 40.22392], [70.80495, 40.16813], [70.7928, 40.12797], [70.65827, 40.0981], [70.65946, 39.9878], [70.58912, 39.95211], [70.55033, 39.96619], [70.47557, 39.93216], [70.57384, 39.99394], [70.58297, 40.00891], [70.01283, 40.23288], [69.67001, 40.10639], [69.64704, 40.12165], [69.57615, 40.10524], [69.55555, 40.12296], [69.53794, 40.11833], [69.53855, 40.0887], [69.5057, 40.03277], [69.53615, 39.93991], [69.43557, 39.92877], [69.43134, 39.98431], [69.35649, 40.01994], [69.26938, 39.8127], [69.3594, 39.52516], [69.68677, 39.59281], [69.87491, 39.53882], [70.11111, 39.58223], [70.2869, 39.53141], [70.44757, 39.60128], [70.64087, 39.58792], [70.7854, 39.38933], [71.06418, 39.41586], [71.08752, 39.50704], [71.49814, 39.61397], [71.55856, 39.57588], [71.5517, 39.45722], [71.62688, 39.44056], [71.76816, 39.45456], [71.80164, 39.40631], [71.7522, 39.32031], [71.79202, 39.27355], [71.90601, 39.27674], [72.04059, 39.36704], [72.09689, 39.26823], [72.17242, 39.2661], [72.23834, 39.17248], [72.33173, 39.33093], [72.62027, 39.39696], [72.85934, 39.35116], [73.18454, 39.35536], [73.31912, 39.38615], [73.45096, 39.46677], [73.59831, 39.46425], [73.87018, 39.47879], [73.94683, 39.60733], [73.92354, 39.69565], [73.9051, 39.75073], [73.83006, 39.76136], [73.97049, 40.04378], [74.25533, 40.13191], [74.35063, 40.09742], [74.69875, 40.34668], [74.85996, 40.32857], [74.78168, 40.44886], [74.82013, 40.52197], [75.08243, 40.43945], [75.22834, 40.45382], [75.5854, 40.66874], [75.69663, 40.28642], [75.91361, 40.2948], [75.96168, 40.38064], [76.33659, 40.3482], [76.5261, 40.46114], [76.75681, 40.95354], [76.99302, 41.0696], [77.28004, 41.0033], [77.3693, 41.0375], [77.52723, 41.00227], [77.76206, 41.01574], [77.81287, 41.14307], [78.12873, 41.23091], [78.15757, 41.38565], [78.3732, 41.39603], [79.92977, 42.04113], [80.17842, 42.03211], [80.17807, 42.21166], [79.97364, 42.42816], [79.52921, 42.44778], [79.19763, 42.804], [78.91502, 42.76839], [78.48469, 42.89649], [75.82823, 42.94848], [75.72174, 42.79672], [75.29966, 42.86183], [75.22619, 42.85528], [74.88756, 42.98612]], [[70.74189, 39.86319], [70.63105, 39.77923], [70.59667, 39.83542], [70.54998, 39.85137], [70.52631, 39.86989], [70.53651, 39.89155], [70.74189, 39.86319]], [[71.86463, 39.98598], [71.84316, 39.95582], [71.7504, 39.93701], [71.71511, 39.96348], [71.78838, 40.01404], [71.86463, 39.98598]], [[71.21139, 40.03369], [71.1427, 39.95026], [71.23067, 39.93581], [71.16101, 39.88423], [71.10531, 39.91354], [71.04979, 39.89808], [71.10501, 39.95568], [71.09063, 39.99], [71.11668, 39.99291], [71.11037, 40.01984], [71.01035, 40.05481], [71.00236, 40.18154], [71.06305, 40.1771], [71.12218, 40.03052], [71.21139, 40.03369]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KH\", iso1A3: \"KHM\", iso1N3: \"116\", wikidata: \"Q424\", nameEn: \"Cambodia\", groups: [\"035\", \"142\", \"UN\"], callingCodes: [\"855\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[105.87328, 11.55953], [105.81645, 11.56876], [105.80867, 11.60536], [105.8507, 11.66635], [105.88962, 11.67854], [105.95188, 11.63738], [106.00792, 11.7197], [106.02038, 11.77457], [106.06708, 11.77761], [106.13158, 11.73283], [106.18539, 11.75171], [106.26478, 11.72122], [106.30525, 11.67549], [106.37219, 11.69836], [106.44691, 11.66787], [106.45158, 11.68616], [106.41577, 11.76999], [106.44535, 11.8279], [106.44068, 11.86294], [106.4687, 11.86751], [106.4111, 11.97413], [106.70687, 11.96956], [106.79405, 12.0807], [106.92325, 12.06548], [106.99953, 12.08983], [107.15831, 12.27547], [107.34511, 12.33327], [107.42917, 12.24657], [107.4463, 12.29373], [107.55059, 12.36824], [107.5755, 12.52177], [107.55993, 12.7982], [107.49611, 12.88926], [107.49144, 13.01215], [107.62843, 13.3668], [107.61909, 13.52577], [107.53503, 13.73908], [107.45252, 13.78897], [107.46498, 13.91593], [107.44318, 13.99751], [107.38247, 13.99147], [107.35757, 14.02319], [107.37158, 14.07906], [107.33577, 14.11832], [107.40427, 14.24509], [107.39493, 14.32655], [107.44941, 14.41552], [107.48521, 14.40346], [107.52569, 14.54665], [107.52102, 14.59034], [107.55371, 14.628], [107.54361, 14.69092], [107.47238, 14.61523], [107.44435, 14.52785], [107.37897, 14.54443], [107.3276, 14.58812], [107.29803, 14.58963], [107.26534, 14.54292], [107.256, 14.48716], [107.21241, 14.48716], [107.17038, 14.41782], [107.09722, 14.3937], [107.03962, 14.45099], [107.04585, 14.41782], [106.98825, 14.36806], [106.9649, 14.3198], [106.90574, 14.33639], [106.8497, 14.29416], [106.80767, 14.31226], [106.73762, 14.42687], [106.63333, 14.44194], [106.59908, 14.50977], [106.57106, 14.50525], [106.54148, 14.59565], [106.50723, 14.58963], [106.45898, 14.55045], [106.47766, 14.50977], [106.43874, 14.52032], [106.40916, 14.45249], [106.32355, 14.44043], [106.25194, 14.48415], [106.21302, 14.36203], [106.00131, 14.36957], [105.99509, 14.32734], [106.02311, 14.30623], [106.04801, 14.20363], [106.10872, 14.18401], [106.11962, 14.11307], [106.18656, 14.06324], [106.16632, 14.01794], [106.10094, 13.98471], [106.10405, 13.9137], [105.90791, 13.92881], [105.78182, 14.02247], [105.78338, 14.08438], [105.5561, 14.15684], [105.44869, 14.10703], [105.36775, 14.09948], [105.2759, 14.17496], [105.20894, 14.34967], [105.17748, 14.34432], [105.14012, 14.23873], [105.08408, 14.20402], [105.02804, 14.23722], [104.97667, 14.38806], [104.69335, 14.42726], [104.55014, 14.36091], [104.27616, 14.39861], [103.93836, 14.3398], [103.70175, 14.38052], [103.71109, 14.4348], [103.53518, 14.42575], [103.39353, 14.35639], [103.16469, 14.33075], [102.93275, 14.19044], [102.91251, 14.01531], [102.77864, 13.93374], [102.72727, 13.77806], [102.56848, 13.69366], [102.5481, 13.6589], [102.58635, 13.6286], [102.62483, 13.60883], [102.57573, 13.60461], [102.5358, 13.56933], [102.44601, 13.5637], [102.36859, 13.57488], [102.33828, 13.55613], [102.361, 13.50551], [102.35563, 13.47307], [102.35692, 13.38274], [102.34611, 13.35618], [102.36001, 13.31142], [102.36146, 13.26006], [102.43422, 13.09061], [102.46011, 13.08057], [102.52275, 12.99813], [102.48694, 12.97537], [102.49335, 12.92711], [102.53053, 12.77506], [102.4994, 12.71736], [102.51963, 12.66117], [102.57567, 12.65358], [102.7796, 12.43781], [102.78116, 12.40284], [102.73134, 12.37091], [102.70176, 12.1686], [102.77026, 12.06815], [102.78427, 11.98746], [102.83957, 11.8519], [102.90973, 11.75613], [102.91449, 11.65512], [102.52395, 11.25257], [102.47649, 9.66162], [103.99198, 10.48391], [104.43778, 10.42386], [104.47963, 10.43046], [104.49869, 10.4057], [104.59018, 10.53073], [104.87933, 10.52833], [104.95094, 10.64003], [105.09571, 10.72722], [105.02722, 10.89236], [105.08326, 10.95656], [105.11449, 10.96332], [105.34011, 10.86179], [105.42884, 10.96878], [105.50045, 10.94586], [105.77751, 11.03671], [105.86376, 10.89839], [105.84603, 10.85873], [105.93403, 10.83853], [105.94535, 10.9168], [106.06708, 10.8098], [106.18539, 10.79451], [106.14301, 10.98176], [106.20095, 10.97795], [106.1757, 11.07301], [106.1527, 11.10476], [106.10444, 11.07879], [105.86782, 11.28343], [105.88962, 11.43605], [105.87328, 11.55953]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KI\", iso1A3: \"KIR\", iso1N3: \"296\", wikidata: \"Q710\", nameEn: \"Kiribati\", groups: [\"057\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"686\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[169, 3.9], [169, -3.5], [178, -3.5], [178, 3.9], [169, 3.9]]], [[[-161.06795, 5.2462], [-158.12991, -1.86122], [-175.33482, -1.40631], [-175.31804, -7.54825], [-156.50903, -7.4975], [-156.48634, -15.52824], [-135.59706, -4.70473], [-161.06795, 5.2462]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KM\", iso1A3: \"COM\", iso1N3: \"174\", wikidata: \"Q970\", nameEn: \"Comoros\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"269\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[42.63904, -10.02522], [43.28731, -13.97126], [45.4971, -11.75965], [42.63904, -10.02522]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KN\", iso1A3: \"KNA\", iso1N3: \"659\", wikidata: \"Q763\", nameEn: \"St. Kitts and Nevis\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 869\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-62.29333, 17.43155], [-62.76692, 17.64353], [-63.09677, 17.21372], [-62.63813, 16.65446], [-62.29333, 17.43155]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KP\", iso1A3: \"PRK\", iso1N3: \"408\", wikidata: \"Q423\", nameEn: \"North Korea\", groups: [\"030\", \"142\", \"UN\"], callingCodes: [\"850\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[130.26095, 42.9027], [130.09764, 42.91425], [130.12957, 42.98361], [129.96409, 42.97306], [129.95082, 43.01051], [129.8865, 43.00395], [129.85261, 42.96494], [129.83277, 42.86746], [129.80719, 42.79218], [129.7835, 42.76521], [129.77183, 42.69435], [129.75294, 42.59409], [129.72541, 42.43739], [129.60482, 42.44461], [129.54701, 42.37254], [129.42882, 42.44702], [129.28541, 42.41574], [129.22423, 42.3553], [129.22285, 42.26491], [129.15178, 42.17224], [128.96068, 42.06657], [128.94007, 42.03537], [128.04487, 42.01769], [128.15119, 41.74568], [128.30716, 41.60322], [128.20061, 41.40895], [128.18546, 41.41279], [128.12967, 41.37931], [128.03311, 41.39232], [128.02633, 41.42103], [127.92943, 41.44291], [127.29712, 41.49473], [127.17841, 41.59714], [126.90729, 41.79955], [126.60631, 41.65565], [126.53189, 41.35206], [126.242, 41.15454], [126.00335, 40.92835], [125.76869, 40.87908], [125.71172, 40.85223], [124.86913, 40.45387], [124.40719, 40.13655], [124.38556, 40.11047], [124.3322, 40.05573], [124.37089, 40.03004], [124.35029, 39.95639], [124.23201, 39.9248], [124.17532, 39.8232], [123.90497, 38.79949], [123.85601, 37.49093], [124.67666, 38.05679], [124.84224, 37.977], [124.87921, 37.80827], [125.06408, 37.66334], [125.37112, 37.62643], [125.81159, 37.72949], [126.13074, 37.70512], [126.18776, 37.74728], [126.19097, 37.81462], [126.24402, 37.83113], [126.43239, 37.84095], [126.46818, 37.80873], [126.56709, 37.76857], [126.59918, 37.76364], [126.66067, 37.7897], [126.68793, 37.83728], [126.68793, 37.9175], [126.67023, 37.95852], [126.84961, 38.0344], [126.88106, 38.10246], [126.95887, 38.1347], [126.95338, 38.17735], [127.04479, 38.25518], [127.15749, 38.30722], [127.38727, 38.33227], [127.49672, 38.30647], [127.55013, 38.32257], [128.02917, 38.31861], [128.27652, 38.41657], [128.31105, 38.58462], [128.37487, 38.62345], [128.65655, 38.61914], [131.95041, 41.5445], [130.65022, 42.32281], [130.66367, 42.38024], [130.64181, 42.41422], [130.60805, 42.4317], [130.56835, 42.43281], [130.55143, 42.52158], [130.50123, 42.61636], [130.44361, 42.54849], [130.41826, 42.6011], [130.2385, 42.71127], [130.23068, 42.80125], [130.26095, 42.9027]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KR\", iso1A3: \"KOR\", iso1N3: \"410\", wikidata: \"Q884\", nameEn: \"South Korea\", groups: [\"030\", \"142\", \"UN\"], callingCodes: [\"82\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[133.11729, 37.53115], [128.65655, 38.61914], [128.37487, 38.62345], [128.31105, 38.58462], [128.27652, 38.41657], [128.02917, 38.31861], [127.55013, 38.32257], [127.49672, 38.30647], [127.38727, 38.33227], [127.15749, 38.30722], [127.04479, 38.25518], [126.95338, 38.17735], [126.95887, 38.1347], [126.88106, 38.10246], [126.84961, 38.0344], [126.67023, 37.95852], [126.68793, 37.9175], [126.68793, 37.83728], [126.66067, 37.7897], [126.59918, 37.76364], [126.56709, 37.76857], [126.46818, 37.80873], [126.43239, 37.84095], [126.24402, 37.83113], [126.19097, 37.81462], [126.18776, 37.74728], [126.13074, 37.70512], [125.81159, 37.72949], [125.37112, 37.62643], [125.06408, 37.66334], [124.87921, 37.80827], [124.84224, 37.977], [124.67666, 38.05679], [123.85601, 37.49093], [122.80525, 33.30571], [125.99728, 32.63328], [129.2669, 34.87122], [133.11729, 37.53115]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KW\", iso1A3: \"KWT\", iso1N3: \"414\", wikidata: \"Q817\", nameEn: \"Kuwait\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"965\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[49.00421, 28.81495], [48.59531, 29.66815], [48.40479, 29.85763], [48.17332, 30.02448], [48.06782, 30.02906], [48.01114, 29.98906], [47.7095, 30.10453], [47.37192, 30.10421], [47.15166, 30.01044], [46.89695, 29.50584], [46.5527, 29.10283], [47.46202, 29.0014], [47.58376, 28.83382], [47.59863, 28.66798], [47.70561, 28.5221], [48.42991, 28.53628], [49.00421, 28.81495]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KY\", iso1A3: \"CYM\", iso1N3: \"136\", wikidata: \"Q5785\", nameEn: \"Cayman Islands\", country: \"GB\", groups: [\"BOTS\", \"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1 345\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-82.11509, 19.60401], [-80.36068, 18.11751], [-79.32727, 20.06742], [-82.11509, 19.60401]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KZ\", iso1A3: \"KAZ\", iso1N3: \"398\", wikidata: \"Q232\", nameEn: \"Kazakhstan\", groups: [\"143\", \"142\", \"UN\"], callingCodes: [\"7\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[68.90865, 55.38148], [68.19206, 55.18823], [68.26661, 55.09226], [68.21308, 54.98645], [65.20174, 54.55216], [65.24663, 54.35721], [65.11033, 54.33028], [64.97216, 54.4212], [63.97686, 54.29763], [64.02715, 54.22679], [63.91224, 54.20013], [63.80604, 54.27079], [62.58651, 54.05871], [62.56876, 53.94047], [62.45931, 53.90737], [62.38535, 54.03961], [62.00966, 54.04134], [62.03913, 53.94768], [61.65318, 54.02445], [61.56941, 53.95703], [61.47603, 54.08048], [61.3706, 54.08464], [61.26863, 53.92797], [60.99796, 53.93699], [61.14283, 53.90063], [61.22574, 53.80268], [60.90626, 53.62937], [61.55706, 53.57144], [61.57185, 53.50112], [61.37957, 53.45887], [61.29082, 53.50992], [61.14291, 53.41481], [61.19024, 53.30536], [62.14574, 53.09626], [62.12799, 52.99133], [62.0422, 52.96105], [61.23462, 53.03227], [61.05842, 52.92217], [60.71989, 52.75923], [60.71693, 52.66245], [60.84118, 52.63912], [60.84709, 52.52228], [60.98021, 52.50068], [61.05417, 52.35096], [60.78201, 52.22067], [60.72581, 52.15538], [60.48915, 52.15175], [60.19925, 51.99173], [59.99809, 51.98263], [60.09867, 51.87135], [60.50986, 51.7964], [60.36787, 51.66815], [60.5424, 51.61675], [60.92401, 51.61124], [60.95655, 51.48615], [61.50677, 51.40687], [61.55114, 51.32746], [61.6813, 51.25716], [61.56889, 51.23679], [61.4431, 50.80679], [60.81833, 50.6629], [60.31914, 50.67705], [60.17262, 50.83312], [60.01288, 50.8163], [59.81172, 50.54451], [59.51886, 50.49937], [59.48928, 50.64216], [58.87974, 50.70852], [58.3208, 51.15151], [57.75578, 51.13852], [57.74986, 50.93017], [57.44221, 50.88354], [57.17302, 51.11253], [56.17906, 50.93204], [56.11398, 50.7471], [55.67774, 50.54508], [54.72067, 51.03261], [54.56685, 51.01958], [54.71476, 50.61214], [54.55797, 50.52006], [54.41894, 50.61214], [54.46331, 50.85554], [54.12248, 51.11542], [53.69299, 51.23466], [53.46165, 51.49445], [52.54329, 51.48444], [52.36119, 51.74161], [51.8246, 51.67916], [51.77431, 51.49536], [51.301, 51.48799], [51.26254, 51.68466], [50.59695, 51.61859], [50.26859, 51.28677], [49.97277, 51.2405], [49.76866, 51.11067], [49.39001, 51.09396], [49.41959, 50.85927], [49.12673, 50.78639], [48.86936, 50.61589], [48.57946, 50.63278], [48.90782, 50.02281], [48.68352, 49.89546], [48.42564, 49.82283], [48.24519, 49.86099], [48.10044, 50.09242], [47.58551, 50.47867], [47.30448, 50.30894], [47.34589, 50.09308], [47.18319, 49.93721], [46.9078, 49.86707], [46.78398, 49.34026], [47.04658, 49.19834], [47.00857, 49.04921], [46.78392, 48.95352], [46.49011, 48.43019], [47.11516, 48.27188], [47.12107, 47.83687], [47.38731, 47.68176], [47.41689, 47.83687], [47.64973, 47.76559], [48.15348, 47.74545], [48.45173, 47.40818], [48.52326, 47.4102], [49.01136, 46.72716], [48.51142, 46.69268], [48.54988, 46.56267], [49.16518, 46.38542], [49.32259, 46.26944], [49.88945, 46.04554], [49.2134, 44.84989], [52.26048, 41.69249], [52.47884, 41.78034], [52.97575, 42.1308], [54.20635, 42.38477], [54.95182, 41.92424], [55.45471, 41.25609], [56.00314, 41.32584], [55.97584, 44.99322], [55.97584, 44.99328], [55.97584, 44.99338], [55.97584, 44.99343], [55.97584, 44.99348], [55.97584, 44.99353], [55.97584, 44.99359], [55.97584, 44.99369], [55.97584, 44.99374], [55.97584, 44.99384], [55.97584, 44.9939], [55.97584, 44.994], [55.97584, 44.99405], [55.97584, 44.99415], [55.97584, 44.99421], [55.97584, 44.99426], [55.97584, 44.99431], [55.97584, 44.99436], [55.97584, 44.99441], [55.97594, 44.99446], [55.97605, 44.99452], [55.97605, 44.99457], [55.97605, 44.99462], [55.97605, 44.99467], [55.97605, 44.99477], [55.97615, 44.99477], [55.97615, 44.99483], [55.97615, 44.99493], [55.97615, 44.99498], [55.97615, 44.99503], [55.97615, 44.99508], [55.97625, 44.99514], [55.97636, 44.99519], [55.97636, 44.99524], [55.97646, 44.99529], [55.97646, 44.99534], [55.97656, 44.99539], [55.97667, 44.99545], [55.97677, 44.9955], [55.97677, 44.99555], [55.97677, 44.9956], [55.97687, 44.9956], [55.97698, 44.99565], [55.97698, 44.9957], [55.97708, 44.99576], [55.97718, 44.99581], [55.97729, 44.99586], [55.97739, 44.99586], [55.97739, 44.99591], [55.97749, 44.99591], [55.9776, 44.99591], [55.9777, 44.99596], [55.9777, 44.99601], [55.9778, 44.99607], [55.97791, 44.99607], [55.97801, 44.99607], [55.97801, 44.99612], [55.97811, 44.99617], [55.97822, 44.99617], [55.97832, 44.99622], [55.97842, 44.99622], [58.59711, 45.58671], [61.01475, 44.41383], [62.01711, 43.51008], [63.34656, 43.64003], [64.53885, 43.56941], [64.96464, 43.74748], [65.18666, 43.48835], [65.53277, 43.31856], [65.85194, 42.85481], [66.09482, 42.93426], [66.00546, 41.94455], [66.53302, 41.87388], [66.69129, 41.1311], [67.9644, 41.14611], [67.98511, 41.02794], [68.08273, 41.08148], [68.1271, 41.0324], [67.96736, 40.83798], [68.49983, 40.56437], [68.63, 40.59358], [68.58444, 40.91447], [68.49983, 40.99669], [68.62221, 41.03019], [68.65662, 40.93861], [68.73945, 40.96989], [68.7217, 41.05025], [69.01308, 41.22804], [69.05006, 41.36183], [69.15137, 41.43078], [69.17701, 41.43769], [69.18528, 41.45175], [69.20439, 41.45391], [69.22671, 41.46298], [69.23332, 41.45847], [69.25059, 41.46693], [69.29778, 41.43673], [69.35554, 41.47211], [69.37468, 41.46555], [69.45081, 41.46246], [69.39485, 41.51518], [69.45751, 41.56863], [69.49545, 41.545], [70.94483, 42.26238], [70.85973, 42.30188], [70.97717, 42.50147], [71.15232, 42.60486], [71.17807, 42.67381], [71.22785, 42.69248], [71.2724, 42.77853], [71.53272, 42.8014], [71.62405, 42.76613], [71.88792, 42.83578], [73.44393, 42.43098], [73.50992, 42.82356], [73.55634, 43.03071], [74.22489, 43.24657], [74.57491, 43.13702], [74.64615, 43.05881], [74.70331, 43.02519], [74.75, 42.99029], [74.88756, 42.98612], [75.22619, 42.85528], [75.29966, 42.86183], [75.72174, 42.79672], [75.82823, 42.94848], [78.48469, 42.89649], [78.91502, 42.76839], [79.19763, 42.804], [79.52921, 42.44778], [79.97364, 42.42816], [80.17807, 42.21166], [80.26841, 42.23797], [80.16892, 42.61137], [80.26886, 42.8366], [80.38169, 42.83142], [80.58999, 42.9011], [80.3735, 43.01557], [80.62913, 43.141], [80.78817, 43.14235], [80.77771, 43.30065], [80.69718, 43.32589], [80.75156, 43.44948], [80.40031, 44.10986], [80.40229, 44.23319], [80.38384, 44.63073], [79.8987, 44.89957], [80.11169, 45.03352], [81.73278, 45.3504], [82.51374, 45.1755], [82.58474, 45.40027], [82.21792, 45.56619], [83.04622, 47.19053], [83.92184, 46.98912], [84.73077, 47.01394], [84.93995, 46.87399], [85.22443, 47.04816], [85.54294, 47.06171], [85.69696, 47.2898], [85.61067, 47.49753], [85.5169, 48.05493], [85.73581, 48.3939], [86.38069, 48.46064], [86.75343, 48.70331], [86.73568, 48.99918], [86.87238, 49.12432], [87.28386, 49.11626], [87.31465, 49.23603], [87.03071, 49.25142], [86.82606, 49.51796], [86.61307, 49.60239], [86.79056, 49.74787], [86.63674, 49.80136], [86.18709, 49.50259], [85.24047, 49.60239], [84.99198, 50.06793], [84.29385, 50.27257], [83.8442, 50.87375], [83.14607, 51.00796], [82.55443, 50.75412], [81.94999, 50.79307], [81.46581, 50.77658], [81.41248, 50.97524], [81.06091, 50.94833], [81.16999, 51.15662], [80.80318, 51.28262], [80.44819, 51.20855], [80.4127, 50.95581], [80.08138, 50.77658], [79.11255, 52.01171], [77.90383, 53.29807], [76.54243, 53.99329], [76.44076, 54.16017], [76.82266, 54.1798], [76.91052, 54.4677], [75.3668, 54.07439], [75.43398, 53.98652], [75.07405, 53.80831], [73.39218, 53.44623], [73.25412, 53.61532], [73.68921, 53.86522], [73.74778, 54.07194], [73.37963, 53.96132], [72.71026, 54.1161], [72.43415, 53.92685], [72.17477, 54.36303], [71.96141, 54.17736], [71.10379, 54.13326], [71.08706, 54.33376], [71.24185, 54.64965], [71.08288, 54.71253], [70.96009, 55.10558], [70.76493, 55.3027], [70.19179, 55.1476], [69.74917, 55.35545], [69.34224, 55.36344], [68.90865, 55.38148]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LA\", iso1A3: \"LAO\", iso1N3: \"418\", wikidata: \"Q819\", nameEn: \"Laos\", groups: [\"035\", \"142\", \"UN\"], callingCodes: [\"856\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[102.1245, 22.43372], [102.03633, 22.46164], [101.98487, 22.42766], [101.91344, 22.44417], [101.90714, 22.38688], [101.86828, 22.38397], [101.7685, 22.50337], [101.68973, 22.46843], [101.61306, 22.27515], [101.56789, 22.28876], [101.53638, 22.24794], [101.60675, 22.13513], [101.57525, 22.13026], [101.62566, 21.96574], [101.7791, 21.83019], [101.74555, 21.72852], [101.83257, 21.61562], [101.80001, 21.57461], [101.7475, 21.5873], [101.7727, 21.51794], [101.74224, 21.48276], [101.74014, 21.30967], [101.84412, 21.25291], [101.83887, 21.20983], [101.76745, 21.21571], [101.79266, 21.19025], [101.7622, 21.14813], [101.70548, 21.14911], [101.66977, 21.20004], [101.60886, 21.17947], [101.59491, 21.18621], [101.6068, 21.23329], [101.54563, 21.25668], [101.29326, 21.17254], [101.2229, 21.23271], [101.26912, 21.36482], [101.19349, 21.41959], [101.2124, 21.56422], [101.15156, 21.56129], [101.16198, 21.52808], [101.00234, 21.39612], [100.80173, 21.2934], [100.72716, 21.31786], [100.63578, 21.05639], [100.55281, 21.02796], [100.50974, 20.88574], [100.64628, 20.88279], [100.60112, 20.8347], [100.51079, 20.82194], [100.36375, 20.82783], [100.1957, 20.68247], [100.08404, 20.36626], [100.09999, 20.31614], [100.09337, 20.26293], [100.11785, 20.24787], [100.1712, 20.24324], [100.16668, 20.2986], [100.22076, 20.31598], [100.25769, 20.3992], [100.33383, 20.4028], [100.37439, 20.35156], [100.41473, 20.25625], [100.44992, 20.23644], [100.4537, 20.19971], [100.47567, 20.19133], [100.51052, 20.14928], [100.55218, 20.17741], [100.58808, 20.15791], [100.5094, 19.87904], [100.398, 19.75047], [100.49604, 19.53504], [100.58219, 19.49164], [100.64606, 19.55884], [100.77231, 19.48324], [100.90302, 19.61901], [101.08928, 19.59748], [101.26545, 19.59242], [101.26991, 19.48324], [101.21347, 19.46223], [101.20604, 19.35296], [101.24911, 19.33334], [101.261, 19.12717], [101.35606, 19.04716], [101.25803, 18.89545], [101.22832, 18.73377], [101.27585, 18.68875], [101.06047, 18.43247], [101.18227, 18.34367], [101.15108, 18.25624], [101.19118, 18.2125], [101.1793, 18.0544], [101.02185, 17.87637], [100.96541, 17.57926], [101.15108, 17.47586], [101.44667, 17.7392], [101.72294, 17.92867], [101.78087, 18.07559], [101.88485, 18.02474], [102.11359, 18.21532], [102.45523, 17.97106], [102.59234, 17.96127], [102.60971, 17.95411], [102.61432, 17.92273], [102.5896, 17.84889], [102.59485, 17.83537], [102.68194, 17.80151], [102.69946, 17.81686], [102.67543, 17.84529], [102.68538, 17.86653], [102.75954, 17.89561], [102.79044, 17.93612], [102.81988, 17.94233], [102.86323, 17.97531], [102.95812, 18.0054], [102.9912, 17.9949], [103.01998, 17.97095], [103.0566, 18.00144], [103.07823, 18.03833], [103.07343, 18.12351], [103.1493, 18.17799], [103.14994, 18.23172], [103.17093, 18.2618], [103.29757, 18.30475], [103.23818, 18.34875], [103.24779, 18.37807], [103.30977, 18.4341], [103.41044, 18.4486], [103.47773, 18.42841], [103.60957, 18.40528], [103.699, 18.34125], [103.82449, 18.33979], [103.85642, 18.28666], [103.93916, 18.33914], [103.97725, 18.33631], [104.06533, 18.21656], [104.10927, 18.10826], [104.21776, 17.99335], [104.2757, 17.86139], [104.35432, 17.82871], [104.45404, 17.66788], [104.69867, 17.53038], [104.80061, 17.39367], [104.80716, 17.19025], [104.73712, 17.01404], [104.7373, 16.91125], [104.76442, 16.84752], [104.7397, 16.81005], [104.76099, 16.69302], [104.73349, 16.565], [104.88057, 16.37311], [105.00262, 16.25627], [105.06204, 16.09792], [105.42001, 16.00657], [105.38508, 15.987], [105.34115, 15.92737], [105.37959, 15.84074], [105.42285, 15.76971], [105.46573, 15.74742], [105.61756, 15.68792], [105.60446, 15.53301], [105.58191, 15.41031], [105.47635, 15.3796], [105.4692, 15.33709], [105.50662, 15.32054], [105.58043, 15.32724], [105.46661, 15.13132], [105.61162, 15.00037], [105.5121, 14.80802], [105.53864, 14.55731], [105.43783, 14.43865], [105.20894, 14.34967], [105.2759, 14.17496], [105.36775, 14.09948], [105.44869, 14.10703], [105.5561, 14.15684], [105.78338, 14.08438], [105.78182, 14.02247], [105.90791, 13.92881], [106.10405, 13.9137], [106.10094, 13.98471], [106.16632, 14.01794], [106.18656, 14.06324], [106.11962, 14.11307], [106.10872, 14.18401], [106.04801, 14.20363], [106.02311, 14.30623], [105.99509, 14.32734], [106.00131, 14.36957], [106.21302, 14.36203], [106.25194, 14.48415], [106.32355, 14.44043], [106.40916, 14.45249], [106.43874, 14.52032], [106.47766, 14.50977], [106.45898, 14.55045], [106.50723, 14.58963], [106.54148, 14.59565], [106.57106, 14.50525], [106.59908, 14.50977], [106.63333, 14.44194], [106.73762, 14.42687], [106.80767, 14.31226], [106.8497, 14.29416], [106.90574, 14.33639], [106.9649, 14.3198], [106.98825, 14.36806], [107.04585, 14.41782], [107.03962, 14.45099], [107.09722, 14.3937], [107.17038, 14.41782], [107.21241, 14.48716], [107.256, 14.48716], [107.26534, 14.54292], [107.29803, 14.58963], [107.3276, 14.58812], [107.37897, 14.54443], [107.44435, 14.52785], [107.47238, 14.61523], [107.54361, 14.69092], [107.51579, 14.79282], [107.59285, 14.87795], [107.48277, 14.93751], [107.46516, 15.00982], [107.61486, 15.0566], [107.61926, 15.13949], [107.58844, 15.20111], [107.62587, 15.2266], [107.60605, 15.37524], [107.62367, 15.42193], [107.53341, 15.40496], [107.50699, 15.48771], [107.3815, 15.49832], [107.34408, 15.62345], [107.27583, 15.62769], [107.27143, 15.71459], [107.21859, 15.74638], [107.21419, 15.83747], [107.34188, 15.89464], [107.39471, 15.88829], [107.46296, 16.01106], [107.44975, 16.08511], [107.33968, 16.05549], [107.25822, 16.13587], [107.14595, 16.17816], [107.15035, 16.26271], [107.09091, 16.3092], [107.02597, 16.31132], [106.97385, 16.30204], [106.96638, 16.34938], [106.88067, 16.43594], [106.88727, 16.52671], [106.84104, 16.55415], [106.74418, 16.41904], [106.65832, 16.47816], [106.66052, 16.56892], [106.61477, 16.60713], [106.58267, 16.6012], [106.59013, 16.62259], [106.55485, 16.68704], [106.55265, 16.86831], [106.52183, 16.87884], [106.51963, 16.92097], [106.54824, 16.92729], [106.55045, 17.0031], [106.50862, 16.9673], [106.43597, 17.01362], [106.31929, 17.20509], [106.29287, 17.3018], [106.24444, 17.24714], [106.18991, 17.28227], [106.09019, 17.36399], [105.85744, 17.63221], [105.76612, 17.67147], [105.60381, 17.89356], [105.64784, 17.96687], [105.46292, 18.22008], [105.38366, 18.15315], [105.15942, 18.38691], [105.10408, 18.43533], [105.1327, 18.58355], [105.19654, 18.64196], [105.12829, 18.70453], [104.64617, 18.85668], [104.5361, 18.97747], [103.87125, 19.31854], [104.06058, 19.43484], [104.10832, 19.51575], [104.05617, 19.61743], [104.06498, 19.66926], [104.23229, 19.70242], [104.41281, 19.70035], [104.53169, 19.61743], [104.64837, 19.62365], [104.68359, 19.72729], [104.8355, 19.80395], [104.8465, 19.91783], [104.9874, 20.09573], [104.91695, 20.15567], [104.86852, 20.14121], [104.61315, 20.24452], [104.62195, 20.36633], [104.72102, 20.40554], [104.66158, 20.47774], [104.47886, 20.37459], [104.40621, 20.3849], [104.38199, 20.47155], [104.63957, 20.6653], [104.27412, 20.91433], [104.11121, 20.96779], [103.98024, 20.91531], [103.82282, 20.8732], [103.73478, 20.6669], [103.68633, 20.66324], [103.45737, 20.82382], [103.38032, 20.79501], [103.21497, 20.89832], [103.12055, 20.89994], [103.03469, 21.05821], [102.97745, 21.05821], [102.89825, 21.24707], [102.80794, 21.25736], [102.88939, 21.3107], [102.94223, 21.46034], [102.86297, 21.4255], [102.98846, 21.58936], [102.97965, 21.74076], [102.86077, 21.71213], [102.85637, 21.84501], [102.81894, 21.83888], [102.82115, 21.73667], [102.74189, 21.66713], [102.67145, 21.65894], [102.62301, 21.91447], [102.49092, 21.99002], [102.51734, 22.02676], [102.18712, 22.30403], [102.14099, 22.40092], [102.1245, 22.43372]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LB\", iso1A3: \"LBN\", iso1N3: \"422\", wikidata: \"Q822\", nameEn: \"Lebanon\", aliases: [\"RL\"], groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"961\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[35.94816, 33.47886], [35.94465, 33.52774], [36.05723, 33.57904], [35.9341, 33.6596], [36.06778, 33.82927], [36.14517, 33.85118], [36.3967, 33.83365], [36.38263, 33.86579], [36.28589, 33.91981], [36.41078, 34.05253], [36.50576, 34.05982], [36.5128, 34.09916], [36.62537, 34.20251], [36.59195, 34.2316], [36.58667, 34.27667], [36.60778, 34.31009], [36.56556, 34.31881], [36.53039, 34.3798], [36.55853, 34.41609], [36.46179, 34.46541], [36.4442, 34.50165], [36.34745, 34.5002], [36.3369, 34.52629], [36.39846, 34.55672], [36.41429, 34.61175], [36.45299, 34.59438], [36.46003, 34.6378], [36.42941, 34.62505], [36.35384, 34.65447], [36.35135, 34.68516], [36.32399, 34.69334], [36.29165, 34.62991], [35.98718, 34.64977], [35.97386, 34.63322], [35.48515, 34.70851], [34.78515, 33.20368], [35.10645, 33.09318], [35.1924, 33.08743], [35.31429, 33.10515], [35.35223, 33.05617], [35.43059, 33.06659], [35.448, 33.09264], [35.50272, 33.09056], [35.50335, 33.114], [35.52573, 33.11921], [35.54228, 33.19865], [35.5362, 33.23196], [35.54808, 33.236], [35.54544, 33.25513], [35.55555, 33.25844], [35.56523, 33.28969], [35.58326, 33.28381], [35.58502, 33.26653], [35.62283, 33.24226], [35.62019, 33.27278], [35.77477, 33.33609], [35.81324, 33.36354], [35.82577, 33.40479], [35.88668, 33.43183], [35.94816, 33.47886]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LC\", iso1A3: \"LCA\", iso1N3: \"662\", wikidata: \"Q760\", nameEn: \"St. Lucia\", aliases: [\"WL\"], groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 758\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-59.95997, 14.20285], [-61.69315, 14.26451], [-59.94058, 12.34011], [-59.95997, 14.20285]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LI\", iso1A3: \"LIE\", iso1N3: \"438\", wikidata: \"Q347\", nameEn: \"Liechtenstein\", aliases: [\"FL\"], groups: [\"155\", \"150\", \"UN\"], callingCodes: [\"423\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[9.60717, 47.06091], [9.61216, 47.07732], [9.63395, 47.08443], [9.62623, 47.14685], [9.56539, 47.17124], [9.58264, 47.20673], [9.56981, 47.21926], [9.55176, 47.22585], [9.56766, 47.24281], [9.53116, 47.27029], [9.52406, 47.24959], [9.50318, 47.22153], [9.4891, 47.19346], [9.48774, 47.17402], [9.51044, 47.13727], [9.52089, 47.10019], [9.51362, 47.08505], [9.47139, 47.06402], [9.47548, 47.05257], [9.54041, 47.06495], [9.55721, 47.04762], [9.60717, 47.06091]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LK\", iso1A3: \"LKA\", iso1N3: \"144\", wikidata: \"Q854\", nameEn: \"Sri Lanka\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"94\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[76.59015, 5.591], [85.15017, 5.21497], [80.48418, 10.20786], [79.42124, 9.80115], [79.50447, 8.91876], [76.59015, 5.591]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LR\", iso1A3: \"LBR\", iso1N3: \"430\", wikidata: \"Q1014\", nameEn: \"Liberia\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"231\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-8.47114, 7.55676], [-8.55874, 7.62525], [-8.55874, 7.70167], [-8.67814, 7.69428], [-8.72789, 7.51429], [-8.8448, 7.35149], [-8.85724, 7.26019], [-8.93435, 7.2824], [-9.09107, 7.1985], [-9.18311, 7.30461], [-9.20798, 7.38109], [-9.305, 7.42056], [-9.41943, 7.41809], [-9.48161, 7.37122], [-9.37465, 7.62032], [-9.35724, 7.74111], [-9.44928, 7.9284], [-9.41445, 8.02448], [-9.50898, 8.18455], [-9.47415, 8.35195], [-9.77763, 8.54633], [-10.05873, 8.42578], [-10.05375, 8.50697], [-10.14579, 8.52665], [-10.203, 8.47991], [-10.27575, 8.48711], [-10.30084, 8.30008], [-10.31635, 8.28554], [-10.29839, 8.21283], [-10.35227, 8.15223], [-10.45023, 8.15627], [-10.51554, 8.1393], [-10.57523, 8.04829], [-10.60492, 8.04072], [-10.60422, 7.7739], [-11.29417, 7.21576], [-11.4027, 6.97746], [-11.50429, 6.92704], [-12.15048, 6.15992], [-7.52774, 3.7105], [-7.53259, 4.35145], [-7.59349, 4.8909], [-7.53876, 4.94294], [-7.55369, 5.08667], [-7.48901, 5.14118], [-7.46165, 5.26256], [-7.36463, 5.32944], [-7.43428, 5.42355], [-7.37209, 5.61173], [-7.43926, 5.74787], [-7.43677, 5.84687], [-7.46165, 5.84934], [-7.48155, 5.80974], [-7.67309, 5.94337], [-7.70294, 5.90625], [-7.78254, 5.99037], [-7.79747, 6.07696], [-7.8497, 6.08932], [-7.83478, 6.20309], [-7.90692, 6.27728], [-8.00642, 6.31684], [-8.17557, 6.28222], [-8.3298, 6.36381], [-8.38453, 6.35887], [-8.45666, 6.49977], [-8.48652, 6.43797], [-8.59456, 6.50612], [-8.31736, 6.82837], [-8.29249, 7.1691], [-8.37458, 7.25794], [-8.41935, 7.51203], [-8.47114, 7.55676]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LS\", iso1A3: \"LSO\", iso1N3: \"426\", wikidata: \"Q1013\", nameEn: \"Lesotho\", groups: [\"018\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"266\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[29.33204, -29.45598], [29.44883, -29.3772], [29.40524, -29.21246], [28.68043, -28.58744], [28.65091, -28.57025], [28.40612, -28.6215], [28.30518, -28.69531], [28.2348, -28.69471], [28.1317, -28.7293], [28.02503, -28.85991], [27.98675, -28.8787], [27.9392, -28.84864], [27.88933, -28.88156], [27.8907, -28.91612], [27.75458, -28.89839], [27.55974, -29.18954], [27.5158, -29.2261], [27.54258, -29.25575], [27.48679, -29.29349], [27.45125, -29.29708], [27.47254, -29.31968], [27.4358, -29.33465], [27.33464, -29.48161], [27.01016, -29.65439], [27.09489, -29.72796], [27.22719, -30.00718], [27.29603, -30.05473], [27.32555, -30.14785], [27.40778, -30.14577], [27.37293, -30.19401], [27.36649, -30.27246], [27.38108, -30.33456], [27.45452, -30.32239], [27.56901, -30.42504], [27.56781, -30.44562], [27.62137, -30.50509], [27.6521, -30.51707], [27.67819, -30.53437], [27.69467, -30.55862], [27.74814, -30.60635], [28.12073, -30.68072], [28.2319, -30.28476], [28.399, -30.1592], [28.68627, -30.12885], [28.80222, -30.10579], [28.9338, -30.05072], [29.16548, -29.91706], [29.12553, -29.76266], [29.28545, -29.58456], [29.33204, -29.45598]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LT\", iso1A3: \"LTU\", iso1N3: \"440\", wikidata: \"Q37\", nameEn: \"Lithuania\", groups: [\"EU\", \"154\", \"150\", \"UN\"], callingCodes: [\"370\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[24.89005, 56.46666], [24.83686, 56.41565], [24.70022, 56.40483], [24.57353, 56.31525], [24.58143, 56.29125], [24.42746, 56.26522], [24.32334, 56.30226], [24.13139, 56.24881], [24.02657, 56.3231], [23.75726, 56.37282], [23.49803, 56.34307], [23.40486, 56.37689], [23.31606, 56.3827], [23.17312, 56.36795], [23.09531, 56.30511], [22.96988, 56.41213], [22.83048, 56.367], [22.69354, 56.36284], [22.56441, 56.39305], [22.3361, 56.4016], [22.09728, 56.42851], [22.00548, 56.41508], [21.74558, 56.33181], [21.57888, 56.31406], [21.49736, 56.29106], [21.24644, 56.16917], [21.15016, 56.07818], [20.68447, 56.04073], [20.60454, 55.40986], [20.95181, 55.27994], [21.26425, 55.24456], [21.35465, 55.28427], [21.38446, 55.29348], [21.46766, 55.21115], [21.51095, 55.18507], [21.55605, 55.20311], [21.64954, 55.1791], [21.85521, 55.09493], [21.96505, 55.07353], [21.99543, 55.08691], [22.03984, 55.07888], [22.02582, 55.05078], [22.06087, 55.02935], [22.11697, 55.02131], [22.14267, 55.05345], [22.31562, 55.0655], [22.47688, 55.04408], [22.58907, 55.07085], [22.60075, 55.01863], [22.65451, 54.97037], [22.68723, 54.9811], [22.76422, 54.92521], [22.85083, 54.88711], [22.87317, 54.79492], [22.73631, 54.72952], [22.73397, 54.66604], [22.75467, 54.6483], [22.74225, 54.64339], [22.7522, 54.63525], [22.68021, 54.58486], [22.71293, 54.56454], [22.67788, 54.532], [22.70208, 54.45312], [22.7253, 54.41732], [22.79705, 54.36264], [22.83756, 54.40827], [23.00584, 54.38514], [22.99649, 54.35927], [23.05726, 54.34565], [23.04323, 54.31567], [23.104, 54.29794], [23.13905, 54.31567], [23.15526, 54.31076], [23.15938, 54.29894], [23.24656, 54.25701], [23.3494, 54.25155], [23.39525, 54.21672], [23.42418, 54.17911], [23.45223, 54.17775], [23.49196, 54.14764], [23.52702, 54.04622], [23.48261, 53.98855], [23.51284, 53.95052], [23.61677, 53.92691], [23.71726, 53.93379], [23.80543, 53.89558], [23.81309, 53.94205], [23.95098, 53.9613], [23.98837, 53.92554], [24.19638, 53.96405], [24.34128, 53.90076], [24.44411, 53.90076], [24.62275, 54.00217], [24.69652, 54.01901], [24.69185, 53.96543], [24.74279, 53.96663], [24.85311, 54.02862], [24.77131, 54.11091], [24.96894, 54.17589], [24.991, 54.14241], [25.0728, 54.13419], [25.19199, 54.219], [25.22705, 54.26271], [25.35559, 54.26544], [25.509, 54.30267], [25.56823, 54.25212], [25.51452, 54.17799], [25.54724, 54.14925], [25.64875, 54.1259], [25.71084, 54.16704], [25.78563, 54.15747], [25.78553, 54.23327], [25.68513, 54.31727], [25.55425, 54.31591], [25.5376, 54.33158], [25.63371, 54.42075], [25.62203, 54.4656], [25.64813, 54.48704], [25.68045, 54.5321], [25.75977, 54.57252], [25.74122, 54.80108], [25.89462, 54.93438], [25.99129, 54.95705], [26.05907, 54.94631], [26.13386, 54.98924], [26.20397, 54.99729], [26.26941, 55.08032], [26.23202, 55.10439], [26.30628, 55.12536], [26.35121, 55.1525], [26.46249, 55.12814], [26.51481, 55.16051], [26.54753, 55.14181], [26.69243, 55.16718], [26.68075, 55.19787], [26.72983, 55.21788], [26.73017, 55.24226], [26.835, 55.28182], [26.83266, 55.30444], [26.80929, 55.31642], [26.6714, 55.33902], [26.5709, 55.32572], [26.44937, 55.34832], [26.5522, 55.40277], [26.55094, 55.5093], [26.63167, 55.57887], [26.63231, 55.67968], [26.58248, 55.6754], [26.46661, 55.70375], [26.39561, 55.71156], [26.18509, 55.86813], [26.03815, 55.95884], [25.90047, 56.0013], [25.85893, 56.00188], [25.81773, 56.05444], [25.69246, 56.08892], [25.68588, 56.14725], [25.53621, 56.16663], [25.39751, 56.15707], [25.23099, 56.19147], [25.09325, 56.1878], [25.05762, 56.26742], [24.89005, 56.46666]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LU\", iso1A3: \"LUX\", iso1N3: \"442\", wikidata: \"Q32\", nameEn: \"Luxembourg\", groups: [\"EU\", \"155\", \"150\", \"UN\"], callingCodes: [\"352\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[6.1379, 50.12964], [6.1137, 50.13668], [6.12028, 50.16374], [6.08577, 50.17246], [6.06406, 50.15344], [6.03093, 50.16362], [6.02488, 50.18283], [5.96453, 50.17259], [5.95929, 50.13295], [5.89488, 50.11476], [5.8857, 50.07824], [5.85474, 50.06342], [5.86904, 50.04614], [5.8551, 50.02683], [5.81866, 50.01286], [5.82331, 49.99662], [5.83968, 49.9892], [5.83467, 49.97823], [5.81163, 49.97142], [5.80833, 49.96451], [5.77291, 49.96056], [5.77314, 49.93646], [5.73621, 49.89796], [5.78415, 49.87922], [5.75269, 49.8711], [5.75861, 49.85631], [5.74567, 49.85368], [5.75884, 49.84811], [5.74953, 49.84709], [5.74975, 49.83933], [5.74076, 49.83823], [5.7404, 49.83452], [5.74844, 49.82435], [5.74364, 49.82058], [5.74953, 49.81428], [5.75409, 49.79239], [5.78871, 49.7962], [5.82245, 49.75048], [5.83149, 49.74729], [5.82562, 49.72395], [5.84193, 49.72161], [5.86503, 49.72739], [5.88677, 49.70951], [5.86527, 49.69291], [5.86175, 49.67862], [5.9069, 49.66377], [5.90164, 49.6511], [5.90599, 49.63853], [5.88552, 49.63507], [5.88393, 49.62802], [5.87609, 49.62047], [5.8762, 49.60898], [5.84826, 49.5969], [5.84971, 49.58674], [5.86986, 49.58756], [5.87256, 49.57539], [5.8424, 49.56082], [5.84692, 49.55663], [5.84143, 49.5533], [5.81838, 49.54777], [5.80871, 49.5425], [5.81664, 49.53775], [5.83648, 49.5425], [5.84466, 49.53027], [5.83467, 49.52717], [5.83389, 49.52152], [5.86571, 49.50015], [5.94128, 49.50034], [5.94224, 49.49608], [5.96876, 49.49053], [5.97693, 49.45513], [6.02648, 49.45451], [6.02743, 49.44845], [6.04176, 49.44801], [6.05553, 49.46663], [6.07887, 49.46399], [6.08373, 49.45594], [6.10072, 49.45268], [6.09845, 49.46351], [6.10325, 49.4707], [6.12346, 49.4735], [6.12814, 49.49365], [6.14321, 49.48796], [6.16115, 49.49297], [6.15366, 49.50226], [6.17386, 49.50934], [6.19543, 49.50536], [6.2409, 49.51408], [6.25029, 49.50609], [6.27875, 49.503], [6.28818, 49.48465], [6.3687, 49.4593], [6.36778, 49.46937], [6.36907, 49.48931], [6.36788, 49.50377], [6.35666, 49.52931], [6.38072, 49.55171], [6.38228, 49.55855], [6.35825, 49.57053], [6.36676, 49.57813], [6.38024, 49.57593], [6.38342, 49.5799], [6.37464, 49.58886], [6.385, 49.59946], [6.39822, 49.60081], [6.41861, 49.61723], [6.4413, 49.65722], [6.43768, 49.66021], [6.42726, 49.66078], [6.42937, 49.66857], [6.44654, 49.67799], [6.46048, 49.69092], [6.48014, 49.69767], [6.49785, 49.71118], [6.50647, 49.71353], [6.5042, 49.71808], [6.49694, 49.72205], [6.49535, 49.72645], [6.50261, 49.72718], [6.51397, 49.72058], [6.51805, 49.72425], [6.50193, 49.73291], [6.50174, 49.75292], [6.51646, 49.75961], [6.51828, 49.76855], [6.51056, 49.77515], [6.51669, 49.78336], [6.50534, 49.78952], [6.52169, 49.79787], [6.53122, 49.80666], [6.52121, 49.81338], [6.51215, 49.80124], [6.50647, 49.80916], [6.48718, 49.81267], [6.47111, 49.82263], [6.45425, 49.81164], [6.44131, 49.81443], [6.42905, 49.81091], [6.42521, 49.81591], [6.40022, 49.82029], [6.36576, 49.85032], [6.34267, 49.84974], [6.33585, 49.83785], [6.32098, 49.83728], [6.32303, 49.85133], [6.30963, 49.87021], [6.29692, 49.86685], [6.28874, 49.87592], [6.26146, 49.88203], [6.23496, 49.89972], [6.22926, 49.92096], [6.21882, 49.92403], [6.22608, 49.929], [6.22094, 49.94955], [6.19856, 49.95053], [6.19089, 49.96991], [6.18045, 49.96611], [6.18554, 49.95622], [6.17872, 49.9537], [6.16466, 49.97086], [6.1701, 49.98518], [6.14147, 49.99563], [6.14948, 50.00908], [6.13806, 50.01056], [6.1295, 50.01849], [6.13273, 50.02019], [6.13794, 50.01466], [6.14666, 50.02207], [6.13044, 50.02929], [6.13458, 50.04141], [6.11274, 50.05916], [6.12055, 50.09171], [6.1379, 50.12964]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LV\", iso1A3: \"LVA\", iso1N3: \"428\", wikidata: \"Q211\", nameEn: \"Latvia\", groups: [\"EU\", \"154\", \"150\", \"UN\"], callingCodes: [\"371\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[27.34698, 57.52242], [26.90364, 57.62823], [26.54675, 57.51813], [26.46527, 57.56885], [26.29253, 57.59244], [26.1866, 57.6849], [26.2029, 57.7206], [26.08098, 57.76619], [26.0543, 57.76105], [26.03332, 57.7718], [26.02415, 57.76865], [26.02069, 57.77169], [26.0266, 57.77441], [26.027, 57.78158], [26.02456, 57.78342], [26.0324, 57.79037], [26.05949, 57.84744], [25.73499, 57.90193], [25.29581, 58.08288], [25.28237, 57.98539], [25.19484, 58.0831], [24.3579, 57.87471], [24.26221, 57.91787], [23.20055, 57.56697], [22.80496, 57.87798], [19.84909, 57.57876], [19.64795, 57.06466], [20.68447, 56.04073], [21.15016, 56.07818], [21.24644, 56.16917], [21.49736, 56.29106], [21.57888, 56.31406], [21.74558, 56.33181], [22.00548, 56.41508], [22.09728, 56.42851], [22.3361, 56.4016], [22.56441, 56.39305], [22.69354, 56.36284], [22.83048, 56.367], [22.96988, 56.41213], [23.09531, 56.30511], [23.17312, 56.36795], [23.31606, 56.3827], [23.40486, 56.37689], [23.49803, 56.34307], [23.75726, 56.37282], [24.02657, 56.3231], [24.13139, 56.24881], [24.32334, 56.30226], [24.42746, 56.26522], [24.58143, 56.29125], [24.57353, 56.31525], [24.70022, 56.40483], [24.83686, 56.41565], [24.89005, 56.46666], [25.05762, 56.26742], [25.09325, 56.1878], [25.23099, 56.19147], [25.39751, 56.15707], [25.53621, 56.16663], [25.68588, 56.14725], [25.69246, 56.08892], [25.81773, 56.05444], [25.85893, 56.00188], [25.90047, 56.0013], [26.03815, 55.95884], [26.18509, 55.86813], [26.39561, 55.71156], [26.46661, 55.70375], [26.58248, 55.6754], [26.63231, 55.67968], [26.64888, 55.70515], [26.71802, 55.70645], [26.76872, 55.67658], [26.87448, 55.7172], [26.97153, 55.8102], [27.1559, 55.85032], [27.27804, 55.78299], [27.3541, 55.8089], [27.61683, 55.78558], [27.63065, 55.89687], [27.97865, 56.11849], [28.15217, 56.16964], [28.23716, 56.27588], [28.16599, 56.37806], [28.19057, 56.44637], [28.10069, 56.524], [28.13526, 56.57989], [28.04768, 56.59004], [27.86101, 56.88204], [27.66511, 56.83921], [27.86101, 57.29402], [27.52453, 57.42826], [27.56832, 57.53728], [27.34698, 57.52242]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LY\", iso1A3: \"LBY\", iso1N3: \"434\", wikidata: \"Q1016\", nameEn: \"Libya\", groups: [\"015\", \"002\", \"UN\"], callingCodes: [\"218\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[26.92891, 33.39516], [11.58941, 33.36891], [11.55852, 33.1409], [11.51549, 33.09826], [11.46037, 32.6307], [11.57828, 32.48013], [11.53898, 32.4138], [11.04234, 32.2145], [10.7315, 31.97235], [10.62788, 31.96629], [10.48497, 31.72956], [10.31364, 31.72648], [10.12239, 31.42098], [10.29516, 30.90337], [9.88152, 30.34074], [9.76848, 30.34366], [9.55544, 30.23971], [9.3876, 30.16738], [9.78136, 29.40961], [9.89569, 26.57696], [9.51696, 26.39148], [9.38834, 26.19288], [10.03146, 25.35635], [10.02432, 24.98124], [10.33159, 24.5465], [10.85323, 24.5595], [11.41061, 24.21456], [11.62498, 24.26669], [11.96886, 23.51735], [13.5631, 23.16574], [14.22918, 22.61719], [14.99751, 23.00539], [15.99566, 23.49639], [23.99539, 19.49944], [23.99715, 20.00038], [24.99794, 19.99661], [24.99885, 21.99535], [24.99968, 29.24574], [24.71117, 30.17441], [25.01077, 30.73861], [24.8458, 31.39877], [26.92891, 33.39516]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MA\", iso1A3: \"MAR\", iso1N3: \"504\", wikidata: \"Q1028\", nameEn: \"Morocco\", groups: [\"015\", \"002\", \"UN\"], callingCodes: [\"212\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.27707, 35.35051], [-5.10878, 36.05227], [-7.2725, 35.73269], [-14.43883, 27.02969], [-17.27295, 21.93519], [-17.21511, 21.34226], [-17.02707, 21.34022], [-16.9978, 21.36239], [-16.44269, 21.39745], [-14.78487, 21.36587], [-14.47329, 21.63839], [-14.48112, 22.00886], [-14.1291, 22.41636], [-14.10361, 22.75501], [-13.75627, 23.77231], [-13.00628, 24.01923], [-12.92147, 24.39502], [-12.12281, 25.13682], [-12.06001, 26.04442], [-11.62052, 26.05229], [-11.38635, 26.611], [-11.23622, 26.72023], [-11.35695, 26.8505], [-10.68417, 26.90984], [-9.81998, 26.71379], [-9.56957, 26.90042], [-9.08698, 26.98639], [-8.71787, 26.9898], [-8.77527, 27.66663], [-8.66879, 27.6666], [-8.6715, 28.71194], [-7.61585, 29.36252], [-6.95824, 29.50924], [-6.78351, 29.44634], [-6.69965, 29.51623], [-5.75616, 29.61407], [-5.72121, 29.52322], [-5.58831, 29.48103], [-5.21671, 29.95253], [-4.6058, 30.28343], [-4.31774, 30.53229], [-3.64735, 30.67539], [-3.65418, 30.85566], [-3.54944, 31.0503], [-3.77103, 31.14984], [-3.77647, 31.31912], [-3.66386, 31.39202], [-3.66314, 31.6339], [-2.82784, 31.79459], [-2.93873, 32.06557], [-2.46166, 32.16603], [-1.22829, 32.07832], [-1.15735, 32.12096], [-1.24453, 32.1917], [-1.24998, 32.32993], [-0.9912, 32.52467], [-1.37794, 32.73628], [-1.54244, 32.95499], [-1.46249, 33.0499], [-1.67067, 33.27084], [-1.59508, 33.59929], [-1.73494, 33.71721], [-1.64666, 34.10405], [-1.78042, 34.39018], [-1.69788, 34.48056], [-1.84569, 34.61907], [-1.73707, 34.74226], [-1.97469, 34.886], [-1.97833, 34.93218], [-2.04734, 34.93218], [-2.21445, 35.04378], [-2.21248, 35.08532], [-2.27707, 35.35051]], [[-2.91909, 35.33927], [-2.92272, 35.27509], [-2.93893, 35.26737], [-2.95065, 35.26576], [-2.95431, 35.2728], [-2.96516, 35.27967], [-2.96826, 35.28296], [-2.96507, 35.28801], [-2.97035, 35.28852], [-2.96978, 35.29459], [-2.96648, 35.30475], [-2.96038, 35.31609], [-2.91909, 35.33927]], [[-3.90602, 35.21494], [-3.89343, 35.22728], [-3.88372, 35.20767], [-3.90602, 35.21494]], [[-4.30191, 35.17419], [-4.29436, 35.17149], [-4.30112, 35.17058], [-4.30191, 35.17419]], [[-2.40316, 35.16893], [-2.45965, 35.16527], [-2.43262, 35.20652], [-2.40316, 35.16893]], [[-5.38491, 35.92591], [-5.21179, 35.90091], [-5.34379, 35.8711], [-5.35844, 35.87375], [-5.37338, 35.88417], [-5.38491, 35.92591]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MC\", iso1A3: \"MCO\", iso1N3: \"492\", wikidata: \"Q235\", nameEn: \"Monaco\", groups: [\"155\", \"150\", \"UN\"], callingCodes: [\"377\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[7.47823, 43.73341], [7.4379, 43.74963], [7.4389, 43.75151], [7.43708, 43.75197], [7.43624, 43.75014], [7.43013, 43.74895], [7.42809, 43.74396], [7.42443, 43.74087], [7.42299, 43.74176], [7.42062, 43.73977], [7.41233, 43.73439], [7.41298, 43.73311], [7.41291, 43.73168], [7.41113, 43.73156], [7.40903, 43.7296], [7.42422, 43.72209], [7.47823, 43.73341]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MD\", iso1A3: \"MDA\", iso1N3: \"498\", wikidata: \"Q217\", nameEn: \"Moldova\", groups: [\"151\", \"150\", \"UN\"], callingCodes: [\"373\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[27.74422, 48.45926], [27.6658, 48.44034], [27.59027, 48.46311], [27.5889, 48.49224], [27.46942, 48.454], [27.44333, 48.41209], [27.37741, 48.41026], [27.37604, 48.44398], [27.32159, 48.4434], [27.27855, 48.37534], [27.13434, 48.37288], [27.08078, 48.43214], [27.0231, 48.42485], [27.03821, 48.37653], [26.93384, 48.36558], [26.85556, 48.41095], [26.71274, 48.40388], [26.82809, 48.31629], [26.79239, 48.29071], [26.6839, 48.35828], [26.62823, 48.25804], [26.81161, 48.25049], [26.87708, 48.19919], [26.94265, 48.1969], [26.98042, 48.15752], [26.96119, 48.13003], [27.04118, 48.12522], [27.02985, 48.09083], [27.15622, 47.98538], [27.1618, 47.92391], [27.29069, 47.73722], [27.25519, 47.71366], [27.32202, 47.64009], [27.3979, 47.59473], [27.47942, 47.48113], [27.55731, 47.46637], [27.60263, 47.32507], [27.68706, 47.28962], [27.73172, 47.29248], [27.81892, 47.1381], [28.09095, 46.97621], [28.12173, 46.82283], [28.24808, 46.64305], [28.22281, 46.50481], [28.25769, 46.43334], [28.18902, 46.35283], [28.19864, 46.31869], [28.10937, 46.22852], [28.13684, 46.18099], [28.08612, 46.01105], [28.13111, 45.92819], [28.16568, 45.6421], [28.08927, 45.6051], [28.18741, 45.47358], [28.21139, 45.46895], [28.30201, 45.54744], [28.41836, 45.51715], [28.43072, 45.48538], [28.51449, 45.49982], [28.49252, 45.56716], [28.54196, 45.58062], [28.51587, 45.6613], [28.47879, 45.66994], [28.52823, 45.73803], [28.70401, 45.78019], [28.69852, 45.81753], [28.78503, 45.83475], [28.74383, 45.96664], [28.98004, 46.00385], [29.00613, 46.04962], [28.94643, 46.09176], [29.06656, 46.19716], [28.94953, 46.25852], [28.98478, 46.31803], [29.004, 46.31495], [28.9306, 46.45699], [29.01241, 46.46177], [29.02409, 46.49582], [29.23547, 46.55435], [29.24886, 46.37912], [29.35357, 46.49505], [29.49914, 46.45889], [29.5939, 46.35472], [29.6763, 46.36041], [29.66359, 46.4215], [29.74496, 46.45605], [29.88329, 46.35851], [29.94114, 46.40114], [30.09103, 46.38694], [30.16794, 46.40967], [30.02511, 46.45132], [29.88916, 46.54302], [29.94409, 46.56002], [29.9743, 46.75325], [29.94522, 46.80055], [29.98814, 46.82358], [29.87405, 46.88199], [29.75458, 46.8604], [29.72986, 46.92234], [29.57056, 46.94766], [29.62137, 47.05069], [29.61038, 47.09932], [29.53044, 47.07851], [29.49732, 47.12878], [29.57696, 47.13581], [29.54996, 47.24962], [29.59665, 47.25521], [29.5733, 47.36508], [29.48678, 47.36043], [29.47854, 47.30366], [29.39889, 47.30179], [29.3261, 47.44664], [29.18603, 47.43387], [29.11743, 47.55001], [29.22414, 47.60012], [29.22242, 47.73607], [29.27255, 47.79953], [29.20663, 47.80367], [29.27804, 47.88893], [29.19839, 47.89261], [29.1723, 47.99013], [28.9306, 47.96255], [28.8414, 48.03392], [28.85232, 48.12506], [28.69896, 48.13106], [28.53921, 48.17453], [28.48428, 48.0737], [28.42454, 48.12047], [28.43701, 48.15832], [28.38712, 48.17567], [28.34009, 48.13147], [28.30609, 48.14018], [28.30586, 48.1597], [28.34912, 48.1787], [28.36996, 48.20543], [28.35519, 48.24957], [28.32508, 48.23384], [28.2856, 48.23202], [28.19314, 48.20749], [28.17666, 48.25963], [28.07504, 48.23494], [28.09873, 48.3124], [28.04527, 48.32661], [27.95883, 48.32368], [27.88391, 48.36699], [27.87533, 48.4037], [27.81902, 48.41874], [27.79225, 48.44244], [27.74422, 48.45926]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ME\", iso1A3: \"MNE\", iso1N3: \"499\", wikidata: \"Q236\", nameEn: \"Montenegro\", groups: [\"039\", \"150\", \"UN\"], callingCodes: [\"382\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[19.22807, 43.5264], [19.15685, 43.53943], [19.13933, 43.5282], [19.04934, 43.50384], [19.01078, 43.55806], [18.91379, 43.50299], [18.95469, 43.49367], [18.96053, 43.45042], [19.01078, 43.43854], [19.04071, 43.397], [19.08673, 43.31453], [19.08206, 43.29668], [19.04233, 43.30008], [19.00844, 43.24988], [18.95001, 43.29327], [18.95819, 43.32899], [18.90911, 43.36383], [18.83912, 43.34795], [18.84794, 43.33735], [18.85342, 43.32426], [18.76538, 43.29838], [18.6976, 43.25243], [18.71747, 43.2286], [18.66605, 43.2056], [18.64735, 43.14766], [18.66254, 43.03928], [18.52232, 43.01451], [18.49076, 42.95553], [18.49661, 42.89306], [18.4935, 42.86433], [18.47633, 42.85829], [18.45921, 42.81682], [18.47324, 42.74992], [18.56789, 42.72074], [18.55221, 42.69045], [18.54603, 42.69171], [18.54841, 42.68328], [18.57373, 42.64429], [18.52232, 42.62279], [18.55504, 42.58409], [18.53751, 42.57376], [18.49778, 42.58409], [18.43735, 42.55921], [18.44307, 42.51077], [18.43588, 42.48556], [18.52152, 42.42302], [18.54128, 42.39171], [18.45131, 42.21682], [19.26406, 41.74971], [19.37597, 41.84849], [19.37451, 41.8842], [19.33812, 41.90669], [19.34601, 41.95675], [19.37691, 41.96977], [19.36867, 42.02564], [19.37548, 42.06835], [19.40687, 42.10024], [19.28623, 42.17745], [19.42, 42.33019], [19.42352, 42.36546], [19.4836, 42.40831], [19.65972, 42.62774], [19.73244, 42.66299], [19.77375, 42.58517], [19.74731, 42.57422], [19.76549, 42.50237], [19.82333, 42.46581], [19.9324, 42.51699], [20.00842, 42.5109], [20.01834, 42.54622], [20.07761, 42.55582], [20.0969, 42.65559], [20.02915, 42.71147], [20.02088, 42.74789], [20.04898, 42.77701], [20.2539, 42.76245], [20.27869, 42.81945], [20.35692, 42.8335], [20.34528, 42.90676], [20.16415, 42.97177], [20.14896, 42.99058], [20.12325, 42.96237], [20.05431, 42.99571], [20.04729, 43.02732], [19.98887, 43.0538], [19.96549, 43.11098], [19.92576, 43.08539], [19.79255, 43.11951], [19.76918, 43.16044], [19.64063, 43.19027], [19.62661, 43.2286], [19.54598, 43.25158], [19.52962, 43.31623], [19.48171, 43.32644], [19.44315, 43.38846], [19.22229, 43.47926], [19.22807, 43.5264]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MF\", iso1A3: \"MAF\", iso1N3: \"663\", wikidata: \"Q126125\", nameEn: \"Saint-Martin\", country: \"FR\", groups: [\"Q3320166\", \"EU\", \"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"590\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-62.93924, 18.02904], [-62.62718, 18.26185], [-63.35989, 18.06012], [-63.33064, 17.9615], [-63.13502, 18.05445], [-63.11042, 18.05339], [-63.09686, 18.04608], [-63.07759, 18.04943], [-63.0579, 18.06614], [-63.04039, 18.05619], [-63.02323, 18.05757], [-62.93924, 18.02904]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MG\", iso1A3: \"MDG\", iso1N3: \"450\", wikidata: \"Q1019\", nameEn: \"Madagascar\", aliases: [\"RM\"], groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"261\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[51.93891, -10.85085], [45.84651, -12.77177], [42.14681, -19.63341], [45.80092, -33.00974], [51.93891, -10.85085]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MH\", iso1A3: \"MHL\", iso1N3: \"584\", wikidata: \"Q709\", nameEn: \"Marshall Islands\", groups: [\"057\", \"009\", \"UN\"], roadSpeedUnit: \"mph\", callingCodes: [\"692\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[169, 3.9], [173.53711, 5.70687], [169.29099, 15.77133], [159.04653, 10.59067], [169, 3.9]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MK\", iso1A3: \"MKD\", iso1N3: \"807\", wikidata: \"Q221\", nameEn: \"North Macedonia\", groups: [\"039\", \"150\", \"UN\"], callingCodes: [\"389\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[22.34773, 42.31725], [22.29275, 42.34913], [22.29605, 42.37477], [22.16384, 42.32103], [22.02908, 42.29848], [21.94405, 42.34669], [21.91595, 42.30392], [21.84654, 42.3247], [21.77176, 42.2648], [21.70111, 42.23789], [21.58992, 42.25915], [21.52145, 42.24465], [21.50823, 42.27156], [21.43882, 42.2789], [21.43882, 42.23609], [21.38428, 42.24465], [21.30496, 42.1418], [21.29913, 42.13954], [21.31983, 42.10993], [21.22728, 42.08909], [21.16614, 42.19815], [21.11491, 42.20794], [20.75464, 42.05229], [20.76786, 41.91839], [20.68523, 41.85318], [20.59524, 41.8818], [20.55976, 41.87068], [20.57144, 41.7897], [20.53405, 41.78099], [20.51301, 41.72433], [20.52937, 41.69292], [20.51769, 41.65975], [20.55508, 41.58113], [20.52103, 41.56473], [20.45809, 41.5549], [20.45331, 41.51436], [20.49039, 41.49277], [20.51301, 41.442], [20.55976, 41.4087], [20.52119, 41.34381], [20.49432, 41.33679], [20.51068, 41.2323], [20.59715, 41.13644], [20.58546, 41.11179], [20.59832, 41.09066], [20.63454, 41.0889], [20.65558, 41.08009], [20.71634, 40.91781], [20.73504, 40.9081], [20.81567, 40.89662], [20.83671, 40.92752], [20.94305, 40.92399], [20.97693, 40.90103], [20.97887, 40.85475], [21.15262, 40.85546], [21.21105, 40.8855], [21.25779, 40.86165], [21.35595, 40.87578], [21.41555, 40.9173], [21.53007, 40.90759], [21.57448, 40.86076], [21.69601, 40.9429], [21.7556, 40.92525], [21.91102, 41.04786], [21.90869, 41.09191], [22.06527, 41.15617], [22.1424, 41.12449], [22.17629, 41.15969], [22.26744, 41.16409], [22.42285, 41.11921], [22.5549, 41.13065], [22.58295, 41.11568], [22.62852, 41.14385], [22.65306, 41.18168], [22.71266, 41.13945], [22.74538, 41.16321], [22.76408, 41.32225], [22.81199, 41.3398], [22.93334, 41.34104], [22.96331, 41.35782], [22.95513, 41.63265], [23.03342, 41.71034], [23.01239, 41.76527], [22.96682, 41.77137], [22.90254, 41.87587], [22.86749, 42.02275], [22.67701, 42.06614], [22.51224, 42.15457], [22.50289, 42.19527], [22.47251, 42.20393], [22.38136, 42.30339], [22.34773, 42.31725]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ML\", iso1A3: \"MLI\", iso1N3: \"466\", wikidata: \"Q912\", nameEn: \"Mali\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"223\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-4.83423, 24.99935], [-6.57191, 25.0002], [-5.60725, 16.49919], [-5.33435, 16.33354], [-5.50165, 15.50061], [-9.32979, 15.50032], [-9.31106, 15.69412], [-9.33314, 15.7044], [-9.44673, 15.60553], [-9.40447, 15.4396], [-10.71721, 15.4223], [-10.90932, 15.11001], [-11.43483, 15.62339], [-11.70705, 15.51558], [-11.94903, 14.76143], [-12.23936, 14.76324], [-11.93043, 13.84505], [-12.06897, 13.71049], [-11.83345, 13.33333], [-11.63025, 13.39174], [-11.39935, 12.97808], [-11.37536, 12.40788], [-11.50006, 12.17826], [-11.24136, 12.01286], [-10.99758, 12.24634], [-10.80355, 12.1053], [-10.71897, 11.91552], [-10.30604, 12.24634], [-9.714, 12.0226], [-9.63938, 12.18312], [-9.32097, 12.29009], [-9.38067, 12.48446], [-9.13689, 12.50875], [-8.94784, 12.34842], [-8.80854, 11.66715], [-8.40058, 11.37466], [-8.66923, 10.99397], [-8.35083, 11.06234], [-8.2667, 10.91762], [-8.32614, 10.69273], [-8.22711, 10.41722], [-8.10207, 10.44649], [-7.9578, 10.2703], [-7.97971, 10.17117], [-7.92107, 10.15577], [-7.63048, 10.46334], [-7.54462, 10.40921], [-7.52261, 10.4655], [-7.44555, 10.44602], [-7.3707, 10.24677], [-7.13331, 10.24877], [-7.0603, 10.14711], [-7.00966, 10.15794], [-6.97444, 10.21644], [-7.01186, 10.25111], [-6.93921, 10.35291], [-6.68164, 10.35074], [-6.63541, 10.66893], [-6.52974, 10.59104], [-6.42847, 10.5694], [-6.40646, 10.69922], [-6.325, 10.68624], [-6.24795, 10.74248], [-6.1731, 10.46983], [-6.18851, 10.24244], [-5.99478, 10.19694], [-5.78124, 10.43952], [-5.65135, 10.46767], [-5.51058, 10.43177], [-5.46643, 10.56074], [-5.47083, 10.75329], [-5.41579, 10.84628], [-5.49284, 11.07538], [-5.32994, 11.13371], [-5.32553, 11.21578], [-5.25949, 11.24816], [-5.25509, 11.36905], [-5.20665, 11.43811], [-5.22867, 11.60421], [-5.29251, 11.61715], [-5.26389, 11.75728], [-5.40258, 11.8327], [-5.26389, 11.84778], [-5.07897, 11.97918], [-4.72893, 12.01579], [-4.70692, 12.06746], [-4.62987, 12.06531], [-4.62546, 12.13204], [-4.54841, 12.1385], [-4.57703, 12.19875], [-4.41412, 12.31922], [-4.47356, 12.71252], [-4.238, 12.71467], [-4.21819, 12.95722], [-4.34477, 13.12927], [-3.96501, 13.49778], [-3.90558, 13.44375], [-3.96282, 13.38164], [-3.7911, 13.36665], [-3.54454, 13.1781], [-3.4313, 13.1588], [-3.43507, 13.27272], [-3.23599, 13.29035], [-3.28396, 13.5422], [-3.26407, 13.70699], [-2.88189, 13.64921], [-2.90831, 13.81174], [-2.84667, 14.05532], [-2.66175, 14.14713], [-2.47587, 14.29671], [-2.10223, 14.14878], [-1.9992, 14.19011], [-1.97945, 14.47709], [-1.68083, 14.50023], [-1.32166, 14.72774], [-1.05875, 14.7921], [-0.72004, 15.08655], [-0.24673, 15.07805], [0.06588, 14.96961], [0.23859, 15.00135], [0.72632, 14.95898], [0.96711, 14.98275], [1.31275, 15.27978], [3.01806, 15.34571], [3.03134, 15.42221], [3.50368, 15.35934], [4.19893, 16.39923], [4.21787, 17.00118], [4.26762, 17.00432], [4.26651, 19.14224], [3.36082, 18.9745], [3.12501, 19.1366], [3.24648, 19.81703], [1.20992, 20.73533], [1.15698, 21.12843], [-4.83423, 24.99935]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MM\", iso1A3: \"MMR\", iso1N3: \"104\", wikidata: \"Q836\", nameEn: \"Myanmar\", aliases: [\"Burma\", \"BU\"], groups: [\"035\", \"142\", \"UN\"], callingCodes: [\"95\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[92.62187, 21.87037], [92.59775, 21.6092], [92.68152, 21.28454], [92.60187, 21.24615], [92.55105, 21.3856], [92.43158, 21.37025], [92.37939, 21.47764], [92.20087, 21.337], [92.17752, 21.17445], [92.26071, 21.05697], [92.47409, 20.38654], [92.61042, 13.76986], [94.6371, 13.81803], [97.63455, 9.60854], [98.12555, 9.44056], [98.33094, 9.91973], [98.47298, 9.95782], [98.52291, 9.92389], [98.55174, 9.92804], [98.7391, 10.31488], [98.81944, 10.52761], [98.77275, 10.62548], [98.78511, 10.68351], [98.86819, 10.78336], [99.0069, 10.85485], [98.99701, 10.92962], [99.02337, 10.97217], [99.06938, 10.94857], [99.32756, 11.28545], [99.31573, 11.32081], [99.39485, 11.3925], [99.47598, 11.62434], [99.5672, 11.62732], [99.64108, 11.78948], [99.64891, 11.82699], [99.53424, 12.02317], [99.56445, 12.14805], [99.47519, 12.1353], [99.409, 12.60603], [99.29254, 12.68921], [99.18905, 12.84799], [99.18748, 12.9898], [99.10646, 13.05804], [99.12225, 13.19847], [99.20617, 13.20575], [99.16695, 13.72621], [98.97356, 14.04868], [98.56762, 14.37701], [98.24874, 14.83013], [98.18821, 15.13125], [98.22, 15.21327], [98.30446, 15.30667], [98.40522, 15.25268], [98.41906, 15.27103], [98.39351, 15.34177], [98.4866, 15.39154], [98.56027, 15.33471], [98.58598, 15.46821], [98.541, 15.65406], [98.59853, 15.87197], [98.57019, 16.04578], [98.69585, 16.13353], [98.8376, 16.11706], [98.92656, 16.36425], [98.84485, 16.42354], [98.68074, 16.27068], [98.63817, 16.47424], [98.57912, 16.55983], [98.5695, 16.62826], [98.51113, 16.64503], [98.51833, 16.676], [98.51472, 16.68521], [98.51579, 16.69433], [98.51043, 16.70107], [98.49713, 16.69022], [98.50253, 16.7139], [98.46994, 16.73613], [98.53833, 16.81934], [98.49603, 16.8446], [98.52624, 16.89979], [98.39441, 17.06266], [98.34566, 17.04822], [98.10439, 17.33847], [98.11185, 17.36829], [97.91829, 17.54504], [97.76407, 17.71595], [97.66794, 17.88005], [97.73723, 17.97912], [97.60841, 18.23846], [97.64116, 18.29778], [97.56219, 18.33885], [97.50383, 18.26844], [97.34522, 18.54596], [97.36444, 18.57138], [97.5258, 18.4939], [97.76752, 18.58097], [97.73836, 18.88478], [97.66487, 18.9371], [97.73654, 18.9812], [97.73797, 19.04261], [97.83479, 19.09972], [97.84024, 19.22217], [97.78606, 19.26769], [97.84186, 19.29526], [97.78769, 19.39429], [97.88423, 19.5041], [97.84715, 19.55782], [98.04364, 19.65755], [98.03314, 19.80941], [98.13829, 19.78541], [98.24884, 19.67876], [98.51182, 19.71303], [98.56065, 19.67807], [98.83661, 19.80931], [98.98679, 19.7419], [99.0735, 20.10298], [99.20328, 20.12877], [99.416, 20.08614], [99.52943, 20.14811], [99.5569, 20.20676], [99.46077, 20.36198], [99.46008, 20.39673], [99.68255, 20.32077], [99.81096, 20.33687], [99.86383, 20.44371], [99.88211, 20.44488], [99.88451, 20.44596], [99.89168, 20.44548], [99.89301, 20.44311], [99.89692, 20.44789], [99.90499, 20.4487], [99.91616, 20.44986], [99.95721, 20.46301], [100.08404, 20.36626], [100.1957, 20.68247], [100.36375, 20.82783], [100.51079, 20.82194], [100.60112, 20.8347], [100.64628, 20.88279], [100.50974, 20.88574], [100.55281, 21.02796], [100.63578, 21.05639], [100.72716, 21.31786], [100.80173, 21.2934], [101.00234, 21.39612], [101.16198, 21.52808], [101.15156, 21.56129], [101.11744, 21.77659], [100.87265, 21.67396], [100.72143, 21.51898], [100.57861, 21.45637], [100.4811, 21.46148], [100.42892, 21.54325], [100.35201, 21.53176], [100.25863, 21.47043], [100.18447, 21.51898], [100.1625, 21.48704], [100.12542, 21.50365], [100.10757, 21.59945], [100.17486, 21.65306], [100.12679, 21.70539], [100.04956, 21.66843], [99.98654, 21.71064], [99.94003, 21.82782], [99.99084, 21.97053], [99.96612, 22.05965], [99.85351, 22.04183], [99.47585, 22.13345], [99.33166, 22.09656], [99.1552, 22.15874], [99.19176, 22.16983], [99.17318, 22.18025], [99.28771, 22.4105], [99.37972, 22.50188], [99.38247, 22.57544], [99.31243, 22.73893], [99.45654, 22.85726], [99.43537, 22.94086], [99.54218, 22.90014], [99.52214, 23.08218], [99.34127, 23.13099], [99.25741, 23.09025], [99.04601, 23.12215], [99.05975, 23.16382], [98.88597, 23.18656], [98.92515, 23.29535], [98.93958, 23.31414], [98.87573, 23.33038], [98.92104, 23.36946], [98.87683, 23.48995], [98.82877, 23.47908], [98.80294, 23.5345], [98.88396, 23.59555], [98.81775, 23.694], [98.82933, 23.72921], [98.79607, 23.77947], [98.68209, 23.80492], [98.67797, 23.9644], [98.89632, 24.10612], [98.87998, 24.15624], [98.85319, 24.13042], [98.59256, 24.08371], [98.54476, 24.13119], [98.20666, 24.11406], [98.07806, 24.07988], [98.06703, 24.08028], [98.0607, 24.07812], [98.05671, 24.07961], [98.05302, 24.07408], [98.04709, 24.07616], [97.99583, 24.04932], [97.98691, 24.03897], [97.93951, 24.01953], [97.90998, 24.02094], [97.88616, 24.00463], [97.88414, 23.99405], [97.88814, 23.98605], [97.89683, 23.98389], [97.89676, 23.97931], [97.8955, 23.97758], [97.88811, 23.97446], [97.86545, 23.97723], [97.84328, 23.97603], [97.79416, 23.95663], [97.79456, 23.94836], [97.72302, 23.89288], [97.64667, 23.84574], [97.5247, 23.94032], [97.62363, 24.00506], [97.72903, 24.12606], [97.75305, 24.16902], [97.72799, 24.18883], [97.72998, 24.2302], [97.76799, 24.26365], [97.71941, 24.29652], [97.66723, 24.30027], [97.65624, 24.33781], [97.7098, 24.35658], [97.66998, 24.45288], [97.60029, 24.4401], [97.52757, 24.43748], [97.56286, 24.54535], [97.56525, 24.72838], [97.54675, 24.74202], [97.5542, 24.74943], [97.56383, 24.75535], [97.56648, 24.76475], [97.64354, 24.79171], [97.70181, 24.84557], [97.73127, 24.83015], [97.76481, 24.8289], [97.79949, 24.85655], [97.72903, 24.91332], [97.72216, 25.08508], [97.77023, 25.11492], [97.83614, 25.2715], [97.92541, 25.20815], [98.14925, 25.41547], [98.12591, 25.50722], [98.18084, 25.56298], [98.16848, 25.62739], [98.25774, 25.6051], [98.31268, 25.55307], [98.40606, 25.61129], [98.54064, 25.85129], [98.63128, 25.79937], [98.70818, 25.86241], [98.60763, 26.01512], [98.57085, 26.11547], [98.63128, 26.15492], [98.66884, 26.09165], [98.7329, 26.17218], [98.67797, 26.24487], [98.72741, 26.36183], [98.77547, 26.61994], [98.7333, 26.85615], [98.69582, 27.56499], [98.43353, 27.67086], [98.42529, 27.55404], [98.32641, 27.51385], [98.13964, 27.9478], [98.15337, 28.12114], [97.90069, 28.3776], [97.79632, 28.33168], [97.70705, 28.5056], [97.56835, 28.55628], [97.50518, 28.49716], [97.47085, 28.2688], [97.41729, 28.29783], [97.34547, 28.21385], [97.31292, 28.06784], [97.35412, 28.06663], [97.38845, 28.01329], [97.35824, 27.87256], [97.29919, 27.92233], [96.90112, 27.62149], [96.91431, 27.45752], [97.17422, 27.14052], [97.14675, 27.09041], [96.89132, 27.17474], [96.85287, 27.2065], [96.88445, 27.25046], [96.73888, 27.36638], [96.55761, 27.29928], [96.40779, 27.29818], [96.15591, 27.24572], [96.04949, 27.19428], [95.93002, 27.04149], [95.81603, 27.01335], [95.437, 26.7083], [95.30339, 26.65372], [95.23513, 26.68499], [95.05798, 26.45408], [95.12801, 26.38397], [95.11428, 26.1019], [95.18556, 26.07338], [94.80117, 25.49359], [94.68032, 25.47003], [94.57458, 25.20318], [94.74212, 25.13606], [94.73937, 25.00545], [94.60204, 24.70889], [94.5526, 24.70764], [94.50729, 24.59281], [94.45279, 24.56656], [94.32362, 24.27692], [94.30215, 24.23752], [94.14081, 23.83333], [93.92089, 23.95812], [93.80279, 23.92549], [93.75952, 24.0003], [93.62871, 24.00922], [93.50616, 23.94432], [93.46633, 23.97067], [93.41415, 24.07854], [93.34735, 24.10151], [93.32351, 24.04468], [93.36059, 23.93176], [93.3908, 23.92925], [93.3908, 23.7622], [93.43475, 23.68299], [93.38805, 23.4728], [93.39981, 23.38828], [93.38781, 23.36139], [93.36862, 23.35426], [93.38478, 23.13698], [93.2878, 23.00464], [93.12988, 23.05772], [93.134, 22.92498], [93.09417, 22.69459], [93.134, 22.59573], [93.11477, 22.54374], [93.13537, 22.45873], [93.18206, 22.43716], [93.19991, 22.25425], [93.14224, 22.24535], [93.15734, 22.18687], [93.04885, 22.20595], [92.99255, 22.05965], [92.99804, 21.98964], [92.93899, 22.02656], [92.89504, 21.95143], [92.86208, 22.05456], [92.70416, 22.16017], [92.67532, 22.03547], [92.60949, 21.97638], [92.62187, 21.87037]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MN\", iso1A3: \"MNG\", iso1N3: \"496\", wikidata: \"Q711\", nameEn: \"Mongolia\", groups: [\"030\", \"142\", \"UN\"], callingCodes: [\"976\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[102.14032, 51.35566], [101.5044, 51.50467], [101.39085, 51.45753], [100.61116, 51.73028], [99.89203, 51.74903], [99.75578, 51.90108], [99.27888, 51.96876], [98.87768, 52.14563], [98.74142, 51.8637], [98.33222, 51.71832], [98.22053, 51.46579], [98.05257, 51.46696], [97.83305, 51.00248], [98.01472, 50.86652], [97.9693, 50.78044], [98.06393, 50.61262], [98.31373, 50.4996], [98.29481, 50.33561], [97.85197, 49.91339], [97.76871, 49.99861], [97.56432, 49.92801], [97.56811, 49.84265], [97.24639, 49.74737], [96.97388, 49.88413], [95.80056, 50.04239], [95.74757, 49.97915], [95.02465, 49.96941], [94.97166, 50.04725], [94.6121, 50.04239], [94.49477, 50.17832], [94.39258, 50.22193], [94.30823, 50.57498], [92.99595, 50.63183], [93.01109, 50.79001], [92.44714, 50.78762], [92.07173, 50.69585], [91.86048, 50.73734], [89.59711, 49.90851], [89.70687, 49.72535], [88.82499, 49.44808], [88.42449, 49.48821], [88.17223, 49.46934], [88.15543, 49.30314], [87.98977, 49.18147], [87.81333, 49.17354], [87.88171, 48.95853], [87.73822, 48.89582], [88.0788, 48.71436], [87.96361, 48.58478], [88.58939, 48.34531], [88.58316, 48.21893], [88.8011, 48.11302], [88.93186, 48.10263], [89.0711, 47.98528], [89.55453, 48.0423], [89.76624, 47.82745], [90.06512, 47.88177], [90.10871, 47.7375], [90.33598, 47.68303], [90.48854, 47.41826], [90.48542, 47.30438], [90.76108, 46.99399], [90.84035, 46.99525], [91.03649, 46.72916], [91.0147, 46.58171], [91.07696, 46.57315], [90.89639, 46.30711], [90.99672, 46.14207], [91.03026, 46.04194], [90.70907, 45.73437], [90.65114, 45.49314], [90.89169, 45.19667], [91.64048, 45.07408], [93.51161, 44.95964], [94.10003, 44.71016], [94.71959, 44.35284], [95.01191, 44.25274], [95.39772, 44.2805], [95.32891, 44.02407], [95.52594, 43.99353], [95.89543, 43.2528], [96.35658, 42.90363], [96.37926, 42.72055], [97.1777, 42.7964], [99.50671, 42.56535], [100.33297, 42.68231], [100.84979, 42.67087], [101.80515, 42.50074], [102.07645, 42.22519], [102.72403, 42.14675], [103.92804, 41.78246], [104.52258, 41.8706], [104.51667, 41.66113], [105.0123, 41.63188], [106.76517, 42.28741], [107.24774, 42.36107], [107.29755, 42.41395], [107.49681, 42.46221], [107.57258, 42.40898], [108.84489, 42.40246], [109.00679, 42.45302], [109.452, 42.44842], [109.89402, 42.63111], [110.08401, 42.6411], [110.4327, 42.78293], [111.0149, 43.3289], [111.59087, 43.51207], [111.79758, 43.6637], [111.93776, 43.68709], [111.96289, 43.81596], [111.40498, 44.3461], [111.76275, 44.98032], [111.98695, 45.09074], [112.4164, 45.06858], [112.74662, 44.86297], [113.70918, 44.72891], [114.5166, 45.27189], [114.54801, 45.38337], [114.74612, 45.43585], [114.94546, 45.37377], [115.60329, 45.44717], [116.16989, 45.68603], [116.27366, 45.78637], [116.24012, 45.8778], [116.26678, 45.96479], [116.58612, 46.30211], [116.75551, 46.33083], [116.83166, 46.38637], [117.36609, 46.36335], [117.41782, 46.57862], [117.60748, 46.59771], [117.69554, 46.50991], [118.30534, 46.73519], [118.78747, 46.68689], [118.8337, 46.77742], [118.89974, 46.77139], [118.92616, 46.72765], [119.00541, 46.74273], [119.10448, 46.65516], [119.24978, 46.64761], [119.32827, 46.61433], [119.42827, 46.63783], [119.65265, 46.62342], [119.68127, 46.59015], [119.77373, 46.62947], [119.80455, 46.67631], [119.89261, 46.66423], [119.91242, 46.90091], [119.85518, 46.92196], [119.71209, 47.19192], [119.62403, 47.24575], [119.56019, 47.24874], [119.54918, 47.29505], [119.31964, 47.42617], [119.35892, 47.48104], [119.13995, 47.53997], [119.12343, 47.66458], [118.7564, 47.76947], [118.55766, 47.99277], [118.29654, 48.00246], [118.22677, 48.03853], [118.11009, 48.04], [118.03676, 48.00982], [117.80196, 48.01661], [117.50181, 47.77216], [117.37875, 47.63627], [116.9723, 47.87285], [116.67405, 47.89039], [116.4465, 47.83662], [116.21879, 47.88505], [115.94296, 47.67741], [115.57128, 47.91988], [115.52082, 48.15367], [115.811, 48.25699], [115.78876, 48.51781], [116.06565, 48.81716], [116.03781, 48.87014], [116.71193, 49.83813], [116.62502, 49.92919], [116.22402, 50.04477], [115.73602, 49.87688], [115.26068, 49.97367], [114.9703, 50.19254], [114.325, 50.28098], [113.20216, 49.83356], [113.02647, 49.60772], [110.64493, 49.1816], [110.39891, 49.25083], [110.24373, 49.16676], [109.51325, 49.22859], [109.18017, 49.34709], [108.53969, 49.32325], [108.27937, 49.53167], [107.95387, 49.66659], [107.96116, 49.93191], [107.36407, 49.97612], [107.1174, 50.04239], [107.00007, 50.1977], [106.80326, 50.30177], [106.58373, 50.34044], [106.51122, 50.34408], [106.49628, 50.32436], [106.47156, 50.31909], [106.07865, 50.33474], [106.05562, 50.40582], [105.32528, 50.4648], [103.70343, 50.13952], [102.71178, 50.38873], [102.32194, 50.67982], [102.14032, 51.35566]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MO\", iso1A3: \"MAC\", iso1N3: \"446\", wikidata: \"Q14773\", nameEn: \"Macau\", aliases: [\"Macao\"], country: \"CN\", groups: [\"030\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"853\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[113.54942, 22.14519], [113.54839, 22.10909], [113.57191, 22.07696], [113.63011, 22.10782], [113.60504, 22.20464], [113.57123, 22.20416], [113.56865, 22.20973], [113.5508, 22.21672], [113.54333, 22.21688], [113.54093, 22.21314], [113.53593, 22.2137], [113.53301, 22.21235], [113.53552, 22.20607], [113.52659, 22.18271], [113.54093, 22.15497], [113.54942, 22.14519]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MP\", iso1A3: \"MNP\", iso1N3: \"580\", wikidata: \"Q16644\", nameEn: \"Northern Mariana Islands\", aliases: [\"US-MP\"], country: \"US\", groups: [\"Q1352230\", \"Q153732\", \"057\", \"009\", \"UN\"], roadSpeedUnit: \"mph\", callingCodes: [\"1 670\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[135.52896, 14.32623], [152.19114, 13.63487], [145.05972, 21.28731], [135.52896, 14.32623]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MQ\", iso1A3: \"MTQ\", iso1N3: \"474\", wikidata: \"Q17054\", nameEn: \"Martinique\", country: \"FR\", groups: [\"Q3320166\", \"EU\", \"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"596\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-59.95997, 14.20285], [-61.07821, 15.25109], [-61.69315, 14.26451], [-59.95997, 14.20285]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MR\", iso1A3: \"MRT\", iso1N3: \"478\", wikidata: \"Q1025\", nameEn: \"Mauritania\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"222\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-5.60725, 16.49919], [-6.57191, 25.0002], [-4.83423, 24.99935], [-8.66674, 27.31569], [-8.66721, 25.99918], [-12.0002, 25.9986], [-12.00251, 23.4538], [-12.14969, 23.41935], [-12.36213, 23.3187], [-12.5741, 23.28975], [-13.00412, 23.02297], [-13.10753, 22.89493], [-13.15313, 22.75649], [-13.08438, 22.53866], [-13.01525, 21.33343], [-16.95474, 21.33997], [-16.99806, 21.12142], [-17.0357, 21.05368], [-17.0396, 20.9961], [-17.06781, 20.92697], [-17.0695, 20.85742], [-17.0471, 20.76408], [-17.15288, 16.07139], [-16.50854, 16.09032], [-16.48967, 16.0496], [-16.44814, 16.09753], [-16.4429, 16.20605], [-16.27016, 16.51565], [-15.6509, 16.50315], [-15.00557, 16.64997], [-14.32144, 16.61495], [-13.80075, 16.13961], [-13.43135, 16.09022], [-13.11029, 15.52116], [-12.23936, 14.76324], [-11.94903, 14.76143], [-11.70705, 15.51558], [-11.43483, 15.62339], [-10.90932, 15.11001], [-10.71721, 15.4223], [-9.40447, 15.4396], [-9.44673, 15.60553], [-9.33314, 15.7044], [-9.31106, 15.69412], [-9.32979, 15.50032], [-5.50165, 15.50061], [-5.33435, 16.33354], [-5.60725, 16.49919]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MS\", iso1A3: \"MSR\", iso1N3: \"500\", wikidata: \"Q13353\", nameEn: \"Montserrat\", country: \"GB\", groups: [\"BOTS\", \"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1 664\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-61.91508, 16.51165], [-62.1023, 16.97277], [-62.58307, 16.68909], [-61.91508, 16.51165]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MT\", iso1A3: \"MLT\", iso1N3: \"470\", wikidata: \"Q233\", nameEn: \"Malta\", groups: [\"EU\", \"039\", \"150\", \"UN\"], driveSide: \"left\", callingCodes: [\"356\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[15.70991, 35.79901], [14.07544, 36.41525], [13.27636, 35.20764], [15.70991, 35.79901]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MU\", iso1A3: \"MUS\", iso1N3: \"480\", wikidata: \"Q1027\", nameEn: \"Mauritius\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"230\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[56.09755, -9.55401], [57.50644, -31.92637], [68.4673, -19.15185], [56.09755, -9.55401]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MV\", iso1A3: \"MDV\", iso1N3: \"462\", wikidata: \"Q826\", nameEn: \"Maldives\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"960\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[71.9161, 8.55531], [72.57428, -3.7623], [76.59015, 5.591], [71.9161, 8.55531]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MW\", iso1A3: \"MWI\", iso1N3: \"454\", wikidata: \"Q1020\", nameEn: \"Malawi\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"265\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.48052, -9.62442], [33.31581, -9.48554], [33.14925, -9.49322], [32.99397, -9.36712], [32.95389, -9.40138], [33.00476, -9.5133], [33.00256, -9.63053], [33.05485, -9.61316], [33.10163, -9.66525], [33.12144, -9.58929], [33.2095, -9.61099], [33.31517, -9.82364], [33.36581, -9.81063], [33.37902, -9.9104], [33.31297, -10.05133], [33.53863, -10.20148], [33.54797, -10.36077], [33.70675, -10.56896], [33.47636, -10.78465], [33.28022, -10.84428], [33.25998, -10.88862], [33.39697, -11.15296], [33.29267, -11.3789], [33.29267, -11.43536], [33.23663, -11.40637], [33.24252, -11.59302], [33.32692, -11.59248], [33.33937, -11.91252], [33.25998, -12.14242], [33.3705, -12.34931], [33.47636, -12.32498], [33.54485, -12.35996], [33.37517, -12.54085], [33.28177, -12.54692], [33.18837, -12.61377], [33.05917, -12.59554], [32.94397, -12.76868], [32.96733, -12.88251], [33.02181, -12.88707], [32.98289, -13.12671], [33.0078, -13.19492], [32.86113, -13.47292], [32.84176, -13.52794], [32.73683, -13.57682], [32.68436, -13.55769], [32.66468, -13.60019], [32.68654, -13.64268], [32.7828, -13.64805], [32.84528, -13.71576], [32.76962, -13.77224], [32.79015, -13.80755], [32.88985, -13.82956], [32.99042, -13.95689], [33.02977, -14.05022], [33.07568, -13.98447], [33.16749, -13.93992], [33.24249, -14.00019], [33.66677, -14.61306], [33.7247, -14.4989], [33.88503, -14.51652], [33.92898, -14.47929], [34.08588, -14.48893], [34.18733, -14.43823], [34.22355, -14.43607], [34.34453, -14.3985], [34.35843, -14.38652], [34.39277, -14.39467], [34.4192, -14.43191], [34.44641, -14.47746], [34.45053, -14.49873], [34.47628, -14.53363], [34.48932, -14.53646], [34.49636, -14.55091], [34.52366, -14.5667], [34.53962, -14.59776], [34.55112, -14.64494], [34.53516, -14.67782], [34.52057, -14.68263], [34.54503, -14.74672], [34.567, -14.77345], [34.61522, -14.99583], [34.57503, -15.30619], [34.43126, -15.44778], [34.44981, -15.60864], [34.25195, -15.90321], [34.43126, -16.04737], [34.40344, -16.20923], [35.04805, -16.83167], [35.13771, -16.81687], [35.17017, -16.93521], [35.04805, -17.00027], [35.0923, -17.13235], [35.3062, -17.1244], [35.27065, -16.93817], [35.30929, -16.82871], [35.27219, -16.69402], [35.14235, -16.56812], [35.25828, -16.4792], [35.30157, -16.2211], [35.43355, -16.11371], [35.52365, -16.15414], [35.70107, -16.10147], [35.80487, -16.03907], [35.85303, -15.41913], [35.78799, -15.17428], [35.91812, -14.89514], [35.87212, -14.89478], [35.86945, -14.67481], [35.5299, -14.27714], [35.47989, -14.15594], [34.86229, -13.48958], [34.60253, -13.48487], [34.37831, -12.17408], [34.46088, -12.0174], [34.70739, -12.15652], [34.82903, -12.04837], [34.57917, -11.87849], [34.64241, -11.57499], [34.96296, -11.57354], [34.91153, -11.39799], [34.79375, -11.32245], [34.63305, -11.11731], [34.61161, -11.01611], [34.67047, -10.93796], [34.65946, -10.6828], [34.57581, -10.56271], [34.51911, -10.12279], [34.54499, -10.0678], [34.03865, -9.49398], [33.95829, -9.54066], [33.9638, -9.62206], [33.93298, -9.71647], [33.76677, -9.58516], [33.48052, -9.62442]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MX\", iso1A3: \"MEX\", iso1N3: \"484\", wikidata: \"Q96\", nameEn: \"Mexico\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"52\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-117.1243, 32.53427], [-118.48109, 32.5991], [-120.12904, 18.41089], [-92.37213, 14.39277], [-92.2261, 14.53423], [-92.1454, 14.6804], [-92.18161, 14.84147], [-92.1423, 14.88647], [-92.1454, 14.98143], [-92.0621, 15.07406], [-92.20983, 15.26077], [-91.73182, 16.07371], [-90.44567, 16.07573], [-90.40499, 16.40524], [-90.61212, 16.49832], [-90.69064, 16.70697], [-91.04436, 16.92175], [-91.43809, 17.25373], [-90.99199, 17.25192], [-90.98678, 17.81655], [-89.14985, 17.81563], [-89.15105, 17.95104], [-89.03839, 18.0067], [-88.8716, 17.89535], [-88.71505, 18.0707], [-88.48242, 18.49164], [-88.3268, 18.49048], [-88.29909, 18.47591], [-88.26593, 18.47617], [-88.03238, 18.41778], [-88.03165, 18.16657], [-87.90671, 18.15213], [-87.87604, 18.18313], [-87.86657, 18.19971], [-87.85693, 18.18266], [-87.84815, 18.18511], [-86.92368, 17.61462], [-85.9092, 21.8218], [-96.92418, 25.97377], [-97.13927, 25.96583], [-97.35946, 25.92189], [-97.37332, 25.83854], [-97.42511, 25.83969], [-97.45669, 25.86874], [-97.49828, 25.89877], [-97.52025, 25.88518], [-97.66511, 26.01708], [-97.95155, 26.0625], [-97.97017, 26.05232], [-98.24603, 26.07191], [-98.27075, 26.09457], [-98.30491, 26.10475], [-98.35126, 26.15129], [-99.00546, 26.3925], [-99.03053, 26.41249], [-99.08477, 26.39849], [-99.53573, 27.30926], [-99.49744, 27.43746], [-99.482, 27.47128], [-99.48045, 27.49016], [-99.50208, 27.50021], [-99.52955, 27.49747], [-99.51478, 27.55836], [-99.55409, 27.61314], [-100.50029, 28.66117], [-100.51222, 28.70679], [-100.5075, 28.74066], [-100.52313, 28.75598], [-100.59809, 28.88197], [-100.63689, 28.90812], [-100.67294, 29.09744], [-100.79696, 29.24688], [-100.87982, 29.296], [-100.94056, 29.33371], [-100.94579, 29.34523], [-100.96725, 29.3477], [-101.01128, 29.36947], [-101.05686, 29.44738], [-101.47277, 29.7744], [-102.60596, 29.8192], [-103.15787, 28.93865], [-104.37752, 29.54255], [-104.39363, 29.55396], [-104.3969, 29.57105], [-104.5171, 29.64671], [-104.77674, 30.4236], [-106.00363, 31.39181], [-106.09025, 31.40569], [-106.20346, 31.46305], [-106.23711, 31.51262], [-106.24612, 31.54193], [-106.28084, 31.56173], [-106.30305, 31.62154], [-106.33419, 31.66303], [-106.34864, 31.69663], [-106.3718, 31.71165], [-106.38003, 31.73151], [-106.41773, 31.75196], [-106.43419, 31.75478], [-106.45244, 31.76523], [-106.46726, 31.75998], [-106.47298, 31.75054], [-106.48815, 31.74769], [-106.50111, 31.75714], [-106.50962, 31.76155], [-106.51251, 31.76922], [-106.52266, 31.77509], [-106.529, 31.784], [-108.20899, 31.78534], [-108.20979, 31.33316], [-111.07523, 31.33232], [-114.82011, 32.49609], [-114.79524, 32.55731], [-114.81141, 32.55543], [-114.80584, 32.62028], [-114.76736, 32.64094], [-114.71871, 32.71894], [-115.88053, 32.63624], [-117.1243, 32.53427]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MY\", iso1A3: \"MYS\", iso1N3: \"458\", wikidata: \"Q833\", nameEn: \"Malaysia\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"MZ\", iso1A3: \"MOZ\", iso1N3: \"508\", wikidata: \"Q1029\", nameEn: \"Mozambique\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"258\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[40.74206, -10.25691], [40.44265, -10.4618], [40.00295, -10.80255], [39.58249, -10.96043], [39.24395, -11.17433], [38.88996, -11.16978], [38.47258, -11.4199], [38.21598, -11.27289], [37.93618, -11.26228], [37.8388, -11.3123], [37.76614, -11.53352], [37.3936, -11.68949], [36.80309, -11.56836], [36.62068, -11.72884], [36.19094, -11.70008], [36.19094, -11.57593], [35.82767, -11.41081], [35.63599, -11.55927], [34.96296, -11.57354], [34.64241, -11.57499], [34.57917, -11.87849], [34.82903, -12.04837], [34.70739, -12.15652], [34.46088, -12.0174], [34.37831, -12.17408], [34.60253, -13.48487], [34.86229, -13.48958], [35.47989, -14.15594], [35.5299, -14.27714], [35.86945, -14.67481], [35.87212, -14.89478], [35.91812, -14.89514], [35.78799, -15.17428], [35.85303, -15.41913], [35.80487, -16.03907], [35.70107, -16.10147], [35.52365, -16.15414], [35.43355, -16.11371], [35.30157, -16.2211], [35.25828, -16.4792], [35.14235, -16.56812], [35.27219, -16.69402], [35.30929, -16.82871], [35.27065, -16.93817], [35.3062, -17.1244], [35.0923, -17.13235], [35.04805, -17.00027], [35.17017, -16.93521], [35.13771, -16.81687], [35.04805, -16.83167], [34.40344, -16.20923], [34.43126, -16.04737], [34.25195, -15.90321], [34.44981, -15.60864], [34.43126, -15.44778], [34.57503, -15.30619], [34.61522, -14.99583], [34.567, -14.77345], [34.54503, -14.74672], [34.52057, -14.68263], [34.53516, -14.67782], [34.55112, -14.64494], [34.53962, -14.59776], [34.52366, -14.5667], [34.49636, -14.55091], [34.48932, -14.53646], [34.47628, -14.53363], [34.45053, -14.49873], [34.44641, -14.47746], [34.4192, -14.43191], [34.39277, -14.39467], [34.35843, -14.38652], [34.34453, -14.3985], [34.22355, -14.43607], [34.18733, -14.43823], [34.08588, -14.48893], [33.92898, -14.47929], [33.88503, -14.51652], [33.7247, -14.4989], [33.66677, -14.61306], [33.24249, -14.00019], [30.22098, -14.99447], [30.41902, -15.62269], [30.42568, -15.9962], [30.91597, -15.99924], [30.97761, -16.05848], [31.13171, -15.98019], [31.30563, -16.01193], [31.42451, -16.15154], [31.67988, -16.19595], [31.90223, -16.34388], [31.91324, -16.41569], [32.02772, -16.43892], [32.28529, -16.43892], [32.42838, -16.4727], [32.71017, -16.59932], [32.69917, -16.66893], [32.78943, -16.70267], [32.97655, -16.70689], [32.91051, -16.89446], [32.84113, -16.92259], [32.96554, -17.11971], [33.00517, -17.30477], [33.0426, -17.3468], [32.96554, -17.48964], [32.98536, -17.55891], [33.0492, -17.60298], [32.94133, -17.99705], [33.03159, -18.35054], [33.02278, -18.4696], [32.88629, -18.51344], [32.88629, -18.58023], [32.95013, -18.69079], [32.9017, -18.7992], [32.82465, -18.77419], [32.70137, -18.84712], [32.73439, -18.92628], [32.69917, -18.94293], [32.72118, -19.02204], [32.84006, -19.0262], [32.87088, -19.09279], [32.85107, -19.29238], [32.77966, -19.36098], [32.78282, -19.47513], [32.84446, -19.48343], [32.84666, -19.68462], [32.95013, -19.67219], [33.06461, -19.77787], [33.01178, -20.02007], [32.93032, -20.03868], [32.85987, -20.16686], [32.85987, -20.27841], [32.66174, -20.56106], [32.55167, -20.56312], [32.48122, -20.63319], [32.51644, -20.91929], [32.37115, -21.133], [32.48236, -21.32873], [32.41234, -21.31246], [31.38336, -22.36919], [31.30611, -22.422], [31.55779, -23.176], [31.56539, -23.47268], [31.67942, -23.60858], [31.70223, -23.72695], [31.77445, -23.90082], [31.87707, -23.95293], [31.90368, -24.18892], [31.9835, -24.29983], [32.03196, -25.10785], [32.01676, -25.38117], [31.97875, -25.46356], [32.00631, -25.65044], [31.92649, -25.84216], [31.974, -25.95387], [32.00916, -25.999], [32.08599, -26.00978], [32.10435, -26.15656], [32.07352, -26.40185], [32.13409, -26.5317], [32.13315, -26.84345], [32.19409, -26.84032], [32.22302, -26.84136], [32.29584, -26.852], [32.35222, -26.86027], [34.51034, -26.91792], [42.99868, -12.65261], [40.74206, -10.25691]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NA\", iso1A3: \"NAM\", iso1N3: \"516\", wikidata: \"Q1030\", nameEn: \"Namibia\", groups: [\"018\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"264\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[14.28743, -17.38814], [13.95896, -17.43141], [13.36212, -16.98048], [12.97145, -16.98567], [12.52111, -17.24495], [12.07076, -17.15165], [11.75063, -17.25013], [10.5065, -17.25284], [12.51595, -32.27486], [16.45332, -28.63117], [16.46592, -28.57126], [16.59922, -28.53246], [16.90446, -28.057], [17.15405, -28.08573], [17.4579, -28.68718], [18.99885, -28.89165], [19.99882, -28.42622], [19.99817, -24.76768], [19.99912, -21.99991], [20.99751, -22.00026], [20.99904, -18.31743], [21.45556, -18.31795], [23.0996, -18.00075], [23.29618, -17.99855], [23.61088, -18.4881], [24.19416, -18.01919], [24.40577, -17.95726], [24.57485, -18.07151], [24.6303, -17.9863], [24.71887, -17.9218], [24.73364, -17.89338], [24.95586, -17.79674], [25.05895, -17.84452], [25.16882, -17.78253], [25.26433, -17.79571], [25.00198, -17.58221], [24.70864, -17.49501], [24.5621, -17.52963], [24.38712, -17.46818], [24.32811, -17.49082], [24.23619, -17.47489], [23.47474, -17.62877], [21.42741, -18.02787], [21.14283, -17.94318], [18.84226, -17.80375], [18.39229, -17.38927], [14.28743, -17.38814]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NC\", iso1A3: \"NCL\", iso1N3: \"540\", wikidata: \"Q33788\", nameEn: \"New Caledonia\", country: \"FR\", groups: [\"Q1451600\", \"054\", \"009\", \"UN\"], callingCodes: [\"687\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[159.77159, -28.41151], [174.245, -23.1974], [156.73836, -14.50464], [159.77159, -28.41151]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NE\", iso1A3: \"NER\", iso1N3: \"562\", wikidata: \"Q1032\", nameEn: \"Niger\", aliases: [\"RN\"], groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"227\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[14.22918, 22.61719], [13.5631, 23.16574], [11.96886, 23.51735], [7.48273, 20.87258], [7.38361, 20.79165], [5.8153, 19.45101], [4.26651, 19.14224], [4.26762, 17.00432], [4.21787, 17.00118], [4.19893, 16.39923], [3.50368, 15.35934], [3.03134, 15.42221], [3.01806, 15.34571], [1.31275, 15.27978], [0.96711, 14.98275], [0.72632, 14.95898], [0.23859, 15.00135], [0.16936, 14.51654], [0.38051, 14.05575], [0.61924, 13.68491], [0.77377, 13.6866], [0.77637, 13.64442], [0.99514, 13.5668], [1.02813, 13.46635], [1.20088, 13.38951], [1.24429, 13.39373], [1.28509, 13.35488], [1.24516, 13.33968], [1.21217, 13.37853], [1.18873, 13.31771], [0.99253, 13.37515], [0.99167, 13.10727], [2.26349, 12.41915], [2.05785, 12.35539], [2.39723, 11.89473], [2.45824, 11.98672], [2.39657, 12.10952], [2.37783, 12.24804], [2.6593, 12.30631], [2.83978, 12.40585], [3.25352, 12.01467], [3.31613, 11.88495], [3.48187, 11.86092], [3.59375, 11.70269], [3.61075, 11.69181], [3.67988, 11.75429], [3.67122, 11.80865], [3.63063, 11.83042], [3.61955, 11.91847], [3.67775, 11.97599], [3.63136, 12.11826], [3.66364, 12.25884], [3.65111, 12.52223], [3.94339, 12.74979], [4.10006, 12.98862], [4.14367, 13.17189], [4.14186, 13.47586], [4.23456, 13.47725], [4.4668, 13.68286], [4.87425, 13.78], [4.9368, 13.7345], [5.07396, 13.75052], [5.21026, 13.73627], [5.27797, 13.75474], [5.35437, 13.83567], [5.52957, 13.8845], [6.15771, 13.64564], [6.27411, 13.67835], [6.43053, 13.6006], [6.69617, 13.34057], [6.94445, 12.99825], [7.0521, 13.00076], [7.12676, 13.02445], [7.22399, 13.1293], [7.39241, 13.09717], [7.81085, 13.34902], [8.07997, 13.30847], [8.25185, 13.20369], [8.41853, 13.06166], [8.49493, 13.07519], [8.60431, 13.01768], [8.64251, 12.93985], [8.97413, 12.83661], [9.65995, 12.80614], [10.00373, 13.18171], [10.19993, 13.27129], [10.46731, 13.28819], [10.66004, 13.36422], [11.4535, 13.37773], [11.88236, 13.2527], [12.04209, 13.14452], [12.16189, 13.10056], [12.19315, 13.12423], [12.47095, 13.06673], [12.58033, 13.27805], [12.6793, 13.29157], [12.87376, 13.48919], [13.05085, 13.53984], [13.19844, 13.52802], [13.33213, 13.71195], [13.6302, 13.71094], [13.47559, 14.40881], [13.48259, 14.46704], [13.68573, 14.55276], [13.67878, 14.64013], [13.809, 14.72915], [13.78991, 14.87519], [13.86301, 15.04043], [14.37425, 15.72591], [15.50373, 16.89649], [15.6032, 18.77402], [15.75098, 19.93002], [15.99632, 20.35364], [15.6721, 20.70069], [15.59841, 20.74039], [15.56004, 20.79488], [15.55382, 20.86507], [15.57248, 20.92138], [15.62515, 20.95395], [15.28332, 21.44557], [15.20213, 21.49365], [15.19692, 21.99339], [14.99751, 23.00539], [14.22918, 22.61719]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NF\", iso1A3: \"NFK\", iso1N3: \"574\", wikidata: \"Q31057\", nameEn: \"Norfolk Island\", country: \"AU\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"672 3\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[169.82316, -28.16667], [166.29505, -28.29175], [167.94076, -30.60745], [169.82316, -28.16667]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NG\", iso1A3: \"NGA\", iso1N3: \"566\", wikidata: \"Q1033\", nameEn: \"Nigeria\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"234\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[6.15771, 13.64564], [5.52957, 13.8845], [5.35437, 13.83567], [5.27797, 13.75474], [5.21026, 13.73627], [5.07396, 13.75052], [4.9368, 13.7345], [4.87425, 13.78], [4.4668, 13.68286], [4.23456, 13.47725], [4.14186, 13.47586], [4.14367, 13.17189], [4.10006, 12.98862], [3.94339, 12.74979], [3.65111, 12.52223], [3.66364, 12.25884], [3.63136, 12.11826], [3.67775, 11.97599], [3.61955, 11.91847], [3.63063, 11.83042], [3.67122, 11.80865], [3.67988, 11.75429], [3.61075, 11.69181], [3.59375, 11.70269], [3.49175, 11.29765], [3.71505, 11.13015], [3.84243, 10.59316], [3.78292, 10.40538], [3.6844, 10.46351], [3.57275, 10.27185], [3.66908, 10.18136], [3.54429, 9.87739], [3.35383, 9.83641], [3.32099, 9.78032], [3.34726, 9.70696], [3.25093, 9.61632], [3.13928, 9.47167], [3.14147, 9.28375], [3.08017, 9.10006], [2.77907, 9.06924], [2.67523, 7.87825], [2.73095, 7.7755], [2.73405, 7.5423], [2.78668, 7.5116], [2.79442, 7.43486], [2.74489, 7.42565], [2.76965, 7.13543], [2.71702, 6.95722], [2.74024, 6.92802], [2.73405, 6.78508], [2.78823, 6.76356], [2.78204, 6.70514], [2.7325, 6.64057], [2.74334, 6.57291], [2.70464, 6.50831], [2.70566, 6.38038], [2.74181, 6.13349], [5.87055, 3.78489], [8.34397, 4.30689], [8.60302, 4.87353], [8.78027, 5.1243], [8.92029, 5.58403], [8.83687, 5.68483], [8.88156, 5.78857], [8.84209, 5.82562], [9.51757, 6.43874], [9.70674, 6.51717], [9.77824, 6.79088], [9.86314, 6.77756], [10.15135, 7.03781], [10.21466, 6.88996], [10.53639, 6.93432], [10.57214, 7.16345], [10.59746, 7.14719], [10.60789, 7.06885], [10.83727, 6.9358], [10.8179, 6.83377], [10.94302, 6.69325], [11.09644, 6.68437], [11.09495, 6.51717], [11.42041, 6.53789], [11.42264, 6.5882], [11.51499, 6.60892], [11.57755, 6.74059], [11.55818, 6.86186], [11.63117, 6.9905], [11.87396, 7.09398], [11.84864, 7.26098], [11.93205, 7.47812], [12.01844, 7.52981], [11.99908, 7.67302], [12.20909, 7.97553], [12.19271, 8.10826], [12.24782, 8.17904], [12.26123, 8.43696], [12.4489, 8.52536], [12.44146, 8.6152], [12.68722, 8.65938], [12.71701, 8.7595], [12.79, 8.75361], [12.81085, 8.91992], [12.90022, 9.11411], [12.91958, 9.33905], [12.85628, 9.36698], [13.02385, 9.49334], [13.22642, 9.57266], [13.25472, 9.76795], [13.29941, 9.8296], [13.25025, 9.86042], [13.24132, 9.91031], [13.27409, 9.93232], [13.286, 9.9822], [13.25323, 10.00127], [13.25025, 10.03647], [13.34111, 10.12299], [13.43644, 10.13326], [13.5705, 10.53183], [13.54964, 10.61236], [13.73434, 10.9255], [13.70753, 10.94451], [13.7403, 11.00593], [13.78945, 11.00154], [13.97489, 11.30258], [14.17821, 11.23831], [14.6124, 11.51283], [14.64591, 11.66166], [14.55207, 11.72001], [14.61612, 11.7798], [14.6474, 12.17466], [14.4843, 12.35223], [14.22215, 12.36533], [14.17523, 12.41916], [14.20204, 12.53405], [14.08251, 13.0797], [13.6302, 13.71094], [13.33213, 13.71195], [13.19844, 13.52802], [13.05085, 13.53984], [12.87376, 13.48919], [12.6793, 13.29157], [12.58033, 13.27805], [12.47095, 13.06673], [12.19315, 13.12423], [12.16189, 13.10056], [12.04209, 13.14452], [11.88236, 13.2527], [11.4535, 13.37773], [10.66004, 13.36422], [10.46731, 13.28819], [10.19993, 13.27129], [10.00373, 13.18171], [9.65995, 12.80614], [8.97413, 12.83661], [8.64251, 12.93985], [8.60431, 13.01768], [8.49493, 13.07519], [8.41853, 13.06166], [8.25185, 13.20369], [8.07997, 13.30847], [7.81085, 13.34902], [7.39241, 13.09717], [7.22399, 13.1293], [7.12676, 13.02445], [7.0521, 13.00076], [6.94445, 12.99825], [6.69617, 13.34057], [6.43053, 13.6006], [6.27411, 13.67835], [6.15771, 13.64564]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NI\", iso1A3: \"NIC\", iso1N3: \"558\", wikidata: \"Q811\", nameEn: \"Nicaragua\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"505\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-83.13724, 15.00002], [-83.49268, 15.01158], [-83.62101, 14.89448], [-83.89551, 14.76697], [-84.10584, 14.76353], [-84.48373, 14.63249], [-84.70119, 14.68078], [-84.82596, 14.82212], [-84.90082, 14.80489], [-85.1575, 14.53934], [-85.18602, 14.24929], [-85.32149, 14.2562], [-85.45762, 14.11304], [-85.73964, 13.9698], [-85.75477, 13.8499], [-86.03458, 13.99181], [-86.00685, 14.08474], [-86.14801, 14.04317], [-86.35219, 13.77157], [-86.76812, 13.79605], [-86.71267, 13.30348], [-86.87066, 13.30641], [-86.93383, 13.18677], [-86.93197, 13.05313], [-87.03785, 12.98682], [-87.06306, 13.00892], [-87.37107, 12.98646], [-87.55124, 13.12523], [-87.7346, 13.13228], [-88.11443, 12.63306], [-86.14524, 11.09059], [-85.71223, 11.06868], [-85.60529, 11.22607], [-84.92439, 10.9497], [-84.68197, 11.07568], [-83.90838, 10.71161], [-83.66597, 10.79916], [-83.68276, 11.01562], [-82.56142, 11.91792], [-82.06974, 14.49418], [-83.04763, 15.03256], [-83.13724, 15.00002]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NL\", iso1A3: \"NLD\", iso1N3: \"528\", wikidata: \"Q29999\", nameEn: \"Kingdom of the Netherlands\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"NO\", iso1A3: \"NOR\", iso1N3: \"578\", wikidata: \"Q20\", nameEn: \"Norway\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"NP\", iso1A3: \"NPL\", iso1N3: \"524\", wikidata: \"Q837\", nameEn: \"Nepal\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"977\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[88.13378, 27.88015], [87.82681, 27.95248], [87.72718, 27.80938], [87.56996, 27.84517], [87.11696, 27.84104], [87.03757, 27.94835], [86.75582, 28.04182], [86.74181, 28.10638], [86.56265, 28.09569], [86.51609, 27.96623], [86.42736, 27.91122], [86.22966, 27.9786], [86.18607, 28.17364], [86.088, 28.09264], [86.08333, 28.02121], [86.12069, 27.93047], [86.06309, 27.90021], [85.94946, 27.9401], [85.97813, 27.99023], [85.90743, 28.05144], [85.84672, 28.18187], [85.74864, 28.23126], [85.71907, 28.38064], [85.69105, 28.38475], [85.60854, 28.25045], [85.59765, 28.30529], [85.4233, 28.32996], [85.38127, 28.28336], [85.10729, 28.34092], [85.18668, 28.54076], [85.19135, 28.62825], [85.06059, 28.68562], [84.85511, 28.58041], [84.62317, 28.73887], [84.47528, 28.74023], [84.2231, 28.89571], [84.24801, 29.02783], [84.18107, 29.23451], [83.97559, 29.33091], [83.82303, 29.30513], [83.63156, 29.16249], [83.44787, 29.30513], [83.28131, 29.56813], [83.07116, 29.61957], [82.73024, 29.81695], [82.5341, 29.9735], [82.38622, 30.02608], [82.16984, 30.0692], [82.19475, 30.16884], [82.10757, 30.23745], [82.10135, 30.35439], [81.99082, 30.33423], [81.62033, 30.44703], [81.5459, 30.37688], [81.41018, 30.42153], [81.39928, 30.21862], [81.33355, 30.15303], [81.2623, 30.14596], [81.29032, 30.08806], [81.24362, 30.0126], [81.12842, 30.01395], [81.03953, 30.20059], [80.92547, 30.17193], [80.91143, 30.22173], [80.86673, 30.17321], [80.8778, 30.13384], [80.67076, 29.95732], [80.60226, 29.95732], [80.57179, 29.91422], [80.56247, 29.86661], [80.48997, 29.79566], [80.43458, 29.80466], [80.41554, 29.79451], [80.36803, 29.73865], [80.38428, 29.68513], [80.41858, 29.63581], [80.37939, 29.57098], [80.24322, 29.44299], [80.31428, 29.30784], [80.28626, 29.20327], [80.24112, 29.21414], [80.26602, 29.13938], [80.23178, 29.11626], [80.18085, 29.13649], [80.05743, 28.91479], [80.06957, 28.82763], [80.12125, 28.82346], [80.37188, 28.63371], [80.44504, 28.63098], [80.52443, 28.54897], [80.50575, 28.6706], [80.55142, 28.69182], [81.03471, 28.40054], [81.19847, 28.36284], [81.32923, 28.13521], [81.38683, 28.17638], [81.48179, 28.12148], [81.47867, 28.08303], [81.91223, 27.84995], [81.97214, 27.93322], [82.06554, 27.92222], [82.46405, 27.6716], [82.70378, 27.72122], [82.74119, 27.49838], [82.93261, 27.50328], [82.94938, 27.46036], [83.19413, 27.45632], [83.27197, 27.38309], [83.2673, 27.36235], [83.29999, 27.32778], [83.35136, 27.33885], [83.38872, 27.39276], [83.39495, 27.4798], [83.61288, 27.47013], [83.85595, 27.35797], [83.86182, 27.4241], [83.93306, 27.44939], [84.02229, 27.43836], [84.10791, 27.52399], [84.21376, 27.45218], [84.25735, 27.44941], [84.29315, 27.39], [84.62161, 27.33885], [84.69166, 27.21294], [84.64496, 27.04669], [84.793, 26.9968], [84.82913, 27.01989], [84.85754, 26.98984], [84.96687, 26.95599], [84.97186, 26.9149], [85.00536, 26.89523], [85.05592, 26.88991], [85.02635, 26.85381], [85.15883, 26.86966], [85.19291, 26.86909], [85.18046, 26.80519], [85.21159, 26.75933], [85.34302, 26.74954], [85.47752, 26.79292], [85.56471, 26.84133], [85.5757, 26.85955], [85.59461, 26.85161], [85.61621, 26.86721], [85.66239, 26.84822], [85.73483, 26.79613], [85.72315, 26.67471], [85.76907, 26.63076], [85.83126, 26.61134], [85.85126, 26.60866], [85.8492, 26.56667], [86.02729, 26.66756], [86.13596, 26.60651], [86.22513, 26.58863], [86.26235, 26.61886], [86.31564, 26.61925], [86.49726, 26.54218], [86.54258, 26.53819], [86.57073, 26.49825], [86.61313, 26.48658], [86.62686, 26.46891], [86.69124, 26.45169], [86.74025, 26.42386], [86.76797, 26.45892], [86.82898, 26.43919], [86.94543, 26.52076], [86.95912, 26.52076], [87.01559, 26.53228], [87.04691, 26.58685], [87.0707, 26.58571], [87.09147, 26.45039], [87.14751, 26.40542], [87.18863, 26.40558], [87.24682, 26.4143], [87.26587, 26.40592], [87.26568, 26.37294], [87.34568, 26.34787], [87.37314, 26.40815], [87.46566, 26.44058], [87.51571, 26.43106], [87.55274, 26.40596], [87.59175, 26.38342], [87.66803, 26.40294], [87.67893, 26.43501], [87.76004, 26.40711], [87.7918, 26.46737], [87.84193, 26.43663], [87.89085, 26.48565], [87.90115, 26.44923], [88.00895, 26.36029], [88.09414, 26.43732], [88.09963, 26.54195], [88.16452, 26.64111], [88.1659, 26.68177], [88.19107, 26.75516], [88.12302, 26.95324], [88.13422, 26.98705], [88.11719, 26.98758], [87.9887, 27.11045], [88.01587, 27.21388], [88.01646, 27.21612], [88.07277, 27.43007], [88.04008, 27.49223], [88.19107, 27.79285], [88.1973, 27.85067], [88.13378, 27.88015]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NR\", iso1A3: \"NRU\", iso1N3: \"520\", wikidata: \"Q697\", nameEn: \"Nauru\", groups: [\"057\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"674\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[166.95155, 0.14829], [166.21778, -0.7977], [167.60042, -0.88259], [166.95155, 0.14829]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NU\", iso1A3: \"NIU\", iso1N3: \"570\", wikidata: \"Q34020\", nameEn: \"Niue\", country: \"NZ\", groups: [\"061\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"683\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-170.83899, -18.53439], [-170.82274, -20.44429], [-168.63096, -18.60489], [-170.83899, -18.53439]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NZ\", iso1A3: \"NZL\", iso1N3: \"554\", wikidata: \"Q664\", nameEn: \"New Zealand\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"OM\", iso1A3: \"OMN\", iso1N3: \"512\", wikidata: \"Q842\", nameEn: \"Oman\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"968\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[56.82555, 25.7713], [56.79239, 26.41236], [56.68954, 26.76645], [56.2644, 26.58649], [55.81777, 26.18798], [56.08666, 26.05038], [56.15498, 26.06828], [56.19334, 25.9795], [56.13963, 25.82765], [56.17416, 25.77239], [56.13579, 25.73524], [56.14826, 25.66351], [56.18363, 25.65508], [56.20473, 25.61119], [56.25365, 25.60211], [56.26636, 25.60643], [56.25341, 25.61443], [56.26534, 25.62825], [56.82555, 25.7713]]], [[[56.26062, 25.33108], [56.23362, 25.31253], [56.25008, 25.28843], [56.24465, 25.27505], [56.20838, 25.25668], [56.20872, 25.24104], [56.24341, 25.22867], [56.27628, 25.23404], [56.34438, 25.26653], [56.35172, 25.30681], [56.3111, 25.30107], [56.3005, 25.31815], [56.26062, 25.33108]], [[56.28423, 25.26344], [56.27086, 25.26128], [56.2716, 25.27916], [56.28102, 25.28486], [56.29379, 25.2754], [56.28423, 25.26344]]], [[[61.45114, 22.55394], [56.86325, 25.03856], [56.3227, 24.97284], [56.34873, 24.93205], [56.30269, 24.88334], [56.20568, 24.85063], [56.20062, 24.78565], [56.13684, 24.73699], [56.06128, 24.74457], [56.03535, 24.81161], [55.97836, 24.87673], [55.97467, 24.89639], [56.05106, 24.87461], [56.05715, 24.95727], [55.96316, 25.00857], [55.90849, 24.96771], [55.85094, 24.96858], [55.81116, 24.9116], [55.81348, 24.80102], [55.83408, 24.77858], [55.83271, 24.68567], [55.76461, 24.5287], [55.83271, 24.41521], [55.83395, 24.32776], [55.80747, 24.31069], [55.79145, 24.27914], [55.76781, 24.26209], [55.75939, 24.26114], [55.75382, 24.2466], [55.75257, 24.23466], [55.76558, 24.23227], [55.77658, 24.23476], [55.83367, 24.20193], [55.95472, 24.2172], [56.01799, 24.07426], [55.8308, 24.01633], [55.73301, 24.05994], [55.48677, 23.94946], [55.57358, 23.669], [55.22634, 23.10378], [55.2137, 22.71065], [55.66469, 21.99658], [54.99756, 20.00083], [52.00311, 19.00083], [52.78009, 17.35124], [52.74267, 17.29519], [52.81185, 17.28568], [57.49095, 8.14549], [61.45114, 22.55394]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PA\", iso1A3: \"PAN\", iso1N3: \"591\", wikidata: \"Q804\", nameEn: \"Panama\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"507\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-77.32389, 8.81247], [-77.58292, 9.22278], [-78.79327, 9.93766], [-82.51044, 9.65379], [-82.56507, 9.57279], [-82.61345, 9.49881], [-82.66667, 9.49746], [-82.77206, 9.59573], [-82.87919, 9.62645], [-82.84871, 9.4973], [-82.93516, 9.46741], [-82.93516, 9.07687], [-82.72126, 8.97125], [-82.88253, 8.83331], [-82.91377, 8.774], [-82.92068, 8.74832], [-82.8794, 8.6981], [-82.82739, 8.60153], [-82.83975, 8.54755], [-82.83322, 8.52464], [-82.8382, 8.48117], [-82.8679, 8.44042], [-82.93056, 8.43465], [-83.05209, 8.33394], [-82.9388, 8.26634], [-82.88641, 8.10219], [-82.89137, 8.05755], [-82.89978, 8.04083], [-82.94503, 7.93865], [-82.13751, 6.97312], [-78.06168, 7.07793], [-77.89178, 7.22681], [-77.81426, 7.48319], [-77.72157, 7.47612], [-77.72514, 7.72348], [-77.57185, 7.51147], [-77.17257, 7.97422], [-77.45064, 8.49991], [-77.32389, 8.81247]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PE\", iso1A3: \"PER\", iso1N3: \"604\", wikidata: \"Q419\", nameEn: \"Peru\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"51\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-74.26675, -0.97229], [-74.42701, -0.50218], [-75.18513, -0.0308], [-75.25764, -0.11943], [-75.40192, -0.17196], [-75.61997, -0.10012], [-75.60169, -0.18708], [-75.53615, -0.19213], [-75.22862, -0.60048], [-75.22862, -0.95588], [-75.3872, -0.9374], [-75.57429, -1.55961], [-76.05203, -2.12179], [-76.6324, -2.58397], [-77.94147, -3.05454], [-78.19369, -3.36431], [-78.14324, -3.47653], [-78.22642, -3.51113], [-78.24589, -3.39907], [-78.34362, -3.38633], [-78.68394, -4.60754], [-78.85149, -4.66795], [-79.01659, -5.01481], [-79.1162, -4.97774], [-79.26248, -4.95167], [-79.59402, -4.46848], [-79.79722, -4.47558], [-80.13945, -4.29786], [-80.39256, -4.48269], [-80.46386, -4.41516], [-80.32114, -4.21323], [-80.45023, -4.20938], [-80.4822, -4.05477], [-80.46386, -4.01342], [-80.13232, -3.90317], [-80.19926, -3.68894], [-80.18741, -3.63994], [-80.19848, -3.59249], [-80.21642, -3.5888], [-80.20535, -3.51667], [-80.22629, -3.501], [-80.23651, -3.48652], [-80.24586, -3.48677], [-80.24123, -3.46124], [-80.20647, -3.431], [-80.30602, -3.39149], [-84.52388, -3.36941], [-85.71054, -21.15413], [-70.59118, -18.35072], [-70.378, -18.3495], [-70.31267, -18.31258], [-70.16394, -18.31737], [-69.96732, -18.25992], [-69.81607, -18.12582], [-69.75305, -17.94605], [-69.82868, -17.72048], [-69.79087, -17.65563], [-69.66483, -17.65083], [-69.46897, -17.4988], [-69.46863, -17.37466], [-69.62883, -17.28142], [-69.16896, -16.72233], [-69.00853, -16.66769], [-69.04027, -16.57214], [-68.98358, -16.42165], [-68.79464, -16.33272], [-68.96238, -16.194], [-69.09986, -16.22693], [-69.20291, -16.16668], [-69.40336, -15.61358], [-69.14856, -15.23478], [-69.36254, -14.94634], [-68.88135, -14.18639], [-69.05265, -13.68546], [-68.8864, -13.40792], [-68.85615, -12.87769], [-68.65044, -12.50689], [-68.98115, -11.8979], [-69.57156, -10.94555], [-69.57835, -10.94051], [-69.90896, -10.92744], [-70.38791, -11.07096], [-70.51395, -10.92249], [-70.64134, -11.0108], [-70.62487, -9.80666], [-70.55429, -9.76692], [-70.58453, -9.58303], [-70.53373, -9.42628], [-71.23394, -9.9668], [-72.14742, -9.98049], [-72.31883, -9.5184], [-72.72216, -9.41397], [-73.21498, -9.40904], [-72.92886, -9.04074], [-73.76576, -7.89884], [-73.65485, -7.77897], [-73.96938, -7.58465], [-73.77011, -7.28944], [-73.73986, -6.87919], [-73.12983, -6.43852], [-73.24579, -6.05764], [-72.83973, -5.14765], [-72.64391, -5.0391], [-71.87003, -4.51661], [-70.96814, -4.36915], [-70.77601, -4.15717], [-70.33236, -4.15214], [-70.19582, -4.3607], [-70.11305, -4.27281], [-70.00888, -4.37833], [-69.94708, -4.2431], [-70.3374, -3.79505], [-70.52393, -3.87553], [-70.71396, -3.7921], [-70.04609, -2.73906], [-70.94377, -2.23142], [-71.75223, -2.15058], [-72.92587, -2.44514], [-73.65312, -1.26222], [-74.26675, -0.97229]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PF\", iso1A3: \"PYF\", iso1N3: \"258\", wikidata: \"Q30971\", nameEn: \"French Polynesia\", country: \"FR\", groups: [\"Q1451600\", \"061\", \"009\", \"UN\"], callingCodes: [\"689\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-135.59706, -4.70473], [-156.48634, -15.52824], [-156.45576, -31.75456], [-133.59543, -28.4709], [-135.59706, -4.70473]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PG\", iso1A3: \"PNG\", iso1N3: \"598\", wikidata: \"Q691\", nameEn: \"Papua New Guinea\", groups: [\"054\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"675\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[141.03157, 2.12829], [140.99813, -6.3233], [140.85295, -6.72996], [140.90448, -6.85033], [141.01763, -6.90181], [141.01842, -9.35091], [141.88934, -9.36111], [142.19246, -9.15378], [142.48658, -9.36754], [143.29772, -9.33993], [143.87386, -9.02382], [145.2855, -9.62524], [156.73836, -14.50464], [154.74815, -7.33315], [155.60735, -6.92266], [155.69784, -6.92661], [155.92557, -6.84664], [156.03993, -6.65703], [156.03296, -6.55528], [160.43769, -4.17974], [141.03157, 2.12829]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PH\", iso1A3: \"PHL\", iso1N3: \"608\", wikidata: \"Q928\", nameEn: \"Philippines\", aliases: [\"PI\", \"RP\"], groups: [\"035\", \"142\", \"UN\"], callingCodes: [\"63\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[129.19694, 7.84182], [121.8109, 21.77688], [120.69238, 21.52331], [118.82252, 14.67191], [115.39742, 10.92666], [116.79524, 7.43869], [117.17735, 7.52841], [117.93857, 6.89845], [117.98544, 6.27477], [119.52945, 5.35672], [118.93936, 4.09009], [118.06469, 4.16638], [121.14448, 2.12444], [129.19694, 7.84182]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PK\", iso1A3: \"PAK\", iso1N3: \"586\", wikidata: \"Q843\", nameEn: \"Pakistan\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"92\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[75.72737, 36.7529], [75.45562, 36.71971], [75.40481, 36.95382], [75.13839, 37.02622], [74.56453, 37.03023], [74.53739, 36.96224], [74.43389, 37.00977], [74.04856, 36.82648], [73.82685, 36.91421], [72.6323, 36.84601], [72.18135, 36.71838], [71.80267, 36.49924], [71.60491, 36.39429], [71.19505, 36.04134], [71.37969, 35.95865], [71.55273, 35.71483], [71.49917, 35.6267], [71.65435, 35.4479], [71.54294, 35.31037], [71.5541, 35.28776], [71.67495, 35.21262], [71.52938, 35.09023], [71.55273, 35.02615], [71.49917, 35.00478], [71.50329, 34.97328], [71.29472, 34.87728], [71.28356, 34.80882], [71.08718, 34.69034], [71.11602, 34.63047], [71.0089, 34.54568], [71.02401, 34.44835], [71.17662, 34.36769], [71.12815, 34.26619], [71.13078, 34.16503], [71.09453, 34.13524], [71.09307, 34.11961], [71.06933, 34.10564], [71.07345, 34.06242], [70.88119, 33.97933], [70.54336, 33.9463], [69.90203, 34.04194], [69.87307, 33.9689], [69.85671, 33.93719], [70.00503, 33.73528], [70.14236, 33.71701], [70.14785, 33.6553], [70.20141, 33.64387], [70.17062, 33.53535], [70.32775, 33.34496], [70.13686, 33.21064], [70.07369, 33.22557], [70.02563, 33.14282], [69.85259, 33.09451], [69.79766, 33.13247], [69.71526, 33.09911], [69.57656, 33.09911], [69.49004, 33.01509], [69.49854, 32.88843], [69.5436, 32.8768], [69.47082, 32.85834], [69.38018, 32.76601], [69.43649, 32.7302], [69.44747, 32.6678], [69.38155, 32.56601], [69.2868, 32.53938], [69.23599, 32.45946], [69.27932, 32.29119], [69.27032, 32.14141], [69.3225, 31.93186], [69.20577, 31.85957], [69.11514, 31.70782], [69.00939, 31.62249], [68.95995, 31.64822], [68.91078, 31.59687], [68.79997, 31.61665], [68.6956, 31.75687], [68.57475, 31.83158], [68.44222, 31.76446], [68.27605, 31.75863], [68.25614, 31.80357], [68.1655, 31.82691], [68.00071, 31.6564], [67.86887, 31.63536], [67.72056, 31.52304], [67.58323, 31.52772], [67.62374, 31.40473], [67.7748, 31.4188], [67.78854, 31.33203], [67.29964, 31.19586], [67.03323, 31.24519], [67.04147, 31.31561], [66.83273, 31.26867], [66.72561, 31.20526], [66.68166, 31.07597], [66.58175, 30.97532], [66.42645, 30.95309], [66.39194, 30.9408], [66.28413, 30.57001], [66.34869, 30.404], [66.23609, 30.06321], [66.36042, 29.9583], [66.24175, 29.85181], [65.04005, 29.53957], [64.62116, 29.58903], [64.19796, 29.50407], [64.12966, 29.39157], [63.5876, 29.50456], [62.47751, 29.40782], [60.87231, 29.86514], [61.31508, 29.38903], [61.53765, 29.00507], [61.65978, 28.77937], [61.93581, 28.55284], [62.40259, 28.42703], [62.59499, 28.24842], [62.79412, 28.28108], [62.7638, 28.02992], [62.84905, 27.47627], [62.79684, 27.34381], [62.80604, 27.22412], [63.19649, 27.25674], [63.32283, 27.14437], [63.25005, 27.08692], [63.25005, 26.84212], [63.18688, 26.83844], [63.1889, 26.65072], [62.77352, 26.64099], [62.31484, 26.528], [62.21304, 26.26601], [62.05117, 26.31647], [61.89391, 26.26251], [61.83831, 26.07249], [61.83968, 25.7538], [61.683, 25.66638], [61.6433, 25.27541], [61.46682, 24.57869], [68.11329, 23.53945], [68.20763, 23.85849], [68.39339, 23.96838], [68.74643, 23.97027], [68.7416, 24.31904], [68.90914, 24.33156], [68.97781, 24.26021], [69.07806, 24.29777], [69.19341, 24.25646], [69.29778, 24.28712], [69.59579, 24.29777], [69.73335, 24.17007], [70.03428, 24.172], [70.11712, 24.30915], [70.5667, 24.43787], [70.57906, 24.27774], [70.71502, 24.23517], [70.88393, 24.27398], [70.85784, 24.30903], [70.94985, 24.3791], [71.04461, 24.34657], [71.12838, 24.42662], [71.00341, 24.46038], [70.97594, 24.60904], [71.09405, 24.69017], [70.94002, 24.92843], [70.89148, 25.15064], [70.66695, 25.39314], [70.67382, 25.68186], [70.60378, 25.71898], [70.53649, 25.68928], [70.37444, 25.67443], [70.2687, 25.71156], [70.0985, 25.93238], [70.08193, 26.08094], [70.17532, 26.24118], [70.17532, 26.55362], [70.05584, 26.60398], [69.88555, 26.56836], [69.50904, 26.74892], [69.58519, 27.18109], [70.03136, 27.56627], [70.12502, 27.8057], [70.37307, 28.01208], [70.60927, 28.02178], [70.79054, 27.68423], [71.89921, 27.96035], [71.9244, 28.11555], [72.20329, 28.3869], [72.29495, 28.66367], [72.40402, 28.78283], [72.94272, 29.02487], [73.01337, 29.16422], [73.05886, 29.1878], [73.28094, 29.56646], [73.3962, 29.94707], [73.58665, 30.01848], [73.80299, 30.06969], [73.97225, 30.19829], [73.95736, 30.28466], [73.88993, 30.36305], [74.5616, 31.04153], [74.67971, 31.05479], [74.6852, 31.12771], [74.60006, 31.13711], [74.60281, 31.10419], [74.56023, 31.08303], [74.51629, 31.13829], [74.53223, 31.30321], [74.59773, 31.4136], [74.64713, 31.45605], [74.59319, 31.50197], [74.61517, 31.55698], [74.57498, 31.60382], [74.47771, 31.72227], [74.58907, 31.87824], [74.79919, 31.95983], [74.86236, 32.04485], [74.9269, 32.0658], [75.00793, 32.03786], [75.25649, 32.10187], [75.38046, 32.26836], [75.28259, 32.36556], [75.03265, 32.49538], [74.97634, 32.45367], [74.84725, 32.49075], [74.68362, 32.49298], [74.67431, 32.56676], [74.65251, 32.56416], [74.64424, 32.60985], [74.69542, 32.66792], [74.65345, 32.71225], [74.7113, 32.84219], [74.64675, 32.82604], [74.6289, 32.75561], [74.45312, 32.77755], [74.41467, 32.90563], [74.31227, 32.92795], [74.34875, 32.97823], [74.31854, 33.02891], [74.17571, 33.07495], [74.15374, 33.13477], [74.02144, 33.18908], [74.01366, 33.25199], [74.08782, 33.26232], [74.17983, 33.3679], [74.18121, 33.4745], [74.10115, 33.56392], [74.03576, 33.56718], [73.97367, 33.64061], [73.98968, 33.66155], [73.96423, 33.73071], [74.00891, 33.75437], [74.05898, 33.82089], [74.14001, 33.83002], [74.26086, 33.92237], [74.25262, 34.01577], [74.21554, 34.03853], [73.91341, 34.01235], [73.88732, 34.05105], [73.90677, 34.10504], [73.98208, 34.2522], [73.90517, 34.35317], [73.8475, 34.32935], [73.74862, 34.34183], [73.74999, 34.3781], [73.88732, 34.48911], [73.89419, 34.54568], [73.93951, 34.57169], [73.93401, 34.63386], [73.96423, 34.68244], [74.12897, 34.70073], [74.31239, 34.79626], [74.58083, 34.77386], [74.6663, 34.703], [75.01479, 34.64629], [75.38009, 34.55021], [75.75438, 34.51827], [76.04614, 34.67566], [76.15463, 34.6429], [76.47186, 34.78965], [76.67648, 34.76371], [76.74377, 34.84039], [76.74514, 34.92488], [76.87193, 34.96906], [76.99251, 34.93349], [77.11796, 35.05419], [76.93465, 35.39866], [76.85088, 35.39754], [76.75475, 35.52617], [76.77323, 35.66062], [76.50961, 35.8908], [76.33453, 35.84296], [76.14913, 35.82848], [76.15325, 35.9264], [75.93028, 36.13136], [76.00906, 36.17511], [76.0324, 36.41198], [75.92391, 36.56986], [75.72737, 36.7529]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PL\", iso1A3: \"POL\", iso1N3: \"616\", wikidata: \"Q36\", nameEn: \"Poland\", groups: [\"EU\", \"151\", \"150\", \"UN\"], callingCodes: [\"48\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[18.57853, 55.25302], [14.20811, 54.12784], [14.22634, 53.9291], [14.20647, 53.91671], [14.18544, 53.91258], [14.20823, 53.90776], [14.21323, 53.8664], [14.27249, 53.74464], [14.26782, 53.69866], [14.2836, 53.67721], [14.27133, 53.66613], [14.28477, 53.65955], [14.2853, 53.63392], [14.31904, 53.61581], [14.30416, 53.55499], [14.3273, 53.50587], [14.35209, 53.49506], [14.4215, 53.27724], [14.44133, 53.27427], [14.45125, 53.26241], [14.40662, 53.21098], [14.37853, 53.20405], [14.36696, 53.16444], [14.38679, 53.13669], [14.35044, 53.05829], [14.25954, 53.00264], [14.14056, 52.95786], [14.15873, 52.87715], [14.12256, 52.84311], [14.13806, 52.82392], [14.22071, 52.81175], [14.61073, 52.59847], [14.6289, 52.57136], [14.60081, 52.53116], [14.63056, 52.48993], [14.54423, 52.42568], [14.55228, 52.35264], [14.56378, 52.33838], [14.58149, 52.28007], [14.70139, 52.25038], [14.71319, 52.22144], [14.68344, 52.19612], [14.70616, 52.16927], [14.67683, 52.13936], [14.6917, 52.10283], [14.72971, 52.09167], [14.76026, 52.06624], [14.71339, 52.00337], [14.70488, 51.97679], [14.7139, 51.95643], [14.71836, 51.95606], [14.72163, 51.95188], [14.7177, 51.94048], [14.70601, 51.92944], [14.6933, 51.9044], [14.6588, 51.88359], [14.59089, 51.83302], [14.60493, 51.80473], [14.64625, 51.79472], [14.66386, 51.73282], [14.69065, 51.70842], [14.75392, 51.67445], [14.75759, 51.62318], [14.7727, 51.61263], [14.71125, 51.56209], [14.73047, 51.54606], [14.72652, 51.53902], [14.73219, 51.52922], [14.94749, 51.47155], [14.9652, 51.44793], [14.96899, 51.38367], [14.98008, 51.33449], [15.04288, 51.28387], [15.01242, 51.21285], [15.0047, 51.16874], [14.99311, 51.16249], [14.99414, 51.15813], [15.00083, 51.14974], [14.99646, 51.14365], [14.99079, 51.14284], [14.99689, 51.12205], [14.98229, 51.11354], [14.97938, 51.07742], [14.95529, 51.04552], [14.92942, 50.99744], [14.89252, 50.94999], [14.89681, 50.9422], [14.81664, 50.88148], [14.82803, 50.86966], [14.99852, 50.86817], [15.01088, 50.97984], [14.96419, 50.99108], [15.02433, 51.0242], [15.03895, 51.0123], [15.06218, 51.02269], [15.10152, 51.01095], [15.11937, 50.99021], [15.16744, 51.01959], [15.1743, 50.9833], [15.2361, 50.99886], [15.27043, 50.97724], [15.2773, 50.8907], [15.36656, 50.83956], [15.3803, 50.77187], [15.43798, 50.80833], [15.73186, 50.73885], [15.81683, 50.75666], [15.87331, 50.67188], [15.97219, 50.69799], [16.0175, 50.63009], [15.98317, 50.61528], [16.02437, 50.60046], [16.10265, 50.66405], [16.20839, 50.63096], [16.23174, 50.67101], [16.33611, 50.66579], [16.44597, 50.58041], [16.34572, 50.49575], [16.31413, 50.50274], [16.19526, 50.43291], [16.21585, 50.40627], [16.22821, 50.41054], [16.28118, 50.36891], [16.30289, 50.38292], [16.36495, 50.37679], [16.3622, 50.34875], [16.39379, 50.3207], [16.42674, 50.32509], [16.56407, 50.21009], [16.55446, 50.16613], [16.63137, 50.1142], [16.7014, 50.09659], [16.8456, 50.20834], [16.98018, 50.24172], [17.00353, 50.21449], [17.02825, 50.23118], [16.99803, 50.25753], [17.02138, 50.27772], [16.99803, 50.30316], [16.94448, 50.31281], [16.90877, 50.38642], [16.85933, 50.41093], [16.89229, 50.45117], [17.1224, 50.39494], [17.14498, 50.38117], [17.19579, 50.38817], [17.19991, 50.3654], [17.27681, 50.32246], [17.34273, 50.32947], [17.34548, 50.2628], [17.3702, 50.28123], [17.58889, 50.27837], [17.67764, 50.28977], [17.69292, 50.32859], [17.74648, 50.29966], [17.72176, 50.25665], [17.76296, 50.23382], [17.70528, 50.18812], [17.59404, 50.16437], [17.66683, 50.10275], [17.6888, 50.12037], [17.7506, 50.07896], [17.77669, 50.02253], [17.86886, 49.97452], [18.00191, 50.01723], [18.04585, 50.01194], [18.04585, 50.03311], [18.00396, 50.04954], [18.03212, 50.06574], [18.07898, 50.04535], [18.10628, 50.00223], [18.20241, 49.99958], [18.21752, 49.97309], [18.27107, 49.96779], [18.27794, 49.93863], [18.31914, 49.91565], [18.33278, 49.92415], [18.33562, 49.94747], [18.41604, 49.93498], [18.53423, 49.89906], [18.54495, 49.9079], [18.54299, 49.92537], [18.57697, 49.91565], [18.57045, 49.87849], [18.60341, 49.86256], [18.57183, 49.83334], [18.61278, 49.7618], [18.61368, 49.75426], [18.62645, 49.75002], [18.62943, 49.74603], [18.62676, 49.71983], [18.69817, 49.70473], [18.72838, 49.68163], [18.80479, 49.6815], [18.84786, 49.5446], [18.84521, 49.51672], [18.94536, 49.52143], [18.97283, 49.49914], [18.9742, 49.39557], [19.18019, 49.41165], [19.25435, 49.53391], [19.36009, 49.53747], [19.37795, 49.574], [19.45348, 49.61583], [19.52626, 49.57311], [19.53313, 49.52856], [19.57845, 49.46077], [19.64162, 49.45184], [19.6375, 49.40897], [19.72127, 49.39288], [19.78581, 49.41701], [19.82237, 49.27806], [19.75286, 49.20751], [19.86409, 49.19316], [19.90529, 49.23532], [19.98494, 49.22904], [20.08238, 49.1813], [20.13738, 49.31685], [20.21977, 49.35265], [20.31453, 49.34817], [20.31728, 49.39914], [20.39939, 49.3896], [20.46422, 49.41612], [20.5631, 49.375], [20.61666, 49.41791], [20.72274, 49.41813], [20.77971, 49.35383], [20.9229, 49.29626], [20.98733, 49.30774], [21.09799, 49.37176], [21.041, 49.41791], [21.12477, 49.43666], [21.19756, 49.4054], [21.27858, 49.45988], [21.43376, 49.41433], [21.62328, 49.4447], [21.77983, 49.35443], [21.82927, 49.39467], [21.96385, 49.3437], [22.04427, 49.22136], [22.56155, 49.08865], [22.89122, 49.00725], [22.86336, 49.10513], [22.72009, 49.20288], [22.748, 49.32759], [22.69444, 49.49378], [22.64534, 49.53094], [22.78304, 49.65543], [22.80261, 49.69098], [22.83179, 49.69875], [22.99329, 49.84249], [23.28221, 50.0957], [23.67635, 50.33385], [23.71382, 50.38248], [23.79445, 50.40481], [23.99563, 50.41289], [24.03668, 50.44507], [24.07048, 50.5071], [24.0996, 50.60752], [24.0595, 50.71625], [23.95925, 50.79271], [23.99254, 50.83847], [24.0952, 50.83262], [24.14524, 50.86128], [24.04576, 50.90196], [23.92217, 51.00836], [23.90376, 51.07697], [23.80678, 51.18405], [23.63858, 51.32182], [23.69905, 51.40871], [23.62751, 51.50512], [23.56236, 51.53673], [23.57053, 51.55938], [23.53198, 51.74298], [23.62691, 51.78208], [23.61523, 51.92066], [23.68733, 51.9906], [23.64066, 52.07626], [23.61, 52.11264], [23.54314, 52.12148], [23.47859, 52.18215], [23.20071, 52.22848], [23.18196, 52.28812], [23.34141, 52.44845], [23.45112, 52.53774], [23.58296, 52.59868], [23.73615, 52.6149], [23.93763, 52.71332], [23.91805, 52.94016], [23.94689, 52.95919], [23.92184, 53.02079], [23.87548, 53.0831], [23.91393, 53.16469], [23.85657, 53.22923], [23.81995, 53.24131], [23.62004, 53.60942], [23.51284, 53.95052], [23.48261, 53.98855], [23.52702, 54.04622], [23.49196, 54.14764], [23.45223, 54.17775], [23.42418, 54.17911], [23.39525, 54.21672], [23.3494, 54.25155], [23.24656, 54.25701], [23.15938, 54.29894], [23.15526, 54.31076], [23.13905, 54.31567], [23.104, 54.29794], [23.04323, 54.31567], [23.05726, 54.34565], [22.99649, 54.35927], [23.00584, 54.38514], [22.83756, 54.40827], [22.79705, 54.36264], [21.41123, 54.32395], [20.63871, 54.3706], [19.8038, 54.44203], [19.64312, 54.45423], [18.57853, 55.25302]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PM\", iso1A3: \"SPM\", iso1N3: \"666\", wikidata: \"Q34617\", nameEn: \"Saint Pierre and Miquelon\", country: \"FR\", groups: [\"Q1451600\", \"021\", \"003\", \"019\", \"UN\"], callingCodes: [\"508\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-56.72993, 46.65575], [-55.90758, 46.6223], [-56.27503, 47.39728], [-56.72993, 46.65575]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PN\", iso1A3: \"PCN\", iso1N3: \"612\", wikidata: \"Q35672\", nameEn: \"Pitcairn Islands\", country: \"GB\", groups: [\"BOTS\", \"061\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"64\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-133.59543, -28.4709], [-122.0366, -24.55017], [-133.61511, -21.93325], [-133.59543, -28.4709]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PR\", iso1A3: \"PRI\", iso1N3: \"630\", wikidata: \"Q1183\", nameEn: \"Puerto Rico\", aliases: [\"US-PR\"], country: \"US\", groups: [\"Q1352230\", \"029\", \"003\", \"419\", \"019\", \"UN\"], roadSpeedUnit: \"mph\", callingCodes: [\"1 787\", \"1 939\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-65.27974, 17.56928], [-65.02435, 18.73231], [-67.99519, 18.97186], [-68.23894, 17.84663], [-65.27974, 17.56928]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PS\", iso1A3: \"PSE\", iso1N3: \"275\", wikidata: \"Q219060\", nameEn: \"Palestine\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"PT\", iso1A3: \"PRT\", iso1N3: \"620\", wikidata: \"Q45\", nameEn: \"Portugal\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"PW\", iso1A3: \"PLW\", iso1N3: \"585\", wikidata: \"Q695\", nameEn: \"Palau\", groups: [\"057\", \"009\", \"UN\"], roadSpeedUnit: \"mph\", callingCodes: [\"680\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[128.97621, 3.08804], [136.39296, 1.54187], [136.04605, 12.45908], [128.97621, 3.08804]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PY\", iso1A3: \"PRY\", iso1N3: \"600\", wikidata: \"Q733\", nameEn: \"Paraguay\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"595\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-58.16225, -20.16193], [-58.23216, -19.80058], [-59.06965, -19.29148], [-60.00638, -19.2981], [-61.73723, -19.63958], [-61.93912, -20.10053], [-62.26883, -20.55311], [-62.2757, -21.06657], [-62.64455, -22.25091], [-62.51761, -22.37684], [-62.22768, -22.55807], [-61.9756, -23.0507], [-61.0782, -23.62932], [-60.99754, -23.80934], [-60.28163, -24.04436], [-60.03367, -24.00701], [-59.45482, -24.34787], [-59.33886, -24.49935], [-58.33055, -24.97099], [-58.25492, -24.92528], [-57.80821, -25.13863], [-57.57431, -25.47269], [-57.87176, -25.93604], [-58.1188, -26.16704], [-58.3198, -26.83443], [-58.65321, -27.14028], [-58.59549, -27.29973], [-58.04205, -27.2387], [-56.85337, -27.5165], [-56.18313, -27.29851], [-55.89195, -27.3467], [-55.74475, -27.44485], [-55.59094, -27.32444], [-55.62322, -27.1941], [-55.39611, -26.97679], [-55.25243, -26.93808], [-55.16948, -26.96068], [-55.06351, -26.80195], [-55.00584, -26.78754], [-54.80868, -26.55669], [-54.70732, -26.45099], [-54.69333, -26.37705], [-54.67359, -25.98607], [-54.60664, -25.9691], [-54.62063, -25.91213], [-54.59398, -25.59224], [-54.59509, -25.53696], [-54.60196, -25.48397], [-54.62033, -25.46026], [-54.4423, -25.13381], [-54.28207, -24.07305], [-54.32807, -24.01865], [-54.6238, -23.83078], [-55.02691, -23.97317], [-55.0518, -23.98666], [-55.12292, -23.99669], [-55.41784, -23.9657], [-55.44117, -23.9185], [-55.43585, -23.87157], [-55.5555, -23.28237], [-55.52288, -23.2595], [-55.5446, -23.22811], [-55.63849, -22.95122], [-55.62493, -22.62765], [-55.68742, -22.58407], [-55.6986, -22.56268], [-55.72366, -22.5519], [-55.741, -22.52018], [-55.74941, -22.46436], [-55.8331, -22.29008], [-56.23206, -22.25347], [-56.45893, -22.08072], [-56.5212, -22.11556], [-56.6508, -22.28387], [-57.98625, -22.09157], [-57.94642, -21.73799], [-57.88239, -21.6868], [-57.93492, -21.65505], [-57.84536, -20.93155], [-58.16225, -20.16193]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"QA\", iso1A3: \"QAT\", iso1N3: \"634\", wikidata: \"Q846\", nameEn: \"Qatar\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"974\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[50.92992, 24.54396], [51.09638, 24.46907], [51.29972, 24.50747], [51.39468, 24.62785], [51.58834, 24.66608], [51.83108, 24.71675], [51.83682, 26.70231], [50.93865, 26.30758], [50.81266, 25.88946], [50.86149, 25.6965], [50.7801, 25.595], [50.80824, 25.54641], [50.57069, 25.57887], [50.8133, 24.74049], [50.92992, 24.54396]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"RE\", iso1A3: \"REU\", iso1N3: \"638\", wikidata: \"Q17070\", nameEn: \"R\\xE9union\", country: \"FR\", groups: [\"Q3320166\", \"EU\", \"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"262\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[53.37984, -21.23941], [56.73473, -21.9174], [56.62373, -20.2711], [53.37984, -21.23941]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"RO\", iso1A3: \"ROU\", iso1N3: \"642\", wikidata: \"Q218\", nameEn: \"Romania\", groups: [\"EU\", \"151\", \"150\", \"UN\"], callingCodes: [\"40\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[27.15622, 47.98538], [27.02985, 48.09083], [27.04118, 48.12522], [26.96119, 48.13003], [26.98042, 48.15752], [26.94265, 48.1969], [26.87708, 48.19919], [26.81161, 48.25049], [26.62823, 48.25804], [26.55202, 48.22445], [26.33504, 48.18418], [26.17711, 47.99246], [26.05901, 47.9897], [25.77723, 47.93919], [25.63878, 47.94924], [25.23778, 47.89403], [25.11144, 47.75203], [24.88896, 47.7234], [24.81893, 47.82031], [24.70632, 47.84428], [24.61994, 47.95062], [24.43578, 47.97131], [24.34926, 47.9244], [24.22566, 47.90231], [24.11281, 47.91487], [24.06466, 47.95317], [24.02999, 47.95087], [24.00801, 47.968], [23.98553, 47.96076], [23.96337, 47.96672], [23.94192, 47.94868], [23.89352, 47.94512], [23.8602, 47.9329], [23.80904, 47.98142], [23.75188, 47.99705], [23.66262, 47.98786], [23.63894, 48.00293], [23.5653, 48.00499], [23.52803, 48.01818], [23.4979, 47.96858], [23.33577, 48.0237], [23.27397, 48.08245], [23.15999, 48.12188], [23.1133, 48.08061], [23.08858, 48.00716], [23.0158, 47.99338], [22.92241, 48.02002], [22.94301, 47.96672], [22.89849, 47.95851], [22.77991, 47.87211], [22.76617, 47.8417], [22.67247, 47.7871], [22.46559, 47.76583], [22.41979, 47.7391], [22.31816, 47.76126], [22.00917, 47.50492], [22.03389, 47.42508], [22.01055, 47.37767], [21.94463, 47.38046], [21.78395, 47.11104], [21.648, 47.03902], [21.68645, 46.99595], [21.59581, 46.91628], [21.59307, 46.86935], [21.52028, 46.84118], [21.48935, 46.7577], [21.5151, 46.72147], [21.43926, 46.65109], [21.33214, 46.63035], [21.26929, 46.4993], [21.28061, 46.44941], [21.16872, 46.30118], [21.06572, 46.24897], [20.86797, 46.28884], [20.74574, 46.25467], [20.76085, 46.21002], [20.63863, 46.12728], [20.49718, 46.18721], [20.45377, 46.14405], [20.35573, 46.16629], [20.28324, 46.1438], [20.26068, 46.12332], [20.35862, 45.99356], [20.54818, 45.89939], [20.65645, 45.82801], [20.70069, 45.7493], [20.77416, 45.75601], [20.78446, 45.78522], [20.82364, 45.77738], [20.80361, 45.65875], [20.76798, 45.60969], [20.83321, 45.53567], [20.77217, 45.49788], [20.86026, 45.47295], [20.87948, 45.42743], [21.09894, 45.30144], [21.17612, 45.32566], [21.20392, 45.2677], [21.29398, 45.24148], [21.48278, 45.19557], [21.51299, 45.15345], [21.4505, 45.04294], [21.35855, 45.01941], [21.54938, 44.9327], [21.56328, 44.89502], [21.48202, 44.87199], [21.44013, 44.87613], [21.35643, 44.86364], [21.38802, 44.78133], [21.55007, 44.77304], [21.60019, 44.75208], [21.61942, 44.67059], [21.67504, 44.67107], [21.71692, 44.65349], [21.7795, 44.66165], [21.99364, 44.63395], [22.08016, 44.49844], [22.13234, 44.47444], [22.18315, 44.48179], [22.30844, 44.6619], [22.45301, 44.7194], [22.61917, 44.61489], [22.69196, 44.61587], [22.76749, 44.54446], [22.70981, 44.51852], [22.61368, 44.55719], [22.56493, 44.53419], [22.54021, 44.47836], [22.45436, 44.47258], [22.56012, 44.30712], [22.68166, 44.28206], [22.67173, 44.21564], [23.04988, 44.07694], [23.01674, 44.01946], [22.87873, 43.9844], [22.83753, 43.88055], [22.85314, 43.84452], [23.05288, 43.79494], [23.26772, 43.84843], [23.4507, 43.84936], [23.61687, 43.79289], [23.73978, 43.80627], [24.18149, 43.68218], [24.35364, 43.70211], [24.50264, 43.76314], [24.62281, 43.74082], [24.73542, 43.68523], [24.96682, 43.72693], [25.10718, 43.6831], [25.17144, 43.70261], [25.39528, 43.61866], [25.72792, 43.69263], [25.94911, 43.85745], [26.05584, 43.90925], [26.10115, 43.96908], [26.38764, 44.04356], [26.62712, 44.05698], [26.95141, 44.13555], [27.26845, 44.12602], [27.39757, 44.0141], [27.60834, 44.01206], [27.64542, 44.04958], [27.73468, 43.95326], [27.92008, 44.00761], [27.99558, 43.84193], [28.23293, 43.76], [29.24336, 43.70874], [30.04414, 45.08461], [29.69272, 45.19227], [29.65428, 45.25629], [29.68175, 45.26885], [29.59798, 45.38857], [29.42632, 45.44545], [29.24779, 45.43388], [28.96077, 45.33164], [28.94292, 45.28045], [28.81383, 45.3384], [28.78911, 45.24179], [28.71358, 45.22631], [28.5735, 45.24759], [28.34554, 45.32102], [28.28504, 45.43907], [28.21139, 45.46895], [28.18741, 45.47358], [28.08927, 45.6051], [28.16568, 45.6421], [28.13111, 45.92819], [28.08612, 46.01105], [28.13684, 46.18099], [28.10937, 46.22852], [28.19864, 46.31869], [28.18902, 46.35283], [28.25769, 46.43334], [28.22281, 46.50481], [28.24808, 46.64305], [28.12173, 46.82283], [28.09095, 46.97621], [27.81892, 47.1381], [27.73172, 47.29248], [27.68706, 47.28962], [27.60263, 47.32507], [27.55731, 47.46637], [27.47942, 47.48113], [27.3979, 47.59473], [27.32202, 47.64009], [27.25519, 47.71366], [27.29069, 47.73722], [27.1618, 47.92391], [27.15622, 47.98538]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"RS\", iso1A3: \"SRB\", iso1N3: \"688\", wikidata: \"Q403\", nameEn: \"Serbia\", groups: [\"039\", \"150\", \"UN\"], callingCodes: [\"381\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[19.66007, 46.19005], [19.56113, 46.16824], [19.52473, 46.1171], [19.28826, 45.99694], [19.14543, 45.9998], [19.10388, 46.04015], [19.0791, 45.96458], [19.01284, 45.96529], [18.99712, 45.93537], [18.81394, 45.91329], [18.85783, 45.85493], [18.90305, 45.71863], [18.96691, 45.66731], [18.88776, 45.57253], [18.94562, 45.53712], [19.07471, 45.53086], [19.08364, 45.48804], [18.99918, 45.49333], [18.97446, 45.37528], [19.10774, 45.29547], [19.28208, 45.23813], [19.41941, 45.23475], [19.43589, 45.17137], [19.19144, 45.17863], [19.14063, 45.12972], [19.07952, 45.14668], [19.1011, 45.01191], [19.05205, 44.97692], [19.15573, 44.95409], [19.06853, 44.89915], [19.02871, 44.92541], [18.98957, 44.90645], [19.01994, 44.85493], [19.18183, 44.92055], [19.36722, 44.88164], [19.32543, 44.74058], [19.26388, 44.65412], [19.16699, 44.52197], [19.13369, 44.52521], [19.12278, 44.50132], [19.14837, 44.45253], [19.14681, 44.41463], [19.11785, 44.40313], [19.10749, 44.39421], [19.10704, 44.38249], [19.10365, 44.37795], [19.10298, 44.36924], [19.11865, 44.36712], [19.1083, 44.3558], [19.11547, 44.34218], [19.13556, 44.338], [19.13332, 44.31492], [19.16741, 44.28648], [19.18328, 44.28383], [19.20508, 44.2917], [19.23306, 44.26097], [19.26945, 44.26957], [19.32464, 44.27185], [19.34773, 44.23244], [19.3588, 44.18353], [19.40927, 44.16722], [19.43905, 44.13088], [19.47338, 44.15034], [19.48386, 44.14332], [19.47321, 44.1193], [19.51167, 44.08158], [19.55999, 44.06894], [19.57467, 44.04716], [19.61991, 44.05254], [19.61836, 44.01464], [19.56498, 43.99922], [19.52515, 43.95573], [19.38439, 43.96611], [19.24363, 44.01502], [19.23465, 43.98764], [19.3986, 43.79668], [19.5176, 43.71403], [19.50455, 43.58385], [19.42696, 43.57987], [19.41941, 43.54056], [19.36653, 43.60921], [19.33426, 43.58833], [19.2553, 43.5938], [19.24774, 43.53061], [19.22807, 43.5264], [19.22229, 43.47926], [19.44315, 43.38846], [19.48171, 43.32644], [19.52962, 43.31623], [19.54598, 43.25158], [19.62661, 43.2286], [19.64063, 43.19027], [19.76918, 43.16044], [19.79255, 43.11951], [19.92576, 43.08539], [19.96549, 43.11098], [19.98887, 43.0538], [20.04729, 43.02732], [20.05431, 42.99571], [20.12325, 42.96237], [20.14896, 42.99058], [20.16415, 42.97177], [20.34528, 42.90676], [20.35692, 42.8335], [20.40594, 42.84853], [20.43734, 42.83157], [20.53484, 42.8885], [20.48692, 42.93208], [20.59929, 43.01067], [20.64557, 43.00826], [20.69515, 43.09641], [20.59929, 43.20492], [20.68688, 43.21335], [20.73811, 43.25068], [20.82145, 43.26769], [20.88685, 43.21697], [20.83727, 43.17842], [20.96287, 43.12416], [21.00749, 43.13984], [21.05378, 43.10707], [21.08952, 43.13471], [21.14465, 43.11089], [21.16734, 42.99694], [21.2041, 43.02277], [21.23877, 43.00848], [21.23534, 42.95523], [21.2719, 42.8994], [21.32974, 42.90424], [21.36941, 42.87397], [21.44047, 42.87276], [21.39045, 42.74888], [21.47498, 42.74695], [21.59154, 42.72643], [21.58755, 42.70418], [21.6626, 42.67813], [21.75025, 42.70125], [21.79413, 42.65923], [21.75672, 42.62695], [21.7327, 42.55041], [21.70522, 42.54176], [21.7035, 42.51899], [21.62556, 42.45106], [21.64209, 42.41081], [21.62887, 42.37664], [21.59029, 42.38042], [21.57021, 42.3647], [21.53467, 42.36809], [21.5264, 42.33634], [21.56772, 42.30946], [21.58992, 42.25915], [21.70111, 42.23789], [21.77176, 42.2648], [21.84654, 42.3247], [21.91595, 42.30392], [21.94405, 42.34669], [22.02908, 42.29848], [22.16384, 42.32103], [22.29605, 42.37477], [22.29275, 42.34913], [22.34773, 42.31725], [22.45919, 42.33822], [22.47498, 42.3915], [22.51961, 42.3991], [22.55669, 42.50144], [22.43983, 42.56851], [22.4997, 42.74144], [22.43309, 42.82057], [22.54302, 42.87774], [22.74826, 42.88701], [22.78397, 42.98253], [22.89521, 43.03625], [22.98104, 43.11199], [23.00806, 43.19279], [22.89727, 43.22417], [22.82036, 43.33665], [22.53397, 43.47225], [22.47582, 43.6558], [22.41043, 43.69566], [22.35558, 43.81281], [22.41449, 44.00514], [22.61688, 44.06534], [22.61711, 44.16938], [22.67173, 44.21564], [22.68166, 44.28206], [22.56012, 44.30712], [22.45436, 44.47258], [22.54021, 44.47836], [22.56493, 44.53419], [22.61368, 44.55719], [22.70981, 44.51852], [22.76749, 44.54446], [22.69196, 44.61587], [22.61917, 44.61489], [22.45301, 44.7194], [22.30844, 44.6619], [22.18315, 44.48179], [22.13234, 44.47444], [22.08016, 44.49844], [21.99364, 44.63395], [21.7795, 44.66165], [21.71692, 44.65349], [21.67504, 44.67107], [21.61942, 44.67059], [21.60019, 44.75208], [21.55007, 44.77304], [21.38802, 44.78133], [21.35643, 44.86364], [21.44013, 44.87613], [21.48202, 44.87199], [21.56328, 44.89502], [21.54938, 44.9327], [21.35855, 45.01941], [21.4505, 45.04294], [21.51299, 45.15345], [21.48278, 45.19557], [21.29398, 45.24148], [21.20392, 45.2677], [21.17612, 45.32566], [21.09894, 45.30144], [20.87948, 45.42743], [20.86026, 45.47295], [20.77217, 45.49788], [20.83321, 45.53567], [20.76798, 45.60969], [20.80361, 45.65875], [20.82364, 45.77738], [20.78446, 45.78522], [20.77416, 45.75601], [20.70069, 45.7493], [20.65645, 45.82801], [20.54818, 45.89939], [20.35862, 45.99356], [20.26068, 46.12332], [20.09713, 46.17315], [20.03533, 46.14509], [20.01816, 46.17696], [19.93508, 46.17553], [19.81491, 46.1313], [19.66007, 46.19005]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"RU\", iso1A3: \"RUS\", iso1N3: \"643\", wikidata: \"Q159\", nameEn: \"Russia\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"RW\", iso1A3: \"RWA\", iso1N3: \"646\", wikidata: \"Q1037\", nameEn: \"Rwanda\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"250\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[30.47194, -1.0555], [30.35212, -1.06896], [30.16369, -1.34303], [29.912, -1.48269], [29.82657, -1.31187], [29.59061, -1.39016], [29.53062, -1.40499], [29.45038, -1.5054], [29.36322, -1.50887], [29.24323, -1.66826], [29.24458, -1.69663], [29.11847, -1.90576], [29.17562, -2.12278], [29.105, -2.27043], [29.00051, -2.29001], [28.95642, -2.37321], [28.89601, -2.37321], [28.86826, -2.41888], [28.86846, -2.44866], [28.89132, -2.47557], [28.89342, -2.49017], [28.88846, -2.50493], [28.87497, -2.50887], [28.86209, -2.5231], [28.86193, -2.53185], [28.87943, -2.55165], [28.89288, -2.55848], [28.90226, -2.62385], [28.89793, -2.66111], [28.94346, -2.69124], [29.00357, -2.70596], [29.04081, -2.7416], [29.0562, -2.58632], [29.32234, -2.6483], [29.36805, -2.82933], [29.88237, -2.75105], [29.95911, -2.33348], [30.14034, -2.43626], [30.42933, -2.31064], [30.54501, -2.41404], [30.83915, -2.35795], [30.89303, -2.08223], [30.80802, -1.91477], [30.84079, -1.64652], [30.71974, -1.43244], [30.57123, -1.33264], [30.50889, -1.16412], [30.45116, -1.10641], [30.47194, -1.0555]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SA\", iso1A3: \"SAU\", iso1N3: \"682\", wikidata: \"Q851\", nameEn: \"Saudi Arabia\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"966\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[40.01521, 32.05667], [39.29903, 32.23259], [38.99233, 31.99721], [36.99791, 31.50081], [37.99354, 30.49998], [37.66395, 30.33245], [37.4971, 29.99949], [36.75083, 29.86903], [36.50005, 29.49696], [36.07081, 29.18469], [34.8812, 29.36878], [34.4454, 27.91479], [37.8565, 22.00903], [39.63762, 18.37348], [40.99158, 15.81743], [42.15205, 16.40211], [42.76801, 16.40371], [42.94625, 16.39721], [42.94351, 16.49467], [42.97215, 16.51093], [43.11601, 16.53166], [43.15274, 16.67248], [43.22066, 16.65179], [43.21325, 16.74416], [43.25857, 16.75304], [43.26303, 16.79479], [43.24801, 16.80613], [43.22956, 16.80613], [43.22012, 16.83932], [43.18338, 16.84852], [43.1398, 16.90696], [43.19328, 16.94703], [43.1813, 16.98438], [43.18233, 17.02673], [43.23967, 17.03428], [43.17787, 17.14717], [43.20156, 17.25901], [43.32653, 17.31179], [43.22533, 17.38343], [43.29185, 17.53224], [43.43005, 17.56148], [43.70631, 17.35762], [44.50126, 17.47475], [46.31018, 17.20464], [46.76494, 17.29151], [47.00571, 16.94765], [47.48245, 17.10808], [47.58351, 17.50366], [48.19996, 18.20584], [49.04884, 18.59899], [52.00311, 19.00083], [54.99756, 20.00083], [55.66469, 21.99658], [55.2137, 22.71065], [55.13599, 22.63334], [52.56622, 22.94341], [51.59617, 24.12041], [51.58871, 24.27256], [51.41644, 24.39615], [51.58834, 24.66608], [51.39468, 24.62785], [51.29972, 24.50747], [51.09638, 24.46907], [50.92992, 24.54396], [50.8133, 24.74049], [50.57069, 25.57887], [50.302, 25.87592], [50.26923, 26.08243], [50.38162, 26.53976], [50.71771, 26.73086], [50.37726, 27.89227], [49.98877, 27.87827], [49.00421, 28.81495], [48.42991, 28.53628], [47.70561, 28.5221], [47.59863, 28.66798], [47.58376, 28.83382], [47.46202, 29.0014], [46.5527, 29.10283], [46.42415, 29.05947], [44.72255, 29.19736], [42.97796, 30.48295], [42.97601, 30.72204], [40.01521, 32.05667]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SB\", iso1A3: \"SLB\", iso1N3: \"090\", wikidata: \"Q685\", nameEn: \"Solomon Islands\", groups: [\"054\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"677\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[172.71443, -12.01327], [160.43769, -4.17974], [156.03296, -6.55528], [156.03993, -6.65703], [155.92557, -6.84664], [155.69784, -6.92661], [155.60735, -6.92266], [154.74815, -7.33315], [156.73836, -14.50464], [172.71443, -12.01327]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SC\", iso1A3: \"SYC\", iso1N3: \"690\", wikidata: \"Q1042\", nameEn: \"Seychelles\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"248\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[43.75112, -10.38913], [54.83239, -10.93575], [66.3222, 5.65313], [43.75112, -10.38913]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SD\", iso1A3: \"SDN\", iso1N3: \"729\", wikidata: \"Q1049\", nameEn: \"Sudan\", groups: [\"015\", \"002\", \"UN\"], callingCodes: [\"249\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[37.8565, 22.00903], [34.0765, 22.00501], [33.99686, 21.76784], [33.57251, 21.72406], [33.17563, 22.00405], [24.99885, 21.99535], [24.99794, 19.99661], [23.99715, 20.00038], [23.99539, 19.49944], [23.99997, 15.69575], [23.62785, 15.7804], [23.38812, 15.69649], [23.10792, 15.71297], [22.93201, 15.55107], [22.92579, 15.47007], [22.99584, 15.40105], [22.99584, 15.22989], [22.66115, 14.86308], [22.70474, 14.69149], [22.38562, 14.58907], [22.44944, 14.24986], [22.55997, 14.23024], [22.5553, 14.11704], [22.22995, 13.96754], [22.08674, 13.77863], [22.29689, 13.3731], [22.1599, 13.19281], [22.02914, 13.13976], [21.94819, 13.05637], [21.81432, 12.81362], [21.89371, 12.68001], [21.98711, 12.63292], [22.15679, 12.66634], [22.22684, 12.74682], [22.46345, 12.61925], [22.38873, 12.45514], [22.50548, 12.16769], [22.48369, 12.02766], [22.64092, 12.07485], [22.54907, 11.64372], [22.7997, 11.40424], [22.93124, 11.41645], [22.97249, 11.21955], [22.87758, 10.91915], [23.02221, 10.69235], [23.3128, 10.45214], [23.67164, 9.86923], [23.69155, 9.67566], [24.09319, 9.66572], [24.12744, 9.73784], [24.49389, 9.79962], [24.84653, 9.80643], [24.97739, 9.9081], [25.05688, 10.06776], [25.0918, 10.33718], [25.78141, 10.42599], [25.93163, 10.38159], [25.93241, 10.17941], [26.21338, 9.91545], [26.35815, 9.57946], [26.70685, 9.48735], [27.14427, 9.62858], [27.90704, 9.61323], [28.99983, 9.67155], [29.06988, 9.74826], [29.53844, 9.75133], [29.54, 10.07949], [29.94629, 10.29245], [30.00389, 10.28633], [30.53005, 9.95992], [30.82893, 9.71451], [30.84605, 9.7498], [31.28504, 9.75287], [31.77539, 10.28939], [31.99177, 10.65065], [32.46967, 11.04662], [32.39358, 11.18207], [32.39578, 11.70208], [32.10079, 11.95203], [32.73921, 11.95203], [32.73921, 12.22757], [33.25876, 12.22111], [33.13988, 11.43248], [33.26977, 10.83632], [33.24645, 10.77913], [33.52294, 10.64382], [33.66604, 10.44254], [33.80913, 10.32994], [33.90159, 10.17179], [33.96984, 10.15446], [33.99185, 9.99623], [33.96323, 9.80972], [33.9082, 9.762], [33.87958, 9.49937], [34.10229, 9.50238], [34.08717, 9.55243], [34.13186, 9.7492], [34.20484, 9.9033], [34.22718, 10.02506], [34.32102, 10.11599], [34.34783, 10.23914], [34.2823, 10.53508], [34.4372, 10.781], [34.59062, 10.89072], [34.77383, 10.74588], [34.77532, 10.69027], [34.86618, 10.74588], [34.86916, 10.78832], [34.97491, 10.86147], [34.97789, 10.91559], [34.93172, 10.95946], [35.01215, 11.19626], [34.95704, 11.24448], [35.09556, 11.56278], [35.05832, 11.71158], [35.11492, 11.85156], [35.24302, 11.91132], [35.70476, 12.67101], [36.01458, 12.72478], [36.14268, 12.70879], [36.16651, 12.88019], [36.13374, 12.92665], [36.24545, 13.36759], [36.38993, 13.56459], [36.48824, 13.83954], [36.44653, 13.95666], [36.54376, 14.25597], [36.44337, 15.14963], [36.54276, 15.23478], [36.69761, 15.75323], [36.76371, 15.80831], [36.92193, 16.23451], [36.99777, 17.07172], [37.42694, 17.04041], [37.50967, 17.32199], [38.13362, 17.53906], [38.37133, 17.66269], [38.45916, 17.87167], [38.57727, 17.98125], [39.63762, 18.37348], [37.8565, 22.00903]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SE\", iso1A3: \"SWE\", iso1N3: \"752\", wikidata: \"Q34\", nameEn: \"Sweden\", groups: [\"EU\", \"154\", \"150\", \"UN\"], callingCodes: [\"46\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[24.15791, 65.85385], [23.90497, 66.15802], [23.71339, 66.21299], [23.64982, 66.30603], [23.67591, 66.3862], [23.63776, 66.43568], [23.85959, 66.56434], [23.89488, 66.772], [23.98059, 66.79585], [23.98563, 66.84149], [23.56214, 67.17038], [23.58735, 67.20752], [23.54701, 67.25435], [23.75372, 67.29914], [23.75372, 67.43688], [23.39577, 67.46974], [23.54701, 67.59306], [23.45627, 67.85297], [23.65793, 67.9497], [23.40081, 68.05545], [23.26469, 68.15134], [23.15377, 68.14759], [23.10336, 68.26551], [22.73028, 68.40881], [22.00429, 68.50692], [21.03001, 68.88969], [20.90649, 68.89696], [20.85104, 68.93142], [20.91658, 68.96764], [20.78802, 69.03087], [20.55258, 69.06069], [20.0695, 69.04469], [20.28444, 68.93283], [20.33435, 68.80174], [20.22027, 68.67246], [19.95647, 68.55546], [20.22027, 68.48759], [19.93508, 68.35911], [18.97255, 68.52416], [18.63032, 68.50849], [18.39503, 68.58672], [18.1241, 68.53721], [18.13836, 68.20874], [17.90787, 67.96537], [17.30416, 68.11591], [16.7409, 67.91037], [16.38441, 67.52923], [16.12774, 67.52106], [16.09922, 67.4364], [16.39154, 67.21653], [16.35589, 67.06419], [15.37197, 66.48217], [15.49318, 66.28509], [15.05113, 66.15572], [14.53778, 66.12399], [14.50926, 65.31786], [13.64276, 64.58402], [14.11117, 64.46674], [14.16051, 64.18725], [13.98222, 64.00953], [13.23411, 64.09087], [12.74105, 64.02171], [12.14928, 63.59373], [12.19919, 63.47935], [11.98529, 63.27487], [12.19919, 63.00104], [12.07085, 62.6297], [12.29187, 62.25699], [12.14746, 61.7147], [12.40595, 61.57226], [12.57707, 61.56547], [12.86939, 61.35427], [12.69115, 61.06584], [12.2277, 61.02442], [12.59133, 60.50559], [12.52003, 60.13846], [12.36317, 59.99259], [12.15641, 59.8926], [11.87121, 59.86039], [11.92112, 59.69531], [11.69297, 59.59442], [11.8213, 59.24985], [11.65732, 58.90177], [11.45199, 58.89604], [11.4601, 58.99022], [11.34459, 59.11672], [11.15367, 59.07862], [11.08911, 58.98745], [10.64958, 58.89391], [10.40861, 58.38489], [12.16597, 56.60205], [12.07466, 56.29488], [12.65312, 56.04345], [12.6372, 55.91371], [12.88472, 55.63369], [12.60345, 55.42675], [12.84405, 55.13257], [14.28399, 55.1553], [14.89259, 55.5623], [15.79951, 55.54655], [19.64795, 57.06466], [19.84909, 57.57876], [20.5104, 59.15546], [19.08191, 60.19152], [19.23413, 60.61414], [20.15877, 63.06556], [24.14112, 65.39731], [24.15107, 65.81427], [24.14798, 65.83466], [24.15791, 65.85385]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SG\", iso1A3: \"SGP\", iso1N3: \"702\", wikidata: \"Q334\", nameEn: \"Singapore\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"65\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[104.00131, 1.42405], [103.93384, 1.42926], [103.89565, 1.42841], [103.86383, 1.46288], [103.81181, 1.47953], [103.76395, 1.45183], [103.74161, 1.4502], [103.7219, 1.46108], [103.67468, 1.43166], [103.62738, 1.35255], [103.56591, 1.19719], [103.66049, 1.18825], [103.74084, 1.12902], [104.03085, 1.26954], [104.12282, 1.27714], [104.08072, 1.35998], [104.09162, 1.39694], [104.08871, 1.42015], [104.07348, 1.43322], [104.04622, 1.44691], [104.02277, 1.4438], [104.00131, 1.42405]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SH\", iso1A3: \"SHN\", iso1N3: \"654\", wikidata: \"Q192184\", nameEn: \"Saint Helena, Ascension and Tristan da Cunha\", country: \"GB\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"SI\", iso1A3: \"SVN\", iso1N3: \"705\", wikidata: \"Q215\", nameEn: \"Slovenia\", groups: [\"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"386\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[16.50139, 46.56684], [16.39217, 46.63673], [16.38594, 46.6549], [16.41863, 46.66238], [16.42641, 46.69228], [16.37816, 46.69975], [16.30966, 46.7787], [16.31303, 46.79838], [16.3408, 46.80641], [16.34547, 46.83836], [16.2941, 46.87137], [16.2365, 46.87775], [16.21892, 46.86961], [16.15711, 46.85434], [16.14365, 46.8547], [16.10983, 46.867], [16.05786, 46.83927], [15.99054, 46.82772], [15.99126, 46.78199], [15.98432, 46.74991], [15.99769, 46.7266], [16.02808, 46.71094], [16.04347, 46.68694], [16.04036, 46.6549], [15.99988, 46.67947], [15.98512, 46.68463], [15.94864, 46.68769], [15.87691, 46.7211], [15.8162, 46.71897], [15.78518, 46.70712], [15.76771, 46.69863], [15.73823, 46.70011], [15.72279, 46.69548], [15.69523, 46.69823], [15.67411, 46.70735], [15.6543, 46.70616], [15.6543, 46.69228], [15.6365, 46.6894], [15.63255, 46.68069], [15.62317, 46.67947], [15.59826, 46.68908], [15.54533, 46.66985], [15.55333, 46.64988], [15.54431, 46.6312], [15.46906, 46.61321], [15.45514, 46.63697], [15.41235, 46.65556], [15.23711, 46.63994], [15.14215, 46.66131], [15.01451, 46.641], [14.98024, 46.6009], [14.96002, 46.63459], [14.92283, 46.60848], [14.87129, 46.61], [14.86419, 46.59411], [14.83549, 46.56614], [14.81836, 46.51046], [14.72185, 46.49974], [14.66892, 46.44936], [14.5942, 46.43434], [14.56463, 46.37208], [14.52176, 46.42617], [14.45877, 46.41717], [14.42608, 46.44614], [14.314, 46.43327], [14.28326, 46.44315], [14.15989, 46.43327], [14.12097, 46.47724], [14.04002, 46.49117], [14.00422, 46.48474], [13.89837, 46.52331], [13.7148, 46.5222], [13.68684, 46.43881], [13.59777, 46.44137], [13.5763, 46.42613], [13.5763, 46.40915], [13.47019, 46.3621], [13.43418, 46.35992], [13.44808, 46.33507], [13.37671, 46.29668], [13.42218, 46.20758], [13.47587, 46.22725], [13.56114, 46.2054], [13.56682, 46.18703], [13.64451, 46.18966], [13.66472, 46.17392], [13.64053, 46.13587], [13.57072, 46.09022], [13.50104, 46.05986], [13.49568, 46.04839], [13.50998, 46.04498], [13.49702, 46.01832], [13.47474, 46.00546], [13.50104, 45.98078], [13.52963, 45.96588], [13.56759, 45.96991], [13.58903, 45.99009], [13.62074, 45.98388], [13.63458, 45.98947], [13.64307, 45.98326], [13.6329, 45.94894], [13.63815, 45.93607], [13.61931, 45.91782], [13.60857, 45.89907], [13.59565, 45.89446], [13.58644, 45.88173], [13.57563, 45.8425], [13.58858, 45.83503], [13.59784, 45.8072], [13.66986, 45.79955], [13.8235, 45.7176], [13.83332, 45.70855], [13.83422, 45.68703], [13.87933, 45.65207], [13.9191, 45.6322], [13.8695, 45.60835], [13.86771, 45.59898], [13.84106, 45.58185], [13.78445, 45.5825], [13.74587, 45.59811], [13.7198, 45.59352], [13.6076, 45.64761], [13.45644, 45.59464], [13.56979, 45.4895], [13.62902, 45.45898], [13.67398, 45.4436], [13.7785, 45.46787], [13.81742, 45.43729], [13.88124, 45.42637], [13.90771, 45.45149], [13.97309, 45.45258], [13.99488, 45.47551], [13.96063, 45.50825], [14.00578, 45.52352], [14.07116, 45.48752], [14.20348, 45.46896], [14.22371, 45.50388], [14.24239, 45.50607], [14.26611, 45.48239], [14.27681, 45.4902], [14.32487, 45.47142], [14.36693, 45.48642], [14.49769, 45.54424], [14.5008, 45.60852], [14.53816, 45.6205], [14.57397, 45.67165], [14.60977, 45.66403], [14.59576, 45.62812], [14.69694, 45.57366], [14.68605, 45.53006], [14.71718, 45.53442], [14.80124, 45.49515], [14.81992, 45.45913], [14.90554, 45.47769], [14.92266, 45.52788], [15.02385, 45.48533], [15.05187, 45.49079], [15.16862, 45.42309], [15.27758, 45.46678], [15.33051, 45.45258], [15.38188, 45.48752], [15.30249, 45.53224], [15.29837, 45.5841], [15.27747, 45.60504], [15.31027, 45.6303], [15.34695, 45.63382], [15.34214, 45.64702], [15.38952, 45.63682], [15.4057, 45.64727], [15.34919, 45.71623], [15.30872, 45.69014], [15.25423, 45.72275], [15.40836, 45.79491], [15.47531, 45.79802], [15.47325, 45.8253], [15.52234, 45.82195], [15.57952, 45.84953], [15.64185, 45.82915], [15.66662, 45.84085], [15.70411, 45.8465], [15.68232, 45.86819], [15.68383, 45.88867], [15.67967, 45.90455], [15.70636, 45.92116], [15.70327, 46.00015], [15.71246, 46.01196], [15.72977, 46.04682], [15.62317, 46.09103], [15.6083, 46.11992], [15.59909, 46.14761], [15.64904, 46.19229], [15.6434, 46.21396], [15.67395, 46.22478], [15.75436, 46.21969], [15.75479, 46.20336], [15.78817, 46.21719], [15.79284, 46.25811], [15.97965, 46.30652], [16.07616, 46.3463], [16.07314, 46.36458], [16.05065, 46.3833], [16.05281, 46.39141], [16.14859, 46.40547], [16.18824, 46.38282], [16.30233, 46.37837], [16.30162, 46.40437], [16.27329, 46.41467], [16.27398, 46.42875], [16.25124, 46.48067], [16.23961, 46.49653], [16.26759, 46.50566], [16.26733, 46.51505], [16.29793, 46.5121], [16.37193, 46.55008], [16.38771, 46.53608], [16.44036, 46.5171], [16.5007, 46.49644], [16.52604, 46.47831], [16.59527, 46.47524], [16.52604, 46.5051], [16.52885, 46.53303], [16.50139, 46.56684]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SJ\", iso1A3: \"SJM\", iso1N3: \"744\", wikidata: \"Q842829\", nameEn: \"Svalbard and Jan Mayen\", country: \"NO\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"SK\", iso1A3: \"SVK\", iso1N3: \"703\", wikidata: \"Q214\", nameEn: \"Slovakia\", groups: [\"EU\", \"151\", \"150\", \"UN\"], callingCodes: [\"421\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[19.82237, 49.27806], [19.78581, 49.41701], [19.72127, 49.39288], [19.6375, 49.40897], [19.64162, 49.45184], [19.57845, 49.46077], [19.53313, 49.52856], [19.52626, 49.57311], [19.45348, 49.61583], [19.37795, 49.574], [19.36009, 49.53747], [19.25435, 49.53391], [19.18019, 49.41165], [18.9742, 49.39557], [18.97283, 49.49914], [18.94536, 49.52143], [18.84521, 49.51672], [18.74761, 49.492], [18.67757, 49.50895], [18.6144, 49.49824], [18.57183, 49.51162], [18.53063, 49.49022], [18.54848, 49.47059], [18.44686, 49.39467], [18.4084, 49.40003], [18.4139, 49.36517], [18.36446, 49.3267], [18.18456, 49.28909], [18.15022, 49.24518], [18.1104, 49.08624], [18.06885, 49.03157], [17.91814, 49.01784], [17.87831, 48.92679], [17.77944, 48.92318], [17.73126, 48.87885], [17.7094, 48.86721], [17.5295, 48.81117], [17.45671, 48.85004], [17.3853, 48.80936], [17.29054, 48.85546], [17.19355, 48.87602], [17.11202, 48.82925], [17.00215, 48.70887], [16.93955, 48.60371], [16.94611, 48.53614], [16.85204, 48.44968], [16.8497, 48.38321], [16.83588, 48.3844], [16.83317, 48.38138], [16.84243, 48.35258], [16.90903, 48.32519], [16.89461, 48.31332], [16.97701, 48.17385], [17.02919, 48.13996], [17.05735, 48.14179], [17.09168, 48.09366], [17.07039, 48.0317], [17.16001, 48.00636], [17.23699, 48.02094], [17.71215, 47.7548], [18.02938, 47.75665], [18.29305, 47.73541], [18.56496, 47.76588], [18.66521, 47.76772], [18.74074, 47.8157], [18.8506, 47.82308], [18.76821, 47.87469], [18.76134, 47.97499], [18.82176, 48.04206], [19.01952, 48.07052], [19.23924, 48.0595], [19.28182, 48.08336], [19.47957, 48.09437], [19.52489, 48.19791], [19.63338, 48.25006], [19.92452, 48.1283], [20.24312, 48.2784], [20.29943, 48.26104], [20.5215, 48.53336], [20.83248, 48.5824], [21.11516, 48.49546], [21.44063, 48.58456], [21.6068, 48.50365], [21.67134, 48.3989], [21.72525, 48.34628], [21.8279, 48.33321], [21.83339, 48.36242], [22.14689, 48.4005], [22.16023, 48.56548], [22.21379, 48.6218], [22.34151, 48.68893], [22.42934, 48.92857], [22.48296, 48.99172], [22.54338, 49.01424], [22.56155, 49.08865], [22.04427, 49.22136], [21.96385, 49.3437], [21.82927, 49.39467], [21.77983, 49.35443], [21.62328, 49.4447], [21.43376, 49.41433], [21.27858, 49.45988], [21.19756, 49.4054], [21.12477, 49.43666], [21.041, 49.41791], [21.09799, 49.37176], [20.98733, 49.30774], [20.9229, 49.29626], [20.77971, 49.35383], [20.72274, 49.41813], [20.61666, 49.41791], [20.5631, 49.375], [20.46422, 49.41612], [20.39939, 49.3896], [20.31728, 49.39914], [20.31453, 49.34817], [20.21977, 49.35265], [20.13738, 49.31685], [20.08238, 49.1813], [19.98494, 49.22904], [19.90529, 49.23532], [19.86409, 49.19316], [19.75286, 49.20751], [19.82237, 49.27806]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SL\", iso1A3: \"SLE\", iso1N3: \"694\", wikidata: \"Q1044\", nameEn: \"Sierra Leone\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"232\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-10.27575, 8.48711], [-10.37257, 8.48941], [-10.54891, 8.31174], [-10.63934, 8.35326], [-10.70565, 8.29235], [-10.61422, 8.5314], [-10.47707, 8.67669], [-10.56197, 8.81225], [-10.5783, 9.06386], [-10.74484, 9.07998], [-10.6534, 9.29919], [-11.2118, 10.00098], [-11.89624, 9.99763], [-11.91023, 9.93927], [-12.12634, 9.87203], [-12.24262, 9.92386], [-12.47254, 9.86834], [-12.76788, 9.3133], [-12.94095, 9.26335], [-13.08953, 9.0409], [-13.18586, 9.0925], [-13.29911, 9.04245], [-14.36218, 8.64107], [-12.15048, 6.15992], [-11.50429, 6.92704], [-11.4027, 6.97746], [-11.29417, 7.21576], [-10.60422, 7.7739], [-10.60492, 8.04072], [-10.57523, 8.04829], [-10.51554, 8.1393], [-10.45023, 8.15627], [-10.35227, 8.15223], [-10.29839, 8.21283], [-10.31635, 8.28554], [-10.30084, 8.30008], [-10.27575, 8.48711]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SM\", iso1A3: \"SMR\", iso1N3: \"674\", wikidata: \"Q238\", nameEn: \"San Marino\", groups: [\"039\", \"150\", \"UN\"], callingCodes: [\"378\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[12.45648, 43.89369], [12.48771, 43.89706], [12.49429, 43.90973], [12.49247, 43.91774], [12.49724, 43.92248], [12.50269, 43.92363], [12.50496, 43.93017], [12.51553, 43.94096], [12.51427, 43.94897], [12.50655, 43.95796], [12.50875, 43.96198], [12.50622, 43.97131], [12.51109, 43.97201], [12.51064, 43.98165], [12.5154, 43.98508], [12.51463, 43.99122], [12.50678, 43.99113], [12.49406, 43.98492], [12.47853, 43.98052], [12.46205, 43.97463], [12.44684, 43.96597], [12.43662, 43.95698], [12.42005, 43.9578], [12.41414, 43.95273], [12.40415, 43.95485], [12.40506, 43.94325], [12.41165, 43.93769], [12.41551, 43.92984], [12.40733, 43.92379], [12.41233, 43.90956], [12.40935, 43.9024], [12.41641, 43.89991], [12.44184, 43.90498], [12.45648, 43.89369]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SN\", iso1A3: \"SEN\", iso1N3: \"686\", wikidata: \"Q1041\", nameEn: \"Senegal\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"221\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-14.32144, 16.61495], [-15.00557, 16.64997], [-15.6509, 16.50315], [-16.27016, 16.51565], [-16.4429, 16.20605], [-16.44814, 16.09753], [-16.48967, 16.0496], [-16.50854, 16.09032], [-17.15288, 16.07139], [-18.35085, 14.63444], [-17.43598, 13.59273], [-15.47902, 13.58758], [-15.36504, 13.79313], [-14.93719, 13.80173], [-14.34721, 13.46578], [-13.8955, 13.59126], [-13.79409, 13.34472], [-14.36795, 13.23033], [-15.14917, 13.57989], [-15.26908, 13.37768], [-15.80478, 13.34832], [-15.80355, 13.16729], [-16.69343, 13.16791], [-16.74676, 13.06025], [-17.43966, 13.04579], [-17.4623, 11.92379], [-16.70562, 12.34803], [-16.38191, 12.36449], [-16.20591, 12.46157], [-15.67302, 12.42974], [-15.17582, 12.6847], [-13.70523, 12.68013], [-13.05296, 12.64003], [-13.06603, 12.49342], [-12.87336, 12.51892], [-12.35415, 12.32758], [-11.91331, 12.42008], [-11.46267, 12.44559], [-11.37536, 12.40788], [-11.39935, 12.97808], [-11.63025, 13.39174], [-11.83345, 13.33333], [-12.06897, 13.71049], [-11.93043, 13.84505], [-12.23936, 14.76324], [-13.11029, 15.52116], [-13.43135, 16.09022], [-13.80075, 16.13961], [-14.32144, 16.61495]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SO\", iso1A3: \"SOM\", iso1N3: \"706\", wikidata: \"Q1045\", nameEn: \"Somalia\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"252\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[51.12877, 12.56479], [43.90659, 12.3823], [42.95776, 10.98533], [42.69452, 10.62672], [42.87643, 10.18441], [43.0937, 9.90579], [43.23518, 9.84605], [43.32613, 9.59205], [44.19222, 8.93028], [46.99339, 7.9989], [47.92477, 8.00111], [47.97917, 8.00124], [44.98104, 4.91821], [44.02436, 4.9451], [43.40263, 4.79289], [43.04177, 4.57923], [42.97746, 4.44032], [42.84526, 4.28357], [42.55853, 4.20518], [42.07619, 4.17667], [41.89488, 3.97375], [41.31368, 3.14314], [40.98767, 2.82959], [41.00099, -0.83068], [41.56, -1.59812], [41.56362, -1.66375], [41.75542, -1.85308], [57.49095, 8.14549], [51.12877, 12.56479]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SR\", iso1A3: \"SUR\", iso1N3: \"740\", wikidata: \"Q730\", nameEn: \"Suriname\", groups: [\"005\", \"419\", \"019\", \"UN\"], driveSide: \"left\", callingCodes: [\"597\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-54.26916, 5.26909], [-54.01877, 5.52789], [-54.01074, 5.68785], [-53.7094, 6.2264], [-56.84822, 6.73257], [-57.31629, 5.33714], [-57.22536, 5.15605], [-57.37442, 5.0208], [-57.8699, 4.89394], [-58.0307, 3.95513], [-57.35891, 3.32121], [-56.70519, 2.02964], [-56.55439, 2.02003], [-56.47045, 1.95135], [-55.99278, 1.83137], [-55.89863, 1.89861], [-55.92159, 2.05236], [-56.13054, 2.27723], [-55.96292, 2.53188], [-55.71493, 2.40342], [-55.01919, 2.564], [-54.6084, 2.32856], [-54.42864, 2.42442], [-54.28534, 2.67798], [-53.9849, 3.58697], [-53.98914, 3.627], [-54.05128, 3.63557], [-54.19367, 3.84387], [-54.38444, 4.13222], [-54.4717, 4.91964], [-54.26916, 5.26909]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SS\", iso1A3: \"SSD\", iso1N3: \"728\", wikidata: \"Q958\", nameEn: \"South Sudan\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"211\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[34.10229, 9.50238], [33.87958, 9.49937], [33.9082, 9.762], [33.96323, 9.80972], [33.99185, 9.99623], [33.96984, 10.15446], [33.90159, 10.17179], [33.80913, 10.32994], [33.66604, 10.44254], [33.52294, 10.64382], [33.24645, 10.77913], [33.26977, 10.83632], [33.13988, 11.43248], [33.25876, 12.22111], [32.73921, 12.22757], [32.73921, 11.95203], [32.10079, 11.95203], [32.39578, 11.70208], [32.39358, 11.18207], [32.46967, 11.04662], [31.99177, 10.65065], [31.77539, 10.28939], [31.28504, 9.75287], [30.84605, 9.7498], [30.82893, 9.71451], [30.53005, 9.95992], [30.00389, 10.28633], [29.94629, 10.29245], [29.54, 10.07949], [29.53844, 9.75133], [29.06988, 9.74826], [28.99983, 9.67155], [27.90704, 9.61323], [27.14427, 9.62858], [26.70685, 9.48735], [26.35815, 9.57946], [26.21338, 9.91545], [25.93241, 10.17941], [25.93163, 10.38159], [25.78141, 10.42599], [25.0918, 10.33718], [25.05688, 10.06776], [24.97739, 9.9081], [24.84653, 9.80643], [24.49389, 9.79962], [24.12744, 9.73784], [24.09319, 9.66572], [23.69155, 9.67566], [23.62179, 9.53823], [23.64981, 9.44303], [23.64358, 9.28637], [23.56263, 9.19418], [23.4848, 9.16959], [23.44744, 8.99128], [23.59065, 8.99743], [23.51905, 8.71749], [24.25691, 8.69288], [24.13238, 8.36959], [24.35965, 8.26177], [24.85156, 8.16933], [24.98855, 7.96588], [25.25319, 7.8487], [25.29214, 7.66675], [25.20649, 7.61115], [25.20337, 7.50312], [25.35281, 7.42595], [25.37461, 7.33024], [25.90076, 7.09549], [26.38022, 6.63493], [26.32729, 6.36272], [26.58259, 6.1987], [26.51721, 6.09655], [27.22705, 5.71254], [27.22705, 5.62889], [27.28621, 5.56382], [27.23017, 5.37167], [27.26886, 5.25876], [27.44012, 5.07349], [27.56656, 4.89375], [27.65462, 4.89375], [27.76469, 4.79284], [27.79551, 4.59976], [28.20719, 4.35614], [28.6651, 4.42638], [28.8126, 4.48784], [29.03054, 4.48784], [29.22207, 4.34297], [29.43341, 4.50101], [29.49726, 4.7007], [29.82087, 4.56246], [29.79666, 4.37809], [30.06964, 4.13221], [30.1621, 4.10586], [30.22374, 3.93896], [30.27658, 3.95653], [30.47691, 3.83353], [30.55396, 3.84451], [30.57378, 3.74567], [30.56277, 3.62703], [30.78512, 3.67097], [30.80713, 3.60506], [30.85997, 3.5743], [30.85153, 3.48867], [30.97601, 3.693], [31.16666, 3.79853], [31.29476, 3.8015], [31.50478, 3.67814], [31.50776, 3.63652], [31.72075, 3.74354], [31.81459, 3.82083], [31.86821, 3.78664], [31.96205, 3.6499], [31.95907, 3.57408], [32.05187, 3.589], [32.08491, 3.56287], [32.08866, 3.53543], [32.19888, 3.50867], [32.20782, 3.6053], [32.41337, 3.748], [32.72021, 3.77327], [32.89746, 3.81339], [33.02852, 3.89296], [33.18356, 3.77812], [33.51264, 3.75068], [33.9873, 4.23316], [34.47601, 4.72162], [35.34151, 5.02364], [35.30992, 4.90402], [35.47843, 4.91872], [35.42366, 4.76969], [35.51424, 4.61643], [35.9419, 4.61933], [35.82118, 4.77382], [35.81968, 5.10757], [35.8576, 5.33413], [35.50792, 5.42431], [35.29938, 5.34042], [35.31188, 5.50106], [35.13058, 5.62118], [35.12611, 5.68937], [35.00546, 5.89387], [34.96227, 6.26415], [35.01738, 6.46991], [34.87736, 6.60161], [34.77459, 6.5957], [34.65096, 6.72589], [34.53776, 6.74808], [34.53925, 6.82794], [34.47669, 6.91076], [34.35753, 6.91963], [34.19369, 7.04382], [34.19369, 7.12807], [34.01495, 7.25664], [34.03878, 7.27437], [34.02984, 7.36449], [33.87642, 7.5491], [33.71407, 7.65983], [33.44745, 7.7543], [33.32531, 7.71297], [33.24637, 7.77939], [33.04944, 7.78989], [33.0006, 7.90333], [33.08401, 8.05822], [33.18083, 8.13047], [33.1853, 8.29264], [33.19721, 8.40317], [33.3119, 8.45474], [33.54575, 8.47094], [33.66938, 8.44442], [33.71407, 8.3678], [33.87195, 8.41938], [33.89579, 8.4842], [34.01346, 8.50041], [34.14453, 8.60204], [34.14304, 9.04654], [34.10229, 9.50238]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ST\", iso1A3: \"STP\", iso1N3: \"678\", wikidata: \"Q1039\", nameEn: \"S\\xE3o Tom\\xE9 and Principe\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"239\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[4.34149, 1.91417], [6.6507, -0.28606], [7.9035, 1.92304], [4.34149, 1.91417]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SV\", iso1A3: \"SLV\", iso1N3: \"222\", wikidata: \"Q792\", nameEn: \"El Salvador\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"503\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-89.34776, 14.43013], [-89.39028, 14.44561], [-89.57441, 14.41637], [-89.58814, 14.33165], [-89.50614, 14.26084], [-89.52397, 14.22628], [-89.61844, 14.21937], [-89.70756, 14.1537], [-89.75569, 14.07073], [-89.73251, 14.04133], [-89.76103, 14.02923], [-89.81807, 14.07073], [-89.88937, 14.0396], [-90.10505, 13.85104], [-90.11344, 13.73679], [-90.55276, 12.8866], [-88.11443, 12.63306], [-87.7346, 13.13228], [-87.55124, 13.12523], [-87.69751, 13.25228], [-87.73714, 13.32715], [-87.80177, 13.35689], [-87.84675, 13.41078], [-87.83467, 13.44655], [-87.77354, 13.45767], [-87.73841, 13.44169], [-87.72115, 13.46083], [-87.71657, 13.50577], [-87.78148, 13.52906], [-87.73106, 13.75443], [-87.68821, 13.80829], [-87.7966, 13.91353], [-88.00331, 13.86948], [-88.07641, 13.98447], [-88.23018, 13.99915], [-88.25791, 13.91108], [-88.48982, 13.86458], [-88.49738, 13.97224], [-88.70661, 14.04317], [-88.73182, 14.10919], [-88.815, 14.11652], [-88.85785, 14.17763], [-88.94608, 14.20207], [-89.04187, 14.33644], [-89.34776, 14.43013]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SX\", iso1A3: \"SXM\", iso1N3: \"534\", wikidata: \"Q26273\", nameEn: \"Sint Maarten\", aliases: [\"NL-SX\"], country: \"NL\", groups: [\"Q1451600\", \"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"1 721\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-63.33064, 17.9615], [-63.1055, 17.86651], [-62.93924, 18.02904], [-63.02323, 18.05757], [-63.04039, 18.05619], [-63.0579, 18.06614], [-63.07759, 18.04943], [-63.09686, 18.04608], [-63.11042, 18.05339], [-63.13502, 18.05445], [-63.33064, 17.9615]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SY\", iso1A3: \"SYR\", iso1N3: \"760\", wikidata: \"Q858\", nameEn: \"Syria\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"963\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[42.23683, 37.2863], [42.21548, 37.28026], [42.20454, 37.28715], [42.22381, 37.30238], [42.22257, 37.31395], [42.2112, 37.32491], [42.19301, 37.31323], [42.18225, 37.28569], [42.00894, 37.17209], [41.515, 37.08084], [41.21937, 37.07665], [40.90856, 37.13147], [40.69136, 37.0996], [39.81589, 36.75538], [39.21538, 36.66834], [39.03217, 36.70911], [38.74042, 36.70629], [38.55908, 36.84429], [38.38859, 36.90064], [38.21064, 36.91842], [37.81974, 36.76055], [37.68048, 36.75065], [37.49103, 36.66904], [37.47253, 36.63243], [37.21988, 36.6736], [37.16177, 36.66069], [37.10894, 36.6704], [37.08279, 36.63495], [37.02088, 36.66422], [37.01647, 36.69512], [37.04619, 36.71101], [37.04399, 36.73483], [36.99886, 36.74012], [36.99557, 36.75997], [36.66727, 36.82901], [36.61581, 36.74629], [36.62681, 36.71189], [36.57398, 36.65186], [36.58829, 36.58295], [36.54206, 36.49539], [36.6081, 36.33772], [36.65653, 36.33861], [36.68672, 36.23677], [36.6125, 36.22592], [36.50463, 36.2419], [36.4617, 36.20461], [36.39206, 36.22088], [36.37474, 36.01163], [36.33956, 35.98687], [36.30099, 36.00985], [36.28338, 36.00273], [36.29769, 35.96086], [36.27678, 35.94839], [36.25366, 35.96264], [36.19973, 35.95195], [36.17441, 35.92076], [36.1623, 35.80925], [36.14029, 35.81015], [36.13919, 35.83692], [36.11827, 35.85923], [35.99829, 35.88242], [36.01844, 35.92403], [36.00514, 35.94113], [35.98499, 35.94107], [35.931, 35.92109], [35.51152, 36.10954], [35.48515, 34.70851], [35.97386, 34.63322], [35.98718, 34.64977], [36.29165, 34.62991], [36.32399, 34.69334], [36.35135, 34.68516], [36.35384, 34.65447], [36.42941, 34.62505], [36.46003, 34.6378], [36.45299, 34.59438], [36.41429, 34.61175], [36.39846, 34.55672], [36.3369, 34.52629], [36.34745, 34.5002], [36.4442, 34.50165], [36.46179, 34.46541], [36.55853, 34.41609], [36.53039, 34.3798], [36.56556, 34.31881], [36.60778, 34.31009], [36.58667, 34.27667], [36.59195, 34.2316], [36.62537, 34.20251], [36.5128, 34.09916], [36.50576, 34.05982], [36.41078, 34.05253], [36.28589, 33.91981], [36.38263, 33.86579], [36.3967, 33.83365], [36.14517, 33.85118], [36.06778, 33.82927], [35.9341, 33.6596], [36.05723, 33.57904], [35.94465, 33.52774], [35.94816, 33.47886], [35.88668, 33.43183], [35.82577, 33.40479], [35.81324, 33.36354], [35.77477, 33.33609], [35.813, 33.3172], [35.77513, 33.27342], [35.81295, 33.24841], [35.81647, 33.2028], [35.83846, 33.19397], [35.84285, 33.16673], [35.81911, 33.1336], [35.81911, 33.11077], [35.84802, 33.1031], [35.87188, 32.98028], [35.89298, 32.9456], [35.87012, 32.91976], [35.84021, 32.8725], [35.83758, 32.82817], [35.78745, 32.77938], [35.75983, 32.74803], [35.88405, 32.71321], [35.93307, 32.71966], [35.96633, 32.66237], [36.02239, 32.65911], [36.08074, 32.51463], [36.20379, 32.52751], [36.20875, 32.49529], [36.23948, 32.50108], [36.40959, 32.37908], [36.83946, 32.31293], [38.79171, 33.37328], [40.64314, 34.31604], [40.97676, 34.39788], [41.12388, 34.65742], [41.2345, 34.80049], [41.21654, 35.1508], [41.26569, 35.42708], [41.38184, 35.62502], [41.37027, 35.84095], [41.2564, 36.06012], [41.28864, 36.35368], [41.40058, 36.52502], [41.81736, 36.58782], [42.36697, 37.0627], [42.35724, 37.10998], [42.32313, 37.17814], [42.34735, 37.22548], [42.2824, 37.2798], [42.26039, 37.27017], [42.23683, 37.2863]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SZ\", iso1A3: \"SWZ\", iso1N3: \"748\", wikidata: \"Q1050\", nameEn: \"Eswatini\", aliases: [\"Swaziland\"], groups: [\"018\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"268\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[31.86881, -25.99973], [31.4175, -25.71886], [31.31237, -25.7431], [31.13073, -25.91558], [30.95819, -26.26303], [30.78927, -26.48271], [30.81101, -26.84722], [30.88826, -26.79622], [30.97757, -26.92706], [30.96088, -27.0245], [31.15027, -27.20151], [31.49834, -27.31549], [31.97592, -27.31675], [31.97463, -27.11057], [32.00893, -26.8096], [32.09664, -26.80721], [32.13315, -26.84345], [32.13409, -26.5317], [32.07352, -26.40185], [32.10435, -26.15656], [32.08599, -26.00978], [32.00916, -25.999], [31.974, -25.95387], [31.86881, -25.99973]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TA\", iso1A3: \"TAA\", wikidata: \"Q220982\", nameEn: \"Tristan da Cunha\", aliases: [\"SH-TA\"], country: \"GB\", groups: [\"SH\", \"BOTS\", \"011\", \"202\", \"002\", \"UN\"], isoStatus: \"excRes\", driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"290 8\", \"44 20\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-13.38232, -34.07258], [-16.67337, -41.9188], [-5.88482, -41.4829], [-13.38232, -34.07258]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TC\", iso1A3: \"TCA\", iso1N3: \"796\", wikidata: \"Q18221\", nameEn: \"Turks and Caicos Islands\", country: \"GB\", groups: [\"BOTS\", \"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1 649\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-71.70065, 25.7637], [-72.98446, 20.4801], [-69.80718, 21.35956], [-71.70065, 25.7637]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TD\", iso1A3: \"TCD\", iso1N3: \"148\", wikidata: \"Q657\", nameEn: \"Chad\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"235\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[23.99539, 19.49944], [15.99566, 23.49639], [14.99751, 23.00539], [15.19692, 21.99339], [15.20213, 21.49365], [15.28332, 21.44557], [15.62515, 20.95395], [15.57248, 20.92138], [15.55382, 20.86507], [15.56004, 20.79488], [15.59841, 20.74039], [15.6721, 20.70069], [15.99632, 20.35364], [15.75098, 19.93002], [15.6032, 18.77402], [15.50373, 16.89649], [14.37425, 15.72591], [13.86301, 15.04043], [13.78991, 14.87519], [13.809, 14.72915], [13.67878, 14.64013], [13.68573, 14.55276], [13.48259, 14.46704], [13.47559, 14.40881], [13.6302, 13.71094], [14.08251, 13.0797], [14.46881, 13.08259], [14.56101, 12.91036], [14.55058, 12.78256], [14.83314, 12.62963], [14.90827, 12.3269], [14.89019, 12.16593], [14.96952, 12.0925], [15.00146, 12.1223], [15.0349, 12.10698], [15.05786, 12.0608], [15.04808, 11.8731], [15.11579, 11.79313], [15.06595, 11.71126], [15.13149, 11.5537], [15.0585, 11.40481], [15.10021, 11.04101], [15.04957, 11.02347], [15.09127, 10.87431], [15.06737, 10.80921], [15.15532, 10.62846], [15.14936, 10.53915], [15.23724, 10.47764], [15.30874, 10.31063], [15.50535, 10.1098], [15.68761, 9.99344], [15.41408, 9.92876], [15.24618, 9.99246], [15.14043, 9.99246], [15.05999, 9.94845], [14.95722, 9.97926], [14.80082, 9.93818], [14.4673, 10.00264], [14.20411, 10.00055], [14.1317, 9.82413], [14.01793, 9.73169], [13.97544, 9.6365], [14.37094, 9.2954], [14.35707, 9.19611], [14.83566, 8.80557], [15.09484, 8.65982], [15.20426, 8.50892], [15.50743, 7.79302], [15.59272, 7.7696], [15.56964, 7.58936], [15.49743, 7.52179], [15.73118, 7.52006], [15.79942, 7.44149], [16.40703, 7.68809], [16.41583, 7.77971], [16.58315, 7.88657], [16.59415, 7.76444], [16.658, 7.75353], [16.6668, 7.67281], [16.8143, 7.53971], [17.67288, 7.98905], [17.93926, 7.95853], [18.02731, 8.01085], [18.6085, 8.05009], [18.64153, 8.08714], [18.62612, 8.14163], [18.67455, 8.22226], [18.79783, 8.25929], [19.11044, 8.68172], [18.86388, 8.87971], [19.06421, 9.00367], [20.36748, 9.11019], [20.82979, 9.44696], [21.26348, 9.97642], [21.34934, 9.95907], [21.52766, 10.2105], [21.63553, 10.217], [21.71479, 10.29932], [21.72139, 10.64136], [22.45889, 11.00246], [22.87758, 10.91915], [22.97249, 11.21955], [22.93124, 11.41645], [22.7997, 11.40424], [22.54907, 11.64372], [22.64092, 12.07485], [22.48369, 12.02766], [22.50548, 12.16769], [22.38873, 12.45514], [22.46345, 12.61925], [22.22684, 12.74682], [22.15679, 12.66634], [21.98711, 12.63292], [21.89371, 12.68001], [21.81432, 12.81362], [21.94819, 13.05637], [22.02914, 13.13976], [22.1599, 13.19281], [22.29689, 13.3731], [22.08674, 13.77863], [22.22995, 13.96754], [22.5553, 14.11704], [22.55997, 14.23024], [22.44944, 14.24986], [22.38562, 14.58907], [22.70474, 14.69149], [22.66115, 14.86308], [22.99584, 15.22989], [22.99584, 15.40105], [22.92579, 15.47007], [22.93201, 15.55107], [23.10792, 15.71297], [23.38812, 15.69649], [23.62785, 15.7804], [23.99997, 15.69575], [23.99539, 19.49944]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TF\", iso1A3: \"ATF\", iso1N3: \"260\", wikidata: \"Q129003\", nameEn: \"French Southern Territories\", country: \"FR\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"TG\", iso1A3: \"TGO\", iso1N3: \"768\", wikidata: \"Q945\", nameEn: \"Togo\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"228\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[0.50388, 11.01011], [-0.13493, 11.14075], [-0.14462, 11.10811], [-0.05733, 11.08628], [-0.0275, 11.11202], [-514e-5, 11.10763], [342e-5, 11.08317], [0.02395, 11.06229], [0.03355, 10.9807], [-63e-4, 10.96417], [-908e-5, 10.91644], [-0.02685, 10.8783], [-0.0228, 10.81916], [-0.07183, 10.76794], [-0.07327, 10.71845], [-0.09141, 10.7147], [-0.05945, 10.63458], [0.12886, 10.53149], [0.18846, 10.4096], [0.29453, 10.41546], [0.33028, 10.30408], [0.39584, 10.31112], [0.35293, 10.09412], [0.41371, 10.06361], [0.41252, 10.02018], [0.36366, 10.03309], [0.32075, 9.72781], [0.34816, 9.71607], [0.34816, 9.66907], [0.32313, 9.6491], [0.28261, 9.69022], [0.26712, 9.66437], [0.29334, 9.59387], [0.36008, 9.6256], [0.38153, 9.58682], [0.23851, 9.57389], [0.2409, 9.52335], [0.30406, 9.521], [0.31241, 9.50337], [0.2254, 9.47869], [0.25758, 9.42696], [0.33148, 9.44812], [0.36485, 9.49749], [0.49118, 9.48339], [0.56388, 9.40697], [0.45424, 9.04581], [0.52455, 8.87746], [0.37319, 8.75262], [0.47211, 8.59945], [0.64731, 8.48866], [0.73432, 8.29529], [0.63897, 8.25873], [0.5913, 8.19622], [0.61156, 8.18324], [0.6056, 8.13959], [0.58891, 8.12779], [0.62943, 7.85751], [0.58295, 7.62368], [0.51979, 7.58706], [0.52455, 7.45354], [0.57223, 7.39326], [0.62943, 7.41099], [0.65327, 7.31643], [0.59606, 7.01252], [0.52217, 6.9723], [0.52098, 6.94391], [0.56508, 6.92971], [0.52853, 6.82921], [0.57406, 6.80348], [0.58176, 6.76049], [0.6497, 6.73682], [0.63659, 6.63857], [0.74862, 6.56517], [0.71048, 6.53083], [0.89283, 6.33779], [0.99652, 6.33779], [1.03108, 6.24064], [1.05969, 6.22998], [1.09187, 6.17074], [1.19966, 6.17069], [1.19771, 6.11522], [1.27574, 5.93551], [1.67336, 6.02702], [1.62913, 6.24075], [1.79826, 6.28221], [1.76906, 6.43189], [1.58105, 6.68619], [1.61812, 6.74843], [1.55877, 6.99737], [1.64249, 6.99562], [1.61838, 9.0527], [1.5649, 9.16941], [1.41746, 9.3226], [1.33675, 9.54765], [1.36624, 9.5951], [1.35507, 9.99525], [0.77666, 10.37665], [0.80358, 10.71459], [0.8804, 10.803], [0.91245, 10.99597], [0.66104, 10.99964], [0.4958, 10.93269], [0.50521, 10.98035], [0.48852, 10.98561], [0.50388, 11.01011]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TH\", iso1A3: \"THA\", iso1N3: \"764\", wikidata: \"Q869\", nameEn: \"Thailand\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"66\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[100.08404, 20.36626], [99.95721, 20.46301], [99.91616, 20.44986], [99.90499, 20.4487], [99.89692, 20.44789], [99.89301, 20.44311], [99.89168, 20.44548], [99.88451, 20.44596], [99.88211, 20.44488], [99.86383, 20.44371], [99.81096, 20.33687], [99.68255, 20.32077], [99.46008, 20.39673], [99.46077, 20.36198], [99.5569, 20.20676], [99.52943, 20.14811], [99.416, 20.08614], [99.20328, 20.12877], [99.0735, 20.10298], [98.98679, 19.7419], [98.83661, 19.80931], [98.56065, 19.67807], [98.51182, 19.71303], [98.24884, 19.67876], [98.13829, 19.78541], [98.03314, 19.80941], [98.04364, 19.65755], [97.84715, 19.55782], [97.88423, 19.5041], [97.78769, 19.39429], [97.84186, 19.29526], [97.78606, 19.26769], [97.84024, 19.22217], [97.83479, 19.09972], [97.73797, 19.04261], [97.73654, 18.9812], [97.66487, 18.9371], [97.73836, 18.88478], [97.76752, 18.58097], [97.5258, 18.4939], [97.36444, 18.57138], [97.34522, 18.54596], [97.50383, 18.26844], [97.56219, 18.33885], [97.64116, 18.29778], [97.60841, 18.23846], [97.73723, 17.97912], [97.66794, 17.88005], [97.76407, 17.71595], [97.91829, 17.54504], [98.11185, 17.36829], [98.10439, 17.33847], [98.34566, 17.04822], [98.39441, 17.06266], [98.52624, 16.89979], [98.49603, 16.8446], [98.53833, 16.81934], [98.46994, 16.73613], [98.50253, 16.7139], [98.49713, 16.69022], [98.51043, 16.70107], [98.51579, 16.69433], [98.51472, 16.68521], [98.51833, 16.676], [98.51113, 16.64503], [98.5695, 16.62826], [98.57912, 16.55983], [98.63817, 16.47424], [98.68074, 16.27068], [98.84485, 16.42354], [98.92656, 16.36425], [98.8376, 16.11706], [98.69585, 16.13353], [98.57019, 16.04578], [98.59853, 15.87197], [98.541, 15.65406], [98.58598, 15.46821], [98.56027, 15.33471], [98.4866, 15.39154], [98.39351, 15.34177], [98.41906, 15.27103], [98.40522, 15.25268], [98.30446, 15.30667], [98.22, 15.21327], [98.18821, 15.13125], [98.24874, 14.83013], [98.56762, 14.37701], [98.97356, 14.04868], [99.16695, 13.72621], [99.20617, 13.20575], [99.12225, 13.19847], [99.10646, 13.05804], [99.18748, 12.9898], [99.18905, 12.84799], [99.29254, 12.68921], [99.409, 12.60603], [99.47519, 12.1353], [99.56445, 12.14805], [99.53424, 12.02317], [99.64891, 11.82699], [99.64108, 11.78948], [99.5672, 11.62732], [99.47598, 11.62434], [99.39485, 11.3925], [99.31573, 11.32081], [99.32756, 11.28545], [99.06938, 10.94857], [99.02337, 10.97217], [98.99701, 10.92962], [99.0069, 10.85485], [98.86819, 10.78336], [98.78511, 10.68351], [98.77275, 10.62548], [98.81944, 10.52761], [98.7391, 10.31488], [98.55174, 9.92804], [98.52291, 9.92389], [98.47298, 9.95782], [98.33094, 9.91973], [98.12555, 9.44056], [97.63455, 9.60854], [97.19814, 8.18901], [99.31854, 5.99868], [99.50117, 6.44501], [99.91873, 6.50233], [100.0756, 6.4045], [100.12, 6.42105], [100.19511, 6.72559], [100.29651, 6.68439], [100.30828, 6.66462], [100.31618, 6.66781], [100.31884, 6.66423], [100.32671, 6.66526], [100.32607, 6.65933], [100.31929, 6.65413], [100.35413, 6.54932], [100.41152, 6.52299], [100.41791, 6.5189], [100.42351, 6.51762], [100.43027, 6.52389], [100.66986, 6.45086], [100.74361, 6.50811], [100.74822, 6.46231], [100.81045, 6.45086], [100.85884, 6.24929], [101.10313, 6.25617], [101.12618, 6.19431], [101.06165, 6.14161], [101.12388, 6.11411], [101.087, 5.9193], [101.02708, 5.91013], [100.98815, 5.79464], [101.14062, 5.61613], [101.25755, 5.71065], [101.25524, 5.78633], [101.58019, 5.93534], [101.69773, 5.75881], [101.75074, 5.79091], [101.80144, 5.74505], [101.89188, 5.8386], [101.91776, 5.84269], [101.92819, 5.85511], [101.94712, 5.98421], [101.9714, 6.00575], [101.97114, 6.01992], [101.99209, 6.04075], [102.01835, 6.05407], [102.09182, 6.14161], [102.07732, 6.193], [102.08127, 6.22679], [102.09086, 6.23546], [102.46318, 7.22462], [102.47649, 9.66162], [102.52395, 11.25257], [102.91449, 11.65512], [102.90973, 11.75613], [102.83957, 11.8519], [102.78427, 11.98746], [102.77026, 12.06815], [102.70176, 12.1686], [102.73134, 12.37091], [102.78116, 12.40284], [102.7796, 12.43781], [102.57567, 12.65358], [102.51963, 12.66117], [102.4994, 12.71736], [102.53053, 12.77506], [102.49335, 12.92711], [102.48694, 12.97537], [102.52275, 12.99813], [102.46011, 13.08057], [102.43422, 13.09061], [102.36146, 13.26006], [102.36001, 13.31142], [102.34611, 13.35618], [102.35692, 13.38274], [102.35563, 13.47307], [102.361, 13.50551], [102.33828, 13.55613], [102.36859, 13.57488], [102.44601, 13.5637], [102.5358, 13.56933], [102.57573, 13.60461], [102.62483, 13.60883], [102.58635, 13.6286], [102.5481, 13.6589], [102.56848, 13.69366], [102.72727, 13.77806], [102.77864, 13.93374], [102.91251, 14.01531], [102.93275, 14.19044], [103.16469, 14.33075], [103.39353, 14.35639], [103.53518, 14.42575], [103.71109, 14.4348], [103.70175, 14.38052], [103.93836, 14.3398], [104.27616, 14.39861], [104.55014, 14.36091], [104.69335, 14.42726], [104.97667, 14.38806], [105.02804, 14.23722], [105.08408, 14.20402], [105.14012, 14.23873], [105.17748, 14.34432], [105.20894, 14.34967], [105.43783, 14.43865], [105.53864, 14.55731], [105.5121, 14.80802], [105.61162, 15.00037], [105.46661, 15.13132], [105.58043, 15.32724], [105.50662, 15.32054], [105.4692, 15.33709], [105.47635, 15.3796], [105.58191, 15.41031], [105.60446, 15.53301], [105.61756, 15.68792], [105.46573, 15.74742], [105.42285, 15.76971], [105.37959, 15.84074], [105.34115, 15.92737], [105.38508, 15.987], [105.42001, 16.00657], [105.06204, 16.09792], [105.00262, 16.25627], [104.88057, 16.37311], [104.73349, 16.565], [104.76099, 16.69302], [104.7397, 16.81005], [104.76442, 16.84752], [104.7373, 16.91125], [104.73712, 17.01404], [104.80716, 17.19025], [104.80061, 17.39367], [104.69867, 17.53038], [104.45404, 17.66788], [104.35432, 17.82871], [104.2757, 17.86139], [104.21776, 17.99335], [104.10927, 18.10826], [104.06533, 18.21656], [103.97725, 18.33631], [103.93916, 18.33914], [103.85642, 18.28666], [103.82449, 18.33979], [103.699, 18.34125], [103.60957, 18.40528], [103.47773, 18.42841], [103.41044, 18.4486], [103.30977, 18.4341], [103.24779, 18.37807], [103.23818, 18.34875], [103.29757, 18.30475], [103.17093, 18.2618], [103.14994, 18.23172], [103.1493, 18.17799], [103.07343, 18.12351], [103.07823, 18.03833], [103.0566, 18.00144], [103.01998, 17.97095], [102.9912, 17.9949], [102.95812, 18.0054], [102.86323, 17.97531], [102.81988, 17.94233], [102.79044, 17.93612], [102.75954, 17.89561], [102.68538, 17.86653], [102.67543, 17.84529], [102.69946, 17.81686], [102.68194, 17.80151], [102.59485, 17.83537], [102.5896, 17.84889], [102.61432, 17.92273], [102.60971, 17.95411], [102.59234, 17.96127], [102.45523, 17.97106], [102.11359, 18.21532], [101.88485, 18.02474], [101.78087, 18.07559], [101.72294, 17.92867], [101.44667, 17.7392], [101.15108, 17.47586], [100.96541, 17.57926], [101.02185, 17.87637], [101.1793, 18.0544], [101.19118, 18.2125], [101.15108, 18.25624], [101.18227, 18.34367], [101.06047, 18.43247], [101.27585, 18.68875], [101.22832, 18.73377], [101.25803, 18.89545], [101.35606, 19.04716], [101.261, 19.12717], [101.24911, 19.33334], [101.20604, 19.35296], [101.21347, 19.46223], [101.26991, 19.48324], [101.26545, 19.59242], [101.08928, 19.59748], [100.90302, 19.61901], [100.77231, 19.48324], [100.64606, 19.55884], [100.58219, 19.49164], [100.49604, 19.53504], [100.398, 19.75047], [100.5094, 19.87904], [100.58808, 20.15791], [100.55218, 20.17741], [100.51052, 20.14928], [100.47567, 20.19133], [100.4537, 20.19971], [100.44992, 20.23644], [100.41473, 20.25625], [100.37439, 20.35156], [100.33383, 20.4028], [100.25769, 20.3992], [100.22076, 20.31598], [100.16668, 20.2986], [100.1712, 20.24324], [100.11785, 20.24787], [100.09337, 20.26293], [100.09999, 20.31614], [100.08404, 20.36626]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TJ\", iso1A3: \"TJK\", iso1N3: \"762\", wikidata: \"Q863\", nameEn: \"Tajikistan\", groups: [\"143\", \"142\", \"UN\"], callingCodes: [\"992\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[70.45251, 41.04438], [70.38028, 41.02014], [70.36655, 40.90296], [69.69434, 40.62615], [69.59441, 40.70181], [69.53021, 40.77621], [69.38327, 40.7918], [69.32834, 40.70233], [69.3455, 40.57988], [69.2643, 40.57506], [69.21063, 40.54469], [69.27066, 40.49274], [69.28525, 40.41894], [69.30774, 40.36102], [69.33794, 40.34819], [69.32833, 40.29794], [69.30808, 40.2821], [69.24817, 40.30357], [69.25229, 40.26362], [69.30104, 40.24502], [69.30448, 40.18774], [69.2074, 40.21488], [69.15659, 40.2162], [69.04544, 40.22904], [68.85832, 40.20885], [68.84357, 40.18604], [68.79276, 40.17555], [68.77902, 40.20492], [68.5332, 40.14826], [68.52771, 40.11676], [68.62796, 40.07789], [69.01523, 40.15771], [69.01935, 40.11466], [68.96579, 40.06949], [68.84906, 40.04952], [68.93695, 39.91167], [68.88889, 39.87163], [68.63071, 39.85265], [68.61972, 39.68905], [68.54166, 39.53929], [68.12053, 39.56317], [67.70992, 39.66156], [67.62889, 39.60234], [67.44899, 39.57799], [67.46547, 39.53564], [67.39681, 39.52505], [67.46822, 39.46146], [67.45998, 39.315], [67.36522, 39.31287], [67.33226, 39.23739], [67.67833, 39.14479], [67.68915, 39.00775], [68.09704, 39.02589], [68.19743, 38.85985], [68.06948, 38.82115], [68.12877, 38.73677], [68.05598, 38.71641], [68.0807, 38.64136], [68.05873, 38.56087], [68.11366, 38.47169], [68.06274, 38.39435], [68.13289, 38.40822], [68.40343, 38.19484], [68.27159, 37.91477], [68.12635, 37.93], [67.81566, 37.43107], [67.8474, 37.31594], [67.78329, 37.1834], [67.7803, 37.08978], [67.87917, 37.0591], [68.02194, 36.91923], [68.18542, 37.02074], [68.27605, 37.00977], [68.29253, 37.10621], [68.41201, 37.10402], [68.41888, 37.13906], [68.61851, 37.19815], [68.6798, 37.27906], [68.81438, 37.23862], [68.80889, 37.32494], [68.91189, 37.26704], [68.88168, 37.33368], [68.96407, 37.32603], [69.03274, 37.25174], [69.25152, 37.09426], [69.39529, 37.16752], [69.45022, 37.23315], [69.36645, 37.40462], [69.44954, 37.4869], [69.51888, 37.5844], [69.80041, 37.5746], [69.84435, 37.60616], [69.93362, 37.61378], [69.95971, 37.5659], [70.15015, 37.52519], [70.28243, 37.66706], [70.27694, 37.81258], [70.1863, 37.84296], [70.17206, 37.93276], [70.4898, 38.12546], [70.54673, 38.24541], [70.60407, 38.28046], [70.61526, 38.34774], [70.64966, 38.34999], [70.69189, 38.37031], [70.6761, 38.39144], [70.67438, 38.40597], [70.69807, 38.41861], [70.72485, 38.4131], [70.75455, 38.4252], [70.77132, 38.45548], [70.78581, 38.45502], [70.78702, 38.45031], [70.79766, 38.44944], [70.80521, 38.44447], [70.81697, 38.44507], [70.82538, 38.45394], [70.84376, 38.44688], [70.88719, 38.46826], [70.92728, 38.43021], [70.98693, 38.48862], [71.03545, 38.44779], [71.0556, 38.40176], [71.09542, 38.42517], [71.10592, 38.42077], [71.10957, 38.40671], [71.1451, 38.40106], [71.21291, 38.32797], [71.33114, 38.30339], [71.33869, 38.27335], [71.37803, 38.25641], [71.36444, 38.15358], [71.29878, 38.04429], [71.28922, 38.01272], [71.27622, 37.99946], [71.27278, 37.96496], [71.24969, 37.93031], [71.2809, 37.91995], [71.296, 37.93403], [71.32871, 37.88564], [71.51565, 37.95349], [71.58843, 37.92425], [71.59255, 37.79956], [71.55752, 37.78677], [71.54324, 37.77104], [71.53053, 37.76534], [71.55234, 37.73209], [71.54186, 37.69691], [71.51972, 37.61945], [71.5065, 37.60912], [71.49693, 37.53527], [71.50616, 37.50733], [71.5256, 37.47971], [71.49612, 37.4279], [71.47685, 37.40281], [71.4862, 37.33405], [71.49821, 37.31975], [71.50674, 37.31502], [71.48536, 37.26017], [71.4824, 37.24921], [71.48339, 37.23937], [71.47386, 37.2269], [71.4555, 37.21418], [71.4494, 37.18137], [71.44127, 37.11856], [71.43097, 37.05855], [71.45578, 37.03094], [71.46923, 36.99925], [71.48481, 36.93218], [71.51502, 36.89128], [71.57195, 36.74943], [71.67083, 36.67346], [71.83229, 36.68084], [72.31676, 36.98115], [72.54095, 37.00007], [72.66381, 37.02014], [72.79693, 37.22222], [73.06884, 37.31729], [73.29633, 37.46495], [73.77197, 37.4417], [73.76647, 37.33913], [73.61129, 37.27469], [73.64974, 37.23643], [73.82552, 37.22659], [73.8564, 37.26158], [74.20308, 37.34208], [74.23339, 37.41116], [74.41055, 37.3948], [74.56161, 37.37734], [74.68383, 37.3948], [74.8294, 37.3435], [74.88887, 37.23275], [75.12328, 37.31839], [75.09719, 37.37297], [75.15899, 37.41443], [75.06011, 37.52779], [74.94338, 37.55501], [74.8912, 37.67576], [75.00935, 37.77486], [74.92416, 37.83428], [74.9063, 38.03033], [74.82665, 38.07359], [74.80331, 38.19889], [74.69894, 38.22155], [74.69619, 38.42947], [74.51217, 38.47034], [74.17022, 38.65504], [73.97933, 38.52945], [73.79806, 38.61106], [73.80656, 38.66449], [73.7033, 38.84782], [73.7445, 38.93867], [73.82964, 38.91517], [73.81728, 39.04007], [73.75823, 39.023], [73.60638, 39.24534], [73.54572, 39.27567], [73.55396, 39.3543], [73.5004, 39.38402], [73.59241, 39.40843], [73.59831, 39.46425], [73.45096, 39.46677], [73.31912, 39.38615], [73.18454, 39.35536], [72.85934, 39.35116], [72.62027, 39.39696], [72.33173, 39.33093], [72.23834, 39.17248], [72.17242, 39.2661], [72.09689, 39.26823], [72.04059, 39.36704], [71.90601, 39.27674], [71.79202, 39.27355], [71.7522, 39.32031], [71.80164, 39.40631], [71.76816, 39.45456], [71.62688, 39.44056], [71.5517, 39.45722], [71.55856, 39.57588], [71.49814, 39.61397], [71.08752, 39.50704], [71.06418, 39.41586], [70.7854, 39.38933], [70.64087, 39.58792], [70.44757, 39.60128], [70.2869, 39.53141], [70.11111, 39.58223], [69.87491, 39.53882], [69.68677, 39.59281], [69.3594, 39.52516], [69.26938, 39.8127], [69.35649, 40.01994], [69.43134, 39.98431], [69.43557, 39.92877], [69.53615, 39.93991], [69.5057, 40.03277], [69.53855, 40.0887], [69.53794, 40.11833], [69.55555, 40.12296], [69.57615, 40.10524], [69.64704, 40.12165], [69.67001, 40.10639], [70.01283, 40.23288], [70.58297, 40.00891], [70.57384, 39.99394], [70.47557, 39.93216], [70.55033, 39.96619], [70.58912, 39.95211], [70.65946, 39.9878], [70.65827, 40.0981], [70.7928, 40.12797], [70.80495, 40.16813], [70.9818, 40.22392], [70.8607, 40.217], [70.62342, 40.17396], [70.56394, 40.26421], [70.57149, 40.3442], [70.37511, 40.38605], [70.32626, 40.45174], [70.49871, 40.52503], [70.80009, 40.72825], [70.45251, 41.04438]]], [[[70.68112, 40.90612], [70.6158, 40.97661], [70.56077, 41.00642], [70.54223, 40.98787], [70.57501, 40.98941], [70.6721, 40.90555], [70.68112, 40.90612]]], [[[70.74189, 39.86319], [70.53651, 39.89155], [70.52631, 39.86989], [70.54998, 39.85137], [70.59667, 39.83542], [70.63105, 39.77923], [70.74189, 39.86319]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TK\", iso1A3: \"TKL\", iso1N3: \"772\", wikidata: \"Q36823\", nameEn: \"Tokelau\", country: \"NZ\", groups: [\"061\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"690\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-168.251, -9.44289], [-174.18635, -7.80441], [-174.17993, -10.13616], [-168.251, -9.44289]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TL\", iso1A3: \"TLS\", iso1N3: \"626\", wikidata: \"Q574\", nameEn: \"East Timor\", aliases: [\"Timor-Leste\", \"TP\"], groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"670\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[124.46701, -9.13002], [124.94011, -8.85617], [124.97742, -9.08128], [125.11764, -8.96359], [125.18632, -9.03142], [125.18907, -9.16434], [125.09434, -9.19669], [125.04044, -9.17093], [124.97892, -9.19281], [125.09025, -9.46406], [125.68138, -9.85176], [127.55165, -9.05052], [127.42116, -8.22471], [125.87691, -8.31789], [125.58506, -7.95311], [124.92337, -8.75859], [124.33472, -9.11416], [124.04628, -9.22671], [124.04286, -9.34243], [124.10539, -9.41206], [124.14517, -9.42324], [124.21247, -9.36904], [124.28115, -9.42189], [124.28115, -9.50453], [124.3535, -9.48493], [124.35258, -9.43002], [124.38554, -9.3582], [124.45971, -9.30263], [124.46701, -9.13002]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TM\", iso1A3: \"TKM\", iso1N3: \"795\", wikidata: \"Q874\", nameEn: \"Turkmenistan\", groups: [\"143\", \"142\", \"UN\"], callingCodes: [\"993\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[60.5078, 41.21694], [60.06581, 41.4363], [60.18117, 41.60082], [60.06032, 41.76287], [60.08504, 41.80997], [60.33223, 41.75058], [59.95046, 41.97966], [60.0356, 42.01028], [60.04659, 42.08982], [59.96419, 42.1428], [60.00539, 42.212], [59.94633, 42.27655], [59.4341, 42.29738], [59.2955, 42.37064], [59.17317, 42.52248], [58.93422, 42.5407], [58.6266, 42.79314], [58.57991, 42.64988], [58.27504, 42.69632], [58.14321, 42.62159], [58.29427, 42.56497], [58.51674, 42.30348], [58.40688, 42.29535], [58.3492, 42.43335], [57.99214, 42.50021], [57.90975, 42.4374], [57.92897, 42.24047], [57.84932, 42.18555], [57.6296, 42.16519], [57.30275, 42.14076], [57.03633, 41.92043], [56.96218, 41.80383], [57.03359, 41.41777], [57.13796, 41.36625], [57.03423, 41.25435], [56.00314, 41.32584], [55.45471, 41.25609], [54.95182, 41.92424], [54.20635, 42.38477], [52.97575, 42.1308], [52.47884, 41.78034], [52.26048, 41.69249], [51.7708, 40.29239], [53.89734, 37.3464], [54.24565, 37.32047], [54.36211, 37.34912], [54.58664, 37.45809], [54.67247, 37.43532], [54.77822, 37.51597], [54.81804, 37.61285], [54.77684, 37.62264], [54.851, 37.75739], [55.13412, 37.94705], [55.44152, 38.08564], [55.76561, 38.12238], [55.97847, 38.08024], [56.33278, 38.08132], [56.32454, 38.18502], [56.43303, 38.26054], [56.62255, 38.24005], [56.73928, 38.27887], [57.03453, 38.18717], [57.21169, 38.28965], [57.37236, 38.09321], [57.35042, 37.98546], [57.79534, 37.89299], [58.21399, 37.77281], [58.22999, 37.6856], [58.39959, 37.63134], [58.47786, 37.6433], [58.5479, 37.70526], [58.6921, 37.64548], [58.9338, 37.67374], [59.22905, 37.51161], [59.33507, 37.53146], [59.39797, 37.47892], [59.39385, 37.34257], [59.55178, 37.13594], [59.74678, 37.12499], [60.00768, 37.04102], [60.34767, 36.63214], [61.14516, 36.64644], [61.18187, 36.55348], [61.1393, 36.38782], [61.22719, 36.12759], [61.12007, 35.95992], [61.22444, 35.92879], [61.26152, 35.80749], [61.22719, 35.67038], [61.27371, 35.61482], [61.58742, 35.43803], [61.77693, 35.41341], [61.97743, 35.4604], [62.05709, 35.43803], [62.15871, 35.33278], [62.29191, 35.25964], [62.29878, 35.13312], [62.48006, 35.28796], [62.62288, 35.22067], [62.74098, 35.25432], [62.90853, 35.37086], [63.0898, 35.43131], [63.12276, 35.53196], [63.10079, 35.63024], [63.23262, 35.67487], [63.10318, 35.81782], [63.12276, 35.86208], [63.29579, 35.85985], [63.53475, 35.90881], [63.56496, 35.95106], [63.98519, 36.03773], [64.05385, 36.10433], [64.43288, 36.24401], [64.57295, 36.34362], [64.62514, 36.44311], [64.61141, 36.6351], [64.97945, 37.21913], [65.51778, 37.23881], [65.64263, 37.34388], [65.64137, 37.45061], [65.72274, 37.55438], [66.30993, 37.32409], [66.55743, 37.35409], [66.52303, 37.39827], [66.65761, 37.45497], [66.52852, 37.58568], [66.53676, 37.80084], [66.67684, 37.96776], [66.56697, 38.0435], [66.41042, 38.02403], [66.24013, 38.16238], [65.83913, 38.25733], [65.55873, 38.29052], [64.32576, 38.98691], [64.19086, 38.95561], [63.70778, 39.22349], [63.6913, 39.27666], [62.43337, 39.98528], [62.34273, 40.43206], [62.11751, 40.58242], [61.87856, 41.12257], [61.4446, 41.29407], [61.39732, 41.19873], [61.33199, 41.14946], [61.22212, 41.14946], [61.03261, 41.25691], [60.5078, 41.21694]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TN\", iso1A3: \"TUN\", iso1N3: \"788\", wikidata: \"Q948\", nameEn: \"Tunisia\", groups: [\"015\", \"002\", \"UN\"], callingCodes: [\"216\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[11.2718, 37.6713], [7.89009, 38.19924], [8.59123, 37.14286], [8.64044, 36.9401], [8.62972, 36.86499], [8.67706, 36.8364], [8.57613, 36.78062], [8.46537, 36.7706], [8.47609, 36.66607], [8.16167, 36.48817], [8.18936, 36.44939], [8.40731, 36.42208], [8.2626, 35.91733], [8.26472, 35.73669], [8.35371, 35.66373], [8.36086, 35.47774], [8.30329, 35.29884], [8.47318, 35.23376], [8.3555, 35.10007], [8.30727, 34.95378], [8.25189, 34.92009], [8.29655, 34.72798], [8.20482, 34.57575], [7.86264, 34.3987], [7.81242, 34.21841], [7.74207, 34.16492], [7.66174, 34.20167], [7.52851, 34.06493], [7.54088, 33.7726], [7.73687, 33.42114], [7.83028, 33.18851], [8.11433, 33.10175], [8.1179, 33.05086], [8.31895, 32.83483], [8.35999, 32.50101], [9.07483, 32.07865], [9.55544, 30.23971], [9.76848, 30.34366], [9.88152, 30.34074], [10.29516, 30.90337], [10.12239, 31.42098], [10.31364, 31.72648], [10.48497, 31.72956], [10.62788, 31.96629], [10.7315, 31.97235], [11.04234, 32.2145], [11.53898, 32.4138], [11.57828, 32.48013], [11.46037, 32.6307], [11.51549, 33.09826], [11.55852, 33.1409], [11.58941, 33.36891], [11.2718, 37.6713]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TO\", iso1A3: \"TON\", iso1N3: \"776\", wikidata: \"Q678\", nameEn: \"Tonga\", groups: [\"061\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"676\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-176.74538, -22.89767], [-180, -22.90585], [-180, -24.21376], [-173.10761, -24.19665], [-173.13438, -14.94228], [-176.76826, -14.95183], [-176.74538, -22.89767]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TR\", iso1A3: \"TUR\", iso1N3: \"792\", wikidata: \"Q43\", nameEn: \"Turkey\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"90\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[41.54366, 41.52185], [40.89217, 41.72528], [34.8305, 42.4581], [28.32297, 41.98371], [28.02971, 41.98066], [27.91479, 41.97902], [27.83492, 41.99709], [27.81235, 41.94803], [27.69949, 41.97515], [27.55191, 41.90928], [27.52379, 41.93756], [27.45478, 41.96591], [27.27411, 42.10409], [27.22376, 42.10152], [27.19251, 42.06028], [27.08486, 42.08735], [27.03277, 42.0809], [26.95638, 42.00741], [26.79143, 41.97386], [26.62996, 41.97644], [26.56051, 41.92995], [26.57961, 41.90024], [26.53968, 41.82653], [26.36952, 41.82265], [26.33589, 41.76802], [26.32952, 41.73637], [26.35957, 41.71149], [26.47958, 41.67037], [26.5209, 41.62592], [26.59196, 41.60491], [26.59742, 41.48058], [26.61767, 41.42281], [26.62997, 41.34613], [26.5837, 41.32131], [26.5209, 41.33993], [26.39861, 41.25053], [26.32259, 41.24929], [26.31928, 41.07386], [26.3606, 41.02027], [26.33297, 40.98388], [26.35894, 40.94292], [26.32259, 40.94042], [26.28623, 40.93005], [26.29441, 40.89119], [26.26169, 40.9168], [26.20856, 40.86048], [26.21351, 40.83298], [26.15685, 40.80709], [26.12854, 40.77339], [26.12495, 40.74283], [26.08638, 40.73214], [26.0754, 40.72772], [26.03489, 40.73051], [25.94795, 40.72797], [26.04292, 40.3958], [25.61285, 40.17161], [25.94257, 39.39358], [26.43357, 39.43096], [26.70773, 39.0312], [26.61814, 38.81372], [26.21136, 38.65436], [26.32173, 38.48731], [26.24183, 38.44695], [26.21136, 38.17558], [27.05537, 37.9131], [27.16428, 37.72343], [26.99377, 37.69034], [26.95583, 37.64989], [27.14757, 37.32], [27.20312, 36.94571], [27.45627, 36.9008], [27.24613, 36.71622], [27.46117, 36.53789], [27.89482, 36.69898], [27.95037, 36.46155], [28.23708, 36.56812], [29.30783, 36.01033], [29.48192, 36.18377], [29.61002, 36.1731], [29.61805, 36.14179], [29.69611, 36.10365], [29.73302, 35.92555], [32.82353, 35.70297], [35.51152, 36.10954], [35.931, 35.92109], [35.98499, 35.94107], [36.00514, 35.94113], [36.01844, 35.92403], [35.99829, 35.88242], [36.11827, 35.85923], [36.13919, 35.83692], [36.14029, 35.81015], [36.1623, 35.80925], [36.17441, 35.92076], [36.19973, 35.95195], [36.25366, 35.96264], [36.27678, 35.94839], [36.29769, 35.96086], [36.28338, 36.00273], [36.30099, 36.00985], [36.33956, 35.98687], [36.37474, 36.01163], [36.39206, 36.22088], [36.4617, 36.20461], [36.50463, 36.2419], [36.6125, 36.22592], [36.68672, 36.23677], [36.65653, 36.33861], [36.6081, 36.33772], [36.54206, 36.49539], [36.58829, 36.58295], [36.57398, 36.65186], [36.62681, 36.71189], [36.61581, 36.74629], [36.66727, 36.82901], [36.99557, 36.75997], [36.99886, 36.74012], [37.04399, 36.73483], [37.04619, 36.71101], [37.01647, 36.69512], [37.02088, 36.66422], [37.08279, 36.63495], [37.10894, 36.6704], [37.16177, 36.66069], [37.21988, 36.6736], [37.47253, 36.63243], [37.49103, 36.66904], [37.68048, 36.75065], [37.81974, 36.76055], [38.21064, 36.91842], [38.38859, 36.90064], [38.55908, 36.84429], [38.74042, 36.70629], [39.03217, 36.70911], [39.21538, 36.66834], [39.81589, 36.75538], [40.69136, 37.0996], [40.90856, 37.13147], [41.21937, 37.07665], [41.515, 37.08084], [42.00894, 37.17209], [42.18225, 37.28569], [42.19301, 37.31323], [42.2112, 37.32491], [42.22257, 37.31395], [42.22381, 37.30238], [42.20454, 37.28715], [42.21548, 37.28026], [42.23683, 37.2863], [42.26039, 37.27017], [42.2824, 37.2798], [42.34735, 37.22548], [42.32313, 37.17814], [42.35724, 37.10998], [42.56725, 37.14878], [42.78887, 37.38615], [42.93705, 37.32015], [43.11403, 37.37436], [43.30083, 37.30629], [43.33508, 37.33105], [43.50787, 37.24436], [43.56702, 37.25675], [43.63085, 37.21957], [43.7009, 37.23692], [43.8052, 37.22825], [43.82699, 37.19477], [43.84878, 37.22205], [43.90949, 37.22453], [44.02002, 37.33229], [44.13521, 37.32486], [44.2613, 37.25055], [44.27998, 37.16501], [44.22239, 37.15756], [44.18503, 37.09551], [44.25975, 36.98119], [44.30645, 36.97373], [44.35937, 37.02843], [44.35315, 37.04955], [44.38117, 37.05825], [44.42631, 37.05825], [44.63179, 37.19229], [44.76698, 37.16162], [44.78319, 37.1431], [44.7868, 37.16644], [44.75986, 37.21549], [44.81021, 37.2915], [44.58449, 37.45018], [44.61401, 37.60165], [44.56887, 37.6429], [44.62096, 37.71985], [44.55498, 37.783], [44.45948, 37.77065], [44.3883, 37.85433], [44.22509, 37.88859], [44.42476, 38.25763], [44.50115, 38.33939], [44.44386, 38.38295], [44.38309, 38.36117], [44.3119, 38.37887], [44.3207, 38.49799], [44.32058, 38.62752], [44.28065, 38.6465], [44.26155, 38.71427], [44.30322, 38.81581], [44.18863, 38.93881], [44.20946, 39.13975], [44.1043, 39.19842], [44.03667, 39.39223], [44.22452, 39.4169], [44.29818, 39.378], [44.37921, 39.4131], [44.42832, 39.4131], [44.41849, 39.56659], [44.48111, 39.61579], [44.47298, 39.68788], [44.6137, 39.78393], [44.65422, 39.72163], [44.71806, 39.71124], [44.81043, 39.62677], [44.80977, 39.65768], [44.75779, 39.7148], [44.61845, 39.8281], [44.46635, 39.97733], [44.26973, 40.04866], [44.1778, 40.02845], [44.1057, 40.03555], [43.92307, 40.01787], [43.65688, 40.11199], [43.65221, 40.14889], [43.71136, 40.16673], [43.59928, 40.34019], [43.60862, 40.43267], [43.54791, 40.47413], [43.63664, 40.54159], [43.7425, 40.66805], [43.74872, 40.7365], [43.67712, 40.84846], [43.67712, 40.93084], [43.58683, 40.98961], [43.47319, 41.02251], [43.44984, 41.0988], [43.4717, 41.12611], [43.44973, 41.17666], [43.36118, 41.2028], [43.23096, 41.17536], [43.1945, 41.25242], [43.13373, 41.25503], [43.21707, 41.30331], [43.02956, 41.37891], [42.8785, 41.50516], [42.84899, 41.47265], [42.78995, 41.50126], [42.84471, 41.58912], [42.72794, 41.59714], [42.59202, 41.58183], [42.51772, 41.43606], [42.26387, 41.49346], [41.95134, 41.52466], [41.81939, 41.43621], [41.7124, 41.47417], [41.7148, 41.4932], [41.54366, 41.52185]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TT\", iso1A3: \"TTO\", iso1N3: \"780\", wikidata: \"Q754\", nameEn: \"Trinidad and Tobago\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", callingCodes: [\"1 868\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-61.62505, 11.18974], [-62.08693, 10.04435], [-60.89962, 9.81445], [-60.07172, 11.77667], [-61.62505, 11.18974]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TV\", iso1A3: \"TUV\", iso1N3: \"798\", wikidata: \"Q672\", nameEn: \"Tuvalu\", groups: [\"061\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"688\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[174, -5], [174, -11.5], [179.99999, -11.5], [179.99999, -5], [174, -5]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TW\", iso1A3: \"TWN\", iso1N3: \"158\", wikidata: \"Q865\", nameEn: \"Taiwan\", aliases: [\"RC\"], groups: [\"030\", \"142\"], callingCodes: [\"886\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[121.8109, 21.77688], [122.26612, 25.98197], [120.49232, 25.22863], [118.56434, 24.49266], [118.42453, 24.54644], [118.35291, 24.51645], [118.28244, 24.51231], [118.11703, 24.39734], [120.69238, 21.52331], [121.8109, 21.77688]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TZ\", iso1A3: \"TZA\", iso1N3: \"834\", wikidata: \"Q924\", nameEn: \"Tanzania\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"255\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[30.80408, -0.99911], [30.76635, -0.9852], [30.70631, -1.01175], [30.64166, -1.06601], [30.47194, -1.0555], [30.45116, -1.10641], [30.50889, -1.16412], [30.57123, -1.33264], [30.71974, -1.43244], [30.84079, -1.64652], [30.80802, -1.91477], [30.89303, -2.08223], [30.83915, -2.35795], [30.54501, -2.41404], [30.41789, -2.66266], [30.52747, -2.65841], [30.40662, -2.86151], [30.4987, -2.9573], [30.57926, -2.89791], [30.6675, -2.98987], [30.83823, -2.97837], [30.84165, -3.25152], [30.45915, -3.56532], [30.22042, -4.01738], [30.03323, -4.26631], [29.88172, -4.35743], [29.82885, -4.36153], [29.77289, -4.41733], [29.75109, -4.45836], [29.63827, -4.44681], [29.43673, -4.44845], [29.52552, -6.2731], [30.2567, -7.14121], [30.79243, -8.27382], [31.00796, -8.58615], [31.37533, -8.60769], [31.57147, -8.70619], [31.57147, -8.81388], [31.71158, -8.91386], [31.81587, -8.88618], [31.94663, -8.93846], [31.94196, -9.02303], [31.98866, -9.07069], [32.08206, -9.04609], [32.16146, -9.05993], [32.25486, -9.13371], [32.43543, -9.11988], [32.49147, -9.14754], [32.53661, -9.24281], [32.75611, -9.28583], [32.76233, -9.31963], [32.95389, -9.40138], [32.99397, -9.36712], [33.14925, -9.49322], [33.31581, -9.48554], [33.48052, -9.62442], [33.76677, -9.58516], [33.93298, -9.71647], [33.9638, -9.62206], [33.95829, -9.54066], [34.03865, -9.49398], [34.54499, -10.0678], [34.51911, -10.12279], [34.57581, -10.56271], [34.65946, -10.6828], [34.67047, -10.93796], [34.61161, -11.01611], [34.63305, -11.11731], [34.79375, -11.32245], [34.91153, -11.39799], [34.96296, -11.57354], [35.63599, -11.55927], [35.82767, -11.41081], [36.19094, -11.57593], [36.19094, -11.70008], [36.62068, -11.72884], [36.80309, -11.56836], [37.3936, -11.68949], [37.76614, -11.53352], [37.8388, -11.3123], [37.93618, -11.26228], [38.21598, -11.27289], [38.47258, -11.4199], [38.88996, -11.16978], [39.24395, -11.17433], [39.58249, -10.96043], [40.00295, -10.80255], [40.44265, -10.4618], [40.74206, -10.25691], [40.14328, -4.64201], [39.62121, -4.68136], [39.44306, -4.93877], [39.21631, -4.67835], [37.81321, -3.69179], [37.75036, -3.54243], [37.63099, -3.50723], [37.5903, -3.42735], [37.71745, -3.304], [37.67199, -3.06222], [34.0824, -1.02264], [34.03084, -1.05101], [34.02286, -1.00779], [33.93107, -0.99298], [30.80408, -0.99911]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"UA\", iso1A3: \"UKR\", iso1N3: \"804\", wikidata: \"Q212\", nameEn: \"Ukraine\", groups: [\"151\", \"150\", \"UN\"], callingCodes: [\"380\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.57318, 46.10317], [33.61467, 46.13561], [33.63854, 46.14147], [33.61517, 46.22615], [33.646, 46.23028], [33.74047, 46.18555], [33.79715, 46.20482], [33.85234, 46.19863], [33.91549, 46.15938], [34.05272, 46.10838], [34.07311, 46.11769], [34.12929, 46.10494], [34.181, 46.06804], [34.25111, 46.0532], [34.33912, 46.06114], [34.41221, 46.00245], [34.44155, 45.95995], [34.48729, 45.94267], [34.52011, 45.95097], [34.55889, 45.99347], [34.60861, 45.99347], [34.66679, 45.97136], [34.75479, 45.90705], [34.80153, 45.90047], [34.79905, 45.81009], [34.96015, 45.75634], [35.23066, 45.79231], [37.62608, 46.82615], [38.12112, 46.86078], [38.3384, 46.98085], [38.22955, 47.12069], [38.23049, 47.2324], [38.32112, 47.2585], [38.33074, 47.30508], [38.22225, 47.30788], [38.28954, 47.39255], [38.28679, 47.53552], [38.35062, 47.61631], [38.76379, 47.69346], [38.79628, 47.81109], [38.87979, 47.87719], [39.73935, 47.82876], [39.82213, 47.96396], [39.77544, 48.04206], [39.88256, 48.04482], [39.83724, 48.06501], [39.94847, 48.22811], [40.00752, 48.22445], [39.99241, 48.31768], [39.97325, 48.31399], [39.9693, 48.29904], [39.95248, 48.29972], [39.91465, 48.26743], [39.90041, 48.3049], [39.84273, 48.30947], [39.84136, 48.33321], [39.94847, 48.35055], [39.88794, 48.44226], [39.86196, 48.46633], [39.84548, 48.57821], [39.79764, 48.58668], [39.67226, 48.59368], [39.71765, 48.68673], [39.73104, 48.7325], [39.79466, 48.83739], [39.97182, 48.79398], [40.08168, 48.87443], [40.03636, 48.91957], [39.98967, 48.86901], [39.78368, 48.91596], [39.74874, 48.98675], [39.72649, 48.9754], [39.71353, 48.98959], [39.6683, 48.99454], [39.6836, 49.05121], [39.93437, 49.05709], [40.01988, 49.1761], [40.22176, 49.25683], [40.18331, 49.34996], [40.14912, 49.37681], [40.1141, 49.38798], [40.03087, 49.45452], [40.03636, 49.52321], [40.16683, 49.56865], [40.13249, 49.61672], [39.84548, 49.56064], [39.65047, 49.61761], [39.59142, 49.73758], [39.44496, 49.76067], [39.27968, 49.75976], [39.1808, 49.88911], [38.9391, 49.79524], [38.90477, 49.86787], [38.73311, 49.90238], [38.68677, 50.00904], [38.65688, 49.97176], [38.35408, 50.00664], [38.32524, 50.08866], [38.18517, 50.08161], [38.21675, 49.98104], [38.02999, 49.90592], [38.02999, 49.94482], [37.90776, 50.04194], [37.79515, 50.08425], [37.75807, 50.07896], [37.61113, 50.21976], [37.62879, 50.24481], [37.62486, 50.29966], [37.47243, 50.36277], [37.48204, 50.46079], [37.08468, 50.34935], [36.91762, 50.34963], [36.69377, 50.26982], [36.64571, 50.218], [36.56655, 50.2413], [36.58371, 50.28563], [36.47817, 50.31457], [36.30101, 50.29088], [36.20763, 50.3943], [36.06893, 50.45205], [35.8926, 50.43829], [35.80388, 50.41356], [35.73659, 50.35489], [35.61711, 50.35707], [35.58003, 50.45117], [35.47463, 50.49247], [35.39464, 50.64751], [35.48116, 50.66405], [35.47704, 50.77274], [35.41367, 50.80227], [35.39307, 50.92145], [35.32598, 50.94524], [35.40837, 51.04119], [35.31774, 51.08434], [35.20375, 51.04723], [35.12685, 51.16191], [35.14058, 51.23162], [34.97304, 51.2342], [34.82472, 51.17483], [34.6874, 51.18], [34.6613, 51.25053], [34.38802, 51.2746], [34.31661, 51.23936], [34.23009, 51.26429], [34.33446, 51.363], [34.22048, 51.4187], [34.30562, 51.5205], [34.17599, 51.63253], [34.07765, 51.67065], [34.42922, 51.72852], [34.41136, 51.82793], [34.09413, 52.00835], [34.11199, 52.14087], [34.05239, 52.20132], [33.78789, 52.37204], [33.55718, 52.30324], [33.48027, 52.31499], [33.51323, 52.35779], [33.18913, 52.3754], [32.89937, 52.2461], [32.85405, 52.27888], [32.69475, 52.25535], [32.54781, 52.32423], [32.3528, 52.32842], [32.38988, 52.24946], [32.33083, 52.23685], [32.34044, 52.1434], [32.2777, 52.10266], [32.23331, 52.08085], [32.08813, 52.03319], [31.92159, 52.05144], [31.96141, 52.08015], [31.85018, 52.11305], [31.81722, 52.09955], [31.7822, 52.11406], [31.38326, 52.12991], [31.25142, 52.04131], [31.13332, 52.1004], [30.95589, 52.07775], [30.90897, 52.00699], [30.76443, 51.89739], [30.68804, 51.82806], [30.51946, 51.59649], [30.64992, 51.35014], [30.56203, 51.25655], [30.36153, 51.33984], [30.34642, 51.42555], [30.17888, 51.51025], [29.77376, 51.4461], [29.7408, 51.53417], [29.54372, 51.48372], [29.49773, 51.39814], [29.42357, 51.4187], [29.32881, 51.37843], [29.25191, 51.49828], [29.25603, 51.57089], [29.20659, 51.56918], [29.16402, 51.64679], [29.1187, 51.65872], [28.99098, 51.56833], [28.95528, 51.59222], [28.81795, 51.55552], [28.76027, 51.48802], [28.78224, 51.45294], [28.75615, 51.41442], [28.73143, 51.46236], [28.69161, 51.44695], [28.64429, 51.5664], [28.47051, 51.59734], [28.37592, 51.54505], [28.23452, 51.66988], [28.10658, 51.57857], [27.95827, 51.56065], [27.91844, 51.61952], [27.85253, 51.62293], [27.76052, 51.47604], [27.67125, 51.50854], [27.71932, 51.60672], [27.55727, 51.63486], [27.51058, 51.5854], [27.47212, 51.61184], [27.24828, 51.60161], [27.26613, 51.65957], [27.20948, 51.66713], [27.20602, 51.77291], [26.99422, 51.76933], [26.9489, 51.73788], [26.80043, 51.75777], [26.69759, 51.82284], [26.46962, 51.80501], [26.39367, 51.87315], [26.19084, 51.86781], [26.00408, 51.92967], [25.83217, 51.92587], [25.80574, 51.94556], [25.73673, 51.91973], [25.46163, 51.92205], [25.20228, 51.97143], [24.98784, 51.91273], [24.37123, 51.88222], [24.29021, 51.80841], [24.3163, 51.75063], [24.13075, 51.66979], [23.99907, 51.58369], [23.8741, 51.59734], [23.91118, 51.63316], [23.7766, 51.66809], [23.60906, 51.62122], [23.6736, 51.50255], [23.62751, 51.50512], [23.69905, 51.40871], [23.63858, 51.32182], [23.80678, 51.18405], [23.90376, 51.07697], [23.92217, 51.00836], [24.04576, 50.90196], [24.14524, 50.86128], [24.0952, 50.83262], [23.99254, 50.83847], [23.95925, 50.79271], [24.0595, 50.71625], [24.0996, 50.60752], [24.07048, 50.5071], [24.03668, 50.44507], [23.99563, 50.41289], [23.79445, 50.40481], [23.71382, 50.38248], [23.67635, 50.33385], [23.28221, 50.0957], [22.99329, 49.84249], [22.83179, 49.69875], [22.80261, 49.69098], [22.78304, 49.65543], [22.64534, 49.53094], [22.69444, 49.49378], [22.748, 49.32759], [22.72009, 49.20288], [22.86336, 49.10513], [22.89122, 49.00725], [22.56155, 49.08865], [22.54338, 49.01424], [22.48296, 48.99172], [22.42934, 48.92857], [22.34151, 48.68893], [22.21379, 48.6218], [22.16023, 48.56548], [22.14689, 48.4005], [22.2083, 48.42534], [22.38133, 48.23726], [22.49806, 48.25189], [22.59007, 48.15121], [22.58733, 48.10813], [22.66835, 48.09162], [22.73427, 48.12005], [22.81804, 48.11363], [22.87847, 48.04665], [22.84276, 47.98602], [22.89849, 47.95851], [22.94301, 47.96672], [22.92241, 48.02002], [23.0158, 47.99338], [23.08858, 48.00716], [23.1133, 48.08061], [23.15999, 48.12188], [23.27397, 48.08245], [23.33577, 48.0237], [23.4979, 47.96858], [23.52803, 48.01818], [23.5653, 48.00499], [23.63894, 48.00293], [23.66262, 47.98786], [23.75188, 47.99705], [23.80904, 47.98142], [23.8602, 47.9329], [23.89352, 47.94512], [23.94192, 47.94868], [23.96337, 47.96672], [23.98553, 47.96076], [24.00801, 47.968], [24.02999, 47.95087], [24.06466, 47.95317], [24.11281, 47.91487], [24.22566, 47.90231], [24.34926, 47.9244], [24.43578, 47.97131], [24.61994, 47.95062], [24.70632, 47.84428], [24.81893, 47.82031], [24.88896, 47.7234], [25.11144, 47.75203], [25.23778, 47.89403], [25.63878, 47.94924], [25.77723, 47.93919], [26.05901, 47.9897], [26.17711, 47.99246], [26.33504, 48.18418], [26.55202, 48.22445], [26.62823, 48.25804], [26.6839, 48.35828], [26.79239, 48.29071], [26.82809, 48.31629], [26.71274, 48.40388], [26.85556, 48.41095], [26.93384, 48.36558], [27.03821, 48.37653], [27.0231, 48.42485], [27.08078, 48.43214], [27.13434, 48.37288], [27.27855, 48.37534], [27.32159, 48.4434], [27.37604, 48.44398], [27.37741, 48.41026], [27.44333, 48.41209], [27.46942, 48.454], [27.5889, 48.49224], [27.59027, 48.46311], [27.6658, 48.44034], [27.74422, 48.45926], [27.79225, 48.44244], [27.81902, 48.41874], [27.87533, 48.4037], [27.88391, 48.36699], [27.95883, 48.32368], [28.04527, 48.32661], [28.09873, 48.3124], [28.07504, 48.23494], [28.17666, 48.25963], [28.19314, 48.20749], [28.2856, 48.23202], [28.32508, 48.23384], [28.35519, 48.24957], [28.36996, 48.20543], [28.34912, 48.1787], [28.30586, 48.1597], [28.30609, 48.14018], [28.34009, 48.13147], [28.38712, 48.17567], [28.43701, 48.15832], [28.42454, 48.12047], [28.48428, 48.0737], [28.53921, 48.17453], [28.69896, 48.13106], [28.85232, 48.12506], [28.8414, 48.03392], [28.9306, 47.96255], [29.1723, 47.99013], [29.19839, 47.89261], [29.27804, 47.88893], [29.20663, 47.80367], [29.27255, 47.79953], [29.22242, 47.73607], [29.22414, 47.60012], [29.11743, 47.55001], [29.18603, 47.43387], [29.3261, 47.44664], [29.39889, 47.30179], [29.47854, 47.30366], [29.48678, 47.36043], [29.5733, 47.36508], [29.59665, 47.25521], [29.54996, 47.24962], [29.57696, 47.13581], [29.49732, 47.12878], [29.53044, 47.07851], [29.61038, 47.09932], [29.62137, 47.05069], [29.57056, 46.94766], [29.72986, 46.92234], [29.75458, 46.8604], [29.87405, 46.88199], [29.98814, 46.82358], [29.94522, 46.80055], [29.9743, 46.75325], [29.94409, 46.56002], [29.88916, 46.54302], [30.02511, 46.45132], [30.16794, 46.40967], [30.09103, 46.38694], [29.94114, 46.40114], [29.88329, 46.35851], [29.74496, 46.45605], [29.66359, 46.4215], [29.6763, 46.36041], [29.5939, 46.35472], [29.49914, 46.45889], [29.35357, 46.49505], [29.24886, 46.37912], [29.23547, 46.55435], [29.02409, 46.49582], [29.01241, 46.46177], [28.9306, 46.45699], [29.004, 46.31495], [28.98478, 46.31803], [28.94953, 46.25852], [29.06656, 46.19716], [28.94643, 46.09176], [29.00613, 46.04962], [28.98004, 46.00385], [28.74383, 45.96664], [28.78503, 45.83475], [28.69852, 45.81753], [28.70401, 45.78019], [28.52823, 45.73803], [28.47879, 45.66994], [28.51587, 45.6613], [28.54196, 45.58062], [28.49252, 45.56716], [28.51449, 45.49982], [28.43072, 45.48538], [28.41836, 45.51715], [28.30201, 45.54744], [28.21139, 45.46895], [28.28504, 45.43907], [28.34554, 45.32102], [28.5735, 45.24759], [28.71358, 45.22631], [28.78911, 45.24179], [28.81383, 45.3384], [28.94292, 45.28045], [28.96077, 45.33164], [29.24779, 45.43388], [29.42632, 45.44545], [29.59798, 45.38857], [29.68175, 45.26885], [29.65428, 45.25629], [29.69272, 45.19227], [30.04414, 45.08461], [31.62627, 45.50633], [33.54017, 46.0123], [33.59087, 46.06013], [33.57318, 46.10317]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"UG\", iso1A3: \"UGA\", iso1N3: \"800\", wikidata: \"Q1036\", nameEn: \"Uganda\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"256\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.93107, -0.99298], [33.9264, -0.54188], [33.98449, -0.13079], [33.90936, 0.10581], [34.10067, 0.36372], [34.08727, 0.44713], [34.11408, 0.48884], [34.13493, 0.58118], [34.20196, 0.62289], [34.27345, 0.63182], [34.31516, 0.75693], [34.40041, 0.80266], [34.43349, 0.85254], [34.52369, 1.10692], [34.57427, 1.09868], [34.58029, 1.14712], [34.67562, 1.21265], [34.80223, 1.22754], [34.82606, 1.26626], [34.82606, 1.30944], [34.7918, 1.36752], [34.87819, 1.5596], [34.92734, 1.56109], [34.9899, 1.6668], [34.98692, 1.97348], [34.90947, 2.42447], [34.95267, 2.47209], [34.77244, 2.70272], [34.78137, 2.76223], [34.73967, 2.85447], [34.65774, 2.8753], [34.60114, 2.93034], [34.56242, 3.11478], [34.45815, 3.18319], [34.40006, 3.37949], [34.41794, 3.44342], [34.39112, 3.48802], [34.44922, 3.51627], [34.45815, 3.67385], [34.15429, 3.80464], [34.06046, 4.15235], [33.9873, 4.23316], [33.51264, 3.75068], [33.18356, 3.77812], [33.02852, 3.89296], [32.89746, 3.81339], [32.72021, 3.77327], [32.41337, 3.748], [32.20782, 3.6053], [32.19888, 3.50867], [32.08866, 3.53543], [32.08491, 3.56287], [32.05187, 3.589], [31.95907, 3.57408], [31.96205, 3.6499], [31.86821, 3.78664], [31.81459, 3.82083], [31.72075, 3.74354], [31.50776, 3.63652], [31.50478, 3.67814], [31.29476, 3.8015], [31.16666, 3.79853], [30.97601, 3.693], [30.85153, 3.48867], [30.94081, 3.50847], [30.93486, 3.40737], [30.84251, 3.26908], [30.77101, 3.04897], [30.8574, 2.9508], [30.8857, 2.83923], [30.75612, 2.5863], [30.74271, 2.43601], [30.83059, 2.42559], [30.91102, 2.33332], [30.96911, 2.41071], [31.06593, 2.35862], [31.07934, 2.30207], [31.12104, 2.27676], [31.1985, 2.29462], [31.20148, 2.2217], [31.28042, 2.17853], [31.30127, 2.11006], [30.48503, 1.21675], [30.24671, 1.14974], [30.22139, 0.99635], [30.1484, 0.89805], [29.98307, 0.84295], [29.95477, 0.64486], [29.97413, 0.52124], [29.87284, 0.39166], [29.81922, 0.16824], [29.77454, 0.16675], [29.7224, 0.07291], [29.72687, -0.08051], [29.65091, -0.46777], [29.67474, -0.47969], [29.67176, -0.55714], [29.62708, -0.71055], [29.63006, -0.8997], [29.58388, -0.89821], [29.59061, -1.39016], [29.82657, -1.31187], [29.912, -1.48269], [30.16369, -1.34303], [30.35212, -1.06896], [30.47194, -1.0555], [30.64166, -1.06601], [30.70631, -1.01175], [30.76635, -0.9852], [30.80408, -0.99911], [33.93107, -0.99298]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"UM\", iso1A3: \"UMI\", iso1N3: \"581\", wikidata: \"Q16645\", nameEn: \"United States Minor Outlying Islands\", country: \"US\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"UN\", wikidata: \"Q1065\", nameEn: \"United Nations\", level: \"unitedNations\", isoStatus: \"excRes\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"US\", iso1A3: \"USA\", iso1N3: \"840\", wikidata: \"Q30\", nameEn: \"United States of America\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"UY\", iso1A3: \"URY\", iso1N3: \"858\", wikidata: \"Q77\", nameEn: \"Uruguay\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"598\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-57.65132, -30.19229], [-57.61478, -30.25165], [-57.64859, -30.35095], [-57.89115, -30.49572], [-57.8024, -30.77193], [-57.89476, -30.95994], [-57.86729, -31.06352], [-57.9908, -31.34924], [-57.98127, -31.3872], [-58.07569, -31.44916], [-58.0023, -31.53084], [-58.00076, -31.65016], [-58.20252, -31.86966], [-58.10036, -32.25338], [-58.22362, -32.52416], [-58.1224, -32.98842], [-58.40475, -33.11777], [-58.44442, -33.84033], [-58.34425, -34.15035], [-57.83001, -34.69099], [-54.78916, -36.21945], [-52.83257, -34.01481], [-53.37138, -33.74313], [-53.39593, -33.75169], [-53.44031, -33.69344], [-53.52794, -33.68908], [-53.53459, -33.16843], [-53.1111, -32.71147], [-53.37671, -32.57005], [-53.39572, -32.58596], [-53.76024, -32.0751], [-54.17384, -31.86168], [-55.50821, -30.91349], [-55.50841, -30.9027], [-55.51862, -30.89828], [-55.52712, -30.89997], [-55.53276, -30.90218], [-55.53431, -30.89714], [-55.54572, -30.89051], [-55.55218, -30.88193], [-55.55373, -30.8732], [-55.5634, -30.8686], [-55.58866, -30.84117], [-55.87388, -31.05053], [-56.4619, -30.38457], [-56.4795, -30.3899], [-56.49267, -30.39471], [-56.90236, -30.02578], [-57.22502, -30.26121], [-57.65132, -30.19229]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"UZ\", iso1A3: \"UZB\", iso1N3: \"860\", wikidata: \"Q265\", nameEn: \"Uzbekistan\", groups: [\"143\", \"142\", \"UN\"], callingCodes: [\"998\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[65.85194, 42.85481], [65.53277, 43.31856], [65.18666, 43.48835], [64.96464, 43.74748], [64.53885, 43.56941], [63.34656, 43.64003], [62.01711, 43.51008], [61.01475, 44.41383], [58.59711, 45.58671], [55.97842, 44.99622], [55.97832, 44.99622], [55.97822, 44.99617], [55.97811, 44.99617], [55.97801, 44.99612], [55.97801, 44.99607], [55.97791, 44.99607], [55.9778, 44.99607], [55.9777, 44.99601], [55.9777, 44.99596], [55.9776, 44.99591], [55.97749, 44.99591], [55.97739, 44.99591], [55.97739, 44.99586], [55.97729, 44.99586], [55.97718, 44.99581], [55.97708, 44.99576], [55.97698, 44.9957], [55.97698, 44.99565], [55.97687, 44.9956], [55.97677, 44.9956], [55.97677, 44.99555], [55.97677, 44.9955], [55.97667, 44.99545], [55.97656, 44.99539], [55.97646, 44.99534], [55.97646, 44.99529], [55.97636, 44.99524], [55.97636, 44.99519], [55.97625, 44.99514], [55.97615, 44.99508], [55.97615, 44.99503], [55.97615, 44.99498], [55.97615, 44.99493], [55.97615, 44.99483], [55.97615, 44.99477], [55.97605, 44.99477], [55.97605, 44.99467], [55.97605, 44.99462], [55.97605, 44.99457], [55.97605, 44.99452], [55.97594, 44.99446], [55.97584, 44.99441], [55.97584, 44.99436], [55.97584, 44.99431], [55.97584, 44.99426], [55.97584, 44.99421], [55.97584, 44.99415], [55.97584, 44.99405], [55.97584, 44.994], [55.97584, 44.9939], [55.97584, 44.99384], [55.97584, 44.99374], [55.97584, 44.99369], [55.97584, 44.99359], [55.97584, 44.99353], [55.97584, 44.99348], [55.97584, 44.99343], [55.97584, 44.99338], [55.97584, 44.99328], [55.97584, 44.99322], [56.00314, 41.32584], [57.03423, 41.25435], [57.13796, 41.36625], [57.03359, 41.41777], [56.96218, 41.80383], [57.03633, 41.92043], [57.30275, 42.14076], [57.6296, 42.16519], [57.84932, 42.18555], [57.92897, 42.24047], [57.90975, 42.4374], [57.99214, 42.50021], [58.3492, 42.43335], [58.40688, 42.29535], [58.51674, 42.30348], [58.29427, 42.56497], [58.14321, 42.62159], [58.27504, 42.69632], [58.57991, 42.64988], [58.6266, 42.79314], [58.93422, 42.5407], [59.17317, 42.52248], [59.2955, 42.37064], [59.4341, 42.29738], [59.94633, 42.27655], [60.00539, 42.212], [59.96419, 42.1428], [60.04659, 42.08982], [60.0356, 42.01028], [59.95046, 41.97966], [60.33223, 41.75058], [60.08504, 41.80997], [60.06032, 41.76287], [60.18117, 41.60082], [60.06581, 41.4363], [60.5078, 41.21694], [61.03261, 41.25691], [61.22212, 41.14946], [61.33199, 41.14946], [61.39732, 41.19873], [61.4446, 41.29407], [61.87856, 41.12257], [62.11751, 40.58242], [62.34273, 40.43206], [62.43337, 39.98528], [63.6913, 39.27666], [63.70778, 39.22349], [64.19086, 38.95561], [64.32576, 38.98691], [65.55873, 38.29052], [65.83913, 38.25733], [66.24013, 38.16238], [66.41042, 38.02403], [66.56697, 38.0435], [66.67684, 37.96776], [66.53676, 37.80084], [66.52852, 37.58568], [66.65761, 37.45497], [66.52303, 37.39827], [66.55743, 37.35409], [66.64699, 37.32958], [66.95598, 37.40162], [67.08232, 37.35469], [67.13039, 37.27168], [67.2224, 37.24545], [67.2581, 37.17216], [67.51868, 37.26102], [67.78329, 37.1834], [67.8474, 37.31594], [67.81566, 37.43107], [68.12635, 37.93], [68.27159, 37.91477], [68.40343, 38.19484], [68.13289, 38.40822], [68.06274, 38.39435], [68.11366, 38.47169], [68.05873, 38.56087], [68.0807, 38.64136], [68.05598, 38.71641], [68.12877, 38.73677], [68.06948, 38.82115], [68.19743, 38.85985], [68.09704, 39.02589], [67.68915, 39.00775], [67.67833, 39.14479], [67.33226, 39.23739], [67.36522, 39.31287], [67.45998, 39.315], [67.46822, 39.46146], [67.39681, 39.52505], [67.46547, 39.53564], [67.44899, 39.57799], [67.62889, 39.60234], [67.70992, 39.66156], [68.12053, 39.56317], [68.54166, 39.53929], [68.61972, 39.68905], [68.63071, 39.85265], [68.88889, 39.87163], [68.93695, 39.91167], [68.84906, 40.04952], [68.96579, 40.06949], [69.01935, 40.11466], [69.01523, 40.15771], [68.62796, 40.07789], [68.52771, 40.11676], [68.5332, 40.14826], [68.77902, 40.20492], [68.79276, 40.17555], [68.84357, 40.18604], [68.85832, 40.20885], [69.04544, 40.22904], [69.15659, 40.2162], [69.2074, 40.21488], [69.30448, 40.18774], [69.30104, 40.24502], [69.25229, 40.26362], [69.24817, 40.30357], [69.30808, 40.2821], [69.32833, 40.29794], [69.33794, 40.34819], [69.30774, 40.36102], [69.28525, 40.41894], [69.27066, 40.49274], [69.21063, 40.54469], [69.2643, 40.57506], [69.3455, 40.57988], [69.32834, 40.70233], [69.38327, 40.7918], [69.53021, 40.77621], [69.59441, 40.70181], [69.69434, 40.62615], [70.36655, 40.90296], [70.38028, 41.02014], [70.45251, 41.04438], [70.80009, 40.72825], [70.49871, 40.52503], [70.32626, 40.45174], [70.37511, 40.38605], [70.57149, 40.3442], [70.56394, 40.26421], [70.62342, 40.17396], [70.8607, 40.217], [70.9818, 40.22392], [70.95789, 40.28761], [71.05901, 40.28765], [71.13042, 40.34106], [71.36663, 40.31593], [71.4246, 40.28619], [71.51215, 40.26943], [71.51549, 40.22986], [71.61725, 40.20615], [71.61931, 40.26775], [71.68386, 40.26984], [71.70569, 40.20391], [71.69621, 40.18492], [71.71719, 40.17886], [71.73054, 40.14818], [71.82646, 40.21872], [71.85002, 40.25647], [72.05464, 40.27586], [71.96401, 40.31907], [72.18648, 40.49893], [72.24368, 40.46091], [72.40346, 40.4007], [72.44191, 40.48222], [72.41513, 40.50856], [72.38384, 40.51535], [72.41714, 40.55736], [72.34406, 40.60144], [72.40517, 40.61917], [72.47795, 40.5532], [72.66713, 40.5219], [72.66713, 40.59076], [72.69579, 40.59778], [72.73995, 40.58409], [72.74768, 40.58051], [72.74862, 40.57131], [72.75982, 40.57273], [72.74894, 40.59592], [72.74866, 40.60873], [72.80137, 40.67856], [72.84754, 40.67229], [72.85372, 40.7116], [72.8722, 40.71111], [72.93296, 40.73089], [72.99133, 40.76457], [73.0612, 40.76678], [73.13412, 40.79122], [73.13267, 40.83512], [73.01869, 40.84681], [72.94454, 40.8094], [72.84291, 40.85512], [72.68157, 40.84942], [72.59136, 40.86947], [72.55109, 40.96046], [72.48742, 40.97136], [72.45206, 41.03018], [72.38511, 41.02785], [72.36138, 41.04384], [72.34757, 41.06104], [72.34026, 41.04539], [72.324, 41.03381], [72.18339, 40.99571], [72.17594, 41.02377], [72.21061, 41.05607], [72.1792, 41.10621], [72.14864, 41.13363], [72.17594, 41.15522], [72.16433, 41.16483], [72.10745, 41.15483], [72.07249, 41.11739], [71.85964, 41.19081], [71.91457, 41.2982], [71.83914, 41.3546], [71.76625, 41.4466], [71.71132, 41.43012], [71.73054, 41.54713], [71.65914, 41.49599], [71.6787, 41.42111], [71.57227, 41.29175], [71.46688, 41.31883], [71.43814, 41.19644], [71.46148, 41.13958], [71.40198, 41.09436], [71.34877, 41.16807], [71.27187, 41.11015], [71.25813, 41.18796], [71.11806, 41.15359], [71.02193, 41.19494], [70.9615, 41.16393], [70.86263, 41.23833], [70.77885, 41.24813], [70.78572, 41.36419], [70.67586, 41.47953], [70.48909, 41.40335], [70.17682, 41.5455], [70.69777, 41.92554], [71.28719, 42.18033], [71.13263, 42.28356], [70.94483, 42.26238], [69.49545, 41.545], [69.45751, 41.56863], [69.39485, 41.51518], [69.45081, 41.46246], [69.37468, 41.46555], [69.35554, 41.47211], [69.29778, 41.43673], [69.25059, 41.46693], [69.23332, 41.45847], [69.22671, 41.46298], [69.20439, 41.45391], [69.18528, 41.45175], [69.17701, 41.43769], [69.15137, 41.43078], [69.05006, 41.36183], [69.01308, 41.22804], [68.7217, 41.05025], [68.73945, 40.96989], [68.65662, 40.93861], [68.62221, 41.03019], [68.49983, 40.99669], [68.58444, 40.91447], [68.63, 40.59358], [68.49983, 40.56437], [67.96736, 40.83798], [68.1271, 41.0324], [68.08273, 41.08148], [67.98511, 41.02794], [67.9644, 41.14611], [66.69129, 41.1311], [66.53302, 41.87388], [66.00546, 41.94455], [66.09482, 42.93426], [65.85194, 42.85481]], [[70.68112, 40.90612], [70.6721, 40.90555], [70.57501, 40.98941], [70.54223, 40.98787], [70.56077, 41.00642], [70.6158, 40.97661], [70.68112, 40.90612]]], [[[71.21139, 40.03369], [71.12218, 40.03052], [71.06305, 40.1771], [71.00236, 40.18154], [71.01035, 40.05481], [71.11037, 40.01984], [71.11668, 39.99291], [71.09063, 39.99], [71.10501, 39.95568], [71.04979, 39.89808], [71.10531, 39.91354], [71.16101, 39.88423], [71.23067, 39.93581], [71.1427, 39.95026], [71.21139, 40.03369]]], [[[71.86463, 39.98598], [71.78838, 40.01404], [71.71511, 39.96348], [71.7504, 39.93701], [71.84316, 39.95582], [71.86463, 39.98598]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"VA\", iso1A3: \"VAT\", iso1N3: \"336\", wikidata: \"Q237\", nameEn: \"Vatican City\", aliases: [\"Holy See\"], groups: [\"039\", \"150\"], callingCodes: [\"379\", \"39 06\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[12.45181, 41.90056], [12.45446, 41.90028], [12.45435, 41.90143], [12.45626, 41.90172], [12.45691, 41.90125], [12.4577, 41.90115], [12.45834, 41.90174], [12.45826, 41.90281], [12.45755, 41.9033], [12.45762, 41.9058], [12.45561, 41.90629], [12.45543, 41.90738], [12.45091, 41.90625], [12.44984, 41.90545], [12.44815, 41.90326], [12.44582, 41.90194], [12.44834, 41.90095], [12.45181, 41.90056]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"VC\", iso1A3: \"VCT\", iso1N3: \"670\", wikidata: \"Q757\", nameEn: \"St. Vincent and the Grenadines\", aliases: [\"WV\"], groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 784\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-62.64026, 12.69984], [-59.94058, 12.34011], [-61.69315, 14.26451], [-62.64026, 12.69984]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"VE\", iso1A3: \"VEN\", iso1N3: \"862\", wikidata: \"Q717\", nameEn: \"Venezuela\", aliases: [\"YV\"], groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"58\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-71.22331, 13.01387], [-70.92579, 11.96275], [-71.3275, 11.85], [-71.9675, 11.65536], [-72.24983, 11.14138], [-72.4767, 11.1117], [-72.88002, 10.44309], [-72.98085, 9.85253], [-73.36905, 9.16636], [-73.02119, 9.27584], [-72.94052, 9.10663], [-72.77415, 9.10165], [-72.65474, 8.61428], [-72.4042, 8.36513], [-72.36987, 8.19976], [-72.35163, 8.01163], [-72.39137, 8.03534], [-72.47213, 7.96106], [-72.48801, 7.94329], [-72.48183, 7.92909], [-72.47042, 7.92306], [-72.45806, 7.91141], [-72.46183, 7.90682], [-72.44454, 7.86031], [-72.46763, 7.79518], [-72.47827, 7.65604], [-72.45321, 7.57232], [-72.47415, 7.48928], [-72.43132, 7.40034], [-72.19437, 7.37034], [-72.04895, 7.03837], [-71.82441, 7.04314], [-71.44118, 7.02116], [-71.42212, 7.03854], [-71.37234, 7.01588], [-71.03941, 6.98163], [-70.7596, 7.09799], [-70.10716, 6.96516], [-69.41843, 6.1072], [-67.60654, 6.2891], [-67.4625, 6.20625], [-67.43513, 5.98835], [-67.58558, 5.84537], [-67.63914, 5.64963], [-67.59141, 5.5369], [-67.83341, 5.31104], [-67.85358, 4.53249], [-67.62671, 3.74303], [-67.50067, 3.75812], [-67.30945, 3.38393], [-67.85862, 2.86727], [-67.85862, 2.79173], [-67.65696, 2.81691], [-67.21967, 2.35778], [-66.85795, 1.22998], [-66.28507, 0.74585], [-65.6727, 1.01353], [-65.50158, 0.92086], [-65.57288, 0.62856], [-65.11657, 1.12046], [-64.38932, 1.5125], [-64.34654, 1.35569], [-64.08274, 1.64792], [-64.06135, 1.94722], [-63.39827, 2.16098], [-63.39114, 2.4317], [-64.0257, 2.48156], [-64.02908, 2.79797], [-64.48379, 3.7879], [-64.84028, 4.24665], [-64.72977, 4.28931], [-64.57648, 4.12576], [-64.14512, 4.12932], [-63.99183, 3.90172], [-63.86082, 3.94796], [-63.70218, 3.91417], [-63.67099, 4.01731], [-63.50611, 3.83592], [-63.42233, 3.89995], [-63.4464, 3.9693], [-63.21111, 3.96219], [-62.98296, 3.59935], [-62.7655, 3.73099], [-62.74411, 4.03331], [-62.57656, 4.04754], [-62.44822, 4.18621], [-62.13094, 4.08309], [-61.54629, 4.2822], [-61.48569, 4.43149], [-61.29675, 4.44216], [-61.31457, 4.54167], [-61.15703, 4.49839], [-60.98303, 4.54167], [-60.86539, 4.70512], [-60.5802, 4.94312], [-60.73204, 5.20931], [-61.4041, 5.95304], [-61.15058, 6.19558], [-61.20762, 6.58174], [-61.13632, 6.70922], [-60.54873, 6.8631], [-60.39419, 6.94847], [-60.28074, 7.1162], [-60.44116, 7.20817], [-60.54098, 7.14804], [-60.63367, 7.25061], [-60.59802, 7.33194], [-60.71923, 7.55817], [-60.64793, 7.56877], [-60.51959, 7.83373], [-60.38056, 7.8302], [-60.02407, 8.04557], [-59.97059, 8.20791], [-59.83156, 8.23261], [-59.80661, 8.28906], [-59.85562, 8.35213], [-59.98508, 8.53046], [-59.54058, 8.6862], [-60.89962, 9.81445], [-62.08693, 10.04435], [-61.62505, 11.18974], [-63.73917, 11.92623], [-63.19938, 16.44103], [-67.89186, 12.4116], [-68.01417, 11.77722], [-68.33524, 11.78151], [-68.99639, 11.79035], [-71.22331, 13.01387]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"VG\", iso1A3: \"VGB\", iso1N3: \"092\", wikidata: \"Q25305\", nameEn: \"British Virgin Islands\", country: \"GB\", groups: [\"BOTS\", \"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1 284\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-64.47127, 17.55688], [-63.88746, 19.15706], [-65.02435, 18.73231], [-64.86027, 18.39056], [-64.64673, 18.36549], [-64.47127, 17.55688]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"VI\", iso1A3: \"VIR\", iso1N3: \"850\", wikidata: \"Q11703\", nameEn: \"United States Virgin Islands\", aliases: [\"US-VI\"], country: \"US\", groups: [\"Q1352230\", \"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1 340\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-65.02435, 18.73231], [-65.27974, 17.56928], [-64.47127, 17.55688], [-64.64673, 18.36549], [-64.86027, 18.39056], [-65.02435, 18.73231]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"VN\", iso1A3: \"VNM\", iso1N3: \"704\", wikidata: \"Q881\", nameEn: \"Vietnam\", groups: [\"035\", \"142\", \"UN\"], callingCodes: [\"84\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[108.10003, 21.47338], [108.0569, 21.53604], [108.02926, 21.54997], [107.97932, 21.54503], [107.97383, 21.53961], [107.97074, 21.54072], [107.96774, 21.53601], [107.95232, 21.5388], [107.92652, 21.58906], [107.90006, 21.5905], [107.86114, 21.65128], [107.80355, 21.66141], [107.66967, 21.60787], [107.56537, 21.61945], [107.54047, 21.5934], [107.49065, 21.59774], [107.49532, 21.62958], [107.47197, 21.6672], [107.41593, 21.64839], [107.38636, 21.59774], [107.35989, 21.60063], [107.35834, 21.6672], [107.29296, 21.74674], [107.24625, 21.7077], [107.20734, 21.71493], [107.10771, 21.79879], [107.02615, 21.81981], [107.00964, 21.85948], [107.06101, 21.88982], [107.05634, 21.92303], [106.99252, 21.95191], [106.97228, 21.92592], [106.92714, 21.93459], [106.9178, 21.97357], [106.81038, 21.97934], [106.74345, 22.00965], [106.72551, 21.97923], [106.69276, 21.96013], [106.68274, 21.99811], [106.70142, 22.02409], [106.6983, 22.15102], [106.67495, 22.1885], [106.69986, 22.22309], [106.6516, 22.33977], [106.55976, 22.34841], [106.57221, 22.37], [106.55665, 22.46498], [106.58395, 22.474], [106.61269, 22.60301], [106.65316, 22.5757], [106.71698, 22.58432], [106.72321, 22.63606], [106.76293, 22.73491], [106.82404, 22.7881], [106.83685, 22.8098], [106.81271, 22.8226], [106.78422, 22.81532], [106.71128, 22.85982], [106.71387, 22.88296], [106.6734, 22.89587], [106.6516, 22.86862], [106.60179, 22.92884], [106.55976, 22.92311], [106.51306, 22.94891], [106.49749, 22.91164], [106.34961, 22.86718], [106.27022, 22.87722], [106.19705, 22.98475], [106.00179, 22.99049], [105.99568, 22.94178], [105.90119, 22.94168], [105.8726, 22.92756], [105.72382, 23.06641], [105.57594, 23.075], [105.56037, 23.16806], [105.49966, 23.20669], [105.42805, 23.30824], [105.40782, 23.28107], [105.32376, 23.39684], [105.22569, 23.27249], [105.17276, 23.28679], [105.11672, 23.25247], [105.07002, 23.26248], [104.98712, 23.19176], [104.96532, 23.20463], [104.9486, 23.17235], [104.91435, 23.18666], [104.87992, 23.17141], [104.87382, 23.12854], [104.79478, 23.12934], [104.8334, 23.01484], [104.86765, 22.95178], [104.84942, 22.93631], [104.77114, 22.90017], [104.72755, 22.81984], [104.65283, 22.83419], [104.60457, 22.81841], [104.58122, 22.85571], [104.47225, 22.75813], [104.35593, 22.69353], [104.25683, 22.76534], [104.27084, 22.8457], [104.11384, 22.80363], [104.03734, 22.72945], [104.01088, 22.51823], [103.99247, 22.51958], [103.97384, 22.50634], [103.96783, 22.51173], [103.96352, 22.50584], [103.95191, 22.5134], [103.94513, 22.52553], [103.93286, 22.52703], [103.87904, 22.56683], [103.64506, 22.79979], [103.56255, 22.69499], [103.57812, 22.65764], [103.52675, 22.59155], [103.43646, 22.70648], [103.43179, 22.75816], [103.32282, 22.8127], [103.28079, 22.68063], [103.18895, 22.64471], [103.15782, 22.59873], [103.17961, 22.55705], [103.07843, 22.50097], [103.0722, 22.44775], [102.9321, 22.48659], [102.8636, 22.60735], [102.60675, 22.73376], [102.57095, 22.7036], [102.51802, 22.77969], [102.46665, 22.77108], [102.42618, 22.69212], [102.38415, 22.67919], [102.41061, 22.64184], [102.25339, 22.4607], [102.26428, 22.41321], [102.16621, 22.43336], [102.14099, 22.40092], [102.18712, 22.30403], [102.51734, 22.02676], [102.49092, 21.99002], [102.62301, 21.91447], [102.67145, 21.65894], [102.74189, 21.66713], [102.82115, 21.73667], [102.81894, 21.83888], [102.85637, 21.84501], [102.86077, 21.71213], [102.97965, 21.74076], [102.98846, 21.58936], [102.86297, 21.4255], [102.94223, 21.46034], [102.88939, 21.3107], [102.80794, 21.25736], [102.89825, 21.24707], [102.97745, 21.05821], [103.03469, 21.05821], [103.12055, 20.89994], [103.21497, 20.89832], [103.38032, 20.79501], [103.45737, 20.82382], [103.68633, 20.66324], [103.73478, 20.6669], [103.82282, 20.8732], [103.98024, 20.91531], [104.11121, 20.96779], [104.27412, 20.91433], [104.63957, 20.6653], [104.38199, 20.47155], [104.40621, 20.3849], [104.47886, 20.37459], [104.66158, 20.47774], [104.72102, 20.40554], [104.62195, 20.36633], [104.61315, 20.24452], [104.86852, 20.14121], [104.91695, 20.15567], [104.9874, 20.09573], [104.8465, 19.91783], [104.8355, 19.80395], [104.68359, 19.72729], [104.64837, 19.62365], [104.53169, 19.61743], [104.41281, 19.70035], [104.23229, 19.70242], [104.06498, 19.66926], [104.05617, 19.61743], [104.10832, 19.51575], [104.06058, 19.43484], [103.87125, 19.31854], [104.5361, 18.97747], [104.64617, 18.85668], [105.12829, 18.70453], [105.19654, 18.64196], [105.1327, 18.58355], [105.10408, 18.43533], [105.15942, 18.38691], [105.38366, 18.15315], [105.46292, 18.22008], [105.64784, 17.96687], [105.60381, 17.89356], [105.76612, 17.67147], [105.85744, 17.63221], [106.09019, 17.36399], [106.18991, 17.28227], [106.24444, 17.24714], [106.29287, 17.3018], [106.31929, 17.20509], [106.43597, 17.01362], [106.50862, 16.9673], [106.55045, 17.0031], [106.54824, 16.92729], [106.51963, 16.92097], [106.52183, 16.87884], [106.55265, 16.86831], [106.55485, 16.68704], [106.59013, 16.62259], [106.58267, 16.6012], [106.61477, 16.60713], [106.66052, 16.56892], [106.65832, 16.47816], [106.74418, 16.41904], [106.84104, 16.55415], [106.88727, 16.52671], [106.88067, 16.43594], [106.96638, 16.34938], [106.97385, 16.30204], [107.02597, 16.31132], [107.09091, 16.3092], [107.15035, 16.26271], [107.14595, 16.17816], [107.25822, 16.13587], [107.33968, 16.05549], [107.44975, 16.08511], [107.46296, 16.01106], [107.39471, 15.88829], [107.34188, 15.89464], [107.21419, 15.83747], [107.21859, 15.74638], [107.27143, 15.71459], [107.27583, 15.62769], [107.34408, 15.62345], [107.3815, 15.49832], [107.50699, 15.48771], [107.53341, 15.40496], [107.62367, 15.42193], [107.60605, 15.37524], [107.62587, 15.2266], [107.58844, 15.20111], [107.61926, 15.13949], [107.61486, 15.0566], [107.46516, 15.00982], [107.48277, 14.93751], [107.59285, 14.87795], [107.51579, 14.79282], [107.54361, 14.69092], [107.55371, 14.628], [107.52102, 14.59034], [107.52569, 14.54665], [107.48521, 14.40346], [107.44941, 14.41552], [107.39493, 14.32655], [107.40427, 14.24509], [107.33577, 14.11832], [107.37158, 14.07906], [107.35757, 14.02319], [107.38247, 13.99147], [107.44318, 13.99751], [107.46498, 13.91593], [107.45252, 13.78897], [107.53503, 13.73908], [107.61909, 13.52577], [107.62843, 13.3668], [107.49144, 13.01215], [107.49611, 12.88926], [107.55993, 12.7982], [107.5755, 12.52177], [107.55059, 12.36824], [107.4463, 12.29373], [107.42917, 12.24657], [107.34511, 12.33327], [107.15831, 12.27547], [106.99953, 12.08983], [106.92325, 12.06548], [106.79405, 12.0807], [106.70687, 11.96956], [106.4111, 11.97413], [106.4687, 11.86751], [106.44068, 11.86294], [106.44535, 11.8279], [106.41577, 11.76999], [106.45158, 11.68616], [106.44691, 11.66787], [106.37219, 11.69836], [106.30525, 11.67549], [106.26478, 11.72122], [106.18539, 11.75171], [106.13158, 11.73283], [106.06708, 11.77761], [106.02038, 11.77457], [106.00792, 11.7197], [105.95188, 11.63738], [105.88962, 11.67854], [105.8507, 11.66635], [105.80867, 11.60536], [105.81645, 11.56876], [105.87328, 11.55953], [105.88962, 11.43605], [105.86782, 11.28343], [106.10444, 11.07879], [106.1527, 11.10476], [106.1757, 11.07301], [106.20095, 10.97795], [106.14301, 10.98176], [106.18539, 10.79451], [106.06708, 10.8098], [105.94535, 10.9168], [105.93403, 10.83853], [105.84603, 10.85873], [105.86376, 10.89839], [105.77751, 11.03671], [105.50045, 10.94586], [105.42884, 10.96878], [105.34011, 10.86179], [105.11449, 10.96332], [105.08326, 10.95656], [105.02722, 10.89236], [105.09571, 10.72722], [104.95094, 10.64003], [104.87933, 10.52833], [104.59018, 10.53073], [104.49869, 10.4057], [104.47963, 10.43046], [104.43778, 10.42386], [103.99198, 10.48391], [102.47649, 9.66162], [104.81582, 8.03101], [109.55486, 8.10026], [111.60491, 13.57105], [108.00365, 17.98159], [108.10003, 21.47338]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"VU\", iso1A3: \"VUT\", iso1N3: \"548\", wikidata: \"Q686\", nameEn: \"Vanuatu\", groups: [\"054\", \"009\", \"UN\"], callingCodes: [\"678\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[156.73836, -14.50464], [174.245, -23.1974], [172.71443, -12.01327], [156.73836, -14.50464]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"WF\", iso1A3: \"WLF\", iso1N3: \"876\", wikidata: \"Q35555\", nameEn: \"Wallis and Futuna\", country: \"FR\", groups: [\"Q1451600\", \"061\", \"009\", \"UN\"], callingCodes: [\"681\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-178.66551, -14.32452], [-176.76826, -14.95183], [-175.59809, -12.61507], [-178.66551, -14.32452]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"WS\", iso1A3: \"WSM\", iso1N3: \"882\", wikidata: \"Q683\", nameEn: \"Samoa\", groups: [\"061\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"685\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-173.74402, -14.26669], [-170.99605, -15.1275], [-171.39864, -10.21587], [-173.74402, -14.26669]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"XK\", iso1A3: \"XKX\", wikidata: \"Q1246\", nameEn: \"Kosovo\", aliases: [\"KV\"], groups: [\"039\", \"150\"], isoStatus: \"usrAssn\", callingCodes: [\"383\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[21.39045, 42.74888], [21.44047, 42.87276], [21.36941, 42.87397], [21.32974, 42.90424], [21.2719, 42.8994], [21.23534, 42.95523], [21.23877, 43.00848], [21.2041, 43.02277], [21.16734, 42.99694], [21.14465, 43.11089], [21.08952, 43.13471], [21.05378, 43.10707], [21.00749, 43.13984], [20.96287, 43.12416], [20.83727, 43.17842], [20.88685, 43.21697], [20.82145, 43.26769], [20.73811, 43.25068], [20.68688, 43.21335], [20.59929, 43.20492], [20.69515, 43.09641], [20.64557, 43.00826], [20.59929, 43.01067], [20.48692, 42.93208], [20.53484, 42.8885], [20.43734, 42.83157], [20.40594, 42.84853], [20.35692, 42.8335], [20.27869, 42.81945], [20.2539, 42.76245], [20.04898, 42.77701], [20.02088, 42.74789], [20.02915, 42.71147], [20.0969, 42.65559], [20.07761, 42.55582], [20.17127, 42.50469], [20.21797, 42.41237], [20.24399, 42.32168], [20.34479, 42.32656], [20.3819, 42.3029], [20.48857, 42.25444], [20.56955, 42.12097], [20.55633, 42.08173], [20.59434, 42.03879], [20.63069, 41.94913], [20.57946, 41.91593], [20.59524, 41.8818], [20.68523, 41.85318], [20.76786, 41.91839], [20.75464, 42.05229], [21.11491, 42.20794], [21.16614, 42.19815], [21.22728, 42.08909], [21.31983, 42.10993], [21.29913, 42.13954], [21.30496, 42.1418], [21.38428, 42.24465], [21.43882, 42.23609], [21.43882, 42.2789], [21.50823, 42.27156], [21.52145, 42.24465], [21.58992, 42.25915], [21.56772, 42.30946], [21.5264, 42.33634], [21.53467, 42.36809], [21.57021, 42.3647], [21.59029, 42.38042], [21.62887, 42.37664], [21.64209, 42.41081], [21.62556, 42.45106], [21.7035, 42.51899], [21.70522, 42.54176], [21.7327, 42.55041], [21.75672, 42.62695], [21.79413, 42.65923], [21.75025, 42.70125], [21.6626, 42.67813], [21.58755, 42.70418], [21.59154, 42.72643], [21.47498, 42.74695], [21.39045, 42.74888]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"YE\", iso1A3: \"YEM\", iso1N3: \"887\", wikidata: \"Q805\", nameEn: \"Yemen\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"967\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[57.49095, 8.14549], [52.81185, 17.28568], [52.74267, 17.29519], [52.78009, 17.35124], [52.00311, 19.00083], [49.04884, 18.59899], [48.19996, 18.20584], [47.58351, 17.50366], [47.48245, 17.10808], [47.00571, 16.94765], [46.76494, 17.29151], [46.31018, 17.20464], [44.50126, 17.47475], [43.70631, 17.35762], [43.43005, 17.56148], [43.29185, 17.53224], [43.22533, 17.38343], [43.32653, 17.31179], [43.20156, 17.25901], [43.17787, 17.14717], [43.23967, 17.03428], [43.18233, 17.02673], [43.1813, 16.98438], [43.19328, 16.94703], [43.1398, 16.90696], [43.18338, 16.84852], [43.22012, 16.83932], [43.22956, 16.80613], [43.24801, 16.80613], [43.26303, 16.79479], [43.25857, 16.75304], [43.21325, 16.74416], [43.22066, 16.65179], [43.15274, 16.67248], [43.11601, 16.53166], [42.97215, 16.51093], [42.94351, 16.49467], [42.94625, 16.39721], [42.76801, 16.40371], [42.15205, 16.40211], [40.99158, 15.81743], [43.29075, 12.79154], [43.32909, 12.59711], [43.90659, 12.3823], [51.12877, 12.56479], [57.49095, 8.14549]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"YT\", iso1A3: \"MYT\", iso1N3: \"175\", wikidata: \"Q17063\", nameEn: \"Mayotte\", country: \"FR\", groups: [\"Q3320166\", \"EU\", \"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"262\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[43.28731, -13.97126], [45.54824, -13.22353], [45.4971, -11.75965], [43.28731, -13.97126]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ZA\", iso1A3: \"ZAF\", iso1N3: \"710\", wikidata: \"Q258\", nameEn: \"South Africa\", groups: [\"018\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"27\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[31.30611, -22.422], [31.16344, -22.32599], [31.08932, -22.34884], [30.86696, -22.28907], [30.6294, -22.32599], [30.48686, -22.31368], [30.38614, -22.34533], [30.28351, -22.35587], [30.2265, -22.2961], [30.13147, -22.30841], [29.92242, -22.19408], [29.76848, -22.14128], [29.64609, -22.12917], [29.37703, -22.19581], [29.21955, -22.17771], [29.18974, -22.18599], [29.15268, -22.21399], [29.10881, -22.21202], [29.0151, -22.22907], [28.91889, -22.44299], [28.63287, -22.55887], [28.34874, -22.5694], [28.04562, -22.8394], [28.04752, -22.90243], [27.93729, -22.96194], [27.93539, -23.04941], [27.74154, -23.2137], [27.6066, -23.21894], [27.52393, -23.37952], [27.33768, -23.40917], [26.99749, -23.65486], [26.84165, -24.24885], [26.51667, -24.47219], [26.46346, -24.60358], [26.39409, -24.63468], [25.8515, -24.75727], [25.84295, -24.78661], [25.88571, -24.87802], [25.72702, -25.25503], [25.69661, -25.29284], [25.6643, -25.4491], [25.58543, -25.6343], [25.33076, -25.76616], [25.12266, -25.75931], [25.01718, -25.72507], [24.8946, -25.80723], [24.67319, -25.81749], [24.44703, -25.73021], [24.36531, -25.773], [24.18287, -25.62916], [23.9244, -25.64286], [23.47588, -25.29971], [23.03497, -25.29971], [22.86012, -25.50572], [22.70808, -25.99186], [22.56365, -26.19668], [22.41921, -26.23078], [22.21206, -26.3773], [22.06192, -26.61882], [21.90703, -26.66808], [21.83291, -26.65959], [21.77114, -26.69015], [21.7854, -26.79199], [21.69322, -26.86152], [21.37869, -26.82083], [21.13353, -26.86661], [20.87031, -26.80047], [20.68596, -26.9039], [20.63275, -26.78181], [20.61754, -26.4692], [20.86081, -26.14892], [20.64795, -25.47827], [20.29826, -24.94869], [20.03678, -24.81004], [20.02809, -24.78725], [19.99817, -24.76768], [19.99882, -28.42622], [18.99885, -28.89165], [17.4579, -28.68718], [17.15405, -28.08573], [16.90446, -28.057], [16.59922, -28.53246], [16.46592, -28.57126], [16.45332, -28.63117], [12.51595, -32.27486], [38.88176, -48.03306], [34.51034, -26.91792], [32.35222, -26.86027], [32.29584, -26.852], [32.22302, -26.84136], [32.19409, -26.84032], [32.13315, -26.84345], [32.09664, -26.80721], [32.00893, -26.8096], [31.97463, -27.11057], [31.97592, -27.31675], [31.49834, -27.31549], [31.15027, -27.20151], [30.96088, -27.0245], [30.97757, -26.92706], [30.88826, -26.79622], [30.81101, -26.84722], [30.78927, -26.48271], [30.95819, -26.26303], [31.13073, -25.91558], [31.31237, -25.7431], [31.4175, -25.71886], [31.86881, -25.99973], [31.974, -25.95387], [31.92649, -25.84216], [32.00631, -25.65044], [31.97875, -25.46356], [32.01676, -25.38117], [32.03196, -25.10785], [31.9835, -24.29983], [31.90368, -24.18892], [31.87707, -23.95293], [31.77445, -23.90082], [31.70223, -23.72695], [31.67942, -23.60858], [31.56539, -23.47268], [31.55779, -23.176], [31.30611, -22.422]], [[29.33204, -29.45598], [29.28545, -29.58456], [29.12553, -29.76266], [29.16548, -29.91706], [28.9338, -30.05072], [28.80222, -30.10579], [28.68627, -30.12885], [28.399, -30.1592], [28.2319, -30.28476], [28.12073, -30.68072], [27.74814, -30.60635], [27.69467, -30.55862], [27.67819, -30.53437], [27.6521, -30.51707], [27.62137, -30.50509], [27.56781, -30.44562], [27.56901, -30.42504], [27.45452, -30.32239], [27.38108, -30.33456], [27.36649, -30.27246], [27.37293, -30.19401], [27.40778, -30.14577], [27.32555, -30.14785], [27.29603, -30.05473], [27.22719, -30.00718], [27.09489, -29.72796], [27.01016, -29.65439], [27.33464, -29.48161], [27.4358, -29.33465], [27.47254, -29.31968], [27.45125, -29.29708], [27.48679, -29.29349], [27.54258, -29.25575], [27.5158, -29.2261], [27.55974, -29.18954], [27.75458, -28.89839], [27.8907, -28.91612], [27.88933, -28.88156], [27.9392, -28.84864], [27.98675, -28.8787], [28.02503, -28.85991], [28.1317, -28.7293], [28.2348, -28.69471], [28.30518, -28.69531], [28.40612, -28.6215], [28.65091, -28.57025], [28.68043, -28.58744], [29.40524, -29.21246], [29.44883, -29.3772], [29.33204, -29.45598]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ZM\", iso1A3: \"ZMB\", iso1N3: \"894\", wikidata: \"Q953\", nameEn: \"Zambia\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"260\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[32.95389, -9.40138], [32.76233, -9.31963], [32.75611, -9.28583], [32.53661, -9.24281], [32.49147, -9.14754], [32.43543, -9.11988], [32.25486, -9.13371], [32.16146, -9.05993], [32.08206, -9.04609], [31.98866, -9.07069], [31.94196, -9.02303], [31.94663, -8.93846], [31.81587, -8.88618], [31.71158, -8.91386], [31.57147, -8.81388], [31.57147, -8.70619], [31.37533, -8.60769], [31.00796, -8.58615], [30.79243, -8.27382], [28.88917, -8.4831], [28.9711, -8.66935], [28.38526, -9.23393], [28.36562, -9.30091], [28.52636, -9.35379], [28.51627, -9.44726], [28.56208, -9.49122], [28.68532, -9.78], [28.62795, -9.92942], [28.65032, -10.65133], [28.37241, -11.57848], [28.48357, -11.87532], [29.18592, -12.37921], [29.4992, -12.43843], [29.48404, -12.23604], [29.8139, -12.14898], [29.81551, -13.44683], [29.65078, -13.41844], [29.60531, -13.21685], [29.01918, -13.41353], [28.33199, -12.41375], [27.59932, -12.22123], [27.21025, -11.76157], [27.22541, -11.60323], [27.04351, -11.61312], [26.88687, -12.01868], [26.01777, -11.91488], [25.33058, -11.65767], [25.34069, -11.19707], [24.42612, -11.44975], [24.34528, -11.06816], [24.00027, -10.89356], [24.02603, -11.15368], [23.98804, -12.13149], [24.06672, -12.29058], [23.90937, -12.844], [24.03339, -12.99091], [21.97988, -13.00148], [22.00323, -16.18028], [22.17217, -16.50269], [23.20038, -17.47563], [23.47474, -17.62877], [24.23619, -17.47489], [24.32811, -17.49082], [24.38712, -17.46818], [24.5621, -17.52963], [24.70864, -17.49501], [25.00198, -17.58221], [25.26433, -17.79571], [25.51646, -17.86232], [25.6827, -17.81987], [25.85738, -17.91403], [25.85892, -17.97726], [26.08925, -17.98168], [26.0908, -17.93021], [26.21601, -17.88608], [26.55918, -17.99638], [26.68403, -18.07411], [26.74314, -18.0199], [26.89926, -17.98756], [27.14196, -17.81398], [27.30736, -17.60487], [27.61377, -17.34378], [27.62795, -17.24365], [27.83141, -16.96274], [28.73725, -16.5528], [28.76199, -16.51575], [28.81454, -16.48611], [28.8501, -16.04537], [28.9243, -15.93987], [29.01298, -15.93805], [29.21955, -15.76589], [29.4437, -15.68702], [29.8317, -15.6126], [30.35574, -15.6513], [30.41902, -15.62269], [30.22098, -14.99447], [33.24249, -14.00019], [33.16749, -13.93992], [33.07568, -13.98447], [33.02977, -14.05022], [32.99042, -13.95689], [32.88985, -13.82956], [32.79015, -13.80755], [32.76962, -13.77224], [32.84528, -13.71576], [32.7828, -13.64805], [32.68654, -13.64268], [32.66468, -13.60019], [32.68436, -13.55769], [32.73683, -13.57682], [32.84176, -13.52794], [32.86113, -13.47292], [33.0078, -13.19492], [32.98289, -13.12671], [33.02181, -12.88707], [32.96733, -12.88251], [32.94397, -12.76868], [33.05917, -12.59554], [33.18837, -12.61377], [33.28177, -12.54692], [33.37517, -12.54085], [33.54485, -12.35996], [33.47636, -12.32498], [33.3705, -12.34931], [33.25998, -12.14242], [33.33937, -11.91252], [33.32692, -11.59248], [33.24252, -11.59302], [33.23663, -11.40637], [33.29267, -11.43536], [33.29267, -11.3789], [33.39697, -11.15296], [33.25998, -10.88862], [33.28022, -10.84428], [33.47636, -10.78465], [33.70675, -10.56896], [33.54797, -10.36077], [33.53863, -10.20148], [33.31297, -10.05133], [33.37902, -9.9104], [33.36581, -9.81063], [33.31517, -9.82364], [33.2095, -9.61099], [33.12144, -9.58929], [33.10163, -9.66525], [33.05485, -9.61316], [33.00256, -9.63053], [33.00476, -9.5133], [32.95389, -9.40138]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ZW\", iso1A3: \"ZWE\", iso1N3: \"716\", wikidata: \"Q954\", nameEn: \"Zimbabwe\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"263\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[30.41902, -15.62269], [30.35574, -15.6513], [29.8317, -15.6126], [29.4437, -15.68702], [29.21955, -15.76589], [29.01298, -15.93805], [28.9243, -15.93987], [28.8501, -16.04537], [28.81454, -16.48611], [28.76199, -16.51575], [28.73725, -16.5528], [27.83141, -16.96274], [27.62795, -17.24365], [27.61377, -17.34378], [27.30736, -17.60487], [27.14196, -17.81398], [26.89926, -17.98756], [26.74314, -18.0199], [26.68403, -18.07411], [26.55918, -17.99638], [26.21601, -17.88608], [26.0908, -17.93021], [26.08925, -17.98168], [25.85892, -17.97726], [25.85738, -17.91403], [25.6827, -17.81987], [25.51646, -17.86232], [25.26433, -17.79571], [25.23909, -17.90832], [25.31799, -18.07091], [25.39972, -18.12691], [25.53465, -18.39041], [25.68859, -18.56165], [25.79217, -18.6355], [25.82353, -18.82808], [25.94326, -18.90362], [25.99837, -19.02943], [25.96226, -19.08152], [26.17227, -19.53709], [26.72246, -19.92707], [27.21278, -20.08244], [27.29831, -20.28935], [27.28865, -20.49873], [27.69361, -20.48531], [27.72972, -20.51735], [27.69171, -21.08409], [27.91407, -21.31621], [28.01669, -21.57624], [28.29416, -21.59037], [28.49942, -21.66634], [28.58114, -21.63455], [29.07763, -21.81877], [29.04023, -21.85864], [29.02191, -21.90647], [29.02191, -21.95665], [29.04108, -22.00563], [29.08495, -22.04867], [29.14501, -22.07275], [29.1974, -22.07472], [29.24648, -22.05967], [29.3533, -22.18363], [29.37703, -22.19581], [29.64609, -22.12917], [29.76848, -22.14128], [29.92242, -22.19408], [30.13147, -22.30841], [30.2265, -22.2961], [30.28351, -22.35587], [30.38614, -22.34533], [30.48686, -22.31368], [30.6294, -22.32599], [30.86696, -22.28907], [31.08932, -22.34884], [31.16344, -22.32599], [31.30611, -22.422], [31.38336, -22.36919], [32.41234, -21.31246], [32.48236, -21.32873], [32.37115, -21.133], [32.51644, -20.91929], [32.48122, -20.63319], [32.55167, -20.56312], [32.66174, -20.56106], [32.85987, -20.27841], [32.85987, -20.16686], [32.93032, -20.03868], [33.01178, -20.02007], [33.06461, -19.77787], [32.95013, -19.67219], [32.84666, -19.68462], [32.84446, -19.48343], [32.78282, -19.47513], [32.77966, -19.36098], [32.85107, -19.29238], [32.87088, -19.09279], [32.84006, -19.0262], [32.72118, -19.02204], [32.69917, -18.94293], [32.73439, -18.92628], [32.70137, -18.84712], [32.82465, -18.77419], [32.9017, -18.7992], [32.95013, -18.69079], [32.88629, -18.58023], [32.88629, -18.51344], [33.02278, -18.4696], [33.03159, -18.35054], [32.94133, -17.99705], [33.0492, -17.60298], [32.98536, -17.55891], [32.96554, -17.48964], [33.0426, -17.3468], [33.00517, -17.30477], [32.96554, -17.11971], [32.84113, -16.92259], [32.91051, -16.89446], [32.97655, -16.70689], [32.78943, -16.70267], [32.69917, -16.66893], [32.71017, -16.59932], [32.42838, -16.4727], [32.28529, -16.43892], [32.02772, -16.43892], [31.91324, -16.41569], [31.90223, -16.34388], [31.67988, -16.19595], [31.42451, -16.15154], [31.30563, -16.01193], [31.13171, -15.98019], [30.97761, -16.05848], [30.91597, -15.99924], [30.42568, -15.9962], [30.41902, -15.62269]]]] } }\n];\nvar borders_default = { type, features };\n\n// src/country-coder.ts\nvar borders = borders_default;\nvar whichPolygonGetter = {};\nvar featuresByCode = {};\nvar idFilterRegex = /(?=(?!^(and|the|of|el|la|de)$))(\\b(and|the|of|el|la|de)\\b)|[-_ .,'()&[\\]/]/gi;\nfunction canonicalID(id) {\n  let s = id || \"\";\n  if (s.charAt(0) === \".\") {\n    return s.toUpperCase();\n  } else {\n    return s.replace(idFilterRegex, \"\").toUpperCase();\n  }\n}\nvar levels = [\n  \"subterritory\",\n  \"territory\",\n  \"subcountryGroup\",\n  \"country\",\n  \"sharedLandform\",\n  \"intermediateRegion\",\n  \"subregion\",\n  \"region\",\n  \"subunion\",\n  \"union\",\n  \"unitedNations\",\n  \"world\"\n];\nloadDerivedDataAndCaches(borders);\nfunction loadDerivedDataAndCaches(borders2) {\n  let identifierProps = [\"iso1A2\", \"iso1A3\", \"m49\", \"wikidata\", \"emojiFlag\", \"ccTLD\", \"nameEn\"];\n  let geometryFeatures = [];\n  for (let i in borders2.features) {\n    let feature2 = borders2.features[i];\n    feature2.properties.id = feature2.properties.iso1A2 || feature2.properties.m49 || feature2.properties.wikidata;\n    loadM49(feature2);\n    loadTLD(feature2);\n    loadIsoStatus(feature2);\n    loadLevel(feature2);\n    loadGroups(feature2);\n    loadFlag(feature2);\n    cacheFeatureByIDs(feature2);\n    if (feature2.geometry)\n      geometryFeatures.push(feature2);\n  }\n  for (let i in borders2.features) {\n    let feature2 = borders2.features[i];\n    feature2.properties.groups = feature2.properties.groups.map(function(groupID) {\n      return featuresByCode[groupID].properties.id;\n    });\n    loadMembersForGroupsOf(feature2);\n  }\n  for (let i in borders2.features) {\n    let feature2 = borders2.features[i];\n    loadRoadSpeedUnit(feature2);\n    loadRoadHeightUnit(feature2);\n    loadDriveSide(feature2);\n    loadCallingCodes(feature2);\n    loadGroupGroups(feature2);\n  }\n  for (let i in borders2.features) {\n    let feature2 = borders2.features[i];\n    feature2.properties.groups.sort(function(groupID1, groupID2) {\n      return levels.indexOf(featuresByCode[groupID1].properties.level) - levels.indexOf(featuresByCode[groupID2].properties.level);\n    });\n    if (feature2.properties.members)\n      feature2.properties.members.sort(function(id1, id2) {\n        let diff = levels.indexOf(featuresByCode[id1].properties.level) - levels.indexOf(featuresByCode[id2].properties.level);\n        if (diff === 0) {\n          return borders2.features.indexOf(featuresByCode[id1]) - borders2.features.indexOf(featuresByCode[id2]);\n        }\n        return diff;\n      });\n  }\n  let geometryOnlyCollection = {\n    type: \"FeatureCollection\",\n    features: geometryFeatures\n  };\n  whichPolygonGetter = whichPolygon(geometryOnlyCollection);\n  function loadGroups(feature2) {\n    let props = feature2.properties;\n    if (!props.groups) {\n      props.groups = [];\n    }\n    if (feature2.geometry && props.country) {\n      props.groups.push(props.country);\n    }\n    if (props.m49 !== \"001\") {\n      props.groups.push(\"001\");\n    }\n  }\n  function loadM49(feature2) {\n    let props = feature2.properties;\n    if (!props.m49 && props.iso1N3) {\n      props.m49 = props.iso1N3;\n    }\n  }\n  function loadTLD(feature2) {\n    let props = feature2.properties;\n    if (props.level === \"unitedNations\")\n      return;\n    if (!props.ccTLD && props.iso1A2) {\n      props.ccTLD = \".\" + props.iso1A2.toLowerCase();\n    }\n  }\n  function loadIsoStatus(feature2) {\n    let props = feature2.properties;\n    if (!props.isoStatus && props.iso1A2) {\n      props.isoStatus = \"official\";\n    }\n  }\n  function loadLevel(feature2) {\n    let props = feature2.properties;\n    if (props.level)\n      return;\n    if (!props.country) {\n      props.level = \"country\";\n    } else if (!props.iso1A2 || props.isoStatus === \"official\") {\n      props.level = \"territory\";\n    } else {\n      props.level = \"subterritory\";\n    }\n  }\n  function loadGroupGroups(feature2) {\n    let props = feature2.properties;\n    if (feature2.geometry || !props.members)\n      return;\n    let featureLevelIndex = levels.indexOf(props.level);\n    let sharedGroups = [];\n    for (let i in props.members) {\n      let memberID = props.members[i];\n      let member = featuresByCode[memberID];\n      let memberGroups = member.properties.groups.filter(function(groupID) {\n        return groupID !== feature2.properties.id && featureLevelIndex < levels.indexOf(featuresByCode[groupID].properties.level);\n      });\n      if (i === \"0\") {\n        sharedGroups = memberGroups;\n      } else {\n        sharedGroups = sharedGroups.filter(function(groupID) {\n          return memberGroups.indexOf(groupID) !== -1;\n        });\n      }\n    }\n    props.groups = props.groups.concat(sharedGroups.filter(function(groupID) {\n      return props.groups.indexOf(groupID) === -1;\n    }));\n    for (let j in sharedGroups) {\n      let groupFeature = featuresByCode[sharedGroups[j]];\n      if (groupFeature.properties.members.indexOf(props.id) === -1) {\n        groupFeature.properties.members.push(props.id);\n      }\n    }\n  }\n  function loadRoadSpeedUnit(feature2) {\n    let props = feature2.properties;\n    if (feature2.geometry) {\n      if (!props.roadSpeedUnit)\n        props.roadSpeedUnit = \"km/h\";\n    } else if (props.members) {\n      let vals = Array.from(new Set(props.members.map(function(id) {\n        let member = featuresByCode[id];\n        if (member.geometry)\n          return member.properties.roadSpeedUnit || \"km/h\";\n      }).filter(Boolean)));\n      if (vals.length === 1)\n        props.roadSpeedUnit = vals[0];\n    }\n  }\n  function loadRoadHeightUnit(feature2) {\n    let props = feature2.properties;\n    if (feature2.geometry) {\n      if (!props.roadHeightUnit)\n        props.roadHeightUnit = \"m\";\n    } else if (props.members) {\n      let vals = Array.from(new Set(props.members.map(function(id) {\n        let member = featuresByCode[id];\n        if (member.geometry)\n          return member.properties.roadHeightUnit || \"m\";\n      }).filter(Boolean)));\n      if (vals.length === 1)\n        props.roadHeightUnit = vals[0];\n    }\n  }\n  function loadDriveSide(feature2) {\n    let props = feature2.properties;\n    if (feature2.geometry) {\n      if (!props.driveSide)\n        props.driveSide = \"right\";\n    } else if (props.members) {\n      let vals = Array.from(new Set(props.members.map(function(id) {\n        let member = featuresByCode[id];\n        if (member.geometry)\n          return member.properties.driveSide || \"right\";\n      }).filter(Boolean)));\n      if (vals.length === 1)\n        props.driveSide = vals[0];\n    }\n  }\n  function loadCallingCodes(feature2) {\n    let props = feature2.properties;\n    if (!feature2.geometry && props.members) {\n      props.callingCodes = Array.from(new Set(props.members.reduce(function(array, id) {\n        let member = featuresByCode[id];\n        if (member.geometry && member.properties.callingCodes)\n          return array.concat(member.properties.callingCodes);\n        return array;\n      }, [])));\n    }\n  }\n  function loadFlag(feature2) {\n    if (!feature2.properties.iso1A2)\n      return;\n    let flag = feature2.properties.iso1A2.replace(/./g, function(char) {\n      return String.fromCodePoint(char.charCodeAt(0) + 127397);\n    });\n    feature2.properties.emojiFlag = flag;\n  }\n  function loadMembersForGroupsOf(feature2) {\n    for (let j in feature2.properties.groups) {\n      let groupID = feature2.properties.groups[j];\n      let groupFeature = featuresByCode[groupID];\n      if (!groupFeature.properties.members)\n        groupFeature.properties.members = [];\n      groupFeature.properties.members.push(feature2.properties.id);\n    }\n  }\n  function cacheFeatureByIDs(feature2) {\n    let ids = [];\n    for (let k in identifierProps) {\n      let prop = identifierProps[k];\n      let id = feature2.properties[prop];\n      if (id)\n        ids.push(id);\n    }\n    if (feature2.properties.aliases) {\n      for (let j in feature2.properties.aliases) {\n        ids.push(feature2.properties.aliases[j]);\n      }\n    }\n    for (let i in ids) {\n      let id = canonicalID(ids[i]);\n      featuresByCode[id] = feature2;\n    }\n  }\n}\nfunction locArray(loc) {\n  if (Array.isArray(loc)) {\n    return loc;\n  } else if (loc.coordinates) {\n    return loc.coordinates;\n  }\n  return loc.geometry.coordinates;\n}\nfunction smallestFeature(loc) {\n  let query = locArray(loc);\n  let featureProperties = whichPolygonGetter(query);\n  if (!featureProperties)\n    return null;\n  return featuresByCode[featureProperties.id];\n}\nfunction countryFeature(loc) {\n  let feature2 = smallestFeature(loc);\n  if (!feature2)\n    return null;\n  let countryCode = feature2.properties.country || feature2.properties.iso1A2;\n  return featuresByCode[countryCode] || null;\n}\nvar defaultOpts = {\n  level: void 0,\n  maxLevel: void 0,\n  withProp: void 0\n};\nfunction featureForLoc(loc, opts) {\n  let targetLevel = opts.level || \"country\";\n  let maxLevel = opts.maxLevel || \"world\";\n  let withProp = opts.withProp;\n  let targetLevelIndex = levels.indexOf(targetLevel);\n  if (targetLevelIndex === -1)\n    return null;\n  let maxLevelIndex = levels.indexOf(maxLevel);\n  if (maxLevelIndex === -1)\n    return null;\n  if (maxLevelIndex < targetLevelIndex)\n    return null;\n  if (targetLevel === \"country\") {\n    let fastFeature = countryFeature(loc);\n    if (fastFeature) {\n      if (!withProp || fastFeature.properties[withProp]) {\n        return fastFeature;\n      }\n    }\n  }\n  let features2 = featuresContaining(loc);\n  for (let i in features2) {\n    let feature2 = features2[i];\n    let levelIndex = levels.indexOf(feature2.properties.level);\n    if (feature2.properties.level === targetLevel || levelIndex > targetLevelIndex && levelIndex <= maxLevelIndex) {\n      if (!withProp || feature2.properties[withProp]) {\n        return feature2;\n      }\n    }\n  }\n  return null;\n}\nfunction featureForID(id) {\n  let stringID;\n  if (typeof id === \"number\") {\n    stringID = id.toString();\n    if (stringID.length === 1) {\n      stringID = \"00\" + stringID;\n    } else if (stringID.length === 2) {\n      stringID = \"0\" + stringID;\n    }\n  } else {\n    stringID = canonicalID(id);\n  }\n  return featuresByCode[stringID] || null;\n}\nfunction smallestFeaturesForBbox(bbox) {\n  return whichPolygonGetter.bbox(bbox).map(function(props) {\n    return featuresByCode[props.id];\n  });\n}\nfunction smallestOrMatchingFeature(query) {\n  if (typeof query === \"object\") {\n    return smallestFeature(query);\n  }\n  return featureForID(query);\n}\nfunction feature(query, opts = defaultOpts) {\n  if (typeof query === \"object\") {\n    return featureForLoc(query, opts);\n  }\n  return featureForID(query);\n}\nfunction iso1A2Code(query, opts = defaultOpts) {\n  opts.withProp = \"iso1A2\";\n  let match = feature(query, opts);\n  if (!match)\n    return null;\n  return match.properties.iso1A2 || null;\n}\nfunction iso1A3Code(query, opts = defaultOpts) {\n  opts.withProp = \"iso1A3\";\n  let match = feature(query, opts);\n  if (!match)\n    return null;\n  return match.properties.iso1A3 || null;\n}\nfunction iso1N3Code(query, opts = defaultOpts) {\n  opts.withProp = \"iso1N3\";\n  let match = feature(query, opts);\n  if (!match)\n    return null;\n  return match.properties.iso1N3 || null;\n}\nfunction m49Code(query, opts = defaultOpts) {\n  opts.withProp = \"m49\";\n  let match = feature(query, opts);\n  if (!match)\n    return null;\n  return match.properties.m49 || null;\n}\nfunction wikidataQID(query, opts = defaultOpts) {\n  opts.withProp = \"wikidata\";\n  let match = feature(query, opts);\n  if (!match)\n    return null;\n  return match.properties.wikidata;\n}\nfunction emojiFlag(query, opts = defaultOpts) {\n  opts.withProp = \"emojiFlag\";\n  let match = feature(query, opts);\n  if (!match)\n    return null;\n  return match.properties.emojiFlag || null;\n}\nfunction ccTLD(query, opts = defaultOpts) {\n  opts.withProp = \"ccTLD\";\n  let match = feature(query, opts);\n  if (!match)\n    return null;\n  return match.properties.ccTLD || null;\n}\nfunction propertiesForQuery(query, property) {\n  let features2 = featuresContaining(query, false);\n  return features2.map(function(feature2) {\n    return feature2.properties[property];\n  }).filter(Boolean);\n}\nfunction iso1A2Codes(query) {\n  return propertiesForQuery(query, \"iso1A2\");\n}\nfunction iso1A3Codes(query) {\n  return propertiesForQuery(query, \"iso1A3\");\n}\nfunction iso1N3Codes(query) {\n  return propertiesForQuery(query, \"iso1N3\");\n}\nfunction m49Codes(query) {\n  return propertiesForQuery(query, \"m49\");\n}\nfunction wikidataQIDs(query) {\n  return propertiesForQuery(query, \"wikidata\");\n}\nfunction emojiFlags(query) {\n  return propertiesForQuery(query, \"emojiFlag\");\n}\nfunction ccTLDs(query) {\n  return propertiesForQuery(query, \"ccTLD\");\n}\nfunction featuresContaining(query, strict) {\n  let matchingFeatures;\n  if (Array.isArray(query) && query.length === 4) {\n    matchingFeatures = smallestFeaturesForBbox(query);\n  } else {\n    let smallestOrMatching = smallestOrMatchingFeature(query);\n    matchingFeatures = smallestOrMatching ? [smallestOrMatching] : [];\n  }\n  if (!matchingFeatures.length)\n    return [];\n  let returnFeatures;\n  if (!strict || typeof query === \"object\") {\n    returnFeatures = matchingFeatures.slice();\n  } else {\n    returnFeatures = [];\n  }\n  for (let j in matchingFeatures) {\n    let properties = matchingFeatures[j].properties;\n    for (let i in properties.groups) {\n      let groupID = properties.groups[i];\n      let groupFeature = featuresByCode[groupID];\n      if (returnFeatures.indexOf(groupFeature) === -1) {\n        returnFeatures.push(groupFeature);\n      }\n    }\n  }\n  return returnFeatures;\n}\nfunction featuresIn(id, strict) {\n  let feature2 = featureForID(id);\n  if (!feature2)\n    return [];\n  let features2 = [];\n  if (!strict) {\n    features2.push(feature2);\n  }\n  let properties = feature2.properties;\n  if (properties.members) {\n    for (let i in properties.members) {\n      let memberID = properties.members[i];\n      features2.push(featuresByCode[memberID]);\n    }\n  }\n  return features2;\n}\nfunction aggregateFeature(id) {\n  let features2 = featuresIn(id, false);\n  if (features2.length === 0)\n    return null;\n  let aggregateCoordinates = [];\n  for (let i in features2) {\n    let feature2 = features2[i];\n    if (feature2.geometry && feature2.geometry.type === \"MultiPolygon\" && feature2.geometry.coordinates) {\n      aggregateCoordinates = aggregateCoordinates.concat(feature2.geometry.coordinates);\n    }\n  }\n  return {\n    type: \"Feature\",\n    properties: features2[0].properties,\n    geometry: {\n      type: \"MultiPolygon\",\n      coordinates: aggregateCoordinates\n    }\n  };\n}\nfunction isIn(query, bounds) {\n  let queryFeature = smallestOrMatchingFeature(query);\n  let boundsFeature = featureForID(bounds);\n  if (!queryFeature || !boundsFeature)\n    return null;\n  if (queryFeature.properties.id === boundsFeature.properties.id)\n    return true;\n  return queryFeature.properties.groups.indexOf(boundsFeature.properties.id) !== -1;\n}\nfunction isInEuropeanUnion(query) {\n  return isIn(query, \"EU\");\n}\nfunction isInUnitedNations(query) {\n  return isIn(query, \"UN\");\n}\nfunction driveSide(query) {\n  let feature2 = smallestOrMatchingFeature(query);\n  return feature2 && feature2.properties.driveSide || null;\n}\nfunction roadSpeedUnit(query) {\n  let feature2 = smallestOrMatchingFeature(query);\n  return feature2 && feature2.properties.roadSpeedUnit || null;\n}\nfunction roadHeightUnit(query) {\n  let feature2 = smallestOrMatchingFeature(query);\n  return feature2 && feature2.properties.roadHeightUnit || null;\n}\nfunction callingCodes(query) {\n  let feature2 = smallestOrMatchingFeature(query);\n  return feature2 && feature2.properties.callingCodes || [];\n}\nexport {\n  aggregateFeature,\n  borders,\n  callingCodes,\n  ccTLD,\n  ccTLDs,\n  driveSide,\n  emojiFlag,\n  emojiFlags,\n  feature,\n  featuresContaining,\n  featuresIn,\n  isIn,\n  isInEuropeanUnion,\n  isInUnitedNations,\n  iso1A2Code,\n  iso1A2Codes,\n  iso1A3Code,\n  iso1A3Codes,\n  iso1N3Code,\n  iso1N3Codes,\n  m49Code,\n  m49Codes,\n  roadHeightUnit,\n  roadSpeedUnit,\n  wikidataQID,\n  wikidataQIDs\n};\n//# sourceMappingURL=country-coder.mjs.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TLDs = \"(AAA|AARP|ABARTH|ABB|ABBOTT|ABBVIE|ABC|ABLE|ABOGADO|ABUDHABI|AC|ACADEMY|ACCENTURE|ACCOUNTANT|ACCOUNTANTS|ACO|ACTOR|AD|ADAC|ADS|ADULT|AE|AEG|AERO|AETNA|AF|AFAMILYCOMPANY|AFL|AFRICA|AG|AGAKHAN|AGENCY|AI|AIG|AIGO|AIRBUS|AIRFORCE|AIRTEL|AKDN|AL|ALFAROMEO|ALIBABA|ALIPAY|ALLFINANZ|ALLSTATE|ALLY|ALSACE|ALSTOM|AM|AMERICANEXPRESS|AMERICANFAMILY|AMEX|AMFAM|AMICA|AMSTERDAM|ANALYTICS|ANDROID|ANQUAN|ANZ|AO|AOL|APARTMENTS|APP|APPLE|AQ|AQUARELLE|AR|ARAB|ARAMCO|ARCHI|ARMY|ARPA|ART|ARTE|AS|ASDA|ASIA|ASSOCIATES|AT|ATHLETA|ATTORNEY|AU|AUCTION|AUDI|AUDIBLE|AUDIO|AUSPOST|AUTHOR|AUTO|AUTOS|AVIANCA|AW|AWS|AX|AXA|AZ|AZURE|BA|BABY|BAIDU|BANAMEX|BANANAREPUBLIC|BAND|BANK|BAR|BARCELONA|BARCLAYCARD|BARCLAYS|BAREFOOT|BARGAINS|BASEBALL|BASKETBALL|BAUHAUS|BAYERN|BB|BBC|BBT|BBVA|BCG|BCN|BD|BE|BEATS|BEAUTY|BEER|BENTLEY|BERLIN|BEST|BESTBUY|BET|BF|BG|BH|BHARTI|BI|BIBLE|BID|BIKE|BING|BINGO|BIO|BIZ|BJ|BLACK|BLACKFRIDAY|BLOCKBUSTER|BLOG|BLOOMBERG|BLUE|BM|BMS|BMW|BN|BNPPARIBAS|BO|BOATS|BOEHRINGER|BOFA|BOM|BOND|BOO|BOOK|BOOKING|BOSCH|BOSTIK|BOSTON|BOT|BOUTIQUE|BOX|BR|BRADESCO|BRIDGESTONE|BROADWAY|BROKER|BROTHER|BRUSSELS|BS|BT|BUDAPEST|BUGATTI|BUILD|BUILDERS|BUSINESS|BUY|BUZZ|BV|BW|BY|BZ|BZH|CA|CAB|CAFE|CAL|CALL|CALVINKLEIN|CAM|CAMERA|CAMP|CANCERRESEARCH|CANON|CAPETOWN|CAPITAL|CAPITALONE|CAR|CARAVAN|CARDS|CARE|CAREER|CAREERS|CARS|CASA|CASE|CASEIH|CASH|CASINO|CAT|CATERING|CATHOLIC|CBA|CBN|CBRE|CBS|CC|CD|CEB|CENTER|CEO|CERN|CF|CFA|CFD|CG|CH|CHANEL|CHANNEL|CHARITY|CHASE|CHAT|CHEAP|CHINTAI|CHRISTMAS|CHROME|CHURCH|CI|CIPRIANI|CIRCLE|CISCO|CITADEL|CITI|CITIC|CITY|CITYEATS|CK|CL|CLAIMS|CLEANING|CLICK|CLINIC|CLINIQUE|CLOTHING|CLOUD|CLUB|CLUBMED|CM|CN|CO|COACH|CODES|COFFEE|COLLEGE|COLOGNE|COM|COMCAST|COMMBANK|COMMUNITY|COMPANY|COMPARE|COMPUTER|COMSEC|CONDOS|CONSTRUCTION|CONSULTING|CONTACT|CONTRACTORS|COOKING|COOKINGCHANNEL|COOL|COOP|CORSICA|COUNTRY|COUPON|COUPONS|COURSES|CPA|CR|CREDIT|CREDITCARD|CREDITUNION|CRICKET|CROWN|CRS|CRUISE|CRUISES|CSC|CU|CUISINELLA|CV|CW|CX|CY|CYMRU|CYOU|CZ|DABUR|DAD|DANCE|DATA|DATE|DATING|DATSUN|DAY|DCLK|DDS|DE|DEAL|DEALER|DEALS|DEGREE|DELIVERY|DELL|DELOITTE|DELTA|DEMOCRAT|DENTAL|DENTIST|DESI|DESIGN|DEV|DHL|DIAMONDS|DIET|DIGITAL|DIRECT|DIRECTORY|DISCOUNT|DISCOVER|DISH|DIY|DJ|DK|DM|DNP|DO|DOCS|DOCTOR|DOG|DOMAINS|DOT|DOWNLOAD|DRIVE|DTV|DUBAI|DUCK|DUNLOP|DUPONT|DURBAN|DVAG|DVR|DZ|EARTH|EAT|EC|ECO|EDEKA|EDU|EDUCATION|EE|EG|EMAIL|EMERCK|ENERGY|ENGINEER|ENGINEERING|ENTERPRISES|EPSON|EQUIPMENT|ER|ERICSSON|ERNI|ES|ESQ|ESTATE|ESURANCE|ET|ETISALAT|EU|EUROVISION|EUS|EVENTS|EXCHANGE|EXPERT|EXPOSED|EXPRESS|EXTRASPACE|FAGE|FAIL|FAIRWINDS|FAITH|FAMILY|FAN|FANS|FARM|FARMERS|FASHION|FAST|FEDEX|FEEDBACK|FERRARI|FERRERO|FI|FIAT|FIDELITY|FIDO|FILM|FINAL|FINANCE|FINANCIAL|FIRE|FIRESTONE|FIRMDALE|FISH|FISHING|FIT|FITNESS|FJ|FK|FLICKR|FLIGHTS|FLIR|FLORIST|FLOWERS|FLY|FM|FO|FOO|FOOD|FOODNETWORK|FOOTBALL|FORD|FOREX|FORSALE|FORUM|FOUNDATION|FOX|FR|FREE|FRESENIUS|FRL|FROGANS|FRONTDOOR|FRONTIER|FTR|FUJITSU|FUJIXEROX|FUN|FUND|FURNITURE|FUTBOL|FYI|GA|GAL|GALLERY|GALLO|GALLUP|GAME|GAMES|GAP|GARDEN|GAY|GB|GBIZ|GD|GDN|GE|GEA|GENT|GENTING|GEORGE|GF|GG|GGEE|GH|GI|GIFT|GIFTS|GIVES|GIVING|GL|GLADE|GLASS|GLE|GLOBAL|GLOBO|GM|GMAIL|GMBH|GMO|GMX|GN|GODADDY|GOLD|GOLDPOINT|GOLF|GOO|GOODYEAR|GOOG|GOOGLE|GOP|GOT|GOV|GP|GQ|GR|GRAINGER|GRAPHICS|GRATIS|GREEN|GRIPE|GROCERY|GROUP|GS|GT|GU|GUARDIAN|GUCCI|GUGE|GUIDE|GUITARS|GURU|GW|GY|HAIR|HAMBURG|HANGOUT|HAUS|HBO|HDFC|HDFCBANK|HEALTH|HEALTHCARE|HELP|HELSINKI|HERE|HERMES|HGTV|HIPHOP|HISAMITSU|HITACHI|HIV|HK|HKT|HM|HN|HOCKEY|HOLDINGS|HOLIDAY|HOMEDEPOT|HOMEGOODS|HOMES|HOMESENSE|HONDA|HORSE|HOSPITAL|HOST|HOSTING|HOT|HOTELES|HOTELS|HOTMAIL|HOUSE|HOW|HR|HSBC|HT|HU|HUGHES|HYATT|HYUNDAI|IBM|ICBC|ICE|ICU|ID|IE|IEEE|IFM|IKANO|IL|IM|IMAMAT|IMDB|IMMO|IMMOBILIEN|IN|INC|INDUSTRIES|INFINITI|INFO|ING|INK|INSTITUTE|INSURANCE|INSURE|INT|INTEL|INTERNATIONAL|INTUIT|INVESTMENTS|IO|IPIRANGA|IQ|IR|IRISH|IS|ISMAILI|IST|ISTANBUL|IT|ITAU|ITV|IVECO|JAGUAR|JAVA|JCB|JCP|JE|JEEP|JETZT|JEWELRY|JIO|JLL|JM|JMP|JNJ|JO|JOBS|JOBURG|JOT|JOY|JP|JPMORGAN|JPRS|JUEGOS|JUNIPER|KAUFEN|KDDI|KE|KERRYHOTELS|KERRYLOGISTICS|KERRYPROPERTIES|KFH|KG|KH|KI|KIA|KIM|KINDER|KINDLE|KITCHEN|KIWI|KM|KN|KOELN|KOMATSU|KOSHER|KP|KPMG|KPN|KR|KRD|KRED|KUOKGROUP|KW|KY|KYOTO|KZ|LA|LACAIXA|LAMBORGHINI|LAMER|LANCASTER|LANCIA|LAND|LANDROVER|LANXESS|LASALLE|LAT|LATINO|LATROBE|LAW|LAWYER|LB|LC|LDS|LEASE|LECLERC|LEFRAK|LEGAL|LEGO|LEXUS|LGBT|LI|LIDL|LIFE|LIFEINSURANCE|LIFESTYLE|LIGHTING|LIKE|LILLY|LIMITED|LIMO|LINCOLN|LINDE|LINK|LIPSY|LIVE|LIVING|LIXIL|LK|LLC|LLP|LOAN|LOANS|LOCKER|LOCUS|LOFT|LOL|LONDON|LOTTE|LOTTO|LOVE|LPL|LPLFINANCIAL|LR|LS|LT|LTD|LTDA|LU|LUNDBECK|LUPIN|LUXE|LUXURY|LV|LY|MA|MACYS|MADRID|MAIF|MAISON|MAKEUP|MAN|MANAGEMENT|MANGO|MAP|MARKET|MARKETING|MARKETS|MARRIOTT|MARSHALLS|MASERATI|MATTEL|MBA|MC|MCKINSEY|MD|ME|MED|MEDIA|MEET|MELBOURNE|MEME|MEMORIAL|MEN|MENU|MERCKMSD|METLIFE|MG|MH|MIAMI|MICROSOFT|MIL|MINI|MINT|MIT|MITSUBISHI|MK|ML|MLB|MLS|MM|MMA|MN|MO|MOBI|MOBILE|MODA|MOE|MOI|MOM|MONASH|MONEY|MONSTER|MORMON|MORTGAGE|MOSCOW|MOTO|MOTORCYCLES|MOV|MOVIE|MP|MQ|MR|MS|MSD|MT|MTN|MTR|MU|MUSEUM|MUTUAL|MV|MW|MX|MY|MZ|NA|NAB|NAGOYA|NAME|NATIONWIDE|NATURA|NAVY|NBA|NC|NE|NEC|NET|NETBANK|NETFLIX|NETWORK|NEUSTAR|NEW|NEWHOLLAND|NEWS|NEXT|NEXTDIRECT|NEXUS|NF|NFL|NG|NGO|NHK|NI|NICO|NIKE|NIKON|NINJA|NISSAN|NISSAY|NL|NO|NOKIA|NORTHWESTERNMUTUAL|NORTON|NOW|NOWRUZ|NOWTV|NP|NR|NRA|NRW|NTT|NU|NYC|NZ|OBI|OBSERVER|OFF|OFFICE|OKINAWA|OLAYAN|OLAYANGROUP|OLDNAVY|OLLO|OM|OMEGA|ONE|ONG|ONL|ONLINE|ONYOURSIDE|OOO|OPEN|ORACLE|ORANGE|ORG|ORGANIC|ORIGINS|OSAKA|OTSUKA|OTT|OVH|PA|PAGE|PANASONIC|PARIS|PARS|PARTNERS|PARTS|PARTY|PASSAGENS|PAY|PCCW|PE|PET|PF|PFIZER|PG|PH|PHARMACY|PHD|PHILIPS|PHONE|PHOTO|PHOTOGRAPHY|PHOTOS|PHYSIO|PICS|PICTET|PICTURES|PID|PIN|PING|PINK|PIONEER|PIZZA|PK|PL|PLACE|PLAY|PLAYSTATION|PLUMBING|PLUS|PM|PN|PNC|POHL|POKER|POLITIE|PORN|POST|PR|PRAMERICA|PRAXI|PRESS|PRIME|PRO|PROD|PRODUCTIONS|PROF|PROGRESSIVE|PROMO|PROPERTIES|PROPERTY|PROTECTION|PRU|PRUDENTIAL|PS|PT|PUB|PW|PWC|PY|QA|QPON|QUEBEC|QUEST|QVC|RACING|RADIO|RAID|RE|READ|REALESTATE|REALTOR|REALTY|RECIPES|RED|REDSTONE|REDUMBRELLA|REHAB|REISE|REISEN|REIT|RELIANCE|REN|RENT|RENTALS|REPAIR|REPORT|REPUBLICAN|REST|RESTAURANT|REVIEW|REVIEWS|REXROTH|RICH|RICHARDLI|RICOH|RIGHTATHOME|RIL|RIO|RIP|RMIT|RO|ROCHER|ROCKS|RODEO|ROGERS|ROOM|RS|RSVP|RU|RUGBY|RUHR|RUN|RW|RWE|RYUKYU|SA|SAARLAND|SAFE|SAFETY|SAKURA|SALE|SALON|SAMSCLUB|SAMSUNG|SANDVIK|SANDVIKCOROMANT|SANOFI|SAP|SARL|SAS|SAVE|SAXO|SB|SBI|SBS|SC|SCA|SCB|SCHAEFFLER|SCHMIDT|SCHOLARSHIPS|SCHOOL|SCHULE|SCHWARZ|SCIENCE|SCJOHNSON|SCOR|SCOT|SD|SE|SEARCH|SEAT|SECURE|SECURITY|SEEK|SELECT|SENER|SERVICES|SES|SEVEN|SEW|SEX|SEXY|SFR|SG|SH|SHANGRILA|SHARP|SHAW|SHELL|SHIA|SHIKSHA|SHOES|SHOP|SHOPPING|SHOUJI|SHOW|SHOWTIME|SHRIRAM|SI|SILK|SINA|SINGLES|SITE|SJ|SK|SKI|SKIN|SKY|SKYPE|SL|SLING|SM|SMART|SMILE|SN|SNCF|SO|SOCCER|SOCIAL|SOFTBANK|SOFTWARE|SOHU|SOLAR|SOLUTIONS|SONG|SONY|SOY|SPACE|SPORT|SPOT|SPREADBETTING|SR|SRL|SS|ST|STADA|STAPLES|STAR|STATEBANK|STATEFARM|STC|STCGROUP|STOCKHOLM|STORAGE|STORE|STREAM|STUDIO|STUDY|STYLE|SU|SUCKS|SUPPLIES|SUPPLY|SUPPORT|SURF|SURGERY|SUZUKI|SV|SWATCH|SWIFTCOVER|SWISS|SX|SY|SYDNEY|SYMANTEC|SYSTEMS|SZ|TAB|TAIPEI|TALK|TAOBAO|TARGET|TATAMOTORS|TATAR|TATTOO|TAX|TAXI|TC|TCI|TD|TDK|TEAM|TECH|TECHNOLOGY|TEL|TEMASEK|TENNIS|TEVA|TF|TG|TH|THD|THEATER|THEATRE|TIAA|TICKETS|TIENDA|TIFFANY|TIPS|TIRES|TIROL|TJ|TJMAXX|TJX|TK|TKMAXX|TL|TM|TMALL|TN|TO|TODAY|TOKYO|TOOLS|TOP|TORAY|TOSHIBA|TOTAL|TOURS|TOWN|TOYOTA|TOYS|TR|TRADE|TRADING|TRAINING|TRAVEL|TRAVELCHANNEL|TRAVELERS|TRAVELERSINSURANCE|TRUST|TRV|TT|TUBE|TUI|TUNES|TUSHU|TV|TVS|TW|TZ|UA|UBANK|UBS|UG|UK|UNICOM|UNIVERSITY|UNO|UOL|UPS|US|UY|UZ|VA|VACATIONS|VANA|VANGUARD|VC|VE|VEGAS|VENTURES|VERISIGN|VERSICHERUNG|VET|VG|VI|VIAJES|VIDEO|VIG|VIKING|VILLAS|VIN|VIP|VIRGIN|VISA|VISION|VIVA|VIVO|VLAANDEREN|VN|VODKA|VOLKSWAGEN|VOLVO|VOTE|VOTING|VOTO|VOYAGE|VU|VUELOS|WALES|WALMART|WALTER|WANG|WANGGOU|WATCH|WATCHES|WEATHER|WEATHERCHANNEL|WEBCAM|WEBER|WEBSITE|WED|WEDDING|WEIBO|WEIR|WF|WHOSWHO|WIEN|WIKI|WILLIAMHILL|WIN|WINDOWS|WINE|WINNERS|WME|WOLTERSKLUWER|WOODSIDE|WORK|WORKS|WORLD|WOW|WS|WTC|WTF|XBOX|XEROX|XFINITY|XIHUAN|XIN|XN--11B4C3D|XN--1CK2E1B|XN--1QQW23A|XN--2SCRJ9C|XN--30RR7Y|XN--3BST00M|XN--3DS443G|XN--3E0B707E|XN--3HCRJ9C|XN--3OQ18VL8PN36A|XN--3PXU8K|XN--42C2D9A|XN--45BR5CYL|XN--45BRJ9C|XN--45Q11C|XN--4GBRIM|XN--54B7FTA0CC|XN--55QW42G|XN--55QX5D|XN--5SU34J936BGSG|XN--5TZM5G|XN--6FRZ82G|XN--6QQ986B3XL|XN--80ADXHKS|XN--80AO21A|XN--80AQECDR1A|XN--80ASEHDB|XN--80ASWG|XN--8Y0A063A|XN--90A3AC|XN--90AE|XN--90AIS|XN--9DBQ2A|XN--9ET52U|XN--9KRT00A|XN--B4W605FERD|XN--BCK1B9A5DRE4C|XN--C1AVG|XN--C2BR7G|XN--CCK2B3B|XN--CG4BKI|XN--CLCHC0EA0B2G2A9GCD|XN--CZR694B|XN--CZRS0T|XN--CZRU2D|XN--D1ACJ3B|XN--D1ALF|XN--E1A4C|XN--ECKVDTC9D|XN--EFVY88H|XN--FCT429K|XN--FHBEI|XN--FIQ228C5HS|XN--FIQ64B|XN--FIQS8S|XN--FIQZ9S|XN--FJQ720A|XN--FLW351E|XN--FPCRJ9C3D|XN--FZC2C9E2C|XN--FZYS8D69UVGM|XN--G2XX48C|XN--GCKR3F0F|XN--GECRJ9C|XN--GK3AT1E|XN--H2BREG3EVE|XN--H2BRJ9C|XN--H2BRJ9C8C|XN--HXT814E|XN--I1B6B1A6A2E|XN--IMR513N|XN--IO0A7I|XN--J1AEF|XN--J1AMH|XN--J6W193G|XN--JLQ61U9W7B|XN--JVR189M|XN--KCRX77D1X4A|XN--KPRW13D|XN--KPRY57D|XN--KPU716F|XN--KPUT3I|XN--L1ACC|XN--LGBBAT1AD8J|XN--MGB9AWBF|XN--MGBA3A3EJT|XN--MGBA3A4F16A|XN--MGBA7C0BBN0A|XN--MGBAAKC7DVF|XN--MGBAAM7A8H|XN--MGBAB2BD|XN--MGBAH1A3HJKRD|XN--MGBAI9AZGQP6J|XN--MGBAYH7GPA|XN--MGBBH1A|XN--MGBBH1A71E|XN--MGBC0A9AZCG|XN--MGBCA7DZDO|XN--MGBCPQ6GPA1A|XN--MGBERP4A5D4AR|XN--MGBGU82A|XN--MGBI4ECEXP|XN--MGBPL2FH|XN--MGBT3DHD|XN--MGBTX2B|XN--MGBX4CD0AB|XN--MIX891F|XN--MK1BU44C|XN--MXTQ1M|XN--NGBC5AZD|XN--NGBE9E0A|XN--NGBRX|XN--NODE|XN--NQV7F|XN--NQV7FS00EMA|XN--NYQY26A|XN--O3CW4H|XN--OGBPF8FL|XN--OTU796D|XN--P1ACF|XN--P1AI|XN--PBT977C|XN--PGBS0DH|XN--PSSY2U|XN--Q7CE6A|XN--Q9JYB4C|XN--QCKA1PMC|XN--QXA6A|XN--QXAM|XN--RHQV96G|XN--ROVU88B|XN--RVC1E0AM3E|XN--S9BRJ9C|XN--SES554G|XN--T60B56A|XN--TCKWE|XN--TIQ49XQYJ|XN--UNUP4Y|XN--VERMGENSBERATER-CTB|XN--VERMGENSBERATUNG-PWB|XN--VHQUV|XN--VUQ861B|XN--W4R85EL8FHU5DNRA|XN--W4RS40L|XN--WGBH1C|XN--WGBL6A|XN--XHQ521B|XN--XKC2AL3HYE2A|XN--XKC2DL3A5EE0H|XN--Y9A3AQ|XN--YFRO4I67O|XN--YGBI2AMMX|XN--ZFR164B|XXX|XYZ|YACHTS|YAHOO|YAMAXUN|YANDEX|YE|YODOBASHI|YOGA|YOKOHAMA|YOU|YOUTUBE|YT|YUN|ZA|ZAPPOS|ZARA|ZERO|ZIP|ZM|ZONE|ZUERICH|ZW|TEST)\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tlds_1 = require(\"./tlds\");\nexports.openingParenthesis = \"([\\\"'{\";\nexports.closingParenthesis = \")]\\\"'}\";\nexports.parenthesis = exports.openingParenthesis\n    .split(\"\")\n    .map(function (x, i) { return \"\" + x + exports.closingParenthesis.charAt(i); });\nexports.htmlAttributes = [\n    \"src\",\n    \"data\",\n    \"href\",\n    \"cite\",\n    \"formaction\",\n    \"icon\",\n    \"manifest\",\n    \"poster\",\n    \"codebase\",\n    \"background\",\n    \"profile\",\n    \"usemap\",\n    \"itemtype\",\n    \"action\",\n    \"longdesc\",\n    \"classid\",\n    \"archive\"\n];\nexports.nonLatinAlphabetRanges = \"\\\\u0041-\\\\u005A\\\\u0061-\\\\u007A\\\\u00AA\\\\u00B5\\\\u00BA\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u0527\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08A0\\\\u08A2-\\\\u08AC\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0977\\\\u0979-\\\\u097F\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C33\\\\u0C35-\\\\u0C39\\\\u0C3D\\\\u0C58\\\\u0C59\\\\u0C60\\\\u0C61\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D60\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F4\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1877\\\\u1880-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191C\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19C1-\\\\u19C7\\\\u1A00-\\\\u1A16\\\\u1A20-\\\\u1A54\\\\u1AA7\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4B\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF1\\\\u1CF5\\\\u1CF6\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2183\\\\u2184\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005\\\\u3006\\\\u3031-\\\\u3035\\\\u303B\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BA\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FCC\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA697\\\\uA6A0-\\\\uA6E5\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B-\\\\uA78E\\\\uA790-\\\\uA793\\\\uA7A0-\\\\uA7AA\\\\uA7F8-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA60-\\\\uAA76\\\\uAA7A\\\\uAA80-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uABC0-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC\";\nexports.TLDs = tlds_1.TLDs;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction applyOption(string, props, option) {\n    // conditional\n    if (typeof option === \"function\") {\n        return option(string, props);\n    }\n    // all\n    else {\n        return option;\n    }\n}\nfunction transform(input, options) {\n    var protocol = \"\";\n    var truncation = Infinity;\n    var attributes = {};\n    var truncateFromTheMiddle = false;\n    // special transformation\n    if (options && options.specialTransform) {\n        for (var index = 0; index < options.specialTransform.length; index++) {\n            var transformer = options.specialTransform[index];\n            if (transformer.test.test(input.string)) {\n                return transformer.transform(input.string, input);\n            }\n        }\n    }\n    // exclude\n    if (options && options.exclude) {\n        if (applyOption(input.string, input, options.exclude))\n            return input.string;\n    }\n    // protocol\n    if (options && options.protocol) {\n        protocol = applyOption(input.string, input, options.protocol);\n    }\n    if (input.protocol) {\n        protocol = \"\";\n    }\n    else if (!protocol) {\n        protocol = input.isEmail\n            ? \"mailto:\"\n            : input.isFile\n                ? \"file:///\"\n                : \"http://\";\n    }\n    // truncation\n    if (options && options.truncate) {\n        truncation = applyOption(input.string, input, options.truncate);\n    }\n    if (options && options.middleTruncation) {\n        truncateFromTheMiddle = applyOption(input.string, input, options.middleTruncation);\n    }\n    // attributes\n    if (options && options.attributes) {\n        attributes = applyOption(input.string, input, options.attributes);\n    }\n    return \"<a \" + Object.keys(attributes)\n        .map(function (key) {\n        return attributes[key] === true ? key : key + \"=\\\"\" + attributes[key] + \"\\\" \";\n    })\n        .join(\" \") + \"href=\\\"\" + protocol + input.string + \"\\\">\" + (input.string.length > truncation\n        ? truncateFromTheMiddle\n            ? input.string.substring(0, Math.floor(truncation / 2)) +\n                \"…\" +\n                input.string.substring(input.string.length - Math.ceil(truncation / 2), input.string.length)\n            : input.string.substring(0, truncation) + \"…\"\n        : input.string) + \"</a>\";\n}\nexports.transform = transform;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dictionary_1 = require(\"./dictionary\");\nvar email_address = \"([a-z0-9!#$%&'*+=?^_`{|}~-]+(\\\\.[a-z0-9!#$%&'*+=?^_`{|}~-]+)*)\";\nvar domainWithTLD = \"([a-z0-9]+(-+[a-z0-9]+)*\\\\.)+(\" + dictionary_1.TLDs + \")\";\nvar domainWithAnyTLD = \"([a-z0-9]+(-+[a-z0-9]+)*\\\\.)+([a-z0-9][a-z0-9-]{0,\" + (Math.max.apply(this, dictionary_1.TLDs.split(\"|\").map(function (x) { return x.length; })) - 2) + \"}[a-z0-9])\";\nvar allowedInPath = \"a-zA-Z\\\\d\\\\-._~\\\\!$&*+,;=:@%'\\\"\\\\[\\\\]()\";\nvar path = \"(((\\\\/(([\" + allowedInPath + \"]+(\\\\/[\" + allowedInPath + \"]*)*))?)?)((\\\\?([\" + allowedInPath + \"\\\\/?]*))?)((\\\\#([\" + allowedInPath + \"\\\\/?]*))?))?\";\nvar ipv4 = \"((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\";\nvar ipv6 = \"\\\\[(([a-f0-9:]+:+)+[a-f0-9]+)\\\\]\";\nvar port = \"(:(\\\\d{1,5}))?\";\nvar protocol = \"(https?:|ftps?:)\\\\/\\\\/\";\nvar confirmedByProtocol = \"(\" + protocol + \")\\\\S+\";\nvar additionalSlashes = \"(([\\\\/]?))+\";\nvar fqdn = \"(((\" + protocol + \")?(\" + domainWithTLD + \"|\" + ipv4 + \"|(\" + protocol + \")(\" + ipv6 + \"|\" + domainWithAnyTLD + \"))(?!@\\\\w)\" + port + \")|(\" + confirmedByProtocol + \"))\";\nvar nonLatinMatches = fqdn + \"((((\\\\/(([\" + allowedInPath + \"]+(\\\\/[\" + allowedInPath + dictionary_1.nonLatinAlphabetRanges + \"]*)*))?)?)((\\\\?([\" + allowedInPath + \"\\\\/?]*))?)((\\\\#([\" + allowedInPath + \"\\\\/?]*))?))?\\\\b((([\" + allowedInPath + \"\\\\/\" + dictionary_1.nonLatinAlphabetRanges + \"][a-zA-Z\\\\d\\\\-_~+=\\\\/\" + dictionary_1.nonLatinAlphabetRanges + \"]+)?))+)\";\nexports.email = \"\\\\b(mailto:)?\" + email_address + \"@(\" + domainWithTLD + \"|\" + ipv4 + \")\\\\b\";\nexports.url = \"(\" + nonLatinMatches + \")|(\\\\b\" + fqdn + path + \"\\\\b\" + additionalSlashes + \")\";\nexports.file = \"(file:\\\\/\\\\/\\\\/)([a-z]+:(\\\\/|\\\\\\\\)+)?([\\\\w.]+([\\\\/\\\\\\\\]?)+)+\";\nexports.final = \"(\" + exports.url + \")|(\" + exports.email + \")|(\" + exports.file + \")\";\nexports.finalRegex = new RegExp(exports.final, \"gi\");\n// for validation purposes\nexports.ipRegex = new RegExp(\"^(\" + ipv4 + \"|\" + ipv6 + \")$\", \"i\");\nexports.emailRegex = new RegExp(\"^(\" + exports.email + \")$\", \"i\");\nexports.fileRegex = new RegExp(\"^(\" + exports.file + \")$\", \"i\");\nexports.urlRegex = new RegExp(\"^(\" + exports.url + \")$\", \"i\");\n// identifying parts of the link\nvar iidxes = {\n    isURL: 0,\n    isEmail: 0,\n    isFile: 0,\n    file: {\n        fileName: 0,\n        protocol: 0,\n    },\n    email: {\n        protocol: 0,\n        local: 0,\n        host: 0,\n    },\n    url: {\n        ipv4: 0,\n        ipv6: 0,\n        ipv4Confirmation: 0,\n        byProtocol: 0,\n        port: 0,\n        // three places where protocol can appear\n        protocol1: 0,\n        protocol2: 0,\n        protocol3: 0,\n        protocolWithDomain: 0,\n        path: 0,\n        // sometimes path might be split into two parts\n        secondPartOfPath: 0,\n        query: 0,\n        fragment: 0,\n    },\n};\nexports.iidxes = iidxes;\nvar testers = [\n    \"file:///some/file/path/filename.pdf\",\n    \"mailto:e+_mail.me@sub.domain.com\",\n    \"http://sub.domain.co.uk:3000/p/a/t/h_(asd)/h?q=abc123#dfdf\",\n    \"http://www.\\u0639\\u0631\\u0628\\u064A.com\",\n    \"http://127.0.0.1:3000/p/a/t_(asd)/h?q=abc123#dfdf\",\n    \"http://[2a00:1450:4025:401::67]/k/something\",\n    \"a.org/abc/\\u10D8_\\u10D2\\u10D2\",\n].join(\" \");\nvar result = null;\nvar i = 0;\nwhile ((result = exports.finalRegex.exec(testers)) !== null) {\n    if (i === 0) {\n        iidxes.isFile = result.lastIndexOf(result[0]);\n        iidxes.file.fileName = result.indexOf(\"filename.pdf\");\n        iidxes.file.protocol = result.indexOf(\"file:///\");\n    }\n    if (i === 1) {\n        iidxes.isEmail = result.lastIndexOf(result[0]);\n        iidxes.email.protocol = result.indexOf(\"mailto:\");\n        iidxes.email.local = result.indexOf(\"e+_mail.me\");\n        iidxes.email.host = result.indexOf(\"sub.domain.com\");\n    }\n    if (i === 2) {\n        iidxes.isURL = result.lastIndexOf(result[0]);\n        iidxes.url.protocol1 = result.indexOf(\"http://\");\n        iidxes.url.protocolWithDomain = result.indexOf(\"http://sub.domain.co.uk:3000\");\n        iidxes.url.port = result.indexOf(\"3000\");\n        iidxes.url.path = result.indexOf(\"/p/a/t/h_(asd)/h\");\n        iidxes.url.query = result.indexOf(\"q=abc123\");\n        iidxes.url.fragment = result.indexOf(\"dfdf\");\n    }\n    if (i === 3) {\n        iidxes.url.byProtocol = result.lastIndexOf(\"http://www.عربي.com\");\n        iidxes.url.protocol2 = result.lastIndexOf(\"http://\");\n    }\n    if (i === 4) {\n        iidxes.url.ipv4 = result.indexOf(\"127.0.0.1\");\n        iidxes.url.ipv4Confirmation = result.indexOf(\"0.\");\n    }\n    if (i === 5) {\n        iidxes.url.ipv6 = result.indexOf(\"2a00:1450:4025:401::67\");\n        iidxes.url.protocol3 = result.lastIndexOf(\"http://\");\n    }\n    if (i === 6) {\n        iidxes.url.secondPartOfPath = result.indexOf(\"გგ\");\n    }\n    i++;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dictionary_1 = require(\"./dictionary\");\nfunction checkParenthesis(opening, closing, target, nextChar) {\n    if (nextChar !== closing) {\n        return false;\n    }\n    if (target.split(opening).length - target.split(closing).length === 1 ||\n        (opening === closing && target.split(opening).length % 2 === 0)) {\n        return true;\n    }\n}\nexports.checkParenthesis = checkParenthesis;\nexports.maximumAttrLength = dictionary_1.htmlAttributes.sort(function (a, b) { return b.length - a.length; })[0].length;\nfunction isInsideAttribute(prevFragment) {\n    return (/\\s[a-z0-9-]+=('|\")$/i.test(prevFragment) ||\n        /: ?url\\(('|\")?$/i.test(prevFragment));\n}\nexports.isInsideAttribute = isInsideAttribute;\nfunction isInsideAnchorTag(target, fullInput, targetEnd) {\n    var escapedTarget = target.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n    var regex = new RegExp(\"(?=(<a))(?!([\\\\s\\\\S]*)(<\\\\/a>)(\" + escapedTarget + \"))[\\\\s\\\\S]*?(\" + escapedTarget + \")(?!\\\"|')\", \"gi\");\n    var result = null;\n    while ((result = regex.exec(fullInput)) !== null) {\n        var end = result.index + result[0].length;\n        if (end === targetEnd) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isInsideAnchorTag = isInsideAnchorTag;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dictionary_1 = require(\"./dictionary\");\nvar transform_1 = require(\"./transform\");\nvar regex_1 = require(\"./regex\");\nvar utils_1 = require(\"./utils\");\nvar list = function (input) {\n    var found = [];\n    var result = null;\n    var _loop_1 = function () {\n        var start = result.index;\n        var end = start + result[0].length;\n        var string = result[0];\n        // ### trailing slashes problem\n        /**\n         * This is a quick and dirty fix for a problem that could be probably fixed with\n         * slight modification in the regex.\n         * The problem is that the library doesn't count the trailing slashes as part\n         * of the URL, unless there were multiple trailing slashes.\n         */\n        if (input.charAt(end) === \"/\") {\n            string = string + input.charAt(end);\n            end++;\n        }\n        // ### Parenthesis problem\n        /**\n                As we're using the \\b to tokenize the URL, sometimes the parenthesis are part of the URL\n                and sometimes they are actually the last part, this makes the tokenization stops just\n                before them.\n                To fix this, we calculate how many parenthesis are open and how many are closed inside\n                the URL and based on the number we should be able to know whether the aforementioned\n                parenthesis character is part of the URL or not\n            */\n        if (dictionary_1.closingParenthesis.indexOf(input.charAt(end)) > -1) {\n            dictionary_1.parenthesis.forEach(function (str) {\n                var opening = str.charAt(0);\n                var closing = str.charAt(1);\n                if (utils_1.checkParenthesis(opening, closing, string, input.charAt(end))) {\n                    string = string + input.charAt(end);\n                    end++;\n                }\n            });\n        }\n        // ### HTML problem 1\n        /**\n                checking whether the token is already inside an HTML element by seeing if it's\n                preceded by an HTML attribute that would hold a url (e.g. scr, cite ...etc)\n            */\n        if (['\"\"', \"''\", \"()\"].indexOf(input.charAt(start - 1) + input.charAt(end)) !== -1) {\n            if (utils_1.isInsideAttribute(input.substring(start - utils_1.maximumAttrLength - 15, start))) {\n                return \"continue\";\n            }\n        }\n        // ### HTML problem 2\n        /**\n                Checking whether the token is the content of an actual anchor\n                e.g. <a href=\"https://something.com\">click to go to something.com and have fun</a>\n            */\n        if (input.substring(end, input.length).indexOf(\"</a>\") > -1 &&\n            input.substring(0, start).indexOf(\"<a\") > -1 &&\n            utils_1.isInsideAnchorTag(string, input, end)) {\n            return \"continue\";\n        }\n        if (result[regex_1.iidxes.isURL]) {\n            var path = (result[regex_1.iidxes.url.path] || \"\") +\n                (result[regex_1.iidxes.url.secondPartOfPath] || \"\") || undefined;\n            var protocol = result[regex_1.iidxes.url.protocol1] ||\n                result[regex_1.iidxes.url.protocol2] ||\n                result[regex_1.iidxes.url.protocol3];\n            found.push({\n                start: start,\n                end: end,\n                string: string,\n                isURL: true,\n                protocol: protocol,\n                port: result[regex_1.iidxes.url.port],\n                ipv4: result[regex_1.iidxes.url.ipv4Confirmation]\n                    ? result[regex_1.iidxes.url.ipv4]\n                    : undefined,\n                ipv6: result[regex_1.iidxes.url.ipv6],\n                host: result[regex_1.iidxes.url.byProtocol]\n                    ? undefined\n                    : (result[regex_1.iidxes.url.protocolWithDomain] || \"\").substr((protocol || \"\").length),\n                confirmedByProtocol: !!result[regex_1.iidxes.url.byProtocol],\n                path: result[regex_1.iidxes.url.byProtocol] ? undefined : path,\n                query: result[regex_1.iidxes.url.query] || undefined,\n                fragment: result[regex_1.iidxes.url.fragment] || undefined,\n            });\n        }\n        else if (result[regex_1.iidxes.isFile]) {\n            var filePath = string.substr(8);\n            found.push({\n                start: start,\n                end: end,\n                string: string,\n                isFile: true,\n                protocol: result[regex_1.iidxes.file.protocol],\n                filename: result[regex_1.iidxes.file.fileName],\n                filePath: filePath,\n                fileDirectory: filePath.substr(0, filePath.length - result[regex_1.iidxes.file.fileName].length),\n            });\n        }\n        else if (result[regex_1.iidxes.isEmail]) {\n            found.push({\n                start: start,\n                end: end,\n                string: string,\n                isEmail: true,\n                local: result[regex_1.iidxes.email.local],\n                protocol: result[regex_1.iidxes.email.protocol],\n                host: result[regex_1.iidxes.email.host],\n            });\n        }\n        else {\n            found.push({\n                start: start,\n                end: end,\n                string: string,\n            });\n        }\n    };\n    while ((result = regex_1.finalRegex.exec(input)) !== null) {\n        _loop_1();\n    }\n    return found;\n};\nvar anchorme = function (arg) {\n    var _a = typeof arg === \"string\"\n        ? { input: arg, options: undefined, extensions: undefined }\n        : arg, input = _a.input, options = _a.options, extensions = _a.extensions;\n    if (extensions) {\n        for (var index = 0; index < extensions.length; index++) {\n            var extension = extensions[index];\n            input = input.replace(extension.test, extension.transform);\n        }\n    }\n    var found = list(input);\n    var newStr = \"\";\n    // the following code isn't very intuitive nor human readable\n    // but faster than others\n    for (var index = 0; index < found.length; index++) {\n        newStr =\n            (newStr\n                ? newStr\n                : index === 0\n                    ? input.substring(0, found[index].start)\n                    : \"\") +\n                transform_1.transform(found[index], options) +\n                (found[index + 1]\n                    ? input.substring(found[index].end, found[index + 1].start)\n                    : input.substring(found[index].end));\n    }\n    return newStr ? newStr : input;\n};\nanchorme.list = function (input) {\n    return list(input);\n};\nanchorme.validate = {\n    ip: function (input) { return regex_1.ipRegex.test(input); },\n    email: function (input) { return regex_1.emailRegex.test(input); },\n    file: function (input) { return regex_1.fileRegex.test(input); },\n    url: function (input) { return regex_1.urlRegex.test(input) || regex_1.ipRegex.test(input); },\n};\nexports.default = anchorme;\n"],"names":["global","undefined","define","require$$0","hasOwnProperty","ohauth","xtend","this","create","trim","Global","util","bind","slice","each","pluck","isList","isFunction","isObject","read","write","remove","clearAll","doc","require$$1","require$$2","require$$3","require$$4","require$$5","utils","extend","escape","helpers","_interopRequireDefault","require$$6","createNewLookupObject_1","_utils","_logger","_interopRequireWildcard","base","_exception","_exception2","_helpers","_internalProtoAccess","wrapHelper_1","runtime","Point","VectorTileFeature","VectorTileLayer","VectorTile","rbushModule","rbush","lineclip","whichPolygon","transform_1","dictionary_1"],"mappings":"kKAAA,AAAC,UAAU,EAAS,CAElB,MACC,UAAY,CAEb,WAAyB,EAAU,EAAa,CAC9C,GAAI,CAAE,aAAoB,IACxB,KAAM,IAAI,WAAU,qCAIxB,WAA2B,EAAQ,EAAO,CACxC,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,IAAK,CACrC,GAAI,GAAa,EAAM,GACvB,EAAW,WAAa,EAAW,YAAc,GACjD,EAAW,aAAe,GACtB,SAAW,IAAY,GAAW,SAAW,IACjD,OAAO,eAAe,EAAQ,EAAW,IAAK,IAIlD,WAAsB,EAAa,EAAY,EAAa,CAC1D,MAAI,IAAY,EAAkB,EAAY,UAAW,GACrD,GAAa,EAAkB,EAAa,GACzC,EAGT,WAAmB,EAAU,EAAY,CACvC,GAAI,MAAO,IAAe,YAAc,IAAe,KACrD,KAAM,IAAI,WAAU,sDAGtB,EAAS,UAAY,OAAO,OAAO,GAAc,EAAW,UAAW,CACrE,YAAa,CACX,MAAO,EACP,SAAU,GACV,aAAc,MAGd,GAAY,EAAgB,EAAU,GAG5C,WAAyB,EAAG,CAC1B,SAAkB,OAAO,eAAiB,OAAO,eAAiB,SAAyB,EAAG,CAC5F,MAAO,GAAE,WAAa,OAAO,eAAe,IAEvC,EAAgB,GAGzB,WAAyB,EAAG,EAAG,CAC7B,SAAkB,OAAO,gBAAkB,SAAyB,EAAG,EAAG,CACxE,SAAE,UAAY,EACP,GAGF,EAAgB,EAAG,GAG5B,YAAqC,CAEnC,GADI,MAAO,UAAY,aAAe,CAAC,QAAQ,WAC3C,QAAQ,UAAU,KAAM,MAAO,GACnC,GAAI,MAAO,QAAU,WAAY,MAAO,GAExC,GAAI,CACF,eAAQ,UAAU,QAAQ,KAAK,QAAQ,UAAU,QAAS,GAAI,UAAY,KACnE,QACP,CACA,MAAO,IAIX,WAAgC,EAAM,CACpC,GAAI,IAAS,OACX,KAAM,IAAI,gBAAe,6DAG3B,MAAO,GAGT,WAAoC,EAAM,EAAM,CAC9C,MAAI,IAAS,OAAO,IAAS,UAAY,MAAO,IAAS,YAChD,EAGF,EAAuB,GAGhC,WAAsB,EAAS,CAC7B,GAAI,GAA4B,IAEhC,MAAO,WAAgC,CACrC,GAAI,GAAQ,EAAgB,GACxB,EAEJ,GAAI,EAA2B,CAC7B,GAAI,GAAY,EAAgB,MAAM,YAEtC,EAAS,QAAQ,UAAU,EAAO,UAAW,OAE7C,GAAS,EAAM,MAAM,KAAM,WAG7B,MAAO,GAA2B,KAAM,IAI5C,WAAwB,EAAQ,EAAU,CACxC,KAAO,CAAC,OAAO,UAAU,eAAe,KAAK,EAAQ,IACnD,GAAS,EAAgB,GACrB,IAAW,OAAf,CAGF,MAAO,GAGT,WAAc,EAAQ,EAAU,EAAU,CACxC,MAAI,OAAO,UAAY,aAAe,QAAQ,IAC5C,EAAO,QAAQ,IAEf,EAAO,SAAc,EAAQ,EAAU,EAAU,CAC/C,GAAI,GAAO,EAAe,EAAQ,GAElC,GAAI,EAAC,EACL,IAAI,GAAO,OAAO,yBAAyB,EAAM,GAEjD,MAAI,GAAK,IACA,EAAK,IAAI,KAAK,GAGhB,EAAK,QAIT,EAAK,EAAQ,EAAU,GAAY,GAG5C,GAAI,GAAuB,UAAY,CACrC,YAAmB,CACjB,EAAgB,KAAM,GAEtB,OAAO,eAAe,KAAM,YAAa,CACvC,MAAO,GACP,SAAU,GACV,aAAc,KAIlB,SAAa,EAAS,CAAC,CACrB,IAAK,mBACL,MAAO,SAA0B,EAAM,EAAU,EAAS,CACxD,AAAM,IAAQ,MAAK,WACjB,MAAK,UAAU,GAAQ,IAGzB,KAAK,UAAU,GAAM,KAAK,CACxB,SAAU,EACV,QAAS,MAGZ,CACD,IAAK,sBACL,MAAO,SAA6B,EAAM,EAAU,CAClD,GAAM,IAAQ,MAAK,WAMnB,OAFI,GAAQ,KAAK,UAAU,GAElB,EAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,IACvC,GAAI,EAAM,GAAG,WAAa,EAAU,CAClC,EAAM,OAAO,EAAG,GAChB,WAIL,CACD,IAAK,gBACL,MAAO,SAAuB,EAAO,CACnC,GAAM,EAAM,OAAQ,MAAK,UAOzB,QAHI,GAAQ,KAAK,UAAU,EAAM,MAC7B,EAAc,EAAM,QAEf,EAAI,EAAG,EAAI,EAAY,OAAQ,EAAI,EAAG,IAAK,CAClD,GAAI,GAAW,EAAY,GAE3B,GAAI,CACF,EAAS,SAAS,KAAK,KAAM,SACtB,EAAP,CACA,QAAQ,UAAU,KAAK,UAAY,CACjC,KAAM,KAIV,AAAI,EAAS,SAAW,EAAS,QAAQ,MACvC,KAAK,oBAAoB,EAAM,KAAM,EAAS,UAIlD,MAAO,CAAC,EAAM,sBAIX,KAGL,EAA2B,SAAU,EAAU,CACjD,EAAU,EAAa,GAEvB,GAAI,GAAS,EAAa,GAE1B,YAAuB,CACrB,GAAI,GAEJ,SAAgB,KAAM,GAEtB,EAAQ,EAAO,KAAK,MAOf,EAAM,WACT,EAAQ,KAAK,EAAuB,IAKtC,OAAO,eAAe,EAAuB,GAAQ,UAAW,CAC9D,MAAO,GACP,SAAU,GACV,aAAc,KAEhB,OAAO,eAAe,EAAuB,GAAQ,UAAW,CAC9D,MAAO,KACP,SAAU,GACV,aAAc,KAET,EAGT,SAAa,EAAa,CAAC,CACzB,IAAK,WACL,MAAO,UAAoB,CACzB,MAAO,yBAER,CACD,IAAK,gBACL,MAAO,SAAuB,EAAO,CACnC,AAAI,EAAM,OAAS,SACjB,MAAK,QAAU,GAEX,MAAO,MAAK,SAAY,YAC1B,KAAK,QAAQ,KAAK,KAAM,IAI5B,EAAK,EAAgB,EAAY,WAAY,gBAAiB,MAAM,KAAK,KAAM,OAI5E,GACP,GACE,EAA+B,UAAY,CAC7C,YAA2B,CACzB,EAAgB,KAAM,GAItB,OAAO,eAAe,KAAM,SAAU,CACpC,MAAO,GAAI,GACX,SAAU,GACV,aAAc,KAIlB,SAAa,EAAiB,CAAC,CAC7B,IAAK,QACL,MAAO,UAAiB,CACtB,GAAI,GAEJ,GAAI,CACF,EAAQ,GAAI,OAAM,cAClB,CACA,AAAI,MAAO,WAAa,YACtB,AAAK,SAAS,YAMZ,GAAQ,SAAS,YAAY,SAC7B,EAAM,UAAU,QAAS,GAAO,KALhC,GAAQ,SAAS,oBACjB,EAAM,KAAO,SAQf,EAAQ,CACN,KAAM,QACN,QAAS,GACT,WAAY,IAKlB,KAAK,OAAO,cAAc,KAE3B,CACD,IAAK,WACL,MAAO,UAAoB,CACzB,MAAO,+BAIJ,KAGT,AAAI,MAAO,SAAW,aAAe,OAAO,aAG1C,GAAgB,UAAU,OAAO,aAAe,kBAChD,EAAY,UAAU,OAAO,aAAe,eAG9C,WAAwB,EAAM,CAC5B,MAAI,GAAK,yCACP,SAAQ,IAAI,qFACL,IAUF,MAAO,GAAK,SAAY,YAAc,CAAC,EAAK,QAAQ,UAAU,eAAe,WAAa,CAAC,EAAK,gBAGzG,AAAC,UAAU,EAAM,CAEf,AAAI,CAAC,EAAe,IAIpB,GAAK,gBAAkB,EACvB,EAAK,YAAc,KAClB,MAAO,OAAS,YAAc,KAAOA,2DCjV1C,AAAC,WAAW,CACV,GAAI,GAEJ,WAAoB,EAAK,CACvB,GAAI,GAAG,EAAG,EAAS,GACjB,EAAI,GACJ,EAEF,GAAI,GAAO,EAAI,OAEb,IADA,EAAI,EAAI,OACA,IAAK,GAAK,GAEhB,EAAI,EAAI,WAAW,GACnB,EAAI,EAAI,EAAI,EAAI,EAAI,WAAW,EAAI,GAAK,EACpC,OAAU,GAAK,GAAK,OAAU,OAAU,GAAK,GAAK,OACpD,GAAI,MAAY,IAAI,OAAW,IAAO,GAAI,MAC1C,GAAK,GAGP,AAAI,GAAK,IACP,GAAU,OAAO,aAAa,GACzB,AAAI,GAAK,KACd,GAAU,OAAO,aAAa,IAAS,IAAM,EAAK,GAChD,IAAQ,EAAI,IACT,AAAI,GAAK,MACd,GAAU,OAAO,aAAa,IAAS,IAAM,GAAM,GACjD,IAAS,IAAM,EAAK,GACpB,IAAQ,EAAI,IACL,GAAK,SACd,IAAU,OAAO,aAAa,IAAS,IAAM,GAAM,EACjD,IAAS,IAAM,GAAM,GACrB,IAAS,IAAM,EAAK,GACpB,IAAQ,EAAI,KAIpB,MAAO,GAGT,WAAoB,EAAK,CACvB,GAAI,GAAG,EAAI,EAAI,EAAI,EAAI,EAAM,GAC3B,EAGF,GAFA,EAAI,EAAK,EAAK,EAAK,EAAK,EAEpB,GAAO,EAAI,OAIb,IAHA,EAAI,EAAI,OACR,GAAO,GAEA,EAAI,GACT,EAAK,EAAI,WAAW,GACpB,GAAM,EACN,AAAI,EAAK,IACP,GAAI,GAAM,OAAO,aAAa,GAC9B,GAAK,GACA,AAAI,EAAK,KAAO,EAAK,IAC1B,GAAK,EAAI,WAAW,EAAI,GACxB,EAAI,GAAM,OAAO,aAAe,GAAK,KAAO,EAAM,EAAK,IACvD,GAAK,GAEL,GAAK,EAAI,WAAW,EAAI,GACxB,EAAK,EAAI,WAAW,EAAI,GACxB,EAAI,GAAM,OAAO,aAAe,GAAK,KAAO,GAAQ,GAAK,KAAO,EAAM,EAAK,IAC3E,GAAK,GAIX,MAAO,GAAI,KAAK,IAQlB,WAAkB,EAAG,EAAG,CACtB,GAAI,GAAO,GAAI,OAAW,GAAI,OAC5B,EAAO,IAAK,IAAO,IAAK,IAAO,IAAO,IACxC,MAAQ,IAAO,GAAO,EAAM,MAO9B,WAAiB,EAAK,EAAK,CACzB,MAAQ,IAAO,EAAQ,IAAS,GAAK,EAOvC,WAAkB,EAAO,EAAS,CAKhC,OAJI,GAAU,EAAU,mBAAqB,mBAC3C,EAAS,GACT,EAAG,EAAI,EACP,EAAI,EAAM,OACL,EAAI,EAAG,GAAK,EACjB,EAAI,EAAM,WAAW,GACrB,GAAU,EAAQ,OAAQ,IAAM,EAAK,IAAQ,EAAQ,OAAO,EAAI,IAElE,MAAO,GA6BT,WAAmB,EAAO,CACxB,GAAI,GAAG,EAAI,EAAM,OAAS,GACxB,EAAS,GACX,IAAK,EAAI,EAAG,EAAI,EAAG,GAAK,EACtB,GAAU,OAAO,aAAc,EAAM,GAAK,KAAQ,GAAK,EAAI,GAAO,KAEpE,MAAO,GAOT,WAAmB,EAAO,CACxB,GAAI,GAAG,EAAI,EAAM,OAAS,GACxB,EAAS,GACX,IAAK,EAAI,EAAG,EAAI,EAAG,GAAK,EACtB,GAAU,OAAO,aAAc,EAAM,GAAK,KAAQ,EAAI,GAAO,KAE/D,MAAO,GAQT,WAAmB,EAAO,CACxB,GAAI,GAAG,EAAI,EAAM,OAAS,EACxB,EAAS,MAAM,EAAM,QAAU,GAC/B,EAAK,EAAO,OACd,IAAK,EAAI,EAAG,EAAI,EAAI,GAAK,EACvB,EAAO,GAAK,EAEd,IAAK,EAAI,EAAG,EAAI,EAAG,GAAK,EACtB,EAAO,GAAK,IAAO,GAAM,WAAW,EAAI,GAAK,MAAU,EAAI,GAE7D,MAAO,GAQT,WAAmB,EAAO,CACxB,GAAI,GAAG,EAAI,EAAM,OAAS,EACxB,EAAS,MAAM,EAAM,QAAU,GAC/B,EAAK,EAAO,OACd,IAAK,EAAI,EAAG,EAAI,EAAI,GAAK,EACvB,EAAO,GAAK,EAEd,IAAK,EAAI,EAAG,EAAI,EAAG,GAAK,EACtB,EAAO,GAAK,IAAO,GAAM,WAAW,EAAI,GAAK,MAAU,GAAK,EAAI,GAElE,MAAO,GAOT,WAAkB,EAAO,EAAU,CACjC,GAAI,GAAU,EAAS,OACrB,EAAa,QACb,EAAG,EAAG,EAAG,EAAI,EAAU,EAAU,EAAQ,EAK3C,IAFA,EAAW,MAAM,KAAK,KAAK,EAAM,OAAS,IAC1C,EAAK,EAAS,OACT,EAAI,EAAG,EAAI,EAAI,GAAK,EACvB,EAAS,GAAM,EAAM,WAAW,EAAI,IAAM,EAAK,EAAM,WAAW,EAAI,EAAI,GAS1E,KAAO,EAAS,OAAS,GAAG,CAG1B,IAFA,EAAW,QACX,EAAI,EACC,EAAI,EAAG,EAAI,EAAS,OAAQ,GAAK,EACpC,EAAK,IAAK,IAAM,EAAS,GACzB,EAAI,KAAK,MAAM,EAAI,GACnB,GAAK,EAAI,EACL,GAAS,OAAS,GAAK,EAAI,IAC7B,GAAS,EAAS,QAAU,GAGhC,EAAW,EAAW,QAAU,EAChC,EAAW,EAKb,IADA,EAAS,GACJ,EAAI,EAAW,OAAS,EAAG,GAAK,EAAG,IACtC,GAAU,EAAS,OAAO,EAAW,IAKvC,IADA,EAAc,KAAK,KAAK,EAAM,OAAS,EAAK,MAAK,IAAI,EAAS,QAAU,KAAK,IAAI,KAC5E,EAAI,EAAO,OAAQ,EAAI,EAAa,GAAK,EAC5C,EAAS,EAAS,GAAK,EAEzB,MAAO,GAOT,WAAkB,EAAO,EAAQ,CAC/B,GAAI,GAAM,mEACR,EAAS,GACT,EAAM,EAAM,OACZ,EAAG,EAAG,EAER,IADA,EAAS,GAAU,IACd,EAAI,EAAG,EAAI,EAAK,GAAK,EAExB,IADA,EAAW,EAAM,WAAW,IAAM,GAAO,GAAI,EAAI,EAAM,EAAM,WAAW,EAAI,IAAM,EAAI,GAAM,GAAI,EAAI,EAAM,EAAM,WAAW,EAAI,GAAK,GAC/H,EAAI,EAAG,EAAI,EAAG,GAAK,EACtB,AAAI,EAAI,EAAI,EAAI,EAAI,EAAM,OAAS,EACjC,GAAU,EAEV,GAAU,EAAI,OAAQ,IAAY,EAAK,GAAI,GAAM,IAIvD,MAAO,GAGT,EAAS,CAKP,QAAS,QAMT,OAAQ,UAAW,IAEb,GAAM,mEACR,EAAM,IAEN,EAAO,GAGT,KAAK,OAAS,SAAS,EAAO,CAC5B,GAAI,GAAG,EAAG,EACR,EAAS,GACT,EAAM,EAAM,OAKd,IAHA,EAAM,GAAO,IACb,EAAS,EAAQ,EAAW,GAAS,EAEhC,EAAI,EAAG,EAAI,EAAK,GAAK,EAExB,IADA,EAAW,EAAM,WAAW,IAAM,GAAO,GAAI,EAAI,EAAM,EAAM,WAAW,EAAI,IAAM,EAAI,GAAM,GAAI,EAAI,EAAM,EAAM,WAAW,EAAI,GAAK,GAC/H,EAAI,EAAG,EAAI,EAAG,GAAK,EACtB,AAAI,EAAI,EAAI,EAAI,EAAI,EAAM,EACxB,GAAU,EAEV,GAAU,EAAI,OAAQ,IAAY,EAAK,GAAI,GAAM,IAIvD,MAAO,IAIT,KAAK,OAAS,SAAS,EAAO,CAE5B,GAAI,GAAG,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAM,EACvC,EAAM,GACN,EAAM,GACR,GAAI,CAAC,EACH,MAAO,GAGT,EAAI,EAAK,EACT,EAAQ,EAAM,QAAQ,GAAI,QAAO,KAAO,EAAK,MAAO,IAGpD,EACE,GAAK,EAAI,QAAQ,EAAM,OAAO,GAAK,IACnC,EAAK,EAAI,QAAQ,EAAM,OAAO,GAAK,IACnC,EAAK,EAAI,QAAQ,EAAM,OAAO,GAAK,IACnC,EAAK,EAAI,QAAQ,EAAM,OAAO,GAAK,IAEnC,EAAO,GAAM,GAAK,GAAM,GAAK,GAAM,EAAI,EAEvC,EAAK,GAAQ,GAAK,IAClB,EAAK,GAAQ,EAAI,IACjB,EAAK,EAAO,IACZ,GAAM,EAEN,AAAI,IAAO,GACT,EAAI,GAAM,OAAO,aAAa,GACzB,AAAI,IAAO,GAChB,EAAI,GAAM,OAAO,aAAa,EAAI,GAElC,EAAI,GAAM,OAAO,aAAa,EAAI,EAAI,SAEjC,EAAI,EAAM,QAEnB,SAAM,EAAI,KAAK,IACf,EAAO,EAAQ,EAAW,GAAO,EAE1B,GAIT,KAAK,OAAS,SAAS,EAAK,CAC1B,SAAM,GAAO,EACN,MAGT,KAAK,OAAS,SAAS,EAAK,CAC1B,SAAM,GAAO,EACN,MAET,KAAK,QAAU,SAAS,EAAM,CAC5B,MAAI,OAAO,IAAS,WAClB,GAAO,GAEF,OAYX,MAAO,SAAS,EAAK,CACnB,GAAI,GAAM,EACR,EAAI,EACJ,EAAI,EACJ,EAAO,EAAG,EAiCZ,IAhCA,EAAM,EAAW,GAEjB,EAAQ,CACN,oFACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,6FACA,kEACA,KAAK,IAEP,EAAM,EAAO,GACR,EAAI,EAAG,EAAO,EAAI,OAAQ,EAAI,EAAM,GAAK,EAC5C,EAAK,GAAM,EAAI,WAAW,IAAM,IAChC,EAAI,KAAO,EAAM,OAAO,EAAI,EAAG,GAC/B,EAAO,IAAQ,EAAK,EAGtB,MAAQ,GAAO,MAAS,GAc1B,IAAK,SAAS,EAAS,CAMrB,GAAI,GAAW,GAAW,MAAO,GAAQ,WAAc,UAAa,EAAQ,UAAY,GACtF,EAAU,GAAW,MAAO,GAAQ,KAAQ,SAAY,EAAQ,IAAM,IACtE,EAAQ,GAAW,MAAO,GAAQ,MAAS,UAAa,EAAQ,KAAO,GAGzE,KAAK,IAAM,SAAS,EAAG,CACrB,MAAO,GAAS,EAAK,GAAU,IAEjC,KAAK,IAAM,SAAS,EAAG,CACrB,MAAO,GAAS,EAAK,GAAI,IAE3B,KAAK,IAAM,SAAS,EAAG,EAAG,CACxB,MAAO,GAAS,EAAK,GAAU,IAEjC,KAAK,IAAM,SAAS,EAAG,CACrB,MAAO,GAAK,IAEd,KAAK,SAAW,SAAS,EAAG,EAAG,CAC7B,MAAO,GAAS,EAAU,EAAG,GAAI,IAEnC,KAAK,SAAW,SAAS,EAAG,EAAG,CAC7B,MAAO,GAAS,EAAU,EAAG,GAAI,IAEnC,KAAK,SAAW,SAAS,EAAG,EAAG,EAAG,CAChC,MAAO,GAAS,EAAU,EAAG,GAAI,IAMnC,KAAK,QAAU,UAAW,CACxB,MAAO,KAAI,OAAO,gBAAkB,oCAOtC,KAAK,aAAe,SAAS,EAAG,CAC9B,MAAI,OAAO,IAAM,WACf,GAAU,GAEL,MAOT,KAAK,OAAS,SAAS,EAAG,CACxB,SAAS,GAAK,EACP,MAOT,KAAK,QAAU,SAAS,EAAG,CACzB,MAAI,OAAO,IAAM,WACf,GAAO,GAEF,MAST,WAAc,EAAG,CACf,SAAK,EAAQ,EAAW,GAAK,EACtB,EAAU,EAAK,EAAU,GAAI,EAAE,OAAS,IAOjD,WAAmB,EAAK,EAAM,CAC5B,GAAI,GAAM,EAAM,EAAM,EAAM,EAU5B,IARA,EAAO,EAAQ,EAAW,GAAO,EACjC,EAAQ,EAAQ,EAAW,GAAQ,EACnC,EAAO,EAAU,GACb,EAAK,OAAS,IAChB,GAAO,EAAK,EAAM,EAAI,OAAS,IAGjC,EAAO,MAAM,IAAK,EAAO,MAAM,IAC1B,EAAI,EAAG,EAAI,GAAI,GAAK,EACvB,EAAK,GAAK,EAAK,GAAK,UACpB,EAAK,GAAK,EAAK,GAAK,WAEtB,SAAO,EAAK,EAAK,OAAO,EAAU,IAAQ,IAAM,EAAK,OAAS,GACvD,EAAU,EAAK,EAAK,OAAO,GAAO,IAAM,MAOjD,WAAc,EAAG,EAAK,CACpB,GAAI,GAAG,EAAM,EAAM,EAAM,EACvB,EAAI,WACJ,EAAI,WACJ,EAAI,YACJ,EAAI,UAMN,IAHA,EAAE,GAAO,IAAM,KAAU,EAAO,GAChC,EAAK,GAAM,KAAQ,GAAM,GAAK,IAAM,EAE/B,EAAI,EAAG,EAAI,EAAE,OAAQ,GAAK,GAC7B,EAAO,EACP,EAAO,EACP,EAAO,EACP,EAAO,EAEP,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,EAAG,YACpC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,YACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,WACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,aACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,EAAG,YACpC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,YACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,aACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,WACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,EAAG,YACpC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,aACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,QACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,aACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,EAAG,YACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,WACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,aACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,YAEtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,EAAG,YACpC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,EAAG,aACpC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,WACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,YACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,EAAG,YACpC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,EAAG,UACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,YACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,YACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,EAAG,WACpC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,EAAG,aACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,YACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,YACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,EAAG,aACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,EAAG,WACpC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,YACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,aAEtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,EAAG,SACpC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,aACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,YACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,WACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,EAAG,aACpC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,YACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,YACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,aACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,EAAG,WACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,YACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,YACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,UACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,EAAG,YACpC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,YACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,WACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,YAErC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,EAAG,YACpC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,YACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,aACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,WACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,EAAG,YACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,aACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,UACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,aACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,EAAG,YACpC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,WACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,aACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,YACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,EAAG,YACpC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,IAAK,GAAI,aACtC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,WACrC,EAAI,EAAO,EAAG,EAAG,EAAG,EAAG,EAAE,EAAI,GAAI,GAAI,YAErC,EAAI,EAAS,EAAG,GAChB,EAAI,EAAS,EAAG,GAChB,EAAI,EAAS,EAAG,GAChB,EAAI,EAAS,EAAG,GAElB,MAAO,OAAM,EAAG,EAAG,EAAG,GAOxB,WAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CACjC,MAAO,GAAS,EAAQ,EAAS,EAAS,EAAG,GAAI,EAAS,EAAG,IAAK,GAAI,GAGxE,WAAgB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CACnC,MAAO,GAAS,EAAI,EAAO,CAAC,EAAK,EAAI,EAAG,EAAG,EAAG,EAAG,GAGnD,WAAgB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CACnC,MAAO,GAAS,EAAI,EAAM,EAAK,CAAC,EAAK,EAAG,EAAG,EAAG,EAAG,GAGnD,WAAgB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CACnC,MAAO,GAAQ,EAAI,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAGxC,WAAgB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CACnC,MAAO,GAAQ,EAAK,GAAK,CAAC,GAAK,EAAG,EAAG,EAAG,EAAG,KAc/C,KAAM,SAAS,EAAS,CAMtB,GAAI,GAAW,GAAW,MAAO,GAAQ,WAAc,UAAa,EAAQ,UAAY,GACtF,EAAU,GAAW,MAAO,GAAQ,KAAQ,SAAY,EAAQ,IAAM,IACtE,EAAQ,GAAW,MAAO,GAAQ,MAAS,UAAa,EAAQ,KAAO,GAGzE,KAAK,IAAM,SAAS,EAAG,CACrB,MAAO,GAAS,EAAK,GAAU,IAEjC,KAAK,IAAM,SAAS,EAAG,CACrB,MAAO,GAAS,EAAK,GAAU,IAEjC,KAAK,IAAM,SAAS,EAAG,EAAG,CACxB,MAAO,GAAS,EAAK,GAAU,IAEjC,KAAK,IAAM,SAAS,EAAG,CACrB,MAAO,GAAK,IAEd,KAAK,SAAW,SAAS,EAAG,EAAG,CAC7B,MAAO,GAAS,EAAU,EAAG,KAE/B,KAAK,SAAW,SAAS,EAAG,EAAG,CAC7B,MAAO,GAAS,EAAU,EAAG,GAAI,IAEnC,KAAK,SAAW,SAAS,EAAG,EAAG,EAAG,CAChC,MAAO,GAAS,EAAU,EAAG,GAAI,IAOnC,KAAK,QAAU,UAAW,CACxB,MAAO,KAAI,OAAO,gBAAkB,oCAQtC,KAAK,aAAe,SAAS,EAAG,CAC9B,MAAI,OAAO,IAAM,WACf,GAAU,GAEL,MAQT,KAAK,OAAS,SAAS,EAAG,CACxB,SAAS,GAAK,EACP,MAQT,KAAK,QAAU,SAAS,EAAG,CACzB,MAAI,OAAO,IAAM,WACf,GAAO,GAEF,MAST,WAAc,EAAG,CACf,SAAK,EAAQ,EAAW,GAAK,EACtB,EAAU,EAAK,EAAU,GAAI,EAAE,OAAS,IAOjD,WAAmB,EAAK,EAAM,CAC5B,GAAI,GAAM,EAAM,EAAM,EAAG,EASzB,IARA,EAAO,EAAQ,EAAW,GAAO,EACjC,EAAQ,EAAQ,EAAW,GAAQ,EACnC,EAAO,EAAU,GAEb,EAAK,OAAS,IAChB,GAAO,EAAK,EAAM,EAAI,OAAS,IAEjC,EAAO,MAAM,IAAK,EAAO,MAAM,IAC1B,EAAI,EAAG,EAAI,GAAI,GAAK,EACvB,EAAK,GAAK,EAAK,GAAK,UACpB,EAAK,GAAK,EAAK,GAAK,WAEtB,SAAO,EAAK,EAAK,OAAO,EAAU,IAAQ,IAAM,EAAK,OAAS,GACvD,EAAU,EAAK,EAAK,OAAO,GAAO,IAAM,MAOjD,WAAc,EAAG,EAAK,CACpB,GAAI,GAAG,EAAG,EAAG,EAAM,EAAM,EAAM,EAAM,EACnC,EAAI,MAAM,IACV,EAAI,WACJ,EAAI,WACJ,EAAI,YACJ,EAAI,UACJ,EAAI,YAMN,IAHA,EAAE,GAAO,IAAM,KAAS,GAAK,EAAM,GACnC,EAAI,GAAM,IAAM,GAAM,GAAK,IAAM,EAE5B,EAAI,EAAG,EAAI,EAAE,OAAQ,GAAK,GAAI,CAOjC,IANA,EAAO,EACP,EAAO,EACP,EAAO,EACP,EAAO,EACP,EAAO,EAEF,EAAI,EAAG,EAAI,GAAI,GAAK,EACvB,AAAI,EAAI,GACN,EAAE,GAAK,EAAE,EAAI,GAEb,EAAE,GAAK,EAAQ,EAAE,EAAI,GAAK,EAAE,EAAI,GAAK,EAAE,EAAI,IAAM,EAAE,EAAI,IAAK,GAE9D,EAAI,EAAS,EAAS,EAAQ,EAAG,GAAI,EAAQ,EAAG,EAAG,EAAG,IACpD,EAAS,EAAS,EAAG,EAAE,IAAK,EAAQ,KACtC,EAAI,EACJ,EAAI,EACJ,EAAI,EAAQ,EAAG,IACf,EAAI,EACJ,EAAI,EAGN,EAAI,EAAS,EAAG,GAChB,EAAI,EAAS,EAAG,GAChB,EAAI,EAAS,EAAG,GAChB,EAAI,EAAS,EAAG,GAChB,EAAI,EAAS,EAAG,GAElB,MAAO,OAAM,EAAG,EAAG,EAAG,EAAG,GAQ3B,WAAiB,EAAG,EAAG,EAAG,EAAG,CAC3B,MAAI,GAAI,GACE,EAAI,EAAO,CAAC,EAAK,EAEvB,EAAI,GACC,EAAI,EAAI,EAEb,EAAI,GACE,EAAI,EAAM,EAAI,EAAM,EAAI,EAE3B,EAAI,EAAI,EAOjB,WAAiB,EAAG,CAClB,MAAQ,GAAI,GAAM,WAAc,EAAI,GAAM,WACvC,EAAI,GAAM,YAAc,aAa/B,OAAQ,SAAS,EAAS,CAOV,AAAC,GAAW,MAAO,GAAQ,WAAc,WAAa,EAAQ,aAC1E,GAAU,GAAW,MAAO,GAAQ,KAAQ,SAAY,EAAQ,IAAM,IAEtE,EAAQ,GAAW,MAAO,GAAQ,MAAS,UAAa,EAAQ,KAAO,GAEvE,EAGF,KAAK,IAAM,SAAS,EAAG,CACrB,MAAO,GAAS,EAAK,EAAG,KAE1B,KAAK,IAAM,SAAS,EAAG,CACrB,MAAO,GAAS,EAAK,EAAG,GAAO,IAEjC,KAAK,IAAM,SAAS,EAAG,EAAG,CACxB,MAAO,GAAS,EAAK,EAAG,GAAO,IAEjC,KAAK,IAAM,SAAS,EAAG,CACrB,MAAO,GAAK,EAAG,IAEjB,KAAK,SAAW,SAAS,EAAG,EAAG,CAC7B,MAAO,GAAS,EAAU,EAAG,KAE/B,KAAK,SAAW,SAAS,EAAG,EAAG,CAC7B,MAAO,GAAS,EAAU,EAAG,GAAI,IAEnC,KAAK,SAAW,SAAS,EAAG,EAAG,EAAG,CAChC,MAAO,GAAS,EAAU,EAAG,GAAI,IAOnC,KAAK,QAAU,UAAW,CACxB,MAAO,KAAI,OAAO,gBAAkB,oCAQtC,KAAK,aAAe,SAAS,EAAG,CAI9B,MAAO,OAQT,KAAK,OAAS,SAAS,EAAG,CACxB,SAAS,GAAK,EACP,MAQT,KAAK,QAAU,SAAS,EAAG,CACzB,MAAI,OAAO,IAAM,WACf,GAAO,GAEF,MAST,WAAc,EAAG,EAAM,CACrB,SAAK,EAAQ,EAAW,GAAK,EACtB,EAAU,EAAK,EAAU,GAAI,EAAE,OAAS,IAOjD,WAAmB,EAAK,EAAM,CAC5B,EAAO,EAAQ,EAAW,GAAO,EACjC,EAAQ,EAAQ,EAAW,GAAQ,EACnC,GAAI,GAAM,EAAI,EACZ,EAAO,EAAU,GACjB,EAAO,MAAM,IACb,EAAO,MAAM,IAMf,IAJI,EAAK,OAAS,IAChB,GAAO,EAAK,EAAM,EAAI,OAAS,IAG1B,EAAI,GAAI,GAAK,EAClB,EAAK,GAAK,EAAK,GAAK,UACpB,EAAK,GAAK,EAAK,GAAK,WAGtB,SAAO,EAAK,EAAK,OAAO,EAAU,IAAQ,IAAM,EAAK,OAAS,GACvD,EAAU,EAAK,EAAK,OAAO,GAAO,IAAM,MAOjD,WAAkB,EAAG,EAAG,CACtB,MAAQ,KAAM,EAAM,GAAM,GAAK,EAGjC,WAAkB,EAAG,EAAG,CACtB,MAAQ,KAAM,EAGhB,WAAmB,EAAG,EAAG,EAAG,CAC1B,MAAS,GAAI,EAAO,CAAC,EAAK,EAG5B,WAAoB,EAAG,EAAG,EAAG,CAC3B,MAAS,GAAI,EAAM,EAAI,EAAM,EAAI,EAGnC,WAA0B,EAAG,CAC3B,MAAQ,GAAS,EAAG,GAAK,EAAS,EAAG,IAAM,EAAS,EAAG,IAGzD,WAA0B,EAAG,CAC3B,MAAQ,GAAS,EAAG,GAAK,EAAS,EAAG,IAAM,EAAS,EAAG,IAGzD,WAA0B,EAAG,CAC3B,MAAQ,GAAS,EAAG,GAAK,EAAS,EAAG,IAAM,EAAS,EAAG,GAGzD,WAA0B,EAAG,CAC3B,MAAQ,GAAS,EAAG,IAAM,EAAS,EAAG,IAAM,EAAS,EAAG,IAmB1D,EAAW,CACT,WAAY,WAAY,YAAa,WAAY,UAAW,WAAY,YAAa,YAAa,WAAY,UAAW,UAAW,WACpI,WAAY,YAAa,YAAa,YAAa,WAAY,WAC/D,UAAW,UAAW,UAAW,WAAY,WAAY,WAAY,YAAa,YAAa,YAAa,YAAa,WAAY,WACrI,UAAW,UAAW,UAAW,UAAW,WAAY,WACxD,WAAY,WAAY,YAAa,YAAa,YAAa,YAAa,YAAa,WAAY,WAAY,WAAY,WAAY,UACzI,UAAW,UAAW,UAAW,UAAW,UAAW,WACvD,WAAY,WAAY,WAAY,WAAY,YAAa,YAAa,YAAa,YAAa,YAAa,YAGnH,WAAc,EAAG,EAAG,CAClB,GAAI,GAAO,CAAC,WAAY,YAAa,WAAY,YAC/C,WAAY,YAAa,UAAW,YAElC,EAAI,GAAI,OAAM,IACd,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAI,EAMd,IAHA,EAAE,GAAK,IAAM,KAAS,GAAK,EAAI,GAC/B,EAAI,GAAI,IAAM,GAAM,GAAK,IAAM,EAE1B,EAAI,EAAG,EAAI,EAAE,OAAQ,GAAK,GAAI,CAUjC,IATA,EAAI,EAAK,GACT,EAAI,EAAK,GACT,EAAI,EAAK,GACT,EAAI,EAAK,GACT,EAAI,EAAK,GACT,EAAI,EAAK,GACT,EAAI,EAAK,GACT,EAAI,EAAK,GAEJ,EAAI,EAAG,EAAI,GAAI,GAAK,EACvB,AAAI,EAAI,GACN,EAAE,GAAK,EAAE,EAAI,GAEb,EAAE,GAAK,EAAS,EAAS,EAAS,EAAiB,EAAE,EAAI,IAAK,EAAE,EAAI,IAClE,EAAiB,EAAE,EAAI,MAAO,EAAE,EAAI,KAGxC,EAAK,EAAS,EAAS,EAAS,EAAS,EAAG,EAAiB,IAAK,EAAU,EAAG,EAAG,IAChF,EAAS,IAAK,EAAE,IAClB,EAAK,EAAS,EAAiB,GAAI,EAAW,EAAG,EAAG,IACpD,EAAI,EACJ,EAAI,EACJ,EAAI,EACJ,EAAI,EAAS,EAAG,GAChB,EAAI,EACJ,EAAI,EACJ,EAAI,EACJ,EAAI,EAAS,EAAI,GAGnB,EAAK,GAAK,EAAS,EAAG,EAAK,IAC3B,EAAK,GAAK,EAAS,EAAG,EAAK,IAC3B,EAAK,GAAK,EAAS,EAAG,EAAK,IAC3B,EAAK,GAAK,EAAS,EAAG,EAAK,IAC3B,EAAK,GAAK,EAAS,EAAG,EAAK,IAC3B,EAAK,GAAK,EAAS,EAAG,EAAK,IAC3B,EAAK,GAAK,EAAS,EAAG,EAAK,IAC3B,EAAK,GAAK,EAAS,EAAG,EAAK,IAE7B,MAAO,KAcX,OAAQ,SAAS,EAAS,CAOV,AAAC,GAAW,MAAO,GAAQ,WAAc,WAAa,EAAQ,aAE1E,GAAU,GAAW,MAAO,GAAQ,KAAQ,SAAY,EAAQ,IAAM,IAEtE,EAAQ,GAAW,MAAO,GAAQ,MAAS,UAAa,EAAQ,KAAO,GAEvE,EAGF,KAAK,IAAM,SAAS,EAAG,CACrB,MAAO,GAAS,EAAK,KAEvB,KAAK,IAAM,SAAS,EAAG,CACrB,MAAO,GAAS,EAAK,GAAI,IAE3B,KAAK,IAAM,SAAS,EAAG,EAAG,CACxB,MAAO,GAAS,EAAK,GAAI,IAE3B,KAAK,IAAM,SAAS,EAAG,CACrB,MAAO,GAAK,IAEd,KAAK,SAAW,SAAS,EAAG,EAAG,CAC7B,MAAO,GAAS,EAAU,EAAG,KAE/B,KAAK,SAAW,SAAS,EAAG,EAAG,CAC7B,MAAO,GAAS,EAAU,EAAG,GAAI,IAEnC,KAAK,SAAW,SAAS,EAAG,EAAG,EAAG,CAChC,MAAO,GAAS,EAAU,EAAG,GAAI,IAOnC,KAAK,QAAU,UAAW,CACxB,MAAO,KAAI,OAAO,gBAAkB,oCAQtC,KAAK,aAAe,SAAS,EAAG,CAI9B,MAAO,OAQT,KAAK,OAAS,SAAS,EAAG,CACxB,SAAS,GAAK,EACP,MAQT,KAAK,QAAU,SAAS,EAAG,CACzB,MAAI,OAAO,IAAM,WACf,GAAO,GAEF,MAST,WAAc,EAAG,CACf,SAAK,EAAQ,EAAW,GAAK,EACtB,EAAU,EAAK,EAAU,GAAI,EAAE,OAAS,IAMjD,WAAmB,EAAK,EAAM,CAC5B,EAAO,EAAQ,EAAW,GAAO,EACjC,EAAQ,EAAQ,EAAW,GAAQ,EAEnC,GAAI,GAAM,EAAI,EACZ,EAAO,EAAU,GACjB,EAAO,MAAM,IACb,EAAO,MAAM,IAMf,IAJI,EAAK,OAAS,IAChB,GAAO,EAAK,EAAM,EAAI,OAAS,IAG1B,EAAI,GAAI,GAAK,EAClB,EAAK,GAAK,EAAK,GAAK,UACpB,EAAK,GAAK,EAAK,GAAK,WAGtB,SAAO,EAAK,EAAK,OAAO,EAAU,IAAQ,KAAO,EAAK,OAAS,GACxD,EAAU,EAAK,EAAK,OAAO,GAAO,KAAO,MAOlD,WAAc,EAAG,EAAK,CACpB,GAAI,GAAG,EAAG,EACR,EAAI,GAAI,OAAM,IACd,EAAO,GAAI,OAAM,IAEjB,EAAI,CACF,GAAI,GAAM,WAAY,YACtB,GAAI,GAAM,YAAa,aACvB,GAAI,GAAM,WAAY,WACtB,GAAI,GAAM,YAAa,YACvB,GAAI,GAAM,WAAY,aACtB,GAAI,GAAM,YAAa,WACvB,GAAI,GAAM,UAAY,WACtB,GAAI,GAAM,WAAY,YAExB,EAAK,GAAI,GAAM,EAAG,GAClB,EAAK,GAAI,GAAM,EAAG,GAClB,EAAI,GAAI,GAAM,EAAG,GACjB,EAAI,GAAI,GAAM,EAAG,GACjB,EAAI,GAAI,GAAM,EAAG,GACjB,EAAI,GAAI,GAAM,EAAG,GACjB,EAAI,GAAI,GAAM,EAAG,GACjB,EAAI,GAAI,GAAM,EAAG,GACjB,EAAI,GAAI,GAAM,EAAG,GACjB,EAAI,GAAI,GAAM,EAAG,GAEjB,EAAK,GAAI,GAAM,EAAG,GAClB,EAAK,GAAI,GAAM,EAAG,GAClB,GAAK,GAAI,GAAM,EAAG,GAClB,GAAM,GAAI,GAAM,EAAG,GACnB,EAAK,GAAI,GAAM,EAAG,GAClB,EAAK,GAAI,GAAM,EAAG,GAClB,EAAK,GAAI,GAAM,EAAG,GAgDpB,IA9CI,IAAa,QAEf,GAAW,CACT,GAAI,GAAM,WAAY,YAAa,GAAI,GAAM,WAAY,WACzD,GAAI,GAAM,YAAa,YAAa,GAAI,GAAM,WAAY,aAC1D,GAAI,GAAM,UAAY,YAAa,GAAI,GAAM,WAAY,aACzD,GAAI,GAAM,YAAa,aAAc,GAAI,GAAM,YAAa,YAC5D,GAAI,GAAM,WAAY,aAAc,GAAI,GAAM,UAAY,YAC1D,GAAI,GAAM,UAAY,YAAa,GAAI,GAAM,WAAY,YACzD,GAAI,GAAM,WAAY,YAAa,GAAI,GAAM,YAAa,WAC1D,GAAI,GAAM,YAAa,WAAa,GAAI,GAAM,YAAa,YAC3D,GAAI,GAAM,WAAY,aAAc,GAAI,GAAM,WAAY,WAC1D,GAAI,GAAM,UAAW,aAAc,GAAI,GAAM,UAAY,YACzD,GAAI,GAAM,UAAY,YAAa,GAAI,GAAM,WAAY,YACzD,GAAI,GAAM,WAAY,aAAc,GAAI,GAAM,WAAY,aAC1D,GAAI,GAAM,YAAa,YAAa,GAAI,GAAM,YAAa,WAC3D,GAAI,GAAM,YAAa,aAAc,GAAI,GAAM,YAAa,aAC5D,GAAI,GAAM,WAAY,YAAa,GAAI,GAAM,WAAY,aACzD,GAAI,GAAM,UAAW,YAAa,GAAI,GAAM,UAAY,WACxD,GAAI,GAAM,UAAY,YAAa,GAAI,GAAM,UAAY,YACzD,GAAI,GAAM,WAAY,YAAa,GAAI,GAAM,WAAY,aACzD,GAAI,GAAM,WAAY,aAAc,GAAI,GAAM,WAAY,YAC1D,GAAI,GAAM,YAAa,YAAa,GAAI,GAAM,YAAa,WAC3D,GAAI,GAAM,YAAa,YAAa,GAAI,GAAM,YAAa,aAC3D,GAAI,GAAM,YAAa,YAAa,GAAI,GAAM,WAAY,WAC1D,GAAI,GAAM,WAAY,YAAa,GAAI,GAAM,WAAY,YACzD,GAAI,GAAM,WAAY,YAAa,GAAI,GAAM,UAAY,WACzD,GAAI,GAAM,UAAY,aAAc,GAAI,GAAM,UAAY,YAC1D,GAAI,GAAM,UAAY,YAAa,GAAI,GAAM,UAAY,YACzD,GAAI,GAAM,UAAY,YAAa,GAAI,GAAM,WAAY,YACzD,GAAI,GAAM,WAAY,YAAa,GAAI,GAAM,WAAY,YACzD,GAAI,GAAM,WAAY,YAAa,GAAI,GAAM,WAAY,YACzD,GAAI,GAAM,YAAa,aAAc,GAAI,GAAM,YAAa,WAC5D,GAAI,GAAM,YAAa,WAAa,GAAI,GAAM,YAAa,YAC3D,GAAI,GAAM,YAAa,aAAc,GAAI,GAAM,WAAY,YAC3D,GAAI,GAAM,WAAY,YAAa,GAAI,GAAM,WAAY,WACzD,GAAI,GAAM,WAAY,YAAa,GAAI,GAAM,WAAY,YACzD,GAAI,GAAM,UAAW,YAAa,GAAI,GAAM,UAAW,aACvD,GAAI,GAAM,UAAY,aAAc,GAAI,GAAM,UAAY,WAC1D,GAAI,GAAM,UAAY,WAAa,GAAI,GAAM,UAAY,YACzD,GAAI,GAAM,WAAY,WAAa,GAAI,GAAM,WAAY,aACzD,GAAI,GAAM,WAAY,YAAa,GAAI,GAAM,WAAY,WACzD,GAAI,GAAM,WAAY,WAAa,GAAI,GAAM,WAAY,cAIxD,EAAI,EAAG,EAAI,GAAI,GAAK,EACvB,EAAE,GAAK,GAAI,GAAM,EAAG,GAOtB,IAHA,EAAE,GAAO,IAAM,KAAS,GAAM,GAAM,IACpC,EAAI,GAAM,KAAO,IAAO,GAAK,IAAM,EACnC,EAAI,EAAE,OACD,EAAI,EAAG,EAAI,EAAG,GAAK,GAAI,CAU1B,IATA,EAAU,EAAG,EAAE,IACf,EAAU,EAAG,EAAE,IACf,EAAU,EAAG,EAAE,IACf,EAAU,EAAG,EAAE,IACf,EAAU,EAAG,EAAE,IACf,EAAU,EAAG,EAAE,IACf,EAAU,EAAG,EAAE,IACf,EAAU,EAAG,EAAE,IAEV,EAAI,EAAG,EAAI,GAAI,GAAK,EACvB,EAAE,GAAG,EAAI,EAAE,EAAI,EAAI,GACnB,EAAE,GAAG,EAAI,EAAE,EAAI,EAAI,EAAI,GAGzB,IAAK,EAAI,GAAI,EAAI,GAAI,GAAK,EAExB,EAAU,EAAI,EAAE,EAAI,GAAI,IACxB,EAAa,EAAI,EAAE,EAAI,GAAI,IAC3B,EAAS,EAAI,EAAE,EAAI,GAAI,GACvB,EAAG,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,EACxB,EAAG,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,EAExB,EAAU,EAAI,EAAE,EAAI,IAAK,GACzB,EAAU,EAAI,EAAE,EAAI,IAAK,GACzB,EAAS,EAAI,EAAE,EAAI,IAAK,GACxB,EAAG,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,EACxB,EAAG,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,EAExB,EAAU,EAAE,GAAI,EAAI,EAAE,EAAI,GAAI,EAAI,EAAE,EAAI,KAG1C,IAAK,EAAI,EAAG,EAAI,GAAI,GAAK,EAEvB,GAAG,EAAK,EAAE,EAAI,EAAE,EAAM,CAAC,EAAE,EAAI,EAAE,EAC/B,GAAG,EAAK,EAAE,EAAI,EAAE,EAAM,CAAC,EAAE,EAAI,EAAE,EAG/B,EAAU,EAAI,EAAG,IACjB,EAAU,EAAI,EAAG,IACjB,EAAa,EAAI,EAAG,GACpB,EAAG,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,EACxB,EAAG,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,EAGxB,EAAU,EAAI,EAAG,IACjB,EAAa,EAAI,EAAG,GACpB,EAAa,EAAI,EAAG,GACpB,EAAG,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,EACxB,EAAG,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,EAGxB,GAAI,EAAK,EAAE,EAAI,EAAE,EAAM,EAAE,EAAI,EAAE,EAAM,EAAE,EAAI,EAAE,EAC7C,GAAI,EAAK,EAAE,EAAI,EAAE,EAAM,EAAE,EAAI,EAAE,EAAM,EAAE,EAAI,EAAE,EAE7C,EAAU,EAAI,EAAG,EAAI,GAAI,EAAS,GAAI,EAAE,IACxC,EAAS,EAAI,EAAI,IAEjB,EAAU,EAAG,GACb,EAAU,EAAG,GACb,EAAU,EAAG,GACb,EAAS,EAAG,EAAG,GACf,EAAU,EAAG,GACb,EAAU,EAAG,GACb,EAAU,EAAG,GACb,EAAS,EAAG,EAAI,GAElB,EAAS,EAAE,GAAI,EAAE,GAAI,GACrB,EAAS,EAAE,GAAI,EAAE,GAAI,GACrB,EAAS,EAAE,GAAI,EAAE,GAAI,GACrB,EAAS,EAAE,GAAI,EAAE,GAAI,GACrB,EAAS,EAAE,GAAI,EAAE,GAAI,GACrB,EAAS,EAAE,GAAI,EAAE,GAAI,GACrB,EAAS,EAAE,GAAI,EAAE,GAAI,GACrB,EAAS,EAAE,GAAI,EAAE,GAAI,GAIvB,IAAK,EAAI,EAAG,EAAI,EAAG,GAAK,EACtB,EAAK,EAAI,GAAK,EAAE,GAAG,EACnB,EAAK,EAAI,EAAI,GAAK,EAAE,GAAG,EAEzB,MAAO,GAKT,WAAe,EAAG,EAAG,CACnB,KAAK,EAAI,EACT,KAAK,EAAI,EAMX,WAAmB,EAAK,EAAK,CAC3B,EAAI,EAAI,EAAI,EACZ,EAAI,EAAI,EAAI,EAOd,WAAmB,EAAK,EAAG,EAAO,CAChC,EAAI,EAAK,EAAE,IAAM,EAAU,EAAE,GAAM,GAAK,EACxC,EAAI,EAAK,EAAE,IAAM,EAAU,EAAE,GAAM,GAAK,EAM1C,WAAsB,EAAK,EAAG,EAAO,CACnC,EAAI,EAAK,EAAE,IAAM,EAAU,EAAE,GAAM,GAAK,EACxC,EAAI,EAAK,EAAE,IAAM,EAAU,EAAE,GAAM,GAAK,EAM1C,WAAkB,EAAK,EAAG,EAAO,CAC/B,EAAI,EAAK,EAAE,IAAM,EAAU,EAAE,GAAM,GAAK,EACxC,EAAI,EAAK,EAAE,IAAM,EAMnB,WAAkB,EAAK,EAAG,EAAG,CAC3B,GAAI,GAAM,GAAE,EAAI,OAAW,GAAE,EAAI,OAC7B,EAAM,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,KAAO,IAC3C,EAAM,GAAE,EAAI,OAAW,GAAE,EAAI,OAAW,KAAO,IAC/C,EAAM,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,KAAO,IAC/C,EAAI,EAAK,EAAK,MAAW,GAAM,GAC/B,EAAI,EAAK,EAAK,MAAW,GAAM,GAKjC,WAAmB,EAAK,EAAG,EAAG,EAAG,EAAG,CAClC,GAAI,GAAM,GAAE,EAAI,OAAW,GAAE,EAAI,OAAW,GAAE,EAAI,OAAW,GAAE,EAAI,OAC/D,EAAM,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,KAAO,IACzE,EAAM,GAAE,EAAI,OAAW,GAAE,EAAI,OAAW,GAAE,EAAI,OAAW,GAAE,EAAI,OAAW,KAAO,IACjF,EAAM,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,KAAO,IAC7E,EAAI,EAAK,EAAK,MAAW,GAAM,GAC/B,EAAI,EAAK,EAAK,MAAW,GAAM,GAKjC,WAAmB,EAAK,EAAG,EAAG,EAAG,EAAG,EAAG,CACrC,GAAI,GAAM,GAAE,EAAI,OAAW,GAAE,EAAI,OAAW,GAAE,EAAI,OAAW,GAAE,EAAI,OAAW,GAAE,EAAI,OAClF,EAAM,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,KAAO,IACxF,EAAM,GAAE,EAAI,OAAW,GAAE,EAAI,OAAW,GAAE,EAAI,OAAW,GAAE,EAAI,OAAW,GAAE,EAAI,OAAW,KAAO,IAClG,EAAM,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,GAAE,IAAM,IAAO,KAAO,IAC1F,EAAI,EAAK,EAAK,MAAW,GAAM,GAC/B,EAAI,EAAK,EAAK,MAAW,GAAM,KAcnC,OAAQ,SAAS,EAAS,CAOV,AAAC,GAAW,MAAO,GAAQ,WAAc,WAAa,EAAQ,aAE1E,GAAU,GAAW,MAAO,GAAQ,KAAQ,SAAY,EAAQ,GAAK,IAErE,EAAQ,GAAW,MAAO,GAAQ,MAAS,UAAa,EAAQ,KAAO,GAEvE,EAAY,CACV,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAClD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EACnD,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAClD,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAEpD,EAAY,CACV,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAClD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EACnD,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAClD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAClD,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,IAEpD,EAAY,CACV,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EACrD,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GACpD,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EACrD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GACpD,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAEvD,EAAY,CACV,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GACpD,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EACrD,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,IAIxD,KAAK,IAAM,SAAS,EAAG,CACrB,MAAO,GAAS,EAAK,KAEvB,KAAK,IAAM,SAAS,EAAG,CACrB,MAAO,GAAS,EAAK,GAAU,IAEjC,KAAK,IAAM,SAAS,EAAG,EAAG,CACxB,MAAO,GAAS,EAAK,GAAU,IAEjC,KAAK,IAAM,SAAS,EAAG,CACrB,MAAO,GAAK,IAEd,KAAK,SAAW,SAAS,EAAG,EAAG,CAC7B,MAAO,GAAS,EAAU,EAAG,KAE/B,KAAK,SAAW,SAAS,EAAG,EAAG,CAC7B,MAAO,GAAS,EAAU,EAAG,GAAI,IAEnC,KAAK,SAAW,SAAS,EAAG,EAAG,EAAG,CAChC,MAAO,GAAS,EAAU,EAAG,GAAI,IAOnC,KAAK,QAAU,UAAW,CACxB,MAAO,KAAI,OAAO,gBAAkB,oCAQtC,KAAK,aAAe,SAAS,EAAG,CAI9B,MAAO,OAQT,KAAK,OAAS,SAAS,EAAG,CACxB,MAAI,OAAO,IAAM,aACf,GAAS,GAEJ,MAQT,KAAK,QAAU,SAAS,EAAG,CACzB,MAAI,OAAO,IAAM,WACf,GAAO,GAEF,MAST,WAAc,EAAG,CACf,SAAK,EAAQ,EAAW,GAAK,EACtB,EAAU,EAAK,EAAU,GAAI,EAAE,OAAS,IAOjD,WAAmB,EAAK,EAAM,CAC5B,EAAO,EAAQ,EAAW,GAAO,EACjC,EAAQ,EAAQ,EAAW,GAAQ,EACnC,GAAI,GAAG,EACL,EAAO,EAAU,GACjB,EAAO,MAAM,IACb,EAAO,MAAM,IAMf,IAJI,EAAK,OAAS,IAChB,GAAO,EAAK,EAAM,EAAI,OAAS,IAG5B,EAAI,EAAG,EAAI,GAAI,GAAK,EACvB,EAAK,GAAK,EAAK,GAAK,UACpB,EAAK,GAAK,EAAK,GAAK,WAEtB,SAAO,EAAK,EAAK,OAAO,EAAU,IAAQ,IAAM,EAAK,OAAS,GACvD,EAAU,EAAK,EAAK,OAAO,GAAO,IAAM,MAOjD,WAAmB,EAAO,CACxB,GAAI,GAAG,EAAS,GACd,EAAI,EAAM,OAAS,GACrB,IAAK,EAAI,EAAG,EAAI,EAAG,GAAK,EACtB,GAAU,OAAO,aAAc,EAAM,GAAK,KAAQ,EAAI,GAAO,KAE/D,MAAO,GAOT,WAAc,EAAG,EAAK,CACpB,GAAI,GAAG,EAAG,EAAG,EACX,EAAK,WACL,EAAK,WACL,EAAK,WACL,EAAK,UACL,EAAK,WACL,EAAI,EAAI,EAAI,EAAI,EAChB,EAAI,EAAI,EAAI,EAAI,EAOlB,IAJA,EAAE,GAAO,IAAM,KAAS,EAAM,GAC9B,EAAK,GAAM,KAAQ,GAAM,GAAK,IAAM,EACpC,EAAI,EAAE,OAED,EAAI,EAAG,EAAI,EAAG,GAAK,GAAI,CAM1B,IALA,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,EACL,EAAI,EAAG,GAAK,GAAI,GAAK,EACxB,EAAI,EAAS,EAAI,EAAS,EAAG,EAAI,EAAI,IACrC,EAAI,EAAS,EAAG,EAAE,EAAI,EAAU,KAChC,EAAI,EAAS,EAAG,EAAU,IAC1B,EAAI,EAAS,EAAQ,EAAG,EAAU,IAAK,GACvC,EAAK,EACL,EAAK,EACL,EAAK,EAAQ,EAAI,IACjB,EAAK,EACL,EAAK,EACL,EAAI,EAAS,EAAI,EAAS,GAAK,EAAG,EAAI,EAAI,IAC1C,EAAI,EAAS,EAAG,EAAE,EAAI,EAAU,KAChC,EAAI,EAAS,EAAG,EAAU,IAC1B,EAAI,EAAS,EAAQ,EAAG,EAAU,IAAK,GACvC,EAAK,EACL,EAAK,EACL,EAAK,EAAQ,EAAI,IACjB,EAAK,EACL,EAAK,EAGP,EAAI,EAAS,EAAI,EAAS,EAAI,IAC9B,EAAK,EAAS,EAAI,EAAS,EAAI,IAC/B,EAAK,EAAS,EAAI,EAAS,EAAI,IAC/B,EAAK,EAAS,EAAI,EAAS,EAAI,IAC/B,EAAK,EAAS,EAAI,EAAS,EAAI,IAC/B,EAAK,EAEP,MAAO,CAAC,EAAI,EAAI,EAAI,EAAI,GAK1B,WAAkB,EAAG,EAAG,EAAG,EAAG,CAC5B,MAAQ,IAAK,GAAK,GAAK,GAAO,EAAI,EAAI,EACnC,IAAM,GAAK,GAAK,GAAO,EAAI,EAAM,CAAC,EAAI,EACtC,IAAM,GAAK,GAAK,GAAO,GAAI,CAAC,GAAK,EACjC,IAAM,GAAK,GAAK,GAAO,EAAI,EAAM,EAAI,CAAC,EACtC,IAAM,GAAK,GAAK,GAAM,EAAK,GAAI,CAAC,GACjC,2BAGJ,WAAmB,EAAG,CACpB,MAAQ,IAAK,GAAK,GAAK,GAAM,EAC1B,IAAM,GAAK,GAAK,GAAM,WACtB,IAAM,GAAK,GAAK,GAAM,WACtB,IAAM,GAAK,GAAK,GAAM,WACtB,IAAM,GAAK,GAAK,GAAM,WACvB,4BAGJ,WAAmB,EAAG,CACpB,MAAQ,IAAK,GAAK,GAAK,GAAM,WAC1B,IAAM,GAAK,GAAK,GAAM,WACtB,IAAM,GAAK,GAAK,GAAM,WACtB,IAAM,GAAK,GAAK,GAAM,WACtB,IAAM,GAAK,GAAK,GAAM,EACvB,+BAMP,SAAS,EAAQC,EAAW,CAC3B,GAAI,GAAc,GAEhB,EAAc,EACV,GAAW,MAAOD,iBAAW,UAAYA,gBAAUA,iBAAWA,eAAO,QACvE,GAASA,gBAIb,AAAI,MAAOE,IAAW,YAAc,MAAOA,GAAO,KAAQ,UAAYA,EAAO,IAE3EA,EAAO,UAAW,CAChB,MAAO,KAEJ,AAAI,EAET,AAAkC,GAAU,EAAO,UAAY,EAC7D,UAAiB,EAIjB,EAAY,OAAS,EAIvB,EAAO,OAAS,GAElB,uCCjuDJ,GAAI,QAASC,iBACT,KAAO,GAAI,QAAO,KAIlBC,iBAAiB,OAAO,UAAU,eACtC,kBAAiB,CAEb,OADI,GAAS,GACJ,EAAI,EAAG,EAAI,UAAU,OAAQ,IAAK,CACvC,GAAI,GAAS,UAAU,GACvB,OAAS,KAAO,GACZ,AAAIA,iBAAe,KAAK,EAAQ,IAC5B,GAAO,GAAO,EAAO,IAIjC,MAAO,GAIX,GAAIC,UAAS,GAEbA,SAAO,SAAW,SAAS,EAAK,CAC5B,MAAO,QAAO,KAAK,GAAK,OAAO,IAAI,SAAS,EAAK,CAC7C,MAAOA,UAAO,cAAc,GAAO,IAC/BA,SAAO,cAAc,EAAI,MAC9B,KAAK,MAGZA,SAAO,SAAW,SAAS,EAAK,CAC5B,MAAO,GAAI,MAAM,KAAK,OAAO,SAAU,EAAM,CACzC,MAAO,KAAS,KACjB,OAAO,SAAS,EAAK,EAAK,CACzB,GAAI,GAAQ,EAAK,MAAM,KACvB,SAAI,mBAAmB,EAAM,KAAQ,AAAS,EAAM,KAAf,KACjC,GAAK,mBAAmB,EAAM,IAC3B,GACR,KAGPA,SAAO,OAAS,SAAS,EAAQ,EAAK,EAAM,EAAS,EAAU,CAC3D,GAAI,GAAM,GAAI,gBACV,EAAa,SACjB,EAAI,mBAAqB,UAAW,CAChC,GAAI,AAAM,EAAI,aAAV,GAAwB,AAAM,EAAI,SAAV,EACxB,GAAI,EAAW,KAAK,EAAI,QAAS,EAAS,KAAM,OAC3C,OAAO,GAAS,EAAK,OAGlC,EAAI,QAAU,SAAS,EAAG,CAAE,MAAO,GAAS,EAAG,OAC/C,EAAI,KAAK,EAAQ,EAAK,IACtB,OAAS,KAAK,GAAS,EAAI,iBAAiB,EAAG,EAAQ,IACvD,SAAI,KAAK,GACF,GAGXA,SAAO,IAAM,SAAS,EAAQ,EAAK,EAAM,EAAM,EAAS,EAAU,CAC9D,GAAI,GAAW,GAAW,EAAQ,QAAW,CACzC,eAAgB,qCAEpB,SAAQ,cAAgB,SAAWA,SAAO,WAAW,GAC9CA,SAAO,OAAO,EAAQ,EAAK,EAAM,EAAS,IAGrDA,SAAO,MAAQ,UAAW,CACtB,OAAS,GAAI,GAAI,EAAE,OAAS,GACxB,GAAK,gEAAgE,KAAK,MAAM,KAAK,SAAW,KAEpG,MAAO,IAGXA,SAAO,WAAa,SAAS,EAAK,CAC9B,MAAO,QAAO,KAAK,GAAK,OAAO,IAAI,SAAS,EAAK,CAC7C,MAAO,oBAAmB,GAAO,KAAO,mBAAmB,EAAI,IAAQ,MACxE,KAAK,OAGZA,SAAO,UAAY,UAAW,CAAE,MAAO,CAAC,CAAG,EAAC,GAAI,MAAU,MAE1DA,SAAO,cAAgB,SAAS,EAAG,CAC/B,MAAO,oBAAmB,GACrB,QAAQ,MAAO,OAAO,QAAQ,MAAO,OACrC,QAAQ,MAAO,OAAO,QAAQ,MAAO,OAAO,QAAQ,MAAO,QAGpEA,SAAO,WAAa,SAAS,EAAQ,EAAK,EAAQ,CAC9C,MAAI,GAAO,iBAAiB,MAAO,GAAO,gBACnC,CACH,EACAA,SAAO,cAAc,GACrBA,SAAO,cAAcA,SAAO,SAAS,KAAU,KAAK,MAG5DA,SAAO,UAAY,SAAS,EAAc,EAAc,EAAY,CAChE,MAAO,MAAK,SACRA,SAAO,cAAc,GAAgB,IACrCA,SAAO,cAAc,GACrB,IAkBRA,SAAO,gBAAkB,SAAS,EAAS,CACvC,EAAU,GAAW,GACrB,GAAI,GAAe,EAAQ,cAAgB,GACvC,EAAkB,EAAQ,iBAAmB,GAC7C,EAAmB,EAAQ,kBAAoB,YAC/C,EAAU,EAAQ,SAAW,MAC7B,EAAQ,EAAQ,OAAS,GACzB,EAAe,EAAQ,cAAgB,GAE3C,MAAO,UAAS,EAAQ,EAAK,EAAc,CACvC,EAAS,EAAO,cACZ,MAAO,IAAiB,UAAY,EAAa,OAAS,GAC1D,GAAeA,SAAO,SAAS,IAGnC,GAAI,GAAY,EAAI,MAAM,IAAK,GAC/B,EAAW,EAAU,GAEjB,EAAe,EAAU,SAAW,EACpCA,SAAO,SAAS,EAAU,IAAM,GAEhC,EAAe,CACf,mBAAoB,EACpB,uBAAwB,EACxB,cAAe,EACf,gBAAiBA,SAAO,YACxB,YAAaA,SAAO,SAGxB,AAAI,GAAO,GAAa,YAAc,GAEtC,GAAI,GAAaC,QAAM,GAAI,EAAc,EAAc,GACnD,EAAWD,SAAO,WAAW,EAAQ,EAAU,GAEnD,SAAa,gBAAkBA,SAAO,UAAU,EAAiB,EAAc,GAExE,SAAWA,SAAO,WAAW,QAI5C,UAAiBA,kDC1JjB,AAAM,UAAS,EAAM,EAAS,CAI1B,UAAiB,MAInBE,eAAM,UAAW,CAEjB,YAAmC,CACjC,GAAI,GAAU,UAAU,OAExB,GAAI,IAAY,EACd,KAAM,IAAI,OAAM,wDAGlB,GAAI,GAAO,SAAS,cAAc,QAGlC,GAFA,EAAK,KAAO,UAAU,GAElB,IAAY,EACd,MAAO,GAAK,KAGd,GAAI,GAAO,SAAS,qBAAqB,QAAQ,GACjD,EAAK,aAAa,EAAM,EAAK,YAK7B,OAHI,GAAI,SAAS,cAAc,KAC3B,EAEK,EAAQ,EAAG,EAAQ,EAAS,IACnC,EAAE,KAAO,UAAU,GACnB,EAAW,EAAE,KACb,EAAK,KAAO,EAGd,SAAK,YAAY,GAEV,EAGT,MAAO,qBC5CT,GAAI,QAAS,cACTC,SAAS,cACTC,OAAO,YACPC,SAAU,MAAO,SAAW,YAAc,OAASV,eAEvDW,OAAiB,CAChB,OACA,OAAQH,SACR,KAAMC,OACN,KAAMG,OACN,MAAOC,QACP,KAAMC,OACN,IACA,MAAOC,QACP,OAAQC,SACR,WAAYC,aACZ,SAAUC,WACV,OAAQR,UAGT,sBAAuB,CACtB,MAAI,QAAO,OACH,OAAO,OAEP,SAAoB,EAAK,EAAQ,EAAQ,EAAK,CACpD,OAAS,GAAI,EAAG,EAAI,UAAU,OAAQ,IACrCI,OAAK,OAAO,UAAU,IAAK,SAAS,EAAK,EAAK,CAC7C,EAAI,GAAO,IAGb,MAAO,IAKV,sBAAuB,CACtB,GAAI,OAAO,OACV,MAAO,UAAgB,EAAK,EAAc,EAAc,EAAK,CAC5D,GAAI,GAAiBD,QAAM,UAAW,GACtC,MAAO,QAAO,MAAM,KAAM,CAAC,OAAO,OAAO,IAAM,OAAO,KAEjD,CACN,GAAS,GAAT,UAAa,GACb,MAAO,UAAgB,EAAK,EAAc,EAAc,EAAK,CAC5D,GAAI,GAAiBA,QAAM,UAAW,GACtC,SAAE,UAAY,EACP,OAAO,MAAM,KAAM,CAAC,GAAI,IAAK,OAAO,MAK9C,oBAAqB,CACpB,MAAI,QAAO,UAAU,KACb,SAAc,EAAK,CACzB,MAAO,QAAO,UAAU,KAAK,KAAK,IAG5B,SAAc,EAAK,CACzB,MAAO,GAAI,QAAQ,qCAAsC,KAK5D,gBAAc,EAAK,EAAI,CACtB,MAAO,WAAW,CACjB,MAAO,GAAG,MAAM,EAAK,MAAM,UAAU,MAAM,KAAK,UAAW,KAI7D,iBAAe,EAAK,EAAO,CAC1B,MAAO,OAAM,UAAU,MAAM,KAAK,EAAK,GAAS,GAGjD,gBAAc,EAAK,EAAI,CACtBE,QAAM,EAAK,SAAS,EAAK,EAAK,CAC7B,SAAG,EAAK,GACD,KAIT,aAAa,EAAK,EAAI,CACrB,GAAI,GAAOC,SAAO,GAAO,GAAK,GAC9BD,eAAM,EAAK,SAAS,EAAG,EAAG,CACzB,SAAI,GAAK,EAAG,EAAG,GACR,KAED,EAGR,iBAAe,EAAK,EAAI,CACvB,GAAIC,SAAO,IACV,OAAS,GAAE,EAAG,EAAE,EAAI,OAAQ,IAC3B,GAAI,EAAG,EAAI,GAAI,GACd,MAAO,GAAI,OAIb,QAAS,KAAO,GACf,GAAI,EAAI,eAAe,IAClB,EAAG,EAAI,GAAM,GAChB,MAAO,GAAI,GAOhB,kBAAgB,EAAK,CACpB,MAAQ,IAAO,MAAQ,MAAO,IAAO,YAAc,MAAO,GAAI,QAAU,SAGzE,sBAAoB,EAAK,CACxB,MAAO,IAAO,GAAG,SAAS,KAAK,KAAS,oBAGzC,oBAAkB,EAAK,CACtB,MAAO,IAAO,GAAG,SAAS,KAAK,KAAS,kBCpHzC,GAAIL,QAAOR,OACPU,QAAQF,OAAK,MACb,MAAQA,OAAK,MACbG,OAAOH,OAAK,KACZ,KAAOA,OAAK,KACZ,OAASA,OAAK,OACd,OAASA,OAAK,OACdM,aAAaN,OAAK,WAClB,SAAWA,OAAK,SAEpB,YAAiB,CAChB,aAGG,SAAW,CACd,QAAS,SACT,QAAS,GAIT,IAAK,SAAS,EAAK,EAAsB,CACxC,GAAI,GAAO,KAAK,QAAQ,KAAK,KAAK,iBAAmB,GACrD,MAAO,MAAK,aAAa,EAAM,IAKhC,IAAK,SAAS,EAAK,EAAO,CACzB,MAAI,KAAU,OACN,KAAK,OAAO,GAEpB,MAAK,QAAQ,MAAM,KAAK,iBAAmB,EAAK,KAAK,WAAW,IACzD,IAIR,OAAQ,SAAS,EAAK,CACrB,KAAK,QAAQ,OAAO,KAAK,iBAAmB,IAK7C,KAAM,SAAS,EAAU,CACxB,GAAI,GAAO,KACX,KAAK,QAAQ,KAAK,SAAS,EAAK,EAAe,CAC9C,EAAS,KAAK,EAAM,EAAK,aAAa,GAAO,IAAiB,IAAI,QAAQ,EAAK,iBAAkB,QAKnG,SAAU,UAAW,CACpB,KAAK,QAAQ,YAOd,aAAc,SAAS,EAAW,CACjC,MAAQ,MAAK,kBAAoB,aAAa,EAAU,KAMzD,YAAa,UAAW,CACvB,MAAO,aAAY,MAAM,KAAM,YAGhC,UAAW,SAAS,EAAQ,CAC3B,KAAK,WAAW,IAGjB,UAAW,SAAS,EAAW,CAC9B,MAAO,aAAY,KAAK,QAAS,KAAK,QAAS,KAIjD,gBAAiB,CAChB,GAAI,GAAY,MAAO,UAAW,YAAc,KAAO,QACvD,GAAI,EAAC,EACL,IAAI,GAAM,EAAS,KAAO,EAAS,KAAO,EAAS,IACnD,EAAG,MAAM,EAAU,YAGpB,qBAAqB,EAAU,EAAS,EAAW,CAClD,AAAK,GACJ,GAAY,IAET,GAAY,CAAC,OAAO,IACvB,GAAW,CAAC,IAET,GAAW,CAAC,OAAO,IACtB,GAAU,CAAC,IAGZ,GAAI,GAAmB,EAAY,aAAa,EAAU,IAAM,GAC5D,EAAmB,EAAY,GAAI,QAAO,IAAI,GAAmB,KACjE,EAAkB,oBACtB,GAAI,CAAC,EAAgB,KAAK,GACzB,KAAM,IAAI,OAAM,4EAGjB,GAAI,GAAqB,CACxB,iBAAkB,EAClB,iBAAkB,EAElB,aAAc,SAAS,EAAS,CAC/B,GAAI,CACH,GAAI,GAAU,oBACd,EAAQ,MAAM,EAAS,GACvB,GAAI,GAAM,EAAQ,KAAK,KAAa,EACpC,SAAQ,OAAO,GACR,OACN,CACD,MAAO,KAIT,oBAAqB,SAAS,EAAc,EAAU,CACrD,GAAI,GAAQ,KAAK,GACjB,KAAK,GAAY,UAAoB,CACpC,GAAI,GAAOE,QAAM,UAAW,GACxB,EAAO,KAIX,YAAoB,CACnB,GAAI,EAAC,EACLC,cAAK,UAAW,SAAS,EAAK,EAAG,CAChC,EAAK,GAAK,IAEJ,EAAM,MAAM,EAAM,GAK1B,GAAI,GAAY,CAAC,GAAU,OAAO,GAElC,MAAO,GAAa,MAAM,EAAM,KAIlC,WAAY,SAAS,EAAK,CACzB,MAAO,MAAK,UAAU,IAGvB,aAAc,SAAS,EAAQ,EAAY,CAC1C,GAAI,CAAC,EAAU,MAAO,GAMtB,GAAI,GAAM,GACV,GAAI,CAAE,EAAM,KAAK,MAAM,QACvB,CAAW,EAAM,EAEjB,MAAQ,KAAQ,OAAY,EAAM,GAGnC,YAAa,SAAS,EAAS,CAC9B,AAAI,KAAK,SACL,KAAK,aAAa,IACrB,MAAK,QAAU,EACf,KAAK,QAAU,KAIjB,WAAY,SAAS,EAAQ,CAC5B,GAAI,GAAO,KAIX,GAAI,OAAO,GAAS,CACnBA,OAAK,EAAQ,SAAS,EAAQ,CAC7B,EAAK,WAAW,KAEjB,OAKD,GAAI,GAAa,MAAM,KAAK,QAAS,SAAS,EAAY,CACzD,MAAQ,KAAW,IAEpB,GAAI,GAMJ,IAHA,KAAK,QAAQ,KAAK,GAGd,CAACG,aAAW,GACf,KAAM,IAAI,OAAM,uDAGjB,GAAI,GAAmB,EAAO,KAAK,MACnC,GAAI,CAAC,SAAS,GACb,KAAM,IAAI,OAAM,wDAIjBH,OAAK,EAAkB,SAAS,EAAc,EAAU,CACvD,GAAI,CAACG,aAAW,GACf,KAAM,IAAI,OAAM,wBAAwB,EAAS,gBAAgB,EAAO,KAAK,2CAE9E,EAAK,oBAAoB,EAAc,OAQzC,WAAY,SAAS,EAAS,CAC7B,MAAM,wEACN,KAAK,YAAY,KAIf,EAAQ,OAAO,EAAoB,SAAU,CAChD,QAAS,KAEV,SAAM,IAAM,GACZH,OAAK,EAAO,SAAS,EAAM,EAAU,CACpC,AAAIG,aAAW,IACd,GAAM,IAAI,GAAY,KAAK,EAAO,MAGpCH,OAAK,EAAU,SAAS,EAAS,CAChC,EAAM,YAAY,KAEnBA,OAAK,EAAS,SAAS,EAAQ,CAC9B,EAAM,WAAW,KAEX,EC3OR,GAAIH,QAAOR,OACPO,SAASC,OAAK,OAElB,eAAiB,CAChB,KAAM,eACN,KAAMQ,OACN,MAAOC,QACP,KAAMN,OACN,OAAQO,SACR,SAAUC,YAGX,uBAAwB,CACvB,MAAOZ,UAAO,aAGf,gBAAc,EAAK,CAClB,MAAO,gBAAe,QAAQ,GAG/B,iBAAe,EAAK,EAAM,CACzB,MAAO,gBAAe,QAAQ,EAAK,GAGpC,gBAAc,EAAI,CACjB,OAAS,GAAI,eAAe,OAAS,EAAG,GAAK,EAAG,IAAK,CACpD,GAAI,GAAM,eAAe,IAAI,GAC7B,EAAGS,OAAK,GAAM,IAIhB,kBAAgB,EAAK,CACpB,MAAO,gBAAe,WAAW,GAGlC,qBAAoB,CACnB,MAAO,gBAAe,QChCvB,GAAIR,QAAOR,OACPO,SAASC,OAAK,OAElB,mBAAiB,CAChB,KAAM,sBACN,KAAMQ,OACN,MAAOC,QACP,KAAMN,OACN,OAAQO,SACR,SAAUC,YAGP,cAAgBZ,SAAO,cAE3B,gBAAc,EAAK,CAClB,MAAO,eAAc,GAGtB,iBAAe,EAAK,EAAM,CACzB,cAAc,GAAO,EAGtB,gBAAc,EAAI,CACjB,OAAS,GAAI,cAAc,OAAS,EAAG,GAAK,EAAG,IAAK,CACnD,GAAI,GAAM,cAAc,IAAI,GAC5B,EAAG,cAAc,GAAM,IAIzB,kBAAgB,EAAK,CACpB,MAAO,eAAc,WAAW,GAGjC,qBAAoB,CACnBI,OAAK,SAAS,EAAK,EAAG,CACrB,MAAO,eAAc,KCnCvB,GAAIH,QAAOR,OACPO,SAASC,OAAK,OAElB,qBAAiB,CAChB,KAAM,wBACN,MAAOS,QACP,KAAMD,OACN,KAAML,OACN,OAAQO,SACR,SAAUC,YAGP,YAAc,UACdC,MAAMb,SAAO,SACb,eAAiB,2BACjB,QAAWA,UAAO,UAAYA,SAAO,UAAU,UAAY,IAAI,MAAM,8BAEzE,iBAAe,EAAY,EAAM,CAChC,GAAI,SACJ,IAAI,GAAW,OAAO,GACtB,eAAe,SAAS,EAAW,CAClC,EAAU,aAAa,EAAU,GACjC,EAAU,KAAK,gBAIjB,gBAAc,EAAY,CACzB,GAAI,SACJ,IAAI,GAAW,OAAO,GAClB,EAAM,KACV,sBAAe,SAAS,EAAW,CAClC,EAAM,EAAU,aAAa,KAEvB,GAGR,gBAAc,EAAU,CACvB,eAAe,SAAS,EAAW,CAElC,OADI,GAAa,EAAU,YAAY,gBAAgB,WAC9C,EAAE,EAAW,OAAO,EAAG,GAAG,EAAG,IAAK,CAC1C,GAAI,GAAO,EAAW,GACtB,EAAS,EAAU,aAAa,EAAK,MAAO,EAAK,SAKpD,kBAAgB,EAAY,CAC3B,GAAI,GAAW,OAAO,GACtB,eAAe,SAAS,EAAW,CAClC,EAAU,gBAAgB,GAC1B,EAAU,KAAK,eAIjB,qBAAoB,CACnB,eAAe,SAAS,EAAW,CAClC,GAAI,GAAa,EAAU,YAAY,gBAAgB,WACvD,EAAU,KAAK,aACf,OAAS,GAAE,EAAW,OAAO,EAAG,GAAG,EAAG,IACrC,EAAU,gBAAgB,EAAW,GAAG,MAEzC,EAAU,KAAK,eAUjB,GAAI,qBAAsB,GAAI,QAAO,wCAAyC,KAC9E,gBAAgB,EAAK,CACpB,MAAO,GAAI,QAAQ,MAAO,SAAS,QAAQ,oBAAqB,OAGjE,mCAAoC,CACnC,GAAI,CAACa,OAAO,CAACA,MAAI,iBAAmB,CAACA,MAAI,gBAAgB,YACxD,MAAO,MAER,GAAI,GAAY,SACf,EACA,EACA,EAYD,GAAI,CAEH,EAAmB,GAAI,eAAc,YACrC,EAAiB,OACjB,EAAiB,MAAM,IAAI,EAAU,uBAAuB,EAAU,yCACtE,EAAiB,QACjB,EAAe,EAAiB,EAAE,OAAO,GAAG,SAC5C,EAAY,EAAa,cAAc,YACtC,CAGD,EAAYA,MAAI,cAAc,OAC9B,EAAeA,MAAI,KAGpB,MAAO,UAAS,EAAe,CAC9B,GAAI,GAAO,GAAG,MAAM,KAAK,UAAW,GACpC,EAAK,QAAQ,GAGb,EAAa,YAAY,GACzB,EAAU,YAAY,qBACtB,EAAU,KAAK,aACf,EAAc,MAAM,KAAM,GAC1B,EAAa,YAAY,ICvH3B,GAAIZ,QAAOR,OACPO,SAASC,OAAK,OACd,KAAOA,OAAK,KAEhB,cAAiB,CAChB,KAAM,gBACN,KAAMQ,OACN,MAAOC,QACP,KAAMN,OACN,OAAQO,SACR,SAAUC,YAGP,IAAMZ,SAAO,SAEjB,gBAAc,EAAK,CAClB,GAAI,CAAC,GAAO,CAAC,KAAK,GAAQ,MAAO,MACjC,GAAI,GAAY,gBACf,OAAO,GAAK,QAAQ,cAAe,QACnC,qCACD,MAAO,UAAS,IAAI,OAAO,QAAQ,GAAI,QAAO,GAAY,OAG3D,gBAAc,EAAU,CAEvB,OADI,GAAU,IAAI,OAAO,MAAM,QACtB,EAAI,EAAQ,OAAS,EAAG,GAAK,EAAG,IACxC,GAAI,EAAC,KAAK,EAAQ,IAGlB,IAAI,GAAM,EAAQ,GAAG,MAAM,KACvB,EAAM,SAAS,EAAI,IACnB,EAAM,SAAS,EAAI,IACvB,EAAS,EAAK,IAIhB,iBAAe,EAAK,EAAM,CACzB,AAAG,CAAC,GACJ,KAAI,OAAS,OAAO,GAAO,IAAM,OAAO,GAAQ,mDAGjD,kBAAgB,EAAK,CACpB,AAAI,CAAC,GAAO,CAAC,KAAK,IAGlB,KAAI,OAAS,OAAO,GAAO,oDAG5B,qBAAoB,CACnBI,OAAK,SAAS,EAAG,EAAK,CACrBO,SAAO,KAIT,cAAc,EAAK,CAClB,MAAQ,IAAI,QAAO,cAAgB,OAAO,GAAK,QAAQ,cAAe,QAAU,WAAY,KAAK,IAAI,QC3DtG,GAAI,MAAOlB,OACP,OAAS,KAAK,OAElB,iBAAiB,CAChB,KAAM,iBACN,KAAMgB,OACN,MAAOC,QACP,KAAMN,OACN,OAAQO,SACR,SAAUC,YAGX,yBAA0B,CACzB,MAAO,QAAO,eAGf,gBAAc,EAAK,CAClB,MAAO,kBAAiB,QAAQ,GAGjC,iBAAe,EAAK,EAAM,CACzB,MAAO,kBAAiB,QAAQ,EAAK,GAGtC,gBAAc,EAAI,CACjB,OAAS,GAAI,iBAAiB,OAAS,EAAG,GAAK,EAAG,IAAK,CACtD,GAAI,GAAM,iBAAiB,IAAI,GAC/B,EAAGH,OAAK,GAAM,IAIhB,kBAAgB,EAAK,CACpB,MAAO,kBAAiB,WAAW,GAGpC,qBAAoB,CACnB,MAAO,kBAAiB,WC/BzB,iBAAiB,CAChB,KAAM,gBACN,KACA,MACA,KAAML,OACN,OACA,UAGG,cAAgB,GAEpB,cAAc,EAAK,CAClB,MAAO,eAAc,GAGtB,eAAe,EAAK,EAAM,CACzB,cAAc,GAAO,EAGtB,gBAAc,EAAU,CACvB,OAAS,KAAO,eACf,AAAI,cAAc,eAAe,IAChC,EAAS,cAAc,GAAM,GAKhC,gBAAgB,EAAK,CACpB,MAAO,eAAc,GAGtB,kBAAkB,EAAK,CACtB,cAAgB,MCrCjB,KAAiB,CAEhBX,eACAqB,mBACAC,qBACAC,cACAC,iBACAC,iBCoJD,AAAI,MAAO,OAAS,UAChB,MAAO,IAGX,AAAC,WAAY,CAGT,GAAI,QAAS,gBACT,OAAS,sCACT,SAAW,mEACX,QAAU,uBACV,aAAe,kIACf,aAAe,2GAEnB,WAAW,EAAG,CAEV,MAAO,GAAI,GACL,IAAM,EACN,EAGV,qBAAsB,CAClB,MAAO,MAAK,UAGhB,AAAI,MAAO,MAAK,UAAU,QAAW,YAEjC,MAAK,UAAU,OAAS,UAAY,CAEhC,MAAO,UAAS,KAAK,WACf,KAAK,iBAAmB,IAClB,EAAE,KAAK,cAAgB,GAAK,IAC5B,EAAE,KAAK,cAAgB,IACvB,EAAE,KAAK,eAAiB,IACxB,EAAE,KAAK,iBAAmB,IAC1B,EAAE,KAAK,iBAAmB,IAChC,MAGV,QAAQ,UAAU,OAAS,WAC3B,OAAO,UAAU,OAAS,WAC1B,OAAO,UAAU,OAAS,YAG9B,GAAI,KACA,OACA,KACA,IAGJ,eAAe,EAAQ,CAOnB,oBAAa,UAAY,EAClB,aAAa,KAAK,GACnB,IAAO,EAAO,QAAQ,aAAc,SAAU,EAAG,CAC/C,GAAI,GAAI,KAAK,GACb,MAAO,OAAO,IAAM,SACd,EACA,MAAS,QAAS,EAAE,WAAW,GAAG,SAAS,KAAK,MAAM,MAC3D,IACH,IAAO,EAAS,IAI1B,aAAa,EAAK,EAAQ,CAItB,GAAI,GACA,EACA,EACA,EACA,EAAO,IACP,EACA,EAAQ,EAAO,GAkBnB,OAdI,GAAS,MAAO,IAAU,UACtB,MAAO,GAAM,QAAW,YAC5B,GAAQ,EAAM,OAAO,IAMrB,MAAO,MAAQ,YACf,GAAQ,IAAI,KAAK,EAAQ,EAAK,IAK1B,MAAO,QACV,SACD,MAAO,OAAM,OAEZ,SAID,MAAO,UAAS,GACV,OAAO,GACP,WAEL,cACA,OAMD,MAAO,QAAO,OAKb,SAKD,GAAI,CAAC,EACD,MAAO,OAUX,GALA,KAAO,OACP,EAAU,GAIN,OAAO,UAAU,SAAS,MAAM,KAAW,iBAAkB,CAM7D,IADA,EAAS,EAAM,OACV,EAAI,EAAG,EAAI,EAAQ,GAAK,EACzB,EAAQ,GAAK,IAAI,EAAG,IAAU,OAMlC,SAAI,EAAQ,SAAW,EACjB,KACA,IACI;AAAA,EAAQ,IAAM,EAAQ,KAAK;AAAA,EAAQ,KAAO;AAAA,EAAO,EAAO,IACxD,IAAM,EAAQ,KAAK,KAAO,IACpC,IAAM,EACC,EAKX,GAAI,KAAO,MAAO,MAAQ,SAEtB,IADA,EAAS,IAAI,OACR,EAAI,EAAG,EAAI,EAAQ,GAAK,EACzB,AAAI,MAAO,KAAI,IAAO,UAClB,GAAI,IAAI,GACR,EAAI,IAAI,EAAG,GACP,GACA,EAAQ,KAAK,MAAM,GACf,KACM,KACA,KACN,QAQhB,KAAK,IAAK,GACN,AAAI,OAAO,UAAU,eAAe,KAAK,EAAO,IAC5C,GAAI,IAAI,EAAG,GACP,GACA,EAAQ,KAAK,MAAM,GACf,KACM,KACA,KACN,IASpB,SAAI,EAAQ,SAAW,EACjB,KACA,IACI;AAAA,EAAQ,IAAM,EAAQ,KAAK;AAAA,EAAQ,KAAO;AAAA,EAAO,EAAO,IACxD,IAAM,EAAQ,KAAK,KAAO,IACpC,IAAM,EACC,GAMf,AAAI,MAAO,MAAK,WAAc,YAC1B,MAAO,CACH,KAAM,MACN,IAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,IAAM,MACN,KAAM,QAEV,KAAK,UAAY,SAAU,EAAO,EAAU,EAAO,CAQ/C,GAAI,GAOJ,GANA,IAAM,GACN,OAAS,GAKL,MAAO,IAAU,SACjB,IAAK,EAAI,EAAG,EAAI,EAAO,GAAK,EACxB,QAAU,QAKX,AAAI,OAAO,IAAU,UACxB,QAAS,GAOb,GADA,IAAM,EACF,GAAY,MAAO,IAAa,YAC3B,OAAO,IAAa,UACrB,MAAO,GAAS,QAAW,UAC/B,KAAM,IAAI,OAAM,kBAMpB,MAAO,KAAI,GAAI,CAAC,GAAI,MAOxB,MAAO,MAAK,OAAU,YACtB,MAAK,MAAQ,SAAU,KAAM,QAAS,CAKlC,GAAI,GAEJ,cAAc,EAAQ,EAAK,CAKvB,GAAI,GACA,EACA,EAAQ,EAAO,GACnB,GAAI,GAAS,MAAO,IAAU,SAC1B,IAAK,IAAK,GACN,AAAI,OAAO,UAAU,eAAe,KAAK,EAAO,IAC5C,GAAI,KAAK,EAAO,GAChB,AAAI,IAAM,OACN,EAAM,GAAK,EAEX,MAAO,GAAM,IAK7B,MAAO,SAAQ,KAAK,EAAQ,EAAK,GA8BrC,GAtBA,KAAO,OAAO,MACd,aAAa,UAAY,EACrB,aAAa,KAAK,OAClB,MAAO,KAAK,QAAQ,aAAc,SAAU,EAAG,CAC3C,MAAO,MACE,QAAS,EAAE,WAAW,GAAG,SAAS,KAAK,MAAM,OAkB1D,OAAO,KACH,KACK,QAAQ,OAAQ,KAChB,QAAQ,SAAU,KAClB,QAAQ,QAAS,KAS1B,SAAI,KAAK,IAAM,KAAO,KAKd,MAAO,UAAY,WACrB,KAAK,CAAC,GAAI,GAAI,IACd,EAKV,KAAM,IAAI,aAAY,uBCxflC,OAAiB,YAEjB,sBAAuB,CAEtB,MAAO,GCJR,GAAI,QAASzB,YAET,SAAWqB,IACX,QAAU,CAACC,OAEf,aAAiB,OAAO,YAAY,SAAU,SCH1C,OAAStB,SACT,WAAaqB,qBACb,MAAQC,aAIR,eAAiB,OAAO,UAAU,eACtC,gBAAiB,CAEb,OADI,GAAS,GACJ,EAAI,EAAG,EAAI,UAAU,OAAQ,IAAK,CACvC,GAAI,GAAS,UAAU,GACvB,OAAS,KAAO,GACZ,AAAI,eAAe,KAAK,EAAQ,IAC5B,GAAO,GAAO,EAAO,IAIjC,MAAO,MASX,SAAiB,SAAS,EAAG,CAEzB,GAAI,GAAQ,GAIZ,EAAM,cAAgB,UAAW,CAC7B,MAAO,CAAC,CAAE,GAAM,gBAAkB,EAAM,wBAG5C,EAAM,OAAS,UAAW,CACtB,SAAM,cAAe,IACrB,EAAM,qBAAsB,IAC5B,EAAM,6BAA8B,IAC7B,GAIX,EAAM,aAAe,SAAS,EAAU,CACpC,GAAI,EAAM,gBAAiB,MAAO,KAElC,EAAM,SAGN,GAAI,GAAS,EAAU,EAAQ,IAC3B,EAAM,EAAE,IAAM,uBAMlB,GAJA,EAAO,gBAAkB,OAAO,UAC5B,EAAE,aAAc,GAChB,OAAO,WAAW,OAAQ,EAAK,IAE/B,CAAC,EAAE,WAAY,CAEf,GAAI,GAAI,IAAK,EAAI,IACb,EAAW,CACP,CAAC,QAAS,GAAI,CAAC,SAAU,GACzB,CAAC,OAAQ,OAAO,MAAQ,EAAI,EAAI,GAChC,CAAC,MAAO,OAAO,OAAS,EAAI,EAAI,IAAI,IAAI,SAAS,EAAG,CAChD,MAAO,GAAE,KAAK,OACf,KAAK,KACZ,EAAQ,OAAO,KAAK,cAAe,eAAgB,GAIvD,GAFA,EAAM,YAAc,EAEhB,CAAC,EAAO,CACR,GAAI,GAAQ,GAAI,OAAM,qBACtB,QAAM,OAAS,gBACT,GAMd,OAAO,IAAI,OAAQ,EAAK,EAAQ,KAAM,GAAI,GAC1C,EAAE,UAEF,WAAsB,EAAK,EAAK,CAE5B,GADA,EAAE,OACE,EAAK,MAAO,GAAS,GACzB,GAAI,GAAO,OAAO,SAAS,EAAI,UAC/B,EAAM,6BAA8B,EAAK,oBACzC,GAAI,GAAgB,EAAE,IAAM,oBAAsB,OAAO,SAAS,CAC9D,YAAa,EAAK,YAClB,eAAgB,WAAW,EAAE,WAGjC,AAAI,EAAE,WACF,SAAS,KAAO,EAEhB,EAAM,SAAW,EAMzB,OAAO,aAAe,SAAS,EAAO,CAClC,GAAI,GAAc,OAAO,SAAS,EAAM,MAAM,KAAK,IACnD,EAAiB,EAAY,aAC7B,MAAO,QAAO,cAOlB,WAA0B,EAAa,CACnC,GAAI,GAAM,EAAE,IAAM,sBACd,EAAS,EAAU,EAAQ,IAC3B,EAAuB,EAAM,8BACjC,EAAO,YAAc,EACrB,EAAO,gBAAkB,OAAO,UAC5B,EAAE,aACF,EACA,OAAO,WAAW,OAAQ,EAAK,IAMnC,OAAO,IAAI,OAAQ,EAAK,EAAQ,KAAM,GAAI,GAC1C,EAAE,UAGN,WAAyB,EAAK,EAAK,CAE/B,GADA,EAAE,OACE,EAAK,MAAO,GAAS,GACzB,GAAI,GAAe,OAAO,SAAS,EAAI,UACvC,EAAM,cAAe,EAAa,aAClC,EAAM,qBAAsB,EAAa,oBACzC,EAAS,KAAM,KAIvB,EAAM,wBAA0B,UAAW,CACvC,GAAI,GAAqB,GACzB,GAAI,CAGA,AAAI,EAAM,aAAe,CAAC,EAAM,YAAY,QACxC,GAAM,YAAY,QAClB,EAAqB,SAE3B,EAGF,MAAO,IAGX,EAAM,eAAiB,SAAS,EAAa,EAAU,CAInD,WAA0B,EAAa,CACnC,GAAI,GAAM,EAAE,IAAM,sBACd,EAAS,EAAU,EAAQ,IAC3B,EAAuB,EAAM,8BACjC,EAAO,YAAc,EACrB,EAAO,gBAAkB,OAAO,UAC5B,EAAE,aACF,EACA,OAAO,WAAW,OAAQ,EAAK,IAKnC,OAAO,IAAI,OAAQ,EAAK,EAAQ,KAAM,GAAI,GAC1C,EAAE,UAGN,WAAyB,EAAK,EAAK,CAE/B,GADA,EAAE,OACE,EAAK,MAAO,GAAS,GACzB,GAAI,GAAe,OAAO,SAAS,EAAI,UACvC,EAAM,cAAe,EAAa,aAClC,EAAM,qBAAsB,EAAa,oBACzC,EAAS,KAAM,GAGnB,EAAiB,IAOrB,EAAM,IAAM,SAAS,EAAS,EAAU,CACpC,GAAK,EAAM,gBAQP,MAAO,KAPP,GAAI,EAAE,KACF,MAAO,GAAM,aAAa,GAE1B,EAAS,oBAAqB,MAC9B,OAMR,YAAe,CACX,GAAI,GAAS,EAAU,EAAQ,IAC3B,EAAqB,EAAM,sBAC3B,EAAO,EAAQ,SAAW,GAAS,EAAE,IAAM,EAAQ,KAAO,EAAQ,KAClE,EAAY,EAAI,QAAQ,OAAQ,IAAI,MAAM,IAAK,GAC/C,EAAW,EAAU,GACrB,EAAS,EAAU,SAAW,EAAK,EAAU,GAAK,GAGtD,MAAK,EAAC,EAAQ,SAAW,CAAC,EAAQ,QAAQ,QACtC,EAAQ,QAAQ,OAAO,kBAAoB,sCAC3C,EAAQ,SACR,GAAS,MAAM,EAAQ,OAAO,SAAS,EAAQ,WAGnD,EAAO,YAAc,EAAM,eAC3B,EAAO,gBAAkB,OAAO,UAC5B,EAAE,aACF,EACA,OAAO,WAAW,EAAQ,OAAQ,EAAU,MAAM,EAAQ,OAAO,SAAS,MAGvE,OAAO,IAAI,EAAQ,OAAQ,EAAK,EAAQ,EAAQ,QAAS,EAAQ,QAAS,GAGrF,WAAc,EAAK,EAAK,CACpB,MAAI,GAAY,EAAS,GAChB,EAAI,YAAoB,EAAS,EAAK,EAAI,aACvC,EAAS,EAAK,EAAI,YAMtC,EAAM,QAAU,SAAS,EAAG,CACxB,GAAI,EAAC,EACL,MAAI,GAAE,aAAa,EAAM,cAAe,EAAE,aACtC,EAAE,oBAAoB,EAAM,qBAAsB,EAAE,oBACjD,GAGX,EAAM,QAAU,SAAS,EAAG,CACxB,MAAK,WAAU,OAEf,GAAI,EACJ,EAAE,IAAM,EAAE,KAAO,gCACjB,EAAE,QAAU,EAAE,SAAW,YACzB,EAAE,WAAa,EAAE,YAAc,GAI/B,EAAE,QAAU,EAAE,SAAW,UAAW,GACpC,EAAE,KAAO,EAAE,MAAQ,UAAW,GAEvB,EAAM,QAAQ,IAZS,GAkBlC,WAAmB,EAAG,CAClB,SAAE,gBAAkB,OAAO,YAC3B,EAAE,YAAc,OAAO,QAChB,EAMX,GAAI,GAEJ,GAAI,MAAM,QACN,EAAQ,SAAU,EAAG,EAAG,CACpB,GAAI,UAAU,SAAW,EAAG,MAAO,OAAM,IAAI,EAAE,IAAM,GAChD,GAAI,UAAU,SAAW,EAAG,MAAO,OAAM,IAAI,EAAE,IAAM,EAAG,QAE9D,CACH,GAAI,GAAU,GACd,EAAQ,SAAU,EAAG,EAAG,CACpB,GAAI,UAAU,SAAW,EAAG,MAAO,GAAQ,EAAE,IAAM,GAC9C,GAAI,UAAU,SAAW,EAAG,MAAO,GAAQ,EAAE,IAAM,GAAK,GAOrE,WAAiB,EAAG,CAChB,MAAO,CACH,mBAAoB,EAAE,mBACtB,uBAAwB,aAKhC,SAAM,QAAQ,GAEP,gFC5SXI,mBAAqB,kBACJC,yBACC,iCACS,iCACT,4BACI,gCACA,sCACM,kBAC5B,GAAIC,UAAS,CACX,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,UAGH,SAAW,aACX,SAAW,YAEf,oBAAoB,EAAK,CACvB,MAAOA,UAAO,GAGhB,kBAAgB,EAAuB,CACrC,OAAS,GAAI,EAAG,EAAI,UAAU,OAAQ,IACpC,OAAS,KAAO,WAAU,GACxB,AAAI,OAAO,UAAU,eAAe,KAAK,UAAU,GAAI,IACrD,GAAI,GAAO,UAAU,GAAG,IAK9B,MAAO,GAGT,GAAI,UAAW,OAAO,UAAU,0BAEb,SAInB,GAAI,YAAa,WAAoB,EAAO,CAC1C,MAAO,OAAO,IAAU,YAI1B,AAAI,WAAW,0BACQ,WAAa,SAAU,EAAO,CACjD,MAAO,OAAO,IAAU,YAAc,SAAS,KAAK,KAAW,yCAG9C,WAKrB,GAAI,SAAU,MAAM,SAAW,SAAU,EAAO,CAC9C,MAAO,IAAS,MAAO,IAAU,SAAW,SAAS,KAAK,KAAW,iBAAmB,oBAGxE,QAGlB,iBAAiB,EAAO,EAAO,CAC7B,OAAS,GAAI,EAAG,EAAM,EAAM,OAAQ,EAAI,EAAK,IAC3C,GAAI,EAAM,KAAO,EACf,MAAO,GAGX,MAAO,GAGT,0BAA0B,EAAQ,CAChC,GAAI,MAAO,IAAW,SAAU,CAE9B,GAAI,GAAU,EAAO,OACnB,MAAO,GAAO,SACT,GAAI,GAAU,KACnB,MAAO,GACF,GAAI,CAAC,EACV,MAAO,GAAS,GAMlB,EAAS,GAAK,EAGhB,MAAK,UAAS,KAAK,GAGZ,EAAO,QAAQ,SAAU,YAFvB,EAKX,iBAAiB,EAAO,CACtB,MAAI,CAAC,GAAS,IAAU,EACf,GACE,WAAQ,IAAU,EAAM,SAAW,GAOhD,qBAAqB,EAAQ,CAC3B,GAAI,GAAQD,SAAO,GAAI,GACvB,SAAM,QAAU,EACT,EAGT,qBAAqB,EAAQ,EAAK,CAChC,SAAO,KAAO,EACP,EAGT,2BAA2B,EAAa,EAAI,CAC1C,MAAQ,GAAc,EAAc,IAAM,IAAM,4CCvHlD,aAAqB,GACrB,GAAI,GAAa,CAAC,cAAe,WAAY,aAAc,gBAAiB,UAAW,OAAQ,SAAU,SAEzG,WAAmB,EAAS,EAAM,CAChC,GAAI,GAAM,GAAQ,EAAK,IACnB,EAAO,OACP,EAAgB,OAChB,EAAS,OACT,EAAY,OAEhB,AAAI,GACF,GAAO,EAAI,MAAM,KACjB,EAAgB,EAAI,IAAI,KACxB,EAAS,EAAI,MAAM,OACnB,EAAY,EAAI,IAAI,OAEpB,GAAW,MAAQ,EAAO,IAAM,GAMlC,OAHI,GAAM,MAAM,UAAU,YAAY,KAAK,KAAM,GAGxC,EAAM,EAAG,EAAM,EAAW,OAAQ,IACzC,KAAK,EAAW,IAAQ,EAAI,EAAW,IAIzC,AAAI,MAAM,mBACR,MAAM,kBAAkB,KAAM,GAGhC,GAAI,CACF,AAAI,GACF,MAAK,WAAa,EAClB,KAAK,cAAgB,EAIrB,AAAI,OAAO,eACT,QAAO,eAAe,KAAM,SAAU,CACpC,MAAO,EACP,WAAY,KAEd,OAAO,eAAe,KAAM,YAAa,CACvC,MAAO,EACP,WAAY,MAGd,MAAK,OAAS,EACd,KAAK,UAAY,SAGrB,GAKJ,EAAU,UAAY,GAAI,OAE1B,EAAQ,QAAa,EACrB,UAAiB,EAAQ,uGC5DzB,aAAqB,GAErB,GAAI,GAAS3B,QAEb,EAAQ,QAAa,SAAU,EAAU,CACvC,EAAS,eAAe,qBAAsB,SAAU,EAAS,EAAS,CACxE,GAAI,GAAU,EAAQ,QAClB,EAAK,EAAQ,GAEjB,GAAI,IAAY,GACd,MAAO,GAAG,MACL,GAAI,IAAY,IAAS,GAAW,KACzC,MAAO,GAAQ,MACV,GAAI,EAAO,QAAQ,GACxB,MAAI,GAAQ,OAAS,EACf,GAAQ,KACV,GAAQ,IAAM,CAAC,EAAQ,OAGlB,EAAS,QAAQ,KAAK,EAAS,IAE/B,EAAQ,MAGjB,GAAI,EAAQ,MAAQ,EAAQ,IAAK,CAC/B,GAAI,GAAO,EAAO,YAAY,EAAQ,MACtC,EAAK,YAAc,EAAO,kBAAkB,EAAQ,KAAK,YAAa,EAAQ,MAC9E,EAAU,CAAE,KAAM,GAGpB,MAAO,GAAG,EAAS,MAKzB,UAAiB,EAAQ,8FCnCzB,aAAqB,GAGrB,WAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAEzF,GAAI,GAASA,QAET,EAAaqB,kBAEb,EAAc,EAAuB,GAEzC,EAAQ,QAAa,SAAU,EAAU,CACvC,EAAS,eAAe,OAAQ,SAAU,EAAS,EAAS,CAC1D,GAAI,CAAC,EACH,KAAM,IAAI,GAAY,QAAW,+BAGnC,GAAI,GAAK,EAAQ,GACb,EAAU,EAAQ,QAClB,EAAI,EACJ,EAAM,GACN,EAAO,OACP,EAAc,OAElB,AAAI,EAAQ,MAAQ,EAAQ,KAC1B,GAAc,EAAO,kBAAkB,EAAQ,KAAK,YAAa,EAAQ,IAAI,IAAM,KAGjF,EAAO,WAAW,IACpB,GAAU,EAAQ,KAAK,OAGrB,EAAQ,MACV,GAAO,EAAO,YAAY,EAAQ,OAGpC,WAAuB,EAAO,EAAO,EAAM,CACzC,AAAI,GACF,GAAK,IAAM,EACX,EAAK,MAAQ,EACb,EAAK,MAAQ,IAAU,EACvB,EAAK,KAAO,CAAC,CAAC,EAEV,GACF,GAAK,YAAc,EAAc,IAIrC,EAAM,EAAM,EAAG,EAAQ,GAAQ,CAC7B,KAAM,EACN,YAAa,EAAO,YAAY,CAAC,EAAQ,GAAQ,GAAQ,CAAC,EAAc,EAAO,SAInF,GAAI,GAAW,MAAO,IAAY,SAChC,GAAI,EAAO,QAAQ,GACjB,OAAS,GAAI,EAAQ,OAAQ,EAAI,EAAG,IAClC,AAAI,IAAK,IACP,EAAc,EAAG,EAAG,IAAM,EAAQ,OAAS,WAGtCxB,eAAO,QAAU,EAAQA,eAAO,OAAO,UAAW,CAG3D,OAFI,GAAa,GACb,EAAW,EAAQA,eAAO,OAAO,YAC5B,EAAK,EAAS,OAAQ,CAAC,EAAG,KAAM,EAAK,EAAS,OACrD,EAAW,KAAK,EAAG,OAErB,EAAU,EACV,OAAS,GAAI,EAAQ,OAAQ,EAAI,EAAG,IAClC,EAAc,EAAG,EAAG,IAAM,EAAQ,OAAS,OAG7C,AAAC,WAAY,CACX,GAAI,GAAW,OAEf,OAAO,KAAK,GAAS,QAAQ,SAAU,EAAK,CAI1C,AAAI,IAAa,QACf,EAAc,EAAU,EAAI,GAE9B,EAAW,EACX,MAEE,IAAa,QACf,EAAc,EAAU,EAAI,EAAG,QAMvC,MAAI,KAAM,GACR,GAAM,EAAQ,OAGT,KAIX,UAAiB,EAAQ,2ECpGzB,aAAqB,GAGrB,WAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAEzF,GAAI,GAAaG,kBAEb,EAAc,EAAuB,GAEzC,EAAQ,QAAa,SAAU,EAAU,CACvC,EAAS,eAAe,gBAAiB,UAAiC,CACxE,GAAI,UAAU,SAAW,EAKvB,KAAM,IAAI,GAAY,QAAW,oBAAsB,UAAU,UAAU,OAAS,GAAG,KAAO,QAKpG,UAAiB,EAAQ,mFCrBzB,aAAqB,GAGrB,WAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAEzF,GAAI,GAASA,QAET,EAAaqB,kBAEb,EAAc,EAAuB,GAEzC,EAAQ,QAAa,SAAU,EAAU,CACvC,EAAS,eAAe,KAAM,SAAU,EAAa,EAAS,CAC5D,GAAI,UAAU,QAAU,EACtB,KAAM,IAAI,GAAY,QAAW,qCASnC,MAPI,GAAO,WAAW,IACpB,GAAc,EAAY,KAAK,OAM7B,CAAC,EAAQ,KAAK,aAAe,CAAC,GAAe,EAAO,QAAQ,GACvD,EAAQ,QAAQ,MAEhB,EAAQ,GAAG,QAItB,EAAS,eAAe,SAAU,SAAU,EAAa,EAAS,CAChE,GAAI,UAAU,QAAU,EACtB,KAAM,IAAI,GAAY,QAAW,yCAEnC,MAAO,GAAS,QAAQ,GAAM,KAAK,KAAM,EAAa,CACpD,GAAI,EAAQ,QACZ,QAAS,EAAQ,GACjB,KAAM,EAAQ,UAKpB,UAAiB,EAAQ,iEC1CzB,aAAqB,GAErB,EAAQ,QAAa,SAAU,EAAU,CACvC,EAAS,eAAe,MAAO,UAAkC,CAG/D,OAFI,GAAO,CAAC,QACR,EAAU,UAAU,UAAU,OAAS,GAClC,EAAI,EAAG,EAAI,UAAU,OAAS,EAAG,IACxC,EAAK,KAAK,UAAU,IAGtB,GAAI,GAAQ,EACZ,AAAI,EAAQ,KAAK,OAAS,KACxB,EAAQ,EAAQ,KAAK,MACZ,EAAQ,MAAQ,EAAQ,KAAK,OAAS,MAC/C,GAAQ,EAAQ,KAAK,OAEvB,EAAK,GAAK,EAEV,EAAS,IAAI,MAAM,EAAU,MAIjC,UAAiB,EAAQ,sECtBzB,aAAqB,GAErB,EAAQ,QAAa,SAAU,EAAU,CACvC,EAAS,eAAe,SAAU,SAAU,EAAK,EAAO,EAAS,CAC/D,MAAK,IAIE,EAAQ,eAAe,EAAK,MAIvC,UAAiB,EAAQ,uECZzB,aAAqB,GAGrB,WAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAEzF,GAAI,GAASrB,QAET,EAAaqB,kBAEb,EAAc,EAAuB,GAEzC,EAAQ,QAAa,SAAU,EAAU,CACvC,EAAS,eAAe,OAAQ,SAAU,EAAS,EAAS,CAC1D,GAAI,UAAU,QAAU,EACtB,KAAM,IAAI,GAAY,QAAW,uCAEnC,AAAI,EAAO,WAAW,IACpB,GAAU,EAAQ,KAAK,OAGzB,GAAI,GAAK,EAAQ,GAEjB,GAAK,EAAO,QAAQ,GAYlB,MAAO,GAAQ,QAAQ,MAXvB,GAAI,GAAO,EAAQ,KACnB,MAAI,GAAQ,MAAQ,EAAQ,KAC1B,GAAO,EAAO,YAAY,EAAQ,MAClC,EAAK,YAAc,EAAO,kBAAkB,EAAQ,KAAK,YAAa,EAAQ,IAAI,KAG7E,EAAG,EAAS,CACjB,KAAM,EACN,YAAa,EAAO,YAAY,CAAC,GAAU,CAAC,GAAQ,EAAK,mBAQjE,UAAiB,EAAQ,+BCvCzBQ,qBAAqB,oCACY,mDACL,kBAG5B,kCAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAEzF,GAAI,4BAA6B7B,2BAE7B,4BAA8B8B,yBAAuB,4BAErD,aAAeT,aAEf,cAAgBS,yBAAuB,cAEvC,sBAAwBR,sBAExB,uBAAyBQ,yBAAuB,uBAEhD,WAAaP,YAEb,YAAcO,yBAAuB,YAErC,YAAcN,cAEd,aAAeM,yBAAuB,aAEtC,eAAiBL,eAEjB,gBAAkBK,yBAAuB,gBAEzC,aAAeC,cAEf,cAAgBD,yBAAuB,cAE3C,gCAAgC,EAAU,CACxC,4BAA4B,QAAW,GACvC,cAAc,QAAW,GACzB,uBAAuB,QAAW,GAClC,YAAY,QAAW,GACvB,aAAa,QAAW,GACxB,gBAAgB,QAAW,GAC3B,cAAc,QAAW,GAG3B,2BAA2B,EAAU,EAAY,EAAY,CAC3D,AAAI,EAAS,QAAQ,IACnB,GAAS,MAAM,GAAc,EAAS,QAAQ,GACzC,GACH,MAAO,GAAS,QAAQ,yDCjD9B,aAAqB,GAErB,GAAI,GAAS9B,QAEb,EAAQ,QAAa,SAAU,EAAU,CACvC,EAAS,kBAAkB,SAAU,SAAU,EAAI,EAAO,EAAW,EAAS,CAC5E,GAAI,GAAM,EACV,MAAK,GAAM,UACT,GAAM,SAAW,GACjB,EAAM,SAAU,EAAS,EAAS,CAEhC,GAAI,GAAW,EAAU,SACzB,EAAU,SAAW,EAAO,OAAO,GAAI,EAAU,EAAM,UACvD,GAAI,GAAM,EAAG,EAAS,GACtB,SAAU,SAAW,EACd,IAIX,EAAM,SAAS,EAAQ,KAAK,IAAM,EAAQ,GAEnC,KAIX,UAAiB,EAAQ,iCCzBzB,sBAAqB,wCACe,0BAGpC,kCAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAEzF,GAAI,mBAAoBA,eAEpB,mBAAqB8B,yBAAuB,mBAEhD,mCAAmC,EAAU,CAC3C,mBAAmB,QAAW,4CCXhC,aAAqB,GAErB,GAAI,GAAS9B,QAET,EAAS,CACX,UAAW,CAAC,QAAS,OAAQ,OAAQ,SACrC,MAAO,OAGP,YAAa,SAAqB,EAAO,CACvC,GAAI,MAAO,IAAU,SAAU,CAC7B,GAAI,GAAW,EAAO,QAAQ,EAAO,UAAW,EAAM,eACtD,AAAI,GAAY,EACd,EAAQ,EAER,EAAQ,SAAS,EAAO,IAI5B,MAAO,IAIT,IAAK,SAAa,EAAO,CAGvB,GAFA,EAAQ,EAAO,YAAY,GAEvB,MAAO,UAAY,aAAe,EAAO,YAAY,EAAO,QAAU,EAAO,CAC/E,GAAI,GAAS,EAAO,UAAU,GAE9B,AAAK,QAAQ,IACX,GAAS,OAGX,OAAS,GAAO,UAAU,OAAQ,EAAU,MAAM,EAAO,EAAI,EAAO,EAAI,GAAI,EAAO,EAAG,EAAO,EAAM,IACjG,EAAQ,EAAO,GAAK,UAAU,GAGhC,QAAQ,GAAQ,MAAM,QAAS,MAKrC,EAAQ,QAAa,EACrB,UAAiB,EAAQ,mFC3CzBgC,mCAAqB,iDACW,sBAEhC,GAAIC,UAASjC,QASb,gCAAiC,CAC/B,OAAS,GAAO,UAAU,OAAQ,EAAU,MAAM,GAAO,EAAO,EAAG,EAAO,EAAM,IAC9E,EAAQ,GAAQ,UAAU,GAG5B,MAAOiC,UAAO,OAAO,MAAM,OAAW,CAAC,OAAO,OAAO,OAAO,OAAO,ICjBrE,uBAAqB,wCACc,qDACT,kDACM,sBAGhC,mCAAiC,EAAK,CAAE,GAAI,GAAO,EAAI,WAAc,MAAO,GAAc,GAAI,GAAS,GAAI,GAAI,GAAO,KAAQ,OAAS,KAAO,GAAO,AAAI,OAAO,UAAU,eAAe,KAAK,EAAK,IAAM,GAAO,GAAO,EAAI,IAAU,SAAO,QAAa,EAAY,EAErQ,GAAI,wBAAyBjC,wBAEzBkC,UAAUb,iBAEV,OAASc,0BAAwBD,WAEjC,iBAAmB,OAAO,OAAO,MAErC,kCAAkC,EAAgB,CAChD,GAAI,GAAyB,OAAO,OAAO,MAC3C,EAAuB,YAAiB,GACxC,EAAuB,iBAAsB,GAC7C,EAAuB,iBAAsB,GAC7C,EAAuB,iBAAsB,GAE7C,GAAI,GAA2B,OAAO,OAAO,MAE7C,SAAyB,UAAe,GAEjC,CACL,WAAY,CACV,UAAW,uBAAuB,sBAAsB,EAA0B,EAAe,wBACjG,aAAc,EAAe,+BAE/B,QAAS,CACP,UAAW,uBAAuB,sBAAsB,EAAwB,EAAe,qBAC/F,aAAc,EAAe,6BAKnC,yBAAyB,EAAQ,EAAoB,EAAc,CACjE,MAAI,AACK,gBADL,MAAO,IAAW,WACE,EAAmB,QAEnB,EAAmB,WAFS,GAMtD,wBAAwB,EAA2B,EAAc,CAC/D,MAAI,GAA0B,UAAU,KAAkB,OACjD,EAA0B,UAAU,KAAkB,GAE3D,EAA0B,eAAiB,OACtC,EAA0B,aAEnC,gCAA+B,GACxB,IAGT,wCAAwC,EAAc,CACpD,AAAI,iBAAiB,KAAkB,IACrC,kBAAiB,GAAgB,GACjC,OAAO,IAAI,QAAS,+DAAiE,EAAe;AAAA;AAAA,mHAIxG,gCAAiC,CAC/B,OAAO,KAAK,kBAAkB,QAAQ,SAAU,EAAc,CAC5D,MAAO,kBAAiB,KCnE5BE,kBAAqB,gCACW,sBAGhC,kCAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAEzF,GAAIH,UAASjC,QAETqC,aAAahB,kBAEbiB,cAAcR,yBAAuBO,cAErCE,WAAWjB,UAEX,YAAcC,WAEd,QAAUC,iBAEV,SAAWM,yBAAuB,SAElCU,uBAAuBf,YAEvB,QAAU,uBACI,QAClB,GAAI,mBAAoB,2BACI,kBAC5B,GAAI,mCAAoC,2CAEI,kCAC5C,GAAI,kBAAmB,CACrB,EAAG,cACH,EAAG,gBACH,EAAG,gBACH,EAAG,WACH,EAAG,mBACH,EAAG,kBACH,EAAG,kBACH,EAAG,oCAGsB,iBAC3B,GAAI,YAAa,kBAEjB,+BAA+B,EAAS,EAAU,EAAY,CAC5D,KAAK,QAAU,GAAW,GAC1B,KAAK,SAAW,GAAY,GAC5B,KAAK,WAAa,GAAc,GAEhCc,WAAS,uBAAuB,MAChC,YAAY,0BAA0B,MAGxC,sBAAsB,UAAY,CAChC,YAAa,sBAEb,OAAQ,SAAS,QACjB,IAAK,SAAS,QAAW,IAEzB,eAAgB,WAAwB,EAAM,EAAI,CAChD,GAAIN,SAAO,SAAS,KAAK,KAAU,WAAY,CAC7C,GAAI,EACF,KAAM,IAAIK,eAAY,QAAW,2CAEnCL,SAAO,OAAO,KAAK,QAAS,OAE5B,MAAK,QAAQ,GAAQ,GAGzB,iBAAkB,WAA0B,EAAM,CAChD,MAAO,MAAK,QAAQ,IAGtB,gBAAiB,WAAyB,EAAM,EAAS,CACvD,GAAIA,SAAO,SAAS,KAAK,KAAU,WACjCA,SAAO,OAAO,KAAK,SAAU,OACxB,CACL,GAAI,MAAO,IAAY,YACrB,KAAM,IAAIK,eAAY,QAAW,4CAA8C,EAAO,kBAExF,KAAK,SAAS,GAAQ,IAG1B,kBAAmB,WAA2B,EAAM,CAClD,MAAO,MAAK,SAAS,IAGvB,kBAAmB,WAA2B,EAAM,EAAI,CACtD,GAAIL,SAAO,SAAS,KAAK,KAAU,WAAY,CAC7C,GAAI,EACF,KAAM,IAAIK,eAAY,QAAW,8CAEnCL,SAAO,OAAO,KAAK,WAAY,OAE/B,MAAK,WAAW,GAAQ,GAG5B,oBAAqB,WAA6B,EAAM,CACtD,MAAO,MAAK,WAAW,IAMzB,4BAA6B,YAAuC,CAClEO,uBAAqB,0BAIzB,GAAI,KAAM,SAAS,QAAW,eAEhB,uBACQP,SAAO,0BACZ,SAAS,mDC/G1B,aAAqB,GACrB,WAAoB,EAAQ,CAC1B,KAAK,OAAS,EAGhB,EAAW,UAAU,SAAW,EAAW,UAAU,OAAS,UAAY,CACxE,MAAO,GAAK,KAAK,QAGnB,EAAQ,QAAa,EACrB,UAAiB,EAAQ,wECXzBQ,wBAAqB,2BACA,WAErB,oBAAoB,EAAQ,EAAoB,CAC9C,GAAI,MAAO,IAAW,WAGpB,MAAO,GAET,GAAI,GAAU,UAA0C,CACtD,GAAI,GAAU,UAAU,UAAU,OAAS,GAC3C,iBAAU,UAAU,OAAS,GAAK,EAAmB,GAC9C,EAAO,MAAM,KAAM,YAE5B,MAAO,GCdT,mBAAqB,yBACG,+BACL,6BACG,mCACG,qCACD,2BACT,KAGf,kCAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAIzF,mCAAiC,EAAK,CAAE,GAAI,GAAO,EAAI,WAAc,MAAO,GAAc,GAAI,GAAS,GAAI,GAAI,GAAO,KAAQ,OAAS,KAAO,GAAO,AAAI,OAAO,UAAU,eAAe,KAAK,EAAK,IAAM,GAAO,GAAO,EAAI,IAAU,SAAO,QAAa,EAAY,EAErQ,GAAIR,UAASjC,QAET,MAAQmC,0BAAwBF,UAEhCI,aAAahB,kBAEbiB,cAAcR,yBAAuBO,cAErC,MAAQf,OAERiB,WAAWhB,UAEX,oBAAsBC,aAEtB,qBAAuBC,YAE3B,uBAAuB,EAAc,CACnC,GAAI,GAAmB,GAAgB,EAAa,IAAM,EACtD,EAAkB,MAAM,kBAE5B,GAAI,KAAoB,MAAM,mCAAqC,GAAoB,MAAM,mBAI7F,GAAI,EAAmB,MAAM,kCAAmC,CAC9D,GAAI,GAAkB,MAAM,iBAAiB,GACzC,EAAmB,MAAM,iBAAiB,GAC9C,KAAM,IAAIa,eAAY,QAAW,6IAAoJ,EAAkB,oDAAsD,EAAmB,UAGhR,MAAM,IAAIA,eAAY,QAAW,wIAA+I,EAAa,GAAK,MAItM,kBAAkB,EAAc,EAAK,CAEnC,GAAI,CAAC,EACH,KAAM,IAAIA,eAAY,QAAW,qCAEnC,GAAI,CAAC,GAAgB,CAAC,EAAa,KACjC,KAAM,IAAIA,eAAY,QAAW,4BAA8B,MAAO,IAGxE,EAAa,KAAK,UAAY,EAAa,OAI3C,EAAI,GAAG,cAAc,EAAa,UAGlC,GAAI,GAAuC,EAAa,UAAY,EAAa,SAAS,KAAO,EAEjG,WAA8B,EAAS,EAAS,EAAS,CACvD,AAAI,EAAQ,MACV,GAAU,MAAM,OAAO,GAAI,EAAS,EAAQ,MACxC,EAAQ,KACV,GAAQ,IAAI,GAAK,KAGrB,EAAU,EAAI,GAAG,eAAe,KAAK,KAAM,EAAS,EAAS,GAE7D,GAAI,GAAkB,MAAM,OAAO,GAAI,EAAS,CAC9C,MAAO,KAAK,MACZ,mBAAoB,KAAK,qBAGvB,EAAS,EAAI,GAAG,cAAc,KAAK,KAAM,EAAS,EAAS,GAM/D,GAJI,GAAU,MAAQ,EAAI,SACxB,GAAQ,SAAS,EAAQ,MAAQ,EAAI,QAAQ,EAAS,EAAa,gBAAiB,GACpF,EAAS,EAAQ,SAAS,EAAQ,MAAM,EAAS,IAE/C,GAAU,KAAM,CAClB,GAAI,EAAQ,OAAQ,CAElB,OADI,GAAQ,EAAO,MAAM;AAAA,GAChB,EAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,GAChC,GAAC,EAAM,IAAM,EAAI,IAAM,GADY,IAKvC,EAAM,GAAK,EAAQ,OAAS,EAAM,GAEpC,EAAS,EAAM,KAAK;AAAA,GAEtB,MAAO,OAEP,MAAM,IAAIA,eAAY,QAAW,eAAiB,EAAQ,KAAO,4DAKrE,GAAI,GAAY,CACd,OAAQ,SAAgB,EAAK,EAAM,EAAK,CACtC,GAAI,CAAC,GAAO,CAAE,KAAQ,IACpB,KAAM,IAAIA,eAAY,QAAW,IAAM,EAAO,oBAAsB,EAAK,CACvE,IAAK,IAGT,MAAO,GAAU,eAAe,EAAK,IAEvC,eAAgB,SAAwB,EAAQ,EAAc,CAC5D,GAAI,GAAS,EAAO,GAQpB,GAPI,GAAU,MAGV,OAAO,UAAU,eAAe,KAAK,EAAQ,IAI7C,qBAAqB,gBAAgB,EAAQ,EAAU,mBAAoB,GAC7E,MAAO,IAIX,OAAQ,SAAgB,EAAQ,EAAM,CAEpC,OADI,GAAM,EAAO,OACR,EAAI,EAAG,EAAI,EAAK,IAAK,CAC5B,GAAI,GAAS,EAAO,IAAM,EAAU,eAAe,EAAO,GAAI,GAC9D,GAAI,GAAU,KACZ,MAAO,GAAO,GAAG,KAIvB,OAAQ,SAAgB,EAAS,EAAS,CACxC,MAAO,OAAO,IAAY,WAAa,EAAQ,KAAK,GAAW,GAGjE,iBAAkB,MAAM,iBACxB,cAAe,EAEf,GAAI,SAAY,EAAG,CACjB,GAAI,GAAM,EAAa,GACvB,SAAI,UAAY,EAAa,EAAI,MAC1B,GAGT,SAAU,GACV,QAAS,SAAiB,EAAG,EAAM,EAAqB,EAAa,EAAQ,CAC3E,GAAI,GAAiB,KAAK,SAAS,GAC/B,EAAK,KAAK,GAAG,GACjB,MAAI,IAAQ,GAAU,GAAe,EACnC,EAAiB,YAAY,KAAM,EAAG,EAAI,EAAM,EAAqB,EAAa,GACxE,GACV,GAAiB,KAAK,SAAS,GAAK,YAAY,KAAM,EAAG,IAEpD,GAGT,KAAM,SAAc,EAAO,EAAO,CAChC,KAAO,GAAS,KACd,EAAQ,EAAM,QAEhB,MAAO,IAET,cAAe,SAAuB,EAAO,EAAQ,CACnD,GAAI,GAAM,GAAS,EAEnB,MAAI,IAAS,GAAU,IAAU,GAC/B,GAAM,MAAM,OAAO,GAAI,EAAQ,IAG1B,GAGT,YAAa,OAAO,KAAK,IAEzB,KAAM,EAAI,GAAG,KACb,aAAc,EAAa,UAG7B,WAAa,EAAS,CACpB,GAAI,GAAU,UAAU,QAAU,GAAK,UAAU,KAAO,OAAY,GAAK,UAAU,GAE/E,EAAO,EAAQ,KAEnB,EAAI,OAAO,GACP,CAAC,EAAQ,SAAW,EAAa,SACnC,GAAO,SAAS,EAAS,IAE3B,GAAI,GAAS,OACT,EAAc,EAAa,eAAiB,GAAK,OACrD,AAAI,EAAa,WACf,CAAI,EAAQ,OACV,EAAS,GAAW,EAAQ,OAAO,GAAK,CAAC,GAAS,OAAO,EAAQ,QAAU,EAAQ,OAEnF,EAAS,CAAC,IAId,WAAc,EAAuB,CACnC,MAAO,GAAK,EAAa,KAAK,EAAW,EAAS,EAAU,QAAS,EAAU,SAAU,EAAM,EAAa,GAG9G,SAAO,kBAAkB,EAAa,KAAM,EAAM,EAAW,EAAQ,QAAU,GAAI,EAAM,GAClF,EAAK,EAAS,GAGvB,SAAI,MAAQ,GAEZ,EAAI,OAAS,SAAU,EAAS,CAC9B,GAAK,EAAQ,QAoBX,EAAU,mBAAqB,EAAQ,mBACvC,EAAU,QAAU,EAAQ,QAC5B,EAAU,SAAW,EAAQ,SAC7B,EAAU,WAAa,EAAQ,WAC/B,EAAU,MAAQ,EAAQ,UAxBN,CACpB,GAAI,GAAgB,MAAM,OAAO,GAAI,EAAI,QAAS,EAAQ,SAC1D,gCAAgC,EAAe,GAC/C,EAAU,QAAU,EAEhB,EAAa,YAEf,GAAU,SAAW,EAAU,cAAc,EAAQ,SAAU,EAAI,WAEjE,GAAa,YAAc,EAAa,gBAC1C,GAAU,WAAa,MAAM,OAAO,GAAI,EAAI,WAAY,EAAQ,aAGlE,EAAU,MAAQ,GAClB,EAAU,mBAAqB,qBAAqB,yBAAyB,GAE7E,GAAI,GAAsB,EAAQ,2BAA6B,EAC/DC,WAAS,kBAAkB,EAAW,gBAAiB,GACvDA,WAAS,kBAAkB,EAAW,qBAAsB,KAUhE,EAAI,OAAS,SAAU,EAAG,EAAM,EAAa,EAAQ,CACnD,GAAI,EAAa,gBAAkB,CAAC,EAClC,KAAM,IAAID,eAAY,QAAW,0BAEnC,GAAI,EAAa,WAAa,CAAC,EAC7B,KAAM,IAAIA,eAAY,QAAW,2BAGnC,MAAO,aAAY,EAAW,EAAG,EAAa,GAAI,EAAM,EAAG,EAAa,IAEnE,EAGT,qBAAqB,EAAW,EAAG,EAAI,EAAM,EAAqB,EAAa,EAAQ,CACrF,WAAc,EAAS,CACrB,GAAI,GAAU,UAAU,QAAU,GAAK,UAAU,KAAO,OAAY,GAAK,UAAU,GAE/E,EAAgB,EACpB,MAAI,IAAU,GAAW,EAAO,IAAM,CAAE,KAAY,EAAU,aAAe,EAAO,KAAO,OACzF,GAAgB,CAAC,GAAS,OAAO,IAG5B,EAAG,EAAW,EAAS,EAAU,QAAS,EAAU,SAAU,EAAQ,MAAQ,EAAM,GAAe,CAAC,EAAQ,aAAa,OAAO,GAAc,GAGvJ,SAAO,kBAAkB,EAAI,EAAM,EAAW,EAAQ,EAAM,GAE5D,EAAK,QAAU,EACf,EAAK,MAAQ,EAAS,EAAO,OAAS,EACtC,EAAK,YAAc,GAAuB,EACnC,EAOT,wBAAwB,EAAS,EAAS,EAAS,CACjD,MAAK,GAMM,CAAC,EAAQ,MAAQ,CAAC,EAAQ,MAEnC,GAAQ,KAAO,EACf,EAAU,EAAQ,SAAS,IAR3B,AAAI,EAAQ,OAAS,iBACnB,EAAU,EAAQ,KAAK,iBAEvB,EAAU,EAAQ,SAAS,EAAQ,MAOhC,EAGT,uBAAuB,EAAS,EAAS,EAAS,CAEhD,GAAI,GAAsB,EAAQ,MAAQ,EAAQ,KAAK,iBACvD,EAAQ,QAAU,GACd,EAAQ,KACV,GAAQ,KAAK,YAAc,EAAQ,IAAI,IAAM,EAAQ,KAAK,aAG5D,GAAI,GAAe,OAyBnB,GAxBI,EAAQ,IAAM,EAAQ,KAAO,MAC9B,UAAY,CACX,EAAQ,KAAO,MAAM,YAAY,EAAQ,MAEzC,GAAI,GAAK,EAAQ,GACjB,EAAe,EAAQ,KAAK,iBAAmB,SAA6B,EAAS,CACnF,GAAI,GAAU,UAAU,QAAU,GAAK,UAAU,KAAO,OAAY,GAAK,UAAU,GAInF,SAAQ,KAAO,MAAM,YAAY,EAAQ,MACzC,EAAQ,KAAK,iBAAmB,EACzB,EAAG,EAAS,IAEjB,EAAG,UACL,GAAQ,SAAW,MAAM,OAAO,GAAI,EAAQ,SAAU,EAAG,cAK3D,IAAY,QAAa,GAC3B,GAAU,GAGR,IAAY,OACd,KAAM,IAAIA,eAAY,QAAW,eAAiB,EAAQ,KAAO,uBAC5D,GAAI,YAAmB,UAC5B,MAAO,GAAQ,EAAS,GAI5B,eAAgB,CACd,MAAO,GAGT,kBAAkB,EAAS,EAAM,CAC/B,MAAI,EAAC,GAAQ,CAAE,SAAU,MACvB,GAAO,EAAO,MAAM,YAAY,GAAQ,GACxC,EAAK,KAAO,GAEP,EAGT,2BAA2B,EAAI,EAAM,EAAW,EAAQ,EAAM,EAAa,CACzE,GAAI,EAAG,UAAW,CAChB,GAAI,GAAQ,GACZ,EAAO,EAAG,UAAU,EAAM,EAAO,EAAW,GAAU,EAAO,GAAI,EAAM,EAAa,GACpF,MAAM,OAAO,EAAM,GAErB,MAAO,GAGT,yCAAyC,EAAe,EAAW,CACjE,OAAO,KAAK,GAAe,QAAQ,SAAU,EAAY,CACvD,GAAI,GAAS,EAAc,GAC3B,EAAc,GAAc,yBAAyB,EAAQ,KAIjE,kCAAkC,EAAQ,EAAW,CACnD,GAAI,GAAiB,EAAU,eAC/B,MAAO,qBAAoB,WAAW,EAAQ,SAAU,EAAS,CAC/D,MAAO,OAAM,OAAO,CAAE,eAAgB,GAAkB,gDC9W5D,aAAqB,GAErB,EAAQ,QAAa,SAAU,EAAY,CAEzC,GAAI,GAAO,MAAOzC,iBAAW,YAAcA,eAAS,OAChD,EAAc,EAAK,WAEvB,EAAW,WAAa,UAAY,CAClC,MAAI,GAAK,aAAe,GACtB,GAAK,WAAa,GAEb,IAIX,UAAiB,EAAQ,wDCfzB,aAAqB,GAGrB,WAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAIzF,WAAiC,EAAK,CAAE,GAAI,GAAO,EAAI,WAAc,MAAO,GAAc,GAAI,GAAS,GAAI,GAAI,GAAO,KAAQ,OAAS,KAAO,GAAO,AAAI,OAAO,UAAU,eAAe,KAAK,EAAK,IAAM,GAAO,GAAO,EAAI,IAAU,SAAO,QAAa,EAAY,EAErQ,GAAI,GAAkBG,OAElB,EAAO,EAAwB,GAK/B,EAAwBqB,mBAExB,EAAyB,EAAuB,GAEhD,EAAuBC,kBAEvB,EAAwB,EAAuB,GAE/C,EAAmBC,QAEnB,EAAQ,EAAwB,GAEhC,EAAqBC,QAErBkB,EAAU,EAAwB,GAElC,EAAwBjB,mBAExB,EAAyB,EAAuB,GAGpD,YAAkB,CAChB,GAAI,GAAK,GAAI,GAAK,sBAElB,SAAM,OAAO,EAAI,GACjB,EAAG,WAAa,EAAuB,QACvC,EAAG,UAAY,EAAsB,QACrC,EAAG,MAAQ,EACX,EAAG,iBAAmB,EAAM,iBAE5B,EAAG,GAAKiB,EACR,EAAG,SAAW,SAAU,EAAM,CAC5B,MAAOA,GAAQ,SAAS,EAAM,IAGzB,EAGT,GAAI,GAAO,IACX,EAAK,OAAS,EAEd,EAAuB,QAAW,GAElC,EAAK,QAAa,EAElB,EAAQ,QAAa,EACrB,UAAiB,EAAQ,6FC9DzB,aAAqB,GACrB,GAAI,GAAM,CAER,QAAS,CAIP,iBAAkB,SAA0B,EAAM,CAChD,MAAO,GAAK,OAAS,iBAAoB,GAAK,OAAS,qBAAuB,EAAK,OAAS,mBAAqB,CAAC,CAAE,GAAK,QAAU,EAAK,OAAO,QAAU,EAAK,OAGhK,SAAU,SAAkB,EAAM,CAChC,MAAQ,aAAa,KAAK,EAAK,WAMjC,SAAU,SAAkB,EAAM,CAChC,MAAO,GAAK,MAAM,SAAW,GAAK,CAAC,EAAI,QAAQ,SAAS,IAAS,CAAC,EAAK,SAO7E,EAAQ,QAAa,EACrB,UAAiB,EAAQ,0ECzBzB,aAAqB,GACrB,GAAI,GAAc,UAAY,CAC1B,GAAI,GAAS,CAAE,MAAO,UAAiB,GACnC,GAAI,GACJ,SAAU,CAAE,MAAS,EAAG,KAAQ,EAAG,QAAW,EAAG,IAAO,EAAG,oBAAuB,EAAG,UAAa,EAAG,SAAY,EAAG,MAAS,EAAG,SAAY,GAAI,QAAW,GAAI,aAAgB,GAAI,QAAW,GAAI,QAAW,GAAI,QAAW,GAAI,aAAgB,GAAI,qBAAwB,GAAI,cAAiB,GAAI,eAAkB,GAAI,WAAc,GAAI,yBAA4B,GAAI,qBAAwB,GAAI,gBAAmB,GAAI,UAAa,GAAI,cAAiB,GAAI,WAAc,GAAI,YAAe,GAAI,cAAiB,GAAI,WAAc,GAAI,sBAAyB,GAAI,kBAAqB,GAAI,kBAAqB,GAAI,MAAS,GAAI,aAAgB,GAAI,wBAA2B,GAAI,oBAAuB,GAAI,oBAAuB,GAAI,iBAAoB,GAAI,mBAAsB,GAAI,6BAAgC,GAAI,yBAA4B,GAAI,yBAA4B,GAAI,kBAAqB,GAAI,QAAW,GAAI,aAAgB,GAAI,qBAAwB,GAAI,cAAiB,GAAI,KAAQ,GAAI,qBAAwB,GAAI,iBAAoB,GAAI,eAAkB,GAAI,qBAAwB,GAAI,iBAAoB,GAAI,gBAAmB,GAAI,aAAgB,GAAI,YAAe,GAAI,oBAAuB,GAAI,gBAAmB,GAAI,iBAAoB,GAAI,mBAAsB,GAAI,6BAAgC,GAAI,yBAA4B,GAAI,MAAS,GAAI,MAAS,GAAI,WAAc,GAAI,kBAAqB,GAAI,cAAiB,GAAI,YAAe,GAAI,KAAQ,GAAI,sBAAyB,GAAI,YAAe,GAAI,GAAM,GAAI,OAAU,GAAI,YAAe,GAAI,kBAAqB,GAAI,6BAAgC,GAAI,mBAAsB,GAAI,KAAQ,GAAI,SAAY,GAAI,OAAU,GAAI,OAAU,GAAI,QAAW,GAAI,UAAa,GAAI,KAAQ,GAAI,KAAQ,GAAI,aAAgB,GAAI,IAAO,GAAI,QAAW,EAAG,KAAQ,GAC1xD,WAAY,CAAE,EAAG,QAAS,EAAG,MAAO,GAAI,UAAW,GAAI,UAAW,GAAI,gBAAiB,GAAI,iBAAkB,GAAI,kBAAmB,GAAI,aAAc,GAAI,QAAS,GAAI,eAAgB,GAAI,qBAAsB,GAAI,UAAW,GAAI,gBAAiB,GAAI,OAAQ,GAAI,iBAAkB,GAAI,kBAAmB,GAAI,eAAgB,GAAI,qBAAsB,GAAI,aAAc,GAAI,cAAe,GAAI,KAAM,GAAI,SAAU,GAAI,oBAAqB,GAAI,qBAAsB,GAAI,SAAU,GAAI,SAAU,GAAI,UAAW,GAAI,YAAa,GAAI,OAAQ,GAAI,OAAQ,GAAI,OACpiB,aAAccAAe,SAAmB,EAAQ,EAAQ,EAAU,EAAI,EAAS,EAAI,EAAI,CAE7E,GAAI,GAAK,EAAG,OAAS,EACrB,OAAQ,OACC,GACD,MAAO,GAAG,EAAK,OAEd,GACD,KAAK,EAAI,EAAG,eAAe,EAAG,IAC9B,UACC,GACD,KAAK,EAAI,EAAG,GACZ,UACC,GACD,KAAK,EAAI,EAAG,GACZ,UACC,GACD,KAAK,EAAI,EAAG,GACZ,UACC,GACD,KAAK,EAAI,EAAG,GACZ,UACC,GACD,KAAK,EAAI,EAAG,GACZ,UACC,GACD,KAAK,EAAI,EAAG,GACZ,UACC,GACD,KAAK,EAAI,CACL,KAAM,mBACN,MAAO,EAAG,aAAa,EAAG,IAC1B,MAAO,EAAG,WAAW,EAAG,GAAK,EAAG,IAChC,IAAK,EAAG,QAAQ,KAAK,KAGzB,UACC,IACD,KAAK,EAAI,CACL,KAAM,mBACN,SAAU,EAAG,GACb,MAAO,EAAG,GACV,IAAK,EAAG,QAAQ,KAAK,KAGzB,UACC,IACD,KAAK,EAAI,EAAG,gBAAgB,EAAG,EAAK,GAAI,EAAG,EAAK,GAAI,EAAG,GAAK,KAAK,IACjE,UACC,IACD,KAAK,EAAI,CAAE,KAAM,EAAG,EAAK,GAAI,OAAQ,EAAG,EAAK,GAAI,KAAM,EAAG,EAAK,IAC/D,UACC,IACD,KAAK,EAAI,EAAG,aAAa,EAAG,EAAK,GAAI,EAAG,EAAK,GAAI,EAAG,EAAK,GAAI,EAAG,GAAK,GAAO,KAAK,IACjF,UACC,IACD,KAAK,EAAI,EAAG,aAAa,EAAG,EAAK,GAAI,EAAG,EAAK,GAAI,EAAG,EAAK,GAAI,EAAG,GAAK,GAAM,KAAK,IAChF,UACC,IACD,KAAK,EAAI,CAAE,KAAM,EAAG,EAAK,GAAI,KAAM,EAAG,EAAK,GAAI,OAAQ,EAAG,EAAK,GAAI,KAAM,EAAG,EAAK,GAAI,YAAa,EAAG,EAAK,GAAI,MAAO,EAAG,WAAW,EAAG,EAAK,GAAI,EAAG,KAClJ,UACC,IACD,KAAK,EAAI,CAAE,KAAM,EAAG,EAAK,GAAI,OAAQ,EAAG,EAAK,GAAI,KAAM,EAAG,EAAK,GAAI,YAAa,EAAG,EAAK,GAAI,MAAO,EAAG,WAAW,EAAG,EAAK,GAAI,EAAG,KAChI,UACC,IACD,KAAK,EAAI,CAAE,KAAM,EAAG,EAAK,GAAI,OAAQ,EAAG,EAAK,GAAI,KAAM,EAAG,EAAK,GAAI,YAAa,EAAG,EAAK,GAAI,MAAO,EAAG,WAAW,EAAG,EAAK,GAAI,EAAG,KAChI,UACC,IACD,KAAK,EAAI,CAAE,MAAO,EAAG,WAAW,EAAG,EAAK,GAAI,EAAG,EAAK,IAAK,QAAS,EAAG,IACrE,UACC,IACD,GAAI,GAAU,EAAG,aAAa,EAAG,EAAK,GAAI,EAAG,EAAK,GAAI,EAAG,GAAK,EAAG,GAAK,GAAO,KAAK,IAC9E,EAAU,EAAG,eAAe,CAAC,GAAU,EAAG,EAAK,GAAG,KACtD,EAAQ,QAAU,GAElB,KAAK,EAAI,CAAE,MAAO,EAAG,EAAK,GAAG,MAAO,QAAS,EAAS,MAAO,IAE7D,UACC,IACD,KAAK,EAAI,EAAG,GACZ,UACC,IACD,KAAK,EAAI,CAAE,KAAM,EAAG,EAAK,GAAI,MAAO,EAAG,WAAW,EAAG,EAAK,GAAI,EAAG,KACjE,UACC,IACD,KAAK,EAAI,EAAG,gBAAgB,EAAG,EAAK,GAAI,EAAG,EAAK,GAAI,EAAG,EAAK,GAAI,EAAG,EAAK,GAAI,EAAG,WAAW,EAAG,EAAK,GAAI,EAAG,IAAM,KAAK,IACpH,UACC,IACD,KAAK,EAAI,EAAG,gBAAgB,EAAG,EAAK,GAAI,EAAG,EAAK,GAAI,EAAG,EAAK,GAAI,EAAG,EAAK,GAAI,EAAG,WAAW,EAAG,EAAK,GAAI,EAAG,IAAM,KAAK,IACpH,UACC,IACD,KAAK,EAAI,CACL,KAAM,mBACN,KAAM,EAAG,EAAK,GACd,OAAQ,EAAG,EAAK,GAChB,KAAM,EAAG,EAAK,GACd,OAAQ,GACR,MAAO,EAAG,WAAW,EAAG,EAAK,GAAI,EAAG,IACpC,IAAK,EAAG,QAAQ,KAAK,KAGzB,UACC,IACD,KAAK,EAAI,EAAG,oBAAoB,EAAG,EAAK,GAAI,EAAG,EAAK,GAAI,EAAG,GAAK,KAAK,IACrE,UACC,IACD,KAAK,EAAI,CAAE,KAAM,EAAG,EAAK,GAAI,OAAQ,EAAG,EAAK,GAAI,KAAM,EAAG,EAAK,GAAI,MAAO,EAAG,WAAW,EAAG,EAAK,GAAI,EAAG,KACvG,UACC,IACD,KAAK,EAAI,EAAG,GACZ,UACC,IACD,KAAK,EAAI,EAAG,GACZ,UACC,IACD,KAAK,EAAI,CACL,KAAM,gBACN,KAAM,EAAG,EAAK,GACd,OAAQ,EAAG,EAAK,GAChB,KAAM,EAAG,EAAK,GACd,IAAK,EAAG,QAAQ,KAAK,KAGzB,UACC,IACD,KAAK,EAAI,CAAE,KAAM,OAAQ,MAAO,EAAG,GAAK,IAAK,EAAG,QAAQ,KAAK,KAC7D,UACC,IACD,KAAK,EAAI,CAAE,KAAM,WAAY,IAAK,EAAG,GAAG,EAAG,EAAK,IAAK,MAAO,EAAG,GAAK,IAAK,EAAG,QAAQ,KAAK,KACzF,UACC,IACD,KAAK,EAAI,EAAG,GAAG,EAAG,EAAK,IACvB,UACC,IACD,KAAK,EAAI,EAAG,GACZ,UACC,IACD,KAAK,EAAI,EAAG,GACZ,UACC,IACD,KAAK,EAAI,CAAE,KAAM,gBAAiB,MAAO,EAAG,GAAK,SAAU,EAAG,GAAK,IAAK,EAAG,QAAQ,KAAK,KACxF,UACC,IACD,KAAK,EAAI,CAAE,KAAM,gBAAiB,MAAO,OAAO,EAAG,IAAM,SAAU,OAAO,EAAG,IAAM,IAAK,EAAG,QAAQ,KAAK,KACxG,UACC,IACD,KAAK,EAAI,CAAE,KAAM,iBAAkB,MAAO,EAAG,KAAQ,OAAQ,SAAU,EAAG,KAAQ,OAAQ,IAAK,EAAG,QAAQ,KAAK,KAC/G,UACC,IACD,KAAK,EAAI,CAAE,KAAM,mBAAoB,SAAU,OAAW,MAAO,OAAW,IAAK,EAAG,QAAQ,KAAK,KACjG,UACC,IACD,KAAK,EAAI,CAAE,KAAM,cAAe,SAAU,KAAM,MAAO,KAAM,IAAK,EAAG,QAAQ,KAAK,KAClF,UACC,IACD,KAAK,EAAI,EAAG,GACZ,UACC,IACD,KAAK,EAAI,EAAG,GACZ,UACC,IACD,KAAK,EAAI,EAAG,YAAY,GAAM,EAAG,GAAK,KAAK,IAC3C,UACC,IACD,KAAK,EAAI,EAAG,YAAY,GAAO,EAAG,GAAK,KAAK,IAC5C,UACC,IACD,EAAG,EAAK,GAAG,KAAK,CAAE,KAAM,EAAG,GAAG,EAAG,IAAM,SAAU,EAAG,GAAK,UAAW,EAAG,EAAK,KAAM,KAAK,EAAI,EAAG,EAAK,GACnG,UACC,IACD,KAAK,EAAI,CAAC,CAAE,KAAM,EAAG,GAAG,EAAG,IAAM,SAAU,EAAG,KAC9C,UACC,IACD,KAAK,EAAI,GACT,UACC,IACD,EAAG,EAAK,GAAG,KAAK,EAAG,IACnB,UACC,IACD,KAAK,EAAI,GACT,UACC,IACD,EAAG,EAAK,GAAG,KAAK,EAAG,IACnB,UACC,IACD,KAAK,EAAI,GACT,UACC,IACD,EAAG,EAAK,GAAG,KAAK,EAAG,IACnB,UACC,IACD,KAAK,EAAI,GACT,UACC,IACD,EAAG,EAAK,GAAG,KAAK,EAAG,IACnB,UACC,IACD,KAAK,EAAI,GACT,UACC,IACD,EAAG,EAAK,GAAG,KAAK,EAAG,IACnB,UACC,IACD,KAAK,EAAI,GACT,UACC,IACD,EAAG,EAAK,GAAG,KAAK,EAAG,IACnB,UACC,IACD,KAAK,EAAI,GACT,UACC,IACD,EAAG,EAAK,GAAG,KAAK,EAAG,IACnB,UACC,IACD,KAAK,EAAI,GACT,UACC,IACD,EAAG,EAAK,GAAG,KAAK,EAAG,IACnB,UACC,IACD,KAAK,EAAI,GACT,UACC,IACD,EAAG,EAAK,GAAG,KAAK,EAAG,IACnB,UACC,IACD,KAAK,EAAI,GACT,UACC,IACD,EAAG,EAAK,GAAG,KAAK,EAAG,IACnB,UACC,IACD,KAAK,EAAI,GACT,UACC,IACD,EAAG,EAAK,GAAG,KAAK,EAAG,IACnB,UACC,IACD,KAAK,EAAI,CAAC,EAAG,IACb,UACC,IACD,EAAG,EAAK,GAAG,KAAK,EAAG,IACnB,UACC,KACD,KAAK,EAAI,CAAC,EAAG,IACb,UACC,KACD,EAAG,EAAK,GAAG,KAAK,EAAG,IACnjjd,eAAgB,CAAE,EAAG,CAAC,EAAG,GAAI,GAAI,CAAC,EAAG,IAAK,GAAI,CAAC,EAAG,IAAK,GAAI,CAAC,EAAG,IAAK,GAAI,CAAC,EAAG,IAAK,GAAI,CAAC,EAAG,IAAK,GAAI,CAAC,EAAG,IAAK,GAAI,CAAC,EAAG,IAAK,IAAK,CAAC,EAAG,IAAK,IAAK,CAAC,EAAG,IAAK,IAAK,CAAC,EAAG,IAAK,IAAK,CAAC,EAAG,IAAK,IAAK,CAAC,EAAG,IAAK,IAAK,CAAC,EAAG,IAAK,IAAK,CAAC,EAAG,IAAK,IAAK,CAAC,EAAG,IAAK,IAAK,CAAC,EAAG,KACjP,WAAY,SAAoB,EAAK,EAAM,CACvC,KAAM,IAAI,OAAM,IAEpB,MAAO,SAAe,EAAO,IACrB,GAAO,KACP,EAAQ,CAAC,GACT,EAAS,CAAC,MACV,EAAS,GACT,EAAQ,KAAK,MACb,EAAS,GACT,EAAW,EACX,EAAS,EAIb,KAAK,MAAM,SAAS,GACpB,KAAK,MAAM,GAAK,KAAK,GACrB,KAAK,GAAG,MAAQ,KAAK,MACrB,KAAK,GAAG,OAAS,KACb,MAAO,MAAK,MAAM,QAAU,aAAa,MAAK,MAAM,OAAS,IACjE,GAAI,GAAQ,KAAK,MAAM,OACvB,EAAO,KAAK,GACZ,GAAI,GAAS,KAAK,MAAM,SAAW,KAAK,MAAM,QAAQ,OACtD,AAAI,MAAO,MAAK,GAAG,YAAe,YAAY,MAAK,WAAa,KAAK,GAAG,YAMxE,YAAe,CACX,GAAI,GACJ,SAAQ,EAAK,MAAM,OAAS,EACxB,MAAO,IAAU,UACjB,GAAQ,EAAK,SAAS,IAAU,GAE7B,EAaX,OAXI,GAEA,EACA,EAEA,EACA,EAAQ,GACR,EACA,EACA,EACA,IACS,CAUT,GATA,EAAQ,EAAM,EAAM,OAAS,GAC7B,AAAI,KAAK,eAAe,GACpB,EAAS,KAAK,eAAe,GAEzB,MAAW,MAAQ,MAAO,IAAU,cACpC,GAAS,KAEb,EAAS,EAAM,IAAU,EAAM,GAAO,IAEtC,MAAO,IAAW,aAAe,CAAC,EAAO,QAAU,CAAC,EAAO,GAAI,CAC/D,GAAI,GAAS,GACI,CACb,EAAW,GACX,IAAK,IAAK,GAAM,GAAQ,AAAI,KAAK,WAAW,IAAM,EAAI,GAClD,EAAS,KAAK,IAAM,KAAK,WAAW,GAAK,KAE7C,AAAI,KAAK,MAAM,aACX,EAAS,uBAA0B,GAAW,GAAK;AAAA,EAAQ,KAAK,MAAM,eAAiB;AAAA,YAAiB,EAAS,KAAK,MAAQ,UAAa,MAAK,WAAW,IAAW,GAAU,IAEhL,EAAS,uBAA0B,GAAW,GAAK,gBAAmB,IAAU,EAAI,eAAiB,IAAO,MAAK,WAAW,IAAW,GAAU,KAErJ,KAAK,WAAW,EAAQ,CAAE,KAAM,KAAK,MAAM,MAAO,MAAO,KAAK,WAAW,IAAW,EAAQ,KAAM,KAAK,MAAM,SAAU,IAAK,EAAO,SAAU,KAGrJ,GAAI,EAAO,YAAc,QAAS,EAAO,OAAS,EAC9C,KAAM,IAAI,OAAM,oDAAsD,EAAQ,YAAc,GAEhG,OAAQ,EAAO,QACN,GACD,EAAM,KAAK,GACX,EAAO,KAAK,KAAK,MAAM,QACvB,EAAO,KAAK,KAAK,MAAM,QACvB,EAAM,KAAK,EAAO,IAClB,EAAS,KAEL,EAAS,KAAK,MAAM,OACpB,EAAS,KAAK,MAAM,OACpB,EAAW,KAAK,MAAM,SACtB,EAAQ,KAAK,MAAM,OAMvB,UACC,GAQD,GAPA,EAAM,KAAK,aAAa,EAAO,IAAI,GACnC,EAAM,EAAI,EAAO,EAAO,OAAS,GACjC,EAAM,GAAK,CAAE,WAAY,EAAO,EAAO,OAAU,IAAO,IAAI,WAAY,UAAW,EAAO,EAAO,OAAS,GAAG,UAAW,aAAc,EAAO,EAAO,OAAU,IAAO,IAAI,aAAc,YAAa,EAAO,EAAO,OAAS,GAAG,aAC1N,GACA,GAAM,GAAG,MAAQ,CAAC,EAAO,EAAO,OAAU,IAAO,IAAI,MAAM,GAAI,EAAO,EAAO,OAAS,GAAG,MAAM,KAEnG,EAAI,KAAK,cAAc,KAAK,EAAO,EAAQ,EAAQ,EAAU,KAAK,GAAI,EAAO,GAAI,EAAQ,GACrF,MAAO,IAAM,YACb,MAAO,GAEX,AAAI,GACA,GAAQ,EAAM,MAAM,EAAG,GAAK,EAAM,GAClC,EAAS,EAAO,MAAM,EAAG,GAAK,GAC9B,EAAS,EAAO,MAAM,EAAG,GAAK,IAElC,EAAM,KAAK,KAAK,aAAa,EAAO,IAAI,IACxC,EAAO,KAAK,EAAM,GAClB,EAAO,KAAK,EAAM,IAClB,EAAW,EAAM,EAAM,EAAM,OAAS,IAAI,EAAM,EAAM,OAAS,IAC/D,EAAM,KAAK,GACX,UACC,GACD,MAAO,IAGnB,MAAO,KAIX,EAAS,UAAY,CACrB,GAAI,GAAQ,CAAE,IAAK,EACf,WAAY,SAAoB,EAAK,EAAM,CACvC,GAAI,KAAK,GAAG,OACR,KAAK,GAAG,OAAO,WAAW,EAAK,OAE/B,MAAM,IAAI,OAAM,IAGxB,SAAU,SAAkB,EAAO,CAC/B,YAAK,OAAS,EACd,KAAK,MAAQ,KAAK,MAAQ,KAAK,KAAO,GACtC,KAAK,SAAW,KAAK,OAAS,EAC9B,KAAK,OAAS,KAAK,QAAU,KAAK,MAAQ,GAC1C,KAAK,eAAiB,CAAC,WACvB,KAAK,OAAS,CAAE,WAAY,EAAG,aAAc,EAAG,UAAW,EAAG,YAAa,GACvE,KAAK,QAAQ,QAAQ,MAAK,OAAO,MAAQ,CAAC,EAAG,IACjD,KAAK,OAAS,EACP,MAEX,MAAO,UAAiB,CACpB,GAAI,GAAK,KAAK,OAAO,GACrB,KAAK,QAAU,EACf,KAAK,SACL,KAAK,SACL,KAAK,OAAS,EACd,KAAK,SAAW,EAChB,GAAI,GAAQ,EAAG,MAAM,mBACrB,MAAI,GACA,MAAK,WACL,KAAK,OAAO,aAEZ,KAAK,OAAO,cAEZ,KAAK,QAAQ,QAAQ,KAAK,OAAO,MAAM,KAE3C,KAAK,OAAS,KAAK,OAAO,MAAM,GACzB,GAEX,MAAO,SAAe,EAAI,CACtB,GAAI,GAAM,EAAG,OACT,EAAQ,EAAG,MAAM,iBAErB,KAAK,OAAS,EAAK,KAAK,OACxB,KAAK,OAAS,KAAK,OAAO,OAAO,EAAG,KAAK,OAAO,OAAS,EAAM,GAE/D,KAAK,QAAU,EACf,GAAI,GAAW,KAAK,MAAM,MAAM,iBAChC,KAAK,MAAQ,KAAK,MAAM,OAAO,EAAG,KAAK,MAAM,OAAS,GACtD,KAAK,QAAU,KAAK,QAAQ,OAAO,EAAG,KAAK,QAAQ,OAAS,GAExD,EAAM,OAAS,GAAG,MAAK,UAAY,EAAM,OAAS,GACtD,GAAI,GAAI,KAAK,OAAO,MAEpB,YAAK,OAAS,CAAE,WAAY,KAAK,OAAO,WACpC,UAAW,KAAK,SAAW,EAC3B,aAAc,KAAK,OAAO,aAC1B,YAAa,EAAS,GAAM,SAAW,EAAS,OAAS,KAAK,OAAO,aAAe,GAAK,EAAS,EAAS,OAAS,EAAM,QAAQ,OAAS,EAAM,GAAG,OAAS,KAAK,OAAO,aAAe,GAGxL,KAAK,QAAQ,QACb,MAAK,OAAO,MAAQ,CAAC,EAAE,GAAI,EAAE,GAAK,KAAK,OAAS,IAE7C,MAEX,KAAM,UAAgB,CAClB,YAAK,MAAQ,GACN,MAEX,KAAM,SAAc,EAAG,CACnB,KAAK,MAAM,KAAK,MAAM,MAAM,KAEhC,UAAW,UAAqB,CAC5B,GAAI,GAAO,KAAK,QAAQ,OAAO,EAAG,KAAK,QAAQ,OAAS,KAAK,MAAM,QACnE,MAAQ,GAAK,OAAS,GAAK,MAAQ,IAAM,EAAK,OAAO,KAAK,QAAQ,MAAO,KAE7E,cAAe,UAAyB,CACpC,GAAI,GAAO,KAAK,MAChB,MAAI,GAAK,OAAS,IACd,IAAQ,KAAK,OAAO,OAAO,EAAG,GAAK,EAAK,SAEpC,GAAK,OAAO,EAAG,IAAO,GAAK,OAAS,GAAK,MAAQ,KAAK,QAAQ,MAAO,KAEjF,aAAc,UAAwB,CAClC,GAAI,GAAM,KAAK,YACX,EAAI,GAAI,OAAM,EAAI,OAAS,GAAG,KAAK,KACvC,MAAO,GAAM,KAAK,gBAAkB;AAAA,EAAO,EAAI,KAEnD,KAAM,UAAgB,CAClB,GAAI,KAAK,KACL,MAAO,MAAK,IAEhB,AAAK,KAAK,QAAQ,MAAK,KAAO,OAE1B,GAAO,EAAO,EAAW,EAAY,EACzC,AAAK,KAAK,OACN,MAAK,OAAS,GACd,KAAK,MAAQ,IAGjB,OADI,GAAQ,KAAK,gBACR,EAAI,EAAG,EAAI,EAAM,QACtB,GAAY,KAAK,OAAO,MAAM,KAAK,MAAM,EAAM,KAC3C,KAAc,EAAC,GAAS,EAAU,GAAG,OAAS,EAAM,GAAG,SACvD,GAAQ,EACR,EAAQ,EACJ,CAAC,KAAK,QAAQ,QALQ,IAE9B,CAMJ,MAAI,GACA,GAAQ,EAAM,GAAG,MAAM,mBACnB,GAAO,MAAK,UAAY,EAAM,QAClC,KAAK,OAAS,CAAE,WAAY,KAAK,OAAO,UACpC,UAAW,KAAK,SAAW,EAC3B,aAAc,KAAK,OAAO,YAC1B,YAAa,EAAQ,EAAM,EAAM,OAAS,GAAG,OAAS,EAAM,EAAM,OAAS,GAAG,MAAM,UAAU,GAAG,OAAS,KAAK,OAAO,YAAc,EAAM,GAAG,QACjJ,KAAK,QAAU,EAAM,GACrB,KAAK,OAAS,EAAM,GACpB,KAAK,QAAU,EACf,KAAK,OAAS,KAAK,OAAO,OACtB,KAAK,QAAQ,QACb,MAAK,OAAO,MAAQ,CAAC,KAAK,OAAQ,KAAK,QAAU,KAAK,SAE1D,KAAK,MAAQ,GACb,KAAK,OAAS,KAAK,OAAO,MAAM,EAAM,GAAG,QACzC,KAAK,SAAW,EAAM,GACtB,EAAQ,KAAK,cAAc,KAAK,KAAM,KAAK,GAAI,KAAM,EAAM,GAAQ,KAAK,eAAe,KAAK,eAAe,OAAS,IAChH,KAAK,MAAQ,KAAK,QAAQ,MAAK,KAAO,IACtC,GAAyB,QAE7B,KAAK,SAAW,GACT,KAAK,IAEL,KAAK,WAAW,yBAA4B,MAAK,SAAW,GAAK;AAAA,EAA2B,KAAK,eAAgB,CAAE,KAAM,GAAI,MAAO,KAAM,KAAM,KAAK,YAGpK,IAAK,UAAe,CAChB,GAAI,GAAI,KAAK,OACb,MAAI,OAAO,IAAM,YACN,EAEA,KAAK,OAGpB,MAAO,SAAe,EAAW,CAC7B,KAAK,eAAe,KAAK,IAE7B,SAAU,UAAoB,CAC1B,MAAO,MAAK,eAAe,OAE/B,cAAe,UAAyB,CACpC,MAAO,MAAK,WAAW,KAAK,eAAe,KAAK,eAAe,OAAS,IAAI,OAEhF,SAAU,UAAoB,CAC1B,MAAO,MAAK,eAAe,KAAK,eAAe,OAAS,IAE5D,UAAW,SAAe,EAAW,CACjC,KAAK,MAAM,KAEnB,SAAM,QAAU,GAChB,EAAM,cAAgB,SAAmB,EAAI,EAAK,EAA2B,EAAU,CAEnF,WAAe,EAAO,EAAK,CACvB,MAAO,GAAI,OAAS,EAAI,OAAO,UAAU,EAAO,EAAI,OAAS,EAAM,GAIvE,OAAQ,OACC,GAUD,GATA,AAAI,EAAI,OAAO,MAAM,MAAQ,OACzB,GAAM,EAAG,GACT,KAAK,MAAM,OACR,AAAI,EAAI,OAAO,MAAM,MAAQ,KAChC,GAAM,EAAG,GACT,KAAK,MAAM,QAEX,KAAK,MAAM,MAEX,EAAI,OAAQ,MAAO,IAEvB,UACC,GACD,MAAO,QAEN,GACD,YAAK,WACE,OAGN,GACD,YAAK,MAAM,OAAc,OAExB,GAKD,MAJA,MAAK,WAID,KAAK,eAAe,KAAK,eAAe,OAAS,KAAO,MACjD,GAEP,GAAM,EAAG,GACF,qBAIV,GACD,MAAO,QAEN,GACD,YAAK,WACE,OAGN,GACD,MAAO,QAEN,GACD,MAAO,QAEN,GACD,MAAO,QAEN,IACD,YAAK,WACL,KAAK,MAAM,OACJ,OAGN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,YAAK,WAAkB,OAEtB,IACD,YAAK,WAAkB,OAEtB,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,KAAK,MAAM,EAAI,QACf,KAAK,WACL,KAAK,MAAM,OAEX,UACC,IACD,YAAK,WACE,OAGN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IAED,UACC,IACD,YAAK,WAAkB,OAEtB,IACD,YAAK,WAAkB,OAEtB,IACD,SAAI,OAAS,EAAM,EAAG,GAAG,QAAQ,OAAQ,KAAY,OAEpD,IACD,SAAI,OAAS,EAAM,EAAG,GAAG,QAAQ,OAAQ,KAAY,OAEpD,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,MAAO,QAEN,IACD,SAAI,OAAS,EAAI,OAAO,QAAQ,cAAe,MAAa,OAE3D,IACD,MAAO,cAEN,IACD,MAAO,KAInB,EAAM,MAAQ,CAAC,2BAA4B,gBAAiB,gDAAiD,yBAA0B,qEAAsE,+BAAgC,0BAA2B,UAAW,UAAW,gBAAiB,gBAAiB,iBAAkB,kBAAmB,oBAAqB,kBAAmB,6BAA8B,kCAAmC,kBAAmB,yBAA0B,kBAAmB,iBAAkB,mBAAoB,6BAA8B,mBAAoB,SAAU,YAAa,4BAA6B,aAAc,WAAY,kBAAmB,gBAAiB,uBAAwB,uBAAwB,SAAU,yBAA0B,0BAA2B,8BAA+B,yBAA0B,0CAA2C,eAAgB,UAAW,0DAA2D,yBAA0B,SAAU,UACriC,EAAM,WAAa,CAAE,GAAM,CAAE,MAAS,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,UAAa,IAAS,IAAO,CAAE,MAAS,CAAC,GAAI,UAAa,IAAS,IAAO,CAAE,MAAS,CAAC,GAAI,UAAa,IAAS,IAAO,CAAE,MAAS,CAAC,EAAG,EAAG,GAAI,UAAa,IAAS,QAAW,CAAE,MAAS,CAAC,EAAG,EAAG,IAAK,UAAa,KACxY,KAEX,EAAO,MAAQ,EACf,YAAkB,CACd,KAAK,GAAK,GACb,SAAO,UAAY,EAAO,EAAO,OAAS,EACpC,GAAI,MACV,EAAQ,QAAa,EAC1B,UAAiB,EAAQ,wGC7tBzB,aAAqB,GAGrB,WAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAEzF,GAAI,GAAa1C,kBAEb,EAAc,EAAuB,GAEzC,YAAmB,CACjB,KAAK,QAAU,GAGjB,EAAQ,UAAY,CAClB,YAAa,EACb,SAAU,GAGV,UAAW,SAAmB,EAAM,EAAM,CACxC,GAAI,GAAQ,KAAK,OAAO,EAAK,IAC7B,GAAI,KAAK,SAAU,CAGjB,GAAI,GAAS,CAAC,EAAQ,UAAU,EAAM,MACpC,KAAM,IAAI,GAAY,QAAW,yBAA2B,EAAM,KAAO,0BAA4B,EAAO,OAAS,EAAK,MAE5H,EAAK,GAAQ,IAMjB,eAAgB,SAAwB,EAAM,EAAM,CAGlD,GAFA,KAAK,UAAU,EAAM,GAEjB,CAAC,EAAK,GACR,KAAM,IAAI,GAAY,QAAW,EAAK,KAAO,aAAe,IAMhE,YAAa,SAAqB,EAAO,CACvC,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,IACvC,KAAK,UAAU,EAAO,GAEjB,EAAM,IACT,GAAM,OAAO,EAAG,GAChB,IACA,MAKN,OAAQ,SAAgB,EAAQ,CAC9B,GAAI,EAAC,EAKL,IAAI,CAAC,KAAK,EAAO,MACf,KAAM,IAAI,GAAY,QAAW,iBAAmB,EAAO,KAAM,GAGnE,AAAI,KAAK,SACP,KAAK,QAAQ,QAAQ,KAAK,SAE5B,KAAK,QAAU,EAEf,GAAI,GAAM,KAAK,EAAO,MAAM,GAI5B,GAFA,KAAK,QAAU,KAAK,QAAQ,QAExB,CAAC,KAAK,UAAY,EACpB,MAAO,GACF,GAAI,IAAQ,GACjB,MAAO,KAIX,QAAS,SAAiB,EAAS,CACjC,KAAK,YAAY,EAAQ,OAG3B,kBAAmB,EACnB,UAAW,EAEX,eAAgB,EAChB,eAAgB,EAEhB,iBAAkB,EAClB,sBAAuB,SAA+B,EAAS,CAC7D,EAAa,KAAK,KAAM,GAExB,KAAK,UAAU,EAAS,YAG1B,iBAAkB,UAAyC,GAC3D,iBAAkB,UAAyC,GAE3D,cAAe,EAEf,eAAgB,UAAoC,GAEpD,cAAe,UAAqC,GACpD,cAAe,UAAqC,GACpD,eAAgB,UAAoC,GACpD,iBAAkB,UAAyC,GAC3D,YAAa,UAAoC,GAEjD,KAAM,SAAc,EAAM,CACxB,KAAK,YAAY,EAAK,QAExB,SAAU,SAAkB,EAAM,CAChC,KAAK,eAAe,EAAM,WAI9B,WAA4B,EAAU,CACpC,KAAK,eAAe,EAAU,QAC9B,KAAK,YAAY,EAAS,QAC1B,KAAK,UAAU,EAAU,QAE3B,WAAoB,EAAO,CACzB,EAAmB,KAAK,KAAM,GAE9B,KAAK,UAAU,EAAO,WACtB,KAAK,UAAU,EAAO,WAExB,WAAsB,EAAS,CAC7B,KAAK,eAAe,EAAS,QAC7B,KAAK,YAAY,EAAQ,QACzB,KAAK,UAAU,EAAS,QAG1B,EAAQ,QAAa,EACrB,UAAiB,EAAQ,kDCxIzB,aAAqB,GAGrB,WAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAEzF,GAAI,GAAWA,gBAEX,EAAY,EAAuB,GAEvC,YAA6B,CAC3B,GAAI,GAAU,UAAU,QAAU,GAAK,UAAU,KAAO,OAAY,GAAK,UAAU,GAEnF,KAAK,QAAU,EAEjB,EAAkB,UAAY,GAAI,GAAU,QAE5C,EAAkB,UAAU,QAAU,SAAU,EAAS,CACvD,GAAI,GAAe,CAAC,KAAK,QAAQ,iBAE7B,EAAS,CAAC,KAAK,WACnB,KAAK,WAAa,GAGlB,OADI,GAAO,EAAQ,KACV,EAAI,EAAG,EAAI,EAAK,OAAQ,EAAI,EAAG,IAAK,CAC3C,GAAI,GAAU,EAAK,GACf,EAAQ,KAAK,OAAO,GAExB,GAAI,EAAC,EAIL,IAAI,GAAoB,EAAiB,EAAM,EAAG,GAC9C,EAAoB,EAAiB,EAAM,EAAG,GAC9C,EAAiB,EAAM,gBAAkB,EACzC,EAAkB,EAAM,iBAAmB,EAC3C,EAAmB,EAAM,kBAAoB,GAAqB,EAEtE,AAAI,EAAM,OACR,EAAU,EAAM,EAAG,IAEjB,EAAM,MACR,EAAS,EAAM,EAAG,IAGhB,GAAgB,GAClB,GAAU,EAAM,GAEZ,EAAS,EAAM,IAEb,EAAQ,OAAS,oBAEnB,GAAQ,OAAS,YAAY,KAAK,EAAK,EAAI,GAAG,UAAU,KAI1D,GAAgB,GAClB,GAAW,GAAQ,SAAW,EAAQ,SAAS,MAG/C,EAAS,EAAM,IAEb,GAAgB,GAElB,GAAU,EAAM,GAEhB,EAAU,GAAQ,SAAW,EAAQ,SAAS,QAIlD,MAAO,IAGT,EAAkB,UAAU,eAAiB,EAAkB,UAAU,eAAiB,EAAkB,UAAU,sBAAwB,SAAU,EAAO,CAC7J,KAAK,OAAO,EAAM,SAClB,KAAK,OAAO,EAAM,SAGlB,GAAI,GAAU,EAAM,SAAW,EAAM,QACjC,EAAU,EAAM,SAAW,EAAM,QACjC,EAAe,EACf,EAAc,EAElB,GAAI,GAAW,EAAQ,QAIrB,IAHA,EAAe,EAAQ,KAAK,GAAG,QAGxB,EAAY,SACjB,EAAc,EAAY,KAAK,EAAY,KAAK,OAAS,GAAG,QAIhE,GAAI,GAAQ,CACV,KAAM,EAAM,UAAU,KACtB,MAAO,EAAM,WAAW,MAIxB,eAAgB,EAAiB,EAAQ,MACzC,gBAAiB,EAAkB,IAAgB,GAAS,OAO9D,GAJI,EAAM,UAAU,OAClB,EAAU,EAAQ,KAAM,KAAM,IAG5B,EAAS,CACX,GAAI,GAAe,EAAM,aAEzB,AAAI,EAAa,MACf,EAAS,EAAQ,KAAM,KAAM,IAG3B,EAAa,OACf,EAAU,EAAa,KAAM,KAAM,IAEjC,EAAM,WAAW,MACnB,EAAS,EAAY,KAAM,KAAM,IAI/B,CAAC,KAAK,QAAQ,kBAAoB,EAAiB,EAAQ,OAAS,EAAiB,EAAa,OACpG,GAAS,EAAQ,MACjB,EAAU,EAAa,WAEpB,AAAI,GAAM,WAAW,MAC1B,EAAS,EAAQ,KAAM,KAAM,IAG/B,MAAO,IAGT,EAAkB,UAAU,UAAY,EAAkB,UAAU,kBAAoB,SAAU,EAAU,CAC1G,MAAO,GAAS,OAGlB,EAAkB,UAAU,iBAAmB,EAAkB,UAAU,iBAAmB,SAAU,EAAM,CAE5G,GAAI,GAAQ,EAAK,OAAS,GAC1B,MAAO,CACL,iBAAkB,GAClB,KAAM,EAAM,KACZ,MAAO,EAAM,QAIjB,WAA0B,EAAM,EAAG,EAAQ,CACzC,AAAI,IAAM,QACR,GAAI,EAAK,QAKX,GAAI,GAAO,EAAK,EAAI,GAChB,EAAU,EAAK,EAAI,GACvB,GAAI,CAAC,EACH,MAAO,GAGT,GAAI,EAAK,OAAS,mBAChB,MAAQ,IAAW,CAAC,EAAS,aAAe,kBAAkB,KAAK,EAAK,UAG5E,WAA0B,EAAM,EAAG,EAAQ,CACzC,AAAI,IAAM,QACR,GAAI,IAGN,GAAI,GAAO,EAAK,EAAI,GAChB,EAAU,EAAK,EAAI,GACvB,GAAI,CAAC,EACH,MAAO,GAGT,GAAI,EAAK,OAAS,mBAChB,MAAQ,IAAW,CAAC,EAAS,aAAe,kBAAkB,KAAK,EAAK,UAW5E,WAAmB,EAAM,EAAG,EAAU,CACpC,GAAI,GAAU,EAAK,GAAK,KAAO,EAAI,EAAI,GACvC,GAAI,GAAC,GAAW,EAAQ,OAAS,oBAAsB,CAAC,GAAY,EAAQ,eAI5E,IAAI,GAAW,EAAQ,MACvB,EAAQ,MAAQ,EAAQ,MAAM,QAAQ,EAAW,OAAS,gBAAiB,IAC3E,EAAQ,cAAgB,EAAQ,QAAU,GAU5C,WAAkB,EAAM,EAAG,EAAU,CACnC,GAAI,GAAU,EAAK,GAAK,KAAO,EAAK,OAAS,EAAI,EAAI,GACrD,GAAI,GAAC,GAAW,EAAQ,OAAS,oBAAsB,CAAC,GAAY,EAAQ,cAK5E,IAAI,GAAW,EAAQ,MACvB,SAAQ,MAAQ,EAAQ,MAAM,QAAQ,EAAW,OAAS,UAAW,IACrE,EAAQ,aAAe,EAAQ,QAAU,EAClC,EAAQ,cAGjB,EAAQ,QAAa,EACrB,UAAiB,EAAQ,sECzNzB,mBAAqB,0BACI,0BACZ,sBACQ,gCACE,iCACD,oCACI,wCACA,qCACH,oCACE,2CACK,oBAG9B,kCAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAEzF,GAAIqC,cAAarC,kBAEbsC,cAAcR,yBAAuBO,cAEzC,uBAAuB,EAAM,EAAO,CAGlC,GAFA,EAAQ,EAAM,KAAO,EAAM,KAAK,SAAW,EAEvC,EAAK,KAAK,WAAa,EAAO,CAChC,GAAI,GAAY,CAAE,IAAK,EAAK,KAAK,KAEjC,KAAM,IAAIC,eAAY,QAAW,EAAK,KAAK,SAAW,kBAAoB,EAAO,IAIrF,wBAAwB,EAAQ,EAAS,CACvC,KAAK,OAAS,EACd,KAAK,MAAQ,CACX,KAAM,EAAQ,WACd,OAAQ,EAAQ,cAElB,KAAK,IAAM,CACT,KAAM,EAAQ,UACd,OAAQ,EAAQ,aAIpB,YAAY,EAAO,CACjB,MAAI,WAAW,KAAK,GACX,EAAM,UAAU,EAAG,EAAM,OAAS,GAElC,EAIX,oBAAoB,EAAM,EAAO,CAC/B,MAAO,CACL,KAAM,EAAK,OAAO,KAAO,IACzB,MAAO,EAAM,OAAO,EAAM,OAAS,KAAO,KAI9C,sBAAsB,EAAS,CAC7B,MAAO,GAAQ,QAAQ,eAAgB,IAAI,QAAQ,cAAe,IAGpE,qBAAqB,EAAM,EAAO,EAAK,CACrC,EAAM,KAAK,QAAQ,GAMnB,OAJI,GAAW,EAAO,IAAM,GACxB,EAAM,GACN,EAAQ,EAEH,EAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,IAAK,CAC5C,GAAI,GAAO,EAAM,GAAG,KAIpB,EAAY,EAAM,GAAG,WAAa,EAGlC,GAFA,GAAa,GAAM,GAAG,WAAa,IAAM,EAErC,CAAC,GAAc,KAAS,MAAQ,IAAS,KAAO,IAAS,QAAS,CACpE,GAAI,EAAI,OAAS,EACf,KAAM,IAAIA,eAAY,QAAW,iBAAmB,EAAU,CAAE,IAAK,IAChE,AAAI,IAAS,MAClB,QAGF,GAAI,KAAK,GAIb,MAAO,CACL,KAAM,iBACN,KAAM,EACN,MAAO,EACP,MAAO,EACP,SAAU,EACV,IAAK,GAIT,yBAAyB,EAAM,EAAQ,EAAM,EAAM,EAAO,EAAS,CAEjE,GAAI,GAAa,EAAK,OAAO,IAAM,EAAK,OAAO,GAC3C,EAAU,IAAe,KAAO,IAAe,IAE/C,EAAY,KAAK,KAAK,GAC1B,MAAO,CACL,KAAM,EAAY,YAAc,oBAChC,KAAM,EACN,OAAQ,EACR,KAAM,EACN,QAAS,EACT,MAAO,EACP,IAAK,KAAK,QAAQ,IAItB,yBAAyB,EAAc,EAAU,EAAO,EAAS,CAC/D,cAAc,EAAc,GAE5B,EAAU,KAAK,QAAQ,GACvB,GAAI,GAAU,CACZ,KAAM,UACN,KAAM,EACN,MAAO,GACP,IAAK,GAGP,MAAO,CACL,KAAM,iBACN,KAAM,EAAa,KACnB,OAAQ,EAAa,OACrB,KAAM,EAAa,KACnB,QAAS,EACT,UAAW,GACX,aAAc,GACd,WAAY,GACZ,IAAK,GAIT,sBAAsB,EAAW,EAAS,EAAmB,EAAO,EAAU,EAAS,CACrF,AAAI,GAAS,EAAM,MACjB,cAAc,EAAW,GAG3B,GAAI,GAAY,KAAK,KAAK,EAAU,MAEpC,EAAQ,YAAc,EAAU,YAEhC,GAAI,GAAU,OACV,EAAe,OAEnB,GAAI,EAAmB,CACrB,GAAI,EACF,KAAM,IAAIA,eAAY,QAAW,wCAAyC,GAG5E,AAAI,EAAkB,OACpB,GAAkB,QAAQ,KAAK,GAAG,WAAa,EAAM,OAGvD,EAAe,EAAkB,MACjC,EAAU,EAAkB,QAG9B,MAAI,IACF,GAAW,EACX,EAAU,EACV,EAAU,GAGL,CACL,KAAM,EAAY,iBAAmB,iBACrC,KAAM,EAAU,KAChB,OAAQ,EAAU,OAClB,KAAM,EAAU,KAChB,QAAS,EACT,QAAS,EACT,UAAW,EAAU,MACrB,aAAc,EACd,WAAY,GAAS,EAAM,MAC3B,IAAK,KAAK,QAAQ,IAItB,wBAAwB,EAAY,EAAK,CACvC,GAAI,CAAC,GAAO,EAAW,OAAQ,CAC7B,GAAI,GAAW,EAAW,GAAG,IACzB,EAAU,EAAW,EAAW,OAAS,GAAG,IAGhD,AAAI,GAAY,GACd,GAAM,CACJ,OAAQ,EAAS,OACjB,MAAO,CACL,KAAM,EAAS,MAAM,KACrB,OAAQ,EAAS,MAAM,QAEzB,IAAK,CACH,KAAM,EAAQ,IAAI,KAClB,OAAQ,EAAQ,IAAI,UAM5B,MAAO,CACL,KAAM,UACN,KAAM,EACN,MAAO,GACP,IAAK,GAIT,6BAA6B,EAAM,EAAS,EAAO,EAAS,CAC1D,qBAAc,EAAM,GAEb,CACL,KAAM,wBACN,KAAM,EAAK,KACX,OAAQ,EAAK,OACb,KAAM,EAAK,KACX,QAAS,EACT,UAAW,EAAK,MAChB,WAAY,GAAS,EAAM,MAC3B,IAAK,KAAK,QAAQ,IC9NtB,gBAAqB,+BACY,kCACjB,MAGhB,iCAAiC,EAAK,CAAE,GAAI,GAAO,EAAI,WAAc,MAAO,GAAc,GAAI,GAAS,GAAI,GAAI,GAAO,KAAQ,OAAS,KAAO,GAAO,AAAI,OAAO,UAAU,eAAe,KAAK,EAAK,IAAM,GAAO,GAAO,EAAI,IAAU,SAAO,QAAa,EAAY,EAIrQ,kCAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAEzF,GAAI,SAAUtC,eAEV,SAAW8B,yBAAuB,SAElC,mBAAqBT,0BAErB,oBAAsBS,yBAAuB,oBAE7C,SAAWR,QAEX,QAAU,wBAAwB,UAElCW,SAASV,oBAEI,SAAS,QAE1B,GAAI,IAAK,GACTU,SAAO,OAAO,GAAI,SAElB,gCAAgC,EAAO,EAAS,CAE9C,GAAI,EAAM,OAAS,UACjB,MAAO,GAGT,SAAS,QAAW,GAAK,GAGzB,GAAG,QAAU,SAAU,EAAS,CAC9B,MAAO,IAAI,IAAG,eAAe,GAAW,EAAQ,QAAS,IAG3D,GAAI,GAAM,SAAS,QAAW,MAAM,GAEpC,MAAO,GAGT,eAAe,EAAO,EAAS,CAC7B,GAAI,GAAM,uBAAuB,EAAO,GACpC,EAAQ,GAAI,qBAAoB,QAAW,GAE/C,MAAO,GAAM,OAAO,mBClDtB,oBAAqB,qBACF,6BACE,4BACH,QAGlB,gCAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAEzF,GAAI,YAAajC,kBAEb,YAAc,uBAAuB,YAErC,OAASqB,QAET,KAAOC,YAEP,MAAQ,uBAAuB,MAE/B,MAAQ,GAAG,MAEf,mBAAoB,EAOpB,SAAS,UAAY,CACnB,SAAU,SAEV,OAAQ,WAAgB,EAAO,CAC7B,GAAI,GAAM,KAAK,QAAQ,OACvB,GAAI,EAAM,QAAQ,SAAW,EAC3B,MAAO,GAGT,OAAS,GAAI,EAAG,EAAI,EAAK,IAAK,CAC5B,GAAI,GAAS,KAAK,QAAQ,GACtB,EAAc,EAAM,QAAQ,GAChC,GAAI,EAAO,SAAW,EAAY,QAAU,CAAC,UAAU,EAAO,KAAM,EAAY,MAC9E,MAAO,GAMX,EAAM,KAAK,SAAS,OACpB,OAAS,GAAI,EAAG,EAAI,EAAK,IACvB,GAAI,CAAC,KAAK,SAAS,GAAG,OAAO,EAAM,SAAS,IAC1C,MAAO,GAIX,MAAO,IAGT,KAAM,EAEN,QAAS,WAAiB,EAAS,EAAS,CAC1C,YAAK,WAAa,GAClB,KAAK,QAAU,GACf,KAAK,SAAW,GAChB,KAAK,QAAU,EACf,KAAK,aAAe,EAAQ,aAC5B,KAAK,SAAW,EAAQ,SAExB,EAAQ,YAAc,EAAQ,aAAe,GAE7C,EAAQ,aAAe,OAAO,OAAO,OAAO,OAAO,MAAO,CACxD,cAAe,GACf,mBAAoB,GACpB,KAAM,GACN,GAAM,GACN,OAAQ,GACR,KAAQ,GACR,IAAK,GACL,OAAQ,IACP,EAAQ,cAEJ,KAAK,OAAO,IAGrB,eAAgB,WAAwB,EAAS,CAC/C,GAAI,GAAgB,GAAI,MAAK,SAE7B,EAAS,EAAc,QAAQ,EAAS,KAAK,SACzC,EAAO,KAAK,OAEhB,YAAK,WAAa,KAAK,YAAc,EAAO,WAE5C,KAAK,SAAS,GAAQ,EACtB,KAAK,UAAY,KAAK,WAAa,EAAO,UAEnC,GAGT,OAAQ,WAAgB,EAAM,CAE5B,GAAI,CAAC,KAAK,EAAK,MACb,KAAM,IAAI,aAAY,QAAW,iBAAmB,EAAK,KAAM,GAGjE,KAAK,WAAW,QAAQ,GACxB,GAAI,GAAM,KAAK,EAAK,MAAM,GAC1B,YAAK,WAAW,QACT,GAGT,QAAS,WAAiB,EAAS,CACjC,KAAK,QAAQ,YAAY,QAAQ,EAAQ,aAIzC,OAFI,GAAO,EAAQ,KACf,EAAa,EAAK,OACb,EAAI,EAAG,EAAI,EAAY,IAC9B,KAAK,OAAO,EAAK,IAGnB,YAAK,QAAQ,YAAY,QAEzB,KAAK,SAAW,IAAe,EAC/B,KAAK,YAAc,EAAQ,YAAc,EAAQ,YAAY,OAAS,EAE/D,MAGT,eAAgB,WAAwB,EAAO,CAC7C,uBAAuB,GAEvB,GAAI,GAAU,EAAM,QAChB,EAAU,EAAM,QAEpB,EAAU,GAAW,KAAK,eAAe,GACzC,EAAU,GAAW,KAAK,eAAe,GAEzC,GAAI,GAAO,KAAK,cAAc,GAE9B,AAAI,IAAS,SACX,KAAK,YAAY,EAAO,EAAS,GAC5B,AAAI,IAAS,SAClB,MAAK,YAAY,GAIjB,KAAK,OAAO,cAAe,GAC3B,KAAK,OAAO,cAAe,GAC3B,KAAK,OAAO,aACZ,KAAK,OAAO,aAAc,EAAM,KAAK,WAErC,MAAK,eAAe,EAAO,EAAS,GAIpC,KAAK,OAAO,cAAe,GAC3B,KAAK,OAAO,cAAe,GAC3B,KAAK,OAAO,aACZ,KAAK,OAAO,wBAGd,KAAK,OAAO,WAGd,eAAgB,WAAwB,EAAW,CACjD,GAAI,GAAU,EAAU,SAAW,KAAK,eAAe,EAAU,SAC7D,EAAS,KAAK,wBAAwB,EAAW,EAAS,QAC1D,EAAO,EAAU,KAErB,KAAK,cAAgB,GACrB,KAAK,OAAO,oBAAqB,EAAO,OAAQ,EAAK,WAGvD,iBAAkB,WAA0B,EAAS,CACnD,KAAK,WAAa,GAElB,GAAI,GAAU,EAAQ,QACtB,AAAI,GACF,GAAU,KAAK,eAAe,EAAQ,UAGxC,GAAI,GAAS,EAAQ,OACrB,GAAI,EAAO,OAAS,EAClB,KAAM,IAAI,aAAY,QAAW,4CAA8C,EAAO,OAAQ,GACzF,AAAK,EAAO,QACjB,CAAI,KAAK,QAAQ,uBACf,KAAK,OAAO,cAAe,aAE3B,EAAO,KAAK,CAAE,KAAM,iBAAkB,MAAO,GAAI,MAAO,KAI5D,GAAI,GAAc,EAAQ,KAAK,SAC3B,EAAY,EAAQ,KAAK,OAAS,gBACtC,AAAI,GACF,KAAK,OAAO,EAAQ,MAGtB,KAAK,wBAAwB,EAAS,EAAS,OAAW,IAE1D,GAAI,GAAS,EAAQ,QAAU,GAC/B,AAAI,KAAK,QAAQ,eAAiB,GAChC,MAAK,OAAO,gBAAiB,GAC7B,EAAS,IAGX,KAAK,OAAO,gBAAiB,EAAW,EAAa,GACrD,KAAK,OAAO,WAEd,sBAAuB,WAA+B,EAAc,CAClE,KAAK,iBAAiB,IAGxB,kBAAmB,WAA2B,EAAU,CACtD,KAAK,cAAc,GAEnB,AAAI,EAAS,SAAW,CAAC,KAAK,QAAQ,SACpC,KAAK,OAAO,iBAEZ,KAAK,OAAO,WAGhB,UAAW,WAAmB,EAAW,CACvC,KAAK,eAAe,IAGtB,iBAAkB,WAA0B,EAAS,CACnD,AAAI,EAAQ,OACV,KAAK,OAAO,gBAAiB,EAAQ,QAIzC,iBAAkB,YAA4B,GAE9C,cAAe,WAAuB,EAAO,CAC3C,uBAAuB,GACvB,GAAI,GAAO,KAAK,cAAc,GAE9B,AAAI,IAAS,SACX,KAAK,YAAY,GACZ,AAAI,IAAS,SAClB,KAAK,YAAY,GAEjB,KAAK,eAAe,IAGxB,eAAgB,WAAwB,EAAO,EAAS,EAAS,CAC/D,GAAI,GAAO,EAAM,KACb,EAAO,EAAK,MAAM,GAClB,EAAU,GAAW,MAAQ,GAAW,KAE5C,KAAK,OAAO,aAAc,EAAK,OAE/B,KAAK,OAAO,cAAe,GAC3B,KAAK,OAAO,cAAe,GAE3B,EAAK,OAAS,GACd,KAAK,OAAO,GAEZ,KAAK,OAAO,kBAAmB,EAAM,IAGvC,YAAa,WAAqB,EAAO,CACvC,GAAI,GAAO,EAAM,KACjB,EAAK,OAAS,GACd,KAAK,OAAO,GACZ,KAAK,OAAO,0BAGd,YAAa,WAAqB,EAAO,EAAS,EAAS,CACzD,GAAI,GAAS,KAAK,wBAAwB,EAAO,EAAS,GACtD,EAAO,EAAM,KACb,EAAO,EAAK,MAAM,GAEtB,GAAI,KAAK,QAAQ,aAAa,GAC5B,KAAK,OAAO,oBAAqB,EAAO,OAAQ,OAC3C,IAAI,KAAK,QAAQ,iBACtB,KAAM,IAAI,aAAY,QAAW,+DAAiE,EAAM,GAExG,EAAK,OAAS,GACd,EAAK,MAAQ,GAEb,KAAK,OAAO,GACZ,KAAK,OAAO,eAAgB,EAAO,OAAQ,EAAK,SAAU,MAAM,QAAW,QAAQ,SAAS,MAIhG,eAAgB,WAAwB,EAAM,CAC5C,KAAK,SAAS,EAAK,OACnB,KAAK,OAAO,aAAc,EAAK,OAE/B,GAAI,GAAO,EAAK,MAAM,GAClB,EAAS,MAAM,QAAW,QAAQ,SAAS,GAC3C,EAAe,CAAC,EAAK,OAAS,CAAC,GAAU,KAAK,gBAAgB,GAElE,AAAI,EACF,KAAK,OAAO,mBAAoB,EAAc,EAAK,OAC9C,AAAK,EAGL,AAAI,EAAK,KACd,MAAK,QAAQ,KAAO,GACpB,KAAK,OAAO,aAAc,EAAK,MAAO,EAAK,MAAO,EAAK,SAEvD,KAAK,OAAO,kBAAmB,EAAK,MAAO,EAAK,MAAO,EAAK,OAAQ,GALpE,KAAK,OAAO,gBAShB,cAAe,WAAuB,EAAQ,CAC5C,KAAK,OAAO,aAAc,EAAO,QAGnC,cAAe,WAAuB,EAAQ,CAC5C,KAAK,OAAO,cAAe,EAAO,QAGpC,eAAgB,WAAwB,EAAM,CAC5C,KAAK,OAAO,cAAe,EAAK,QAGlC,iBAAkB,YAA4B,CAC5C,KAAK,OAAO,cAAe,cAG7B,YAAa,YAAuB,CAClC,KAAK,OAAO,cAAe,SAG7B,KAAM,WAAc,EAAM,CACxB,GAAI,GAAQ,EAAK,MACb,EAAI,EACJ,EAAI,EAAM,OAId,IAFA,KAAK,OAAO,YAEL,EAAI,EAAG,IACZ,KAAK,UAAU,EAAM,GAAG,OAE1B,KAAO,KACL,KAAK,OAAO,eAAgB,EAAM,GAAG,KAEvC,KAAK,OAAO,YAId,OAAQ,WAAgB,EAAM,CAC5B,KAAK,QAAQ,KAAK,CAChB,OAAQ,EACR,KAAM,MAAM,KAAK,UAAW,GAC5B,IAAK,KAAK,WAAW,GAAG,OAI5B,SAAU,WAAkB,EAAO,CACjC,AAAI,CAAC,GAIL,MAAK,UAAY,KAGnB,cAAe,WAAuB,EAAO,CAC3C,GAAI,GAAW,MAAM,QAAW,QAAQ,SAAS,EAAM,MAEnD,EAAe,GAAY,CAAC,CAAC,KAAK,gBAAgB,EAAM,KAAK,MAAM,IAInE,EAAW,CAAC,GAAgB,MAAM,QAAW,QAAQ,iBAAiB,GAKtE,EAAa,CAAC,GAAiB,IAAY,GAI/C,GAAI,GAAc,CAAC,EAAU,CAC3B,GAAI,GAAQ,EAAM,KAAK,MAAM,GACzB,EAAU,KAAK,QACnB,AAAI,EAAQ,aAAa,GACvB,EAAW,GACF,EAAQ,kBACjB,GAAa,IAIjB,MAAI,GACK,SACE,EACF,YAEA,UAIX,WAAY,WAAoB,EAAQ,CACtC,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IACxC,KAAK,UAAU,EAAO,KAI1B,UAAW,WAAmB,EAAK,CACjC,GAAI,GAAQ,EAAI,OAAS,KAAO,EAAI,MAAQ,EAAI,UAAY,GAE5D,GAAI,KAAK,aACP,AAAI,EAAM,SACR,GAAQ,EAAM,QAAQ,eAAgB,IAAI,QAAQ,MAAO,MAGvD,EAAI,OACN,KAAK,SAAS,EAAI,OAEpB,KAAK,OAAO,aAAc,EAAI,OAAS,GACvC,KAAK,OAAO,kBAAmB,EAAO,EAAI,MAEtC,EAAI,OAAS,iBAGf,KAAK,OAAO,OAET,CACL,GAAI,KAAK,SAAU,CACjB,GAAI,GAAkB,OAItB,GAHI,EAAI,OAAS,CAAC,MAAM,QAAW,QAAQ,SAAS,IAAQ,CAAC,EAAI,OAC/D,GAAkB,KAAK,gBAAgB,EAAI,MAAM,KAE/C,EAAiB,CACnB,GAAI,GAAkB,EAAI,MAAM,MAAM,GAAG,KAAK,KAC9C,KAAK,OAAO,SAAU,aAAc,EAAiB,OAErD,GAAQ,EAAI,UAAY,EACpB,EAAM,SACR,GAAQ,EAAM,QAAQ,gBAAiB,IAAI,QAAQ,QAAS,IAAI,QAAQ,OAAQ,KAGlF,KAAK,OAAO,SAAU,EAAI,KAAM,GAGpC,KAAK,OAAO,KAIhB,wBAAyB,WAAiC,EAAO,EAAS,EAAS,EAAW,CAC5F,GAAI,GAAS,EAAM,OACnB,YAAK,WAAW,GAEhB,KAAK,OAAO,cAAe,GAC3B,KAAK,OAAO,cAAe,GAE3B,AAAI,EAAM,KACR,KAAK,OAAO,EAAM,MAElB,KAAK,OAAO,YAAa,GAGpB,GAGT,gBAAiB,WAAyB,EAAM,CAC9C,OAAS,GAAQ,EAAG,EAAM,KAAK,QAAQ,YAAY,OAAQ,EAAQ,EAAK,IAAS,CAC/E,GAAI,GAAc,KAAK,QAAQ,YAAY,GACvC,EAAQ,GAAe,OAAO,QAAQ,EAAa,GACvD,GAAI,GAAe,GAAS,EAC1B,MAAO,CAAC,EAAO,MAMvB,oBAAoB,EAAO,EAAS,EAAK,CACvC,GAAI,GAAS,MAAQ,MAAO,IAAU,UAAY,EAAM,OAAS,UAC/D,KAAM,IAAI,aAAY,QAAW,iFAAmF,GAGtH,EAAU,GAAW,GACf,QAAU,IACd,GAAQ,KAAO,IAEb,EAAQ,QACV,GAAQ,UAAY,IAGtB,GAAI,GAAM,EAAI,MAAM,EAAO,GACvB,EAAc,GAAI,GAAI,WAAW,QAAQ,EAAK,GAClD,MAAO,IAAI,GAAI,qBAAqB,QAAQ,EAAa,GAG3D,iBAAiB,EAAO,EAAS,EAAK,CAGpC,GAFI,IAAY,QAAW,GAAU,IAEjC,GAAS,MAAQ,MAAO,IAAU,UAAY,EAAM,OAAS,UAC/D,KAAM,IAAI,aAAY,QAAW,8EAAgF,GAGnH,EAAU,OAAO,OAAO,GAAI,GACtB,QAAU,IACd,GAAQ,KAAO,IAEb,EAAQ,QACV,GAAQ,UAAY,IAGtB,GAAI,GAAW,OAEf,YAAwB,CACtB,GAAI,GAAM,EAAI,MAAM,EAAO,GACvB,EAAc,GAAI,GAAI,WAAW,QAAQ,EAAK,GAC9C,EAAe,GAAI,GAAI,qBAAqB,QAAQ,EAAa,EAAS,OAAW,IACzF,MAAO,GAAI,SAAS,GAItB,WAAa,EAAS,EAAa,CACjC,MAAK,IACH,GAAW,KAEN,EAAS,KAAK,KAAM,EAAS,GAEtC,SAAI,OAAS,SAAU,EAAc,CACnC,MAAK,IACH,GAAW,KAEN,EAAS,OAAO,IAEzB,EAAI,OAAS,SAAU,EAAG,EAAM,EAAa,EAAQ,CACnD,MAAK,IACH,GAAW,KAEN,EAAS,OAAO,EAAG,EAAM,EAAa,IAExC,EAGT,mBAAmB,EAAG,EAAG,CACvB,GAAI,IAAM,EACR,MAAO,GAGT,GAAI,OAAO,QAAQ,IAAM,OAAO,QAAQ,IAAM,EAAE,SAAW,EAAE,OAAQ,CACnE,OAAS,GAAI,EAAG,EAAI,EAAE,OAAQ,IAC5B,GAAI,CAAC,UAAU,EAAE,GAAI,EAAE,IACrB,MAAO,GAGX,MAAO,IAIX,gCAAgC,EAAO,CACrC,GAAI,CAAC,EAAM,KAAK,MAAO,CACrB,GAAI,GAAU,EAAM,KAGpB,EAAM,KAAO,CACX,KAAM,iBACN,KAAM,GACN,MAAO,EACP,MAAO,CAAC,EAAQ,SAAW,IAC3B,SAAU,EAAQ,SAAW,GAC7B,IAAK,EAAQ,8EC9iBnB,aAAqB,GAErB,GAAI,GAAStB,QAET,EAAa,OAEjB,GAAI,CAKA,GAAI,GAAY,QAAQ,cACxB,EAAa,EAAU,gBAEzB,EAIF,AAAK,GACH,GAAa,SAAU,EAAM,EAAQ,EAAS,EAAQ,CACpD,KAAK,IAAM,GACP,GACF,KAAK,IAAI,IAIb,EAAW,UAAY,CACrB,IAAK,SAAa,EAAQ,CACxB,AAAI,EAAO,QAAQ,IACjB,GAAS,EAAO,KAAK,KAEvB,KAAK,KAAO,GAEd,QAAS,SAAiB,EAAQ,CAChC,AAAI,EAAO,QAAQ,IACjB,GAAS,EAAO,KAAK,KAEvB,KAAK,IAAM,EAAS,KAAK,KAE3B,sBAAuB,UAAiC,CACtD,MAAO,CAAE,KAAM,KAAK,aAEtB,SAAU,UAAoB,CAC5B,MAAO,MAAK,OAKlB,WAAmB,EAAO,EAAS,EAAK,CACtC,GAAI,EAAO,QAAQ,GAAQ,CAGzB,OAFI,GAAM,GAED,EAAI,EAAG,EAAM,EAAM,OAAQ,EAAI,EAAK,IAC3C,EAAI,KAAK,EAAQ,KAAK,EAAM,GAAI,IAElC,MAAO,WACE,MAAO,IAAU,WAAa,MAAO,IAAU,SAExD,MAAO,GAAQ,GAEjB,MAAO,GAGT,WAAiB,EAAS,CACxB,KAAK,QAAU,EACf,KAAK,OAAS,GAGhB,EAAQ,UAAY,CAClB,QAAS,UAAmB,CAC1B,MAAO,CAAC,KAAK,OAAO,QAEtB,QAAS,SAAiB,EAAQ,EAAK,CACrC,KAAK,OAAO,QAAQ,KAAK,KAAK,EAAQ,KAExC,KAAM,SAAc,EAAQ,EAAK,CAC/B,KAAK,OAAO,KAAK,KAAK,KAAK,EAAQ,KAGrC,MAAO,UAAiB,CACtB,GAAI,GAAS,KAAK,QAClB,YAAK,KAAK,SAAU,EAAM,CACxB,EAAO,IAAI,CAAC,KAAM,EAAM;AAAA,MAEnB,GAGT,KAAM,SAAc,EAAM,CACxB,OAAS,GAAI,EAAG,EAAM,KAAK,OAAO,OAAQ,EAAI,EAAK,IACjD,EAAK,KAAK,OAAO,KAIrB,MAAO,UAAiB,CACtB,GAAI,GAAM,KAAK,iBAAmB,CAAE,MAAO,IAC3C,MAAO,IAAI,GAAW,EAAI,MAAM,KAAM,EAAI,MAAM,OAAQ,KAAK,UAE/D,KAAM,SAAc,EAAO,CACzB,GAAI,GAAM,UAAU,QAAU,GAAK,UAAU,KAAO,OAAY,KAAK,iBAAmB,CAAE,MAAO,IAAO,UAAU,GAElH,MAAI,aAAiB,GACZ,EAGT,GAAQ,EAAU,EAAO,KAAM,GAExB,GAAI,GAAW,EAAI,MAAM,KAAM,EAAI,MAAM,OAAQ,KAAK,QAAS,KAGxE,aAAc,SAAsB,EAAI,EAAM,EAAQ,CACpD,SAAS,KAAK,aAAa,GACpB,KAAK,KAAK,CAAC,EAAI,EAAO,IAAM,EAAO,IAAM,IAAK,EAAQ,OAG/D,aAAc,SAAsB,EAAK,CACvC,MAAO,IAAO,GAAM,IAAI,QAAQ,MAAO,QAAQ,QAAQ,KAAM,OAAO,QAAQ,MAAO,OAAO,QAAQ,MAAO,OAAO,QAAQ,UAAW,WAClI,QAAQ,UAAW,WAAa,KAGnC,cAAe,SAAuB,EAAK,CAGzC,GAAI,GAAQ,KAER,EAAQ,GAEZ,OAAO,KAAK,GAAK,QAAQ,SAAU,EAAK,CACtC,GAAI,GAAQ,EAAU,EAAI,GAAM,GAChC,AAAI,IAAU,aACZ,EAAM,KAAK,CAAC,EAAM,aAAa,GAAM,IAAK,MAI9C,GAAI,GAAM,KAAK,aAAa,GAC5B,SAAI,QAAQ,KACZ,EAAI,IAAI,KACD,GAGT,aAAc,SAAsB,EAAS,CAG3C,OAFI,GAAM,KAAK,QAEN,EAAI,EAAG,EAAM,EAAQ,OAAQ,EAAI,EAAK,IAC7C,AAAI,GACF,EAAI,IAAI,KAGV,EAAI,IAAI,EAAU,EAAQ,GAAI,OAGhC,MAAO,IAGT,cAAe,SAAuB,EAAS,CAC7C,GAAI,GAAM,KAAK,aAAa,GAC5B,SAAI,QAAQ,KACZ,EAAI,IAAI,KAED,IAIX,EAAQ,QAAa,EACrB,UAAiB,EAAQ,kDCpKzB,aAAqB,GAGrB,WAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAEzF,GAAI,GAAQA,OAER,EAAaqB,kBAEb,EAAc,EAAuB,GAErC,EAASC,QAET,EAAWC,gBAEX,EAAY,EAAuB,GAEvC,WAAiB,EAAO,CACtB,KAAK,MAAQ,EAGf,YAA8B,EAE9B,EAAmB,UAAY,CAG7B,WAAY,SAAoB,EAAQ,EAAmB,CACzD,MAAO,MAAK,mBAAmB,EAAQ,IAEzC,cAAe,SAAuB,EAAM,CAC1C,MAAO,CAAC,KAAK,UAAU,oBAAqB,YAAa,KAAK,UAAU,GAAO,MAGjF,aAAc,UAAwB,CACpC,GAAI,GAAW,EAAM,kBACjB,EAAW,EAAM,iBAAiB,GACtC,MAAO,CAAC,EAAU,IAGpB,eAAgB,SAAwB,EAAQ,EAAU,EAAU,CAOlE,MALK,GAAO,QAAQ,IAClB,GAAS,CAAC,IAEZ,EAAS,KAAK,OAAO,KAAK,EAAQ,GAE9B,KAAK,YAAY,SACZ,CAAC,UAAW,EAAQ,KAClB,EAIF,CAAC,aAAc,EAAQ,KAE9B,GAAO,eAAiB,GACjB,IAIX,iBAAkB,UAA4B,CAC5C,MAAO,MAAK,aAAa,KAG3B,mBAAoB,SAA4B,EAAQ,EAAM,CAC5D,YAAK,6BAA+B,GAC7B,CAAC,kBAAmB,EAAQ,IAAK,KAAK,UAAU,GAAO,MAGhE,6BAA8B,GAE9B,QAAS,SAAiB,EAAa,EAAS,EAAS,EAAU,CACjE,KAAK,YAAc,EACnB,KAAK,QAAU,EACf,KAAK,aAAe,KAAK,QAAQ,aACjC,KAAK,SAAW,KAAK,QAAQ,SAC7B,KAAK,WAAa,CAAC,EAEnB,KAAK,KAAO,KAAK,YAAY,KAC7B,KAAK,QAAU,CAAC,CAAC,EACjB,KAAK,QAAU,GAAW,CACxB,WAAY,GACZ,SAAU,GACV,aAAc,IAGhB,KAAK,WAEL,KAAK,UAAY,EACjB,KAAK,UAAY,GACjB,KAAK,QAAU,GACf,KAAK,UAAY,CAAE,KAAM,IACzB,KAAK,OAAS,GACd,KAAK,aAAe,GACpB,KAAK,YAAc,GACnB,KAAK,YAAc,GAEnB,KAAK,gBAAgB,EAAa,GAElC,KAAK,UAAY,KAAK,WAAa,EAAY,WAAa,EAAY,eAAiB,KAAK,QAAQ,OACtG,KAAK,eAAiB,KAAK,gBAAkB,EAAY,eAEzD,GAAI,GAAU,EAAY,QACtB,EAAS,OACT,EAAW,OACX,EAAI,OACJ,EAAI,OAER,IAAK,EAAI,EAAG,EAAI,EAAQ,OAAQ,EAAI,EAAG,IACrC,EAAS,EAAQ,GAEjB,KAAK,OAAO,gBAAkB,EAAO,IACrC,EAAW,GAAY,EAAO,IAC9B,KAAK,EAAO,QAAQ,MAAM,KAAM,EAAO,MAQzC,GAJA,KAAK,OAAO,gBAAkB,EAC9B,KAAK,WAAW,IAGZ,KAAK,WAAa,KAAK,YAAY,QAAU,KAAK,aAAa,OACjE,KAAM,IAAI,GAAY,QAAW,gDAGnC,AAAK,KAAK,WAAW,UAcnB,KAAK,WAAa,OAblB,MAAK,cAAgB,GAErB,KAAK,WAAW,QAAQ,CAAC,0CAA2C,KAAK,uCAAwC;AAAA,IACjH,KAAK,WAAW,KAAK,cAErB,AAAI,EACF,KAAK,WAAa,SAAS,MAAM,KAAM,CAAC,KAAM,QAAS,YAAa,SAAU,OAAQ,cAAe,SAAU,KAAK,WAAW,UAE/H,MAAK,WAAW,QAAQ;AAAA,GACxB,KAAK,WAAW,KAAK;AAAA,GACrB,KAAK,WAAa,KAAK,WAAW,UAMtC,GAAI,GAAK,KAAK,sBAAsB,GACpC,GAAK,KAAK,QA2DR,MAAO,GA1DP,GAAI,GAAM,CACR,SAAU,KAAK,eACf,KAAM,GAGR,AAAI,KAAK,YACP,GAAI,OAAS,KAAK,WAClB,EAAI,cAAgB,IAGtB,GAAI,GAAW,KAAK,QAChB,EAAW,EAAS,SACpB,EAAa,EAAS,WAE1B,IAAK,EAAI,EAAG,EAAI,EAAS,OAAQ,EAAI,EAAG,IACtC,AAAI,EAAS,IACX,GAAI,GAAK,EAAS,GACd,EAAW,IACb,GAAI,EAAI,MAAQ,EAAW,GAC3B,EAAI,cAAgB,KAK1B,MAAI,MAAK,YAAY,YACnB,GAAI,WAAa,IAEf,KAAK,QAAQ,MACf,GAAI,QAAU,IAEZ,KAAK,WACP,GAAI,UAAY,IAEd,KAAK,gBACP,GAAI,eAAiB,IAEnB,KAAK,QAAQ,QACf,GAAI,OAAS,IAGf,AAAK,EAaH,EAAI,gBAAkB,KAAK,QAZ3B,GAAI,SAAW,KAAK,UAAU,EAAI,UAElC,KAAK,OAAO,gBAAkB,CAAE,MAAO,CAAE,KAAM,EAAG,OAAQ,IAC1D,EAAM,KAAK,cAAc,GAEzB,AAAI,EAAQ,QACV,GAAM,EAAI,sBAAsB,CAAE,KAAM,EAAQ,WAChD,EAAI,IAAM,EAAI,KAAO,EAAI,IAAI,YAE7B,EAAM,EAAI,YAMP,GAMX,SAAU,UAAoB,CAG5B,KAAK,YAAc,EACnB,KAAK,OAAS,GAAI,GAAU,QAAW,KAAK,QAAQ,SACpD,KAAK,WAAa,GAAI,GAAU,QAAW,KAAK,QAAQ,UAG1D,sBAAuB,SAA+B,EAAU,CAG9D,GAAI,GAAQ,KAER,EAAkB,GAElB,EAAS,KAAK,UAAU,OAAO,KAAK,UAAU,MAClD,AAAI,EAAO,OAAS,GAClB,IAAmB,KAAO,EAAO,KAAK,OASxC,GAAI,GAAa,EACjB,OAAO,KAAK,KAAK,SAAS,QAAQ,SAAU,EAAO,CACjD,GAAI,GAAO,EAAM,QAAQ,GACzB,AAAI,EAAK,UAAY,EAAK,eAAiB,GACzC,IAAmB,UAAY,GAAE,EAAa,IAAM,EACpD,EAAK,SAAS,GAAK,QAAU,KAI7B,KAAK,8BACP,IAAmB,KAAO,KAAK,wCAGjC,GAAI,GAAS,CAAC,YAAa,SAAU,UAAW,WAAY,QAE5D,AAAI,MAAK,gBAAkB,KAAK,YAC9B,EAAO,KAAK,eAEV,KAAK,WACP,EAAO,KAAK,UAId,GAAI,GAAS,KAAK,YAAY,GAE9B,MAAI,GACF,GAAO,KAAK,GAEL,SAAS,MAAM,KAAM,IAErB,KAAK,OAAO,KAAK,CAAC,YAAa,EAAO,KAAK,KAAM;AAAA,IAAW,EAAQ,OAG/E,YAAa,SAAqB,EAAiB,CACjD,GAAI,GAAW,KAAK,YAAY,SAC5B,EAAa,CAAC,KAAK,YACnB,EAAc,OACd,EAAa,OACb,EAAc,OACd,EAAY,OAChB,YAAK,OAAO,KAAK,SAAU,EAAM,CAC/B,AAAI,EAAK,eACP,CAAI,EACF,EAAK,QAAQ,QAEb,EAAc,EAEhB,EAAY,GAER,IACF,CAAK,EAGH,EAAY,QAAQ,cAFpB,EAAc,GAIhB,EAAU,IAAI,KACd,EAAc,EAAY,QAG5B,EAAa,GACR,GACH,GAAa,OAKnB,AAAI,EACF,AAAI,EACF,GAAY,QAAQ,WACpB,EAAU,IAAI,MACJ,GACV,KAAK,OAAO,KAAK,cAGnB,IAAmB,cAAiB,GAAc,GAAK,KAAK,oBAE5D,AAAI,EACF,GAAY,QAAQ,oBACpB,EAAU,IAAI,MAEd,KAAK,OAAO,KAAK,mBAIjB,GACF,KAAK,OAAO,QAAQ,OAAS,EAAgB,UAAU,GAAM,GAAc,GAAK;AAAA,IAG3E,KAAK,OAAO,SAGrB,qCAAsC,UAAgD,CACpF,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA6P,QAYtQ,WAAY,SAAoB,EAAM,CACpC,GAAI,GAAqB,KAAK,UAAU,sCACpC,EAAS,CAAC,KAAK,YAAY,IAC/B,KAAK,gBAAgB,EAAM,EAAG,GAE9B,GAAI,GAAY,KAAK,WACrB,EAAO,OAAO,EAAG,EAAG,GAEpB,KAAK,KAAK,KAAK,OAAO,aAAa,EAAoB,OAAQ,KASjE,oBAAqB,UAA+B,CAElD,GAAI,GAAqB,KAAK,UAAU,sCACpC,EAAS,CAAC,KAAK,YAAY,IAC/B,KAAK,gBAAgB,GAAI,EAAG,EAAQ,IAEpC,KAAK,cAEL,GAAI,GAAU,KAAK,WACnB,EAAO,OAAO,EAAG,EAAG,GAEpB,KAAK,WAAW,CAAC,QAAS,KAAK,WAAY,OAAQ,EAAS,MAAO,KAAK,OAAO,aAAa,EAAoB,OAAQ,GAAS,OASnI,cAAe,SAAuB,EAAS,CAC7C,AAAI,KAAK,eACP,EAAU,KAAK,eAAiB,EAEhC,KAAK,gBAAkB,KAAK,OAAO,gBAGrC,KAAK,eAAiB,GAYxB,OAAQ,UAAkB,CACxB,GAAI,KAAK,WACP,KAAK,aAAa,SAAU,EAAS,CACnC,MAAO,CAAC,cAAe,EAAS,WAGlC,KAAK,WAAW,KAAK,eAAe,KAAK,iBACpC,CACL,GAAI,GAAQ,KAAK,WACjB,KAAK,WAAW,CAAC,OAAQ,EAAO,eAAgB,KAAK,eAAe,EAAO,OAAW,IAAO,OACzF,KAAK,YAAY,UACnB,KAAK,WAAW,CAAC,UAAW,KAAK,eAAe,KAAM,OAAW,IAAO,SAW9E,cAAe,UAAyB,CACtC,KAAK,WAAW,KAAK,eAAe,CAAC,KAAK,UAAU,8BAA+B,IAAK,KAAK,WAAY,QAU3G,WAAY,SAAoB,EAAO,CACrC,KAAK,YAAc,GASrB,YAAa,UAAuB,CAClC,KAAK,iBAAiB,KAAK,YAAY,KAAK,eAU9C,gBAAiB,SAAyB,EAAO,EAAO,EAAQ,EAAQ,CACtE,GAAI,GAAI,EAER,AAAI,CAAC,GAAU,KAAK,QAAQ,QAAU,CAAC,KAAK,YAG1C,KAAK,KAAK,KAAK,cAAc,EAAM,OAEnC,KAAK,cAGP,KAAK,YAAY,UAAW,EAAO,EAAG,EAAO,IAU/C,iBAAkB,SAA0B,EAAc,EAAO,CAC/D,KAAK,eAAiB,GAEtB,KAAK,KAAK,CAAC,eAAgB,EAAa,GAAI,KAAM,EAAa,GAAI,MACnE,KAAK,YAAY,UAAW,EAAO,IASrC,WAAY,SAAoB,EAAO,EAAO,EAAQ,CACpD,AAAK,EAGH,KAAK,iBAAiB,wBAA0B,EAAQ,KAFxD,KAAK,iBAAiB,QAKxB,KAAK,YAAY,OAAQ,EAAO,EAAG,GAAM,IAG3C,YAAa,SAAqB,EAAM,EAAO,EAAG,EAAO,EAAQ,CAG/D,GAAI,GAAS,KAEb,GAAI,KAAK,QAAQ,QAAU,KAAK,QAAQ,cAAe,CACrD,KAAK,KAAK,EAAa,KAAK,QAAQ,QAAU,EAAQ,KAAM,EAAO,IACnE,OAIF,OADI,GAAM,EAAM,OACT,EAAI,EAAK,IAEd,KAAK,aAAa,SAAU,EAAS,CACnC,GAAI,GAAS,EAAO,WAAW,EAAS,EAAM,GAAI,GAGlD,MAAK,GAII,CAAC,OAAQ,GAHT,CAAC,cAAe,EAAQ,MAAO,MAiB9C,sBAAuB,UAAiC,CACtD,KAAK,KAAK,CAAC,KAAK,UAAU,oBAAqB,IAAK,KAAK,WAAY,KAAM,KAAK,YAAY,GAAI,OAWlG,gBAAiB,SAAyB,EAAQ,EAAM,CACtD,KAAK,cACL,KAAK,WAAW,GAIZ,IAAS,iBACX,CAAI,MAAO,IAAW,SACpB,KAAK,WAAW,GAEhB,KAAK,iBAAiB,KAK5B,UAAW,SAAmB,EAAW,CACvC,AAAI,KAAK,UACP,KAAK,KAAK,MAER,KAAK,cACP,MAAK,KAAK,MACV,KAAK,KAAK,OAEZ,KAAK,iBAAiB,EAAY,YAAc,OAElD,SAAU,UAAoB,CAC5B,AAAI,KAAK,MACP,KAAK,OAAO,KAAK,KAAK,MAExB,KAAK,KAAO,CAAE,OAAQ,GAAI,MAAO,GAAI,SAAU,GAAI,IAAK,KAE1D,QAAS,UAAmB,CAC1B,GAAI,GAAO,KAAK,KAChB,KAAK,KAAO,KAAK,OAAO,MAEpB,KAAK,UACP,KAAK,KAAK,KAAK,cAAc,EAAK,MAEhC,KAAK,cACP,MAAK,KAAK,KAAK,cAAc,EAAK,WAClC,KAAK,KAAK,KAAK,cAAc,EAAK,SAGpC,KAAK,KAAK,KAAK,cAAc,EAAK,UASpC,WAAY,SAAoB,EAAQ,CACtC,KAAK,iBAAiB,KAAK,aAAa,KAW1C,YAAa,SAAqB,EAAO,CACvC,KAAK,iBAAiB,IAWxB,YAAa,SAAqB,EAAM,CACtC,AAAI,GAAQ,KACV,KAAK,iBAAiB,KAAK,kBAAkB,IAE7C,KAAK,iBAAiB,OAW1B,kBAAmB,SAA2B,EAAW,EAAM,CAC7D,GAAI,GAAiB,KAAK,WAAW,aAAc,EAAM,aACrD,EAAU,KAAK,gBAAgB,EAAM,GAEzC,KAAK,WAAW,KAAK,CAAC,QAAS,KAAK,WAAW,aAAa,EAAgB,GAAI,CAAC,KAAM,QAAS,YAAa,IAAW,aAY1H,aAAc,SAAsB,EAAW,EAAM,EAAU,CAC7D,GAAI,GAAY,KAAK,WACjB,EAAS,KAAK,YAAY,EAAW,GAErC,EAAwB,GAE5B,AAAI,GAEF,EAAsB,KAAK,EAAO,MAGpC,EAAsB,KAAK,GACtB,KAAK,QAAQ,QAChB,EAAsB,KAAK,KAAK,UAAU,kCAG5C,GAAI,GAAqB,CAAC,IAAK,KAAK,iBAAiB,EAAuB,MAAO,KAC/E,EAAe,KAAK,OAAO,aAAa,EAAoB,OAAQ,EAAO,YAC/E,KAAK,KAAK,IAGZ,iBAAkB,SAA0B,EAAO,EAAW,CAC5D,GAAI,GAAS,GACb,EAAO,KAAK,EAAM,IAClB,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,IAChC,EAAO,KAAK,EAAW,EAAM,IAE/B,MAAO,IAST,kBAAmB,SAA2B,EAAW,EAAM,CAC7D,GAAI,GAAS,KAAK,YAAY,EAAW,GACzC,KAAK,KAAK,KAAK,OAAO,aAAa,EAAO,KAAM,OAAQ,EAAO,cAejE,gBAAiB,SAAyB,EAAM,EAAY,CAC1D,KAAK,YAAY,UAEjB,GAAI,GAAY,KAAK,WAErB,KAAK,YACL,GAAI,GAAS,KAAK,YAAY,EAAG,EAAM,GAEnC,EAAa,KAAK,WAAa,KAAK,WAAW,UAAW,EAAM,UAEhE,EAAS,CAAC,IAAK,aAAc,EAAY,OAAQ,EAAW,KAChE,AAAK,KAAK,QAAQ,QAChB,GAAO,GAAK,aACZ,EAAO,KAAK,uBAAwB,KAAK,UAAU,mCAGrD,KAAK,KAAK,CAAC,IAAK,EAAQ,EAAO,WAAa,CAAC,MAAO,EAAO,YAAc,GAAI,KAAM,sBAAuB,KAAK,UAAU,cAAe,MAAO,KAAK,OAAO,aAAa,SAAU,OAAQ,EAAO,YAAa,iBAUhN,cAAe,SAAuB,EAAW,EAAM,EAAQ,CAC7D,GAAI,GAAS,GACT,EAAU,KAAK,YAAY,EAAM,EAAG,GAExC,AAAI,GACF,GAAO,KAAK,WACZ,MAAO,GAAQ,MAGb,GACF,GAAQ,OAAS,KAAK,UAAU,IAElC,EAAQ,QAAU,UAClB,EAAQ,SAAW,WACnB,EAAQ,WAAa,uBAErB,AAAK,EAGH,EAAO,QAAQ,GAFf,EAAO,QAAQ,KAAK,WAAW,WAAY,EAAM,YAK/C,KAAK,QAAQ,QACf,GAAQ,OAAS,UAEnB,EAAU,KAAK,cAAc,GAC7B,EAAO,KAAK,GAEZ,KAAK,KAAK,KAAK,OAAO,aAAa,0BAA2B,GAAI,KASpE,aAAc,SAAsB,EAAK,CACvC,GAAI,GAAQ,KAAK,WACb,EAAU,OACV,EAAO,OACP,EAAK,OAET,AAAI,KAAK,UACP,GAAK,KAAK,YAER,KAAK,cACP,GAAO,KAAK,WACZ,EAAU,KAAK,YAGjB,GAAI,GAAO,KAAK,KAChB,AAAI,GACF,GAAK,SAAS,GAAO,GAEnB,GACF,GAAK,MAAM,GAAO,GAEhB,GACF,GAAK,IAAI,GAAO,GAElB,EAAK,OAAO,GAAO,GAGrB,OAAQ,SAAgB,EAAM,EAAM,EAAO,CACzC,AAAI,IAAS,aACX,KAAK,iBAAiB,eAAiB,EAAK,GAAK,UAAY,EAAK,GAAK,IAAO,GAAQ,MAAQ,KAAK,UAAU,IAAM,GAAS,KACvH,AAAI,IAAS,iBAClB,KAAK,WAAW,GACX,AAAI,IAAS,gBAClB,KAAK,iBAAiB,QAEtB,KAAK,iBAAiB,SAM1B,SAAU,EAEV,gBAAiB,SAAyB,EAAa,EAAS,CAK9D,OAJI,GAAW,EAAY,SACvB,EAAQ,OACR,EAAW,OAEN,EAAI,EAAG,EAAI,EAAS,OAAQ,EAAI,EAAG,IAAK,CAC/C,EAAQ,EAAS,GACjB,EAAW,GAAI,MAAK,SAEpB,GAAI,GAAW,KAAK,qBAAqB,GAEzC,GAAI,GAAY,KAAM,CACpB,KAAK,QAAQ,SAAS,KAAK,IAC3B,GAAI,GAAQ,KAAK,QAAQ,SAAS,OAClC,EAAM,MAAQ,EACd,EAAM,KAAO,UAAY,EACzB,KAAK,QAAQ,SAAS,GAAS,EAAS,QAAQ,EAAO,EAAS,KAAK,QAAS,CAAC,KAAK,YACpF,KAAK,QAAQ,WAAW,GAAS,EAAS,WAC1C,KAAK,QAAQ,aAAa,GAAS,EAEnC,KAAK,UAAY,KAAK,WAAa,EAAS,UAC5C,KAAK,eAAiB,KAAK,gBAAkB,EAAS,eACtD,EAAM,UAAY,KAAK,UACvB,EAAM,eAAiB,KAAK,mBAE5B,GAAM,MAAQ,EAAS,MACvB,EAAM,KAAO,UAAY,EAAS,MAElC,KAAK,UAAY,KAAK,WAAa,EAAS,UAC5C,KAAK,eAAiB,KAAK,gBAAkB,EAAS,iBAI5D,qBAAsB,SAA8B,EAAO,CACzD,OAAS,GAAI,EAAG,EAAM,KAAK,QAAQ,aAAa,OAAQ,EAAI,EAAK,IAAK,CACpE,GAAI,GAAc,KAAK,QAAQ,aAAa,GAC5C,GAAI,GAAe,EAAY,OAAO,GACpC,MAAO,KAKb,kBAAmB,SAA2B,EAAM,CAClD,GAAI,GAAQ,KAAK,YAAY,SAAS,GAClC,EAAgB,CAAC,EAAM,MAAO,OAAQ,EAAM,aAEhD,MAAI,MAAK,gBAAkB,KAAK,YAC9B,EAAc,KAAK,eAEjB,KAAK,WACP,EAAc,KAAK,UAGd,qBAAuB,EAAc,KAAK,MAAQ,KAG3D,YAAa,SAAqB,EAAM,CACtC,AAAK,KAAK,UAAU,IAClB,MAAK,UAAU,GAAQ,GACvB,KAAK,UAAU,KAAK,KAAK,KAI7B,KAAM,SAAc,EAAM,CACxB,MAAM,aAAgB,IACpB,GAAO,KAAK,OAAO,KAAK,IAG1B,KAAK,YAAY,KAAK,GACf,GAGT,iBAAkB,SAA0B,EAAM,CAChD,KAAK,KAAK,GAAI,GAAQ,KAGxB,WAAY,SAAoB,EAAQ,CACtC,AAAI,KAAK,gBACP,MAAK,OAAO,KAAK,KAAK,eAAe,KAAK,OAAO,aAAa,KAAK,gBAAiB,KAAK,kBACzF,KAAK,eAAiB,QAGpB,GACF,KAAK,OAAO,KAAK,IAIrB,aAAc,SAAsB,EAAU,CAC5C,GAAI,GAAS,CAAC,KACV,EAAQ,OACR,EAAe,OACf,EAAc,OAGlB,GAAI,CAAC,KAAK,WACR,KAAM,IAAI,GAAY,QAAW,8BAInC,GAAI,GAAM,KAAK,SAAS,IAExB,GAAI,YAAe,GAEjB,EAAQ,CAAC,EAAI,OACb,EAAS,CAAC,IAAK,GACf,EAAc,OACT,CAEL,EAAe,GACf,GAAI,GAAQ,KAAK,YAEjB,EAAS,CAAC,KAAM,KAAK,KAAK,GAAQ,MAAO,EAAK,KAC9C,EAAQ,KAAK,WAGf,GAAI,GAAO,EAAS,KAAK,KAAM,GAE/B,AAAK,GACH,KAAK,WAEH,GACF,KAAK,YAEP,KAAK,KAAK,EAAO,OAAO,EAAM,OAGhC,UAAW,UAAqB,CAC9B,YAAK,YACD,KAAK,UAAY,KAAK,UAAU,QAClC,KAAK,UAAU,KAAK,QAAU,KAAK,WAE9B,KAAK,gBAEd,aAAc,UAAwB,CACpC,MAAO,QAAU,KAAK,WAExB,YAAa,UAAuB,CAClC,GAAI,GAAc,KAAK,YACvB,KAAK,YAAc,GACnB,OAAS,GAAI,EAAG,EAAM,EAAY,OAAQ,EAAI,EAAK,IAAK,CACtD,GAAI,GAAQ,EAAY,GAExB,GAAI,YAAiB,GACnB,KAAK,aAAa,KAAK,OAClB,CACL,GAAI,GAAQ,KAAK,YACjB,KAAK,WAAW,CAAC,EAAO,MAAO,EAAO,MACtC,KAAK,aAAa,KAAK,MAI7B,SAAU,UAAoB,CAC5B,MAAO,MAAK,YAAY,QAG1B,SAAU,SAAkB,EAAS,CACnC,GAAI,GAAS,KAAK,WACd,EAAQ,GAAS,KAAK,YAAc,KAAK,cAAc,MAE3D,GAAI,CAAC,GAAW,YAAgB,GAC9B,MAAO,GAAK,MAEZ,GAAI,CAAC,EAAQ,CAEX,GAAI,CAAC,KAAK,UACR,KAAM,IAAI,GAAY,QAAW,qBAEnC,KAAK,YAEP,MAAO,IAIX,SAAU,UAAoB,CAC5B,GAAI,GAAQ,KAAK,WAAa,KAAK,YAAc,KAAK,aAClD,EAAO,EAAM,EAAM,OAAS,GAGhC,MAAI,aAAgB,GACX,EAAK,MAEL,GAIX,YAAa,SAAqB,EAAS,CACzC,MAAI,MAAK,WAAa,EACb,UAAY,EAAU,IAEtB,QAAU,GAIrB,aAAc,SAAsB,EAAK,CACvC,MAAO,MAAK,OAAO,aAAa,IAGlC,cAAe,SAAuB,EAAK,CACzC,MAAO,MAAK,OAAO,cAAc,IAGnC,UAAW,SAAmB,EAAM,CAClC,GAAI,GAAM,KAAK,QAAQ,GACvB,MAAI,GACF,GAAI,iBACG,GAGT,GAAM,KAAK,QAAQ,GAAQ,KAAK,OAAO,KAAK,GAC5C,EAAI,UAAY,GAChB,EAAI,eAAiB,EAEd,IAGT,YAAa,SAAqB,EAAW,EAAM,EAAa,CAC9D,GAAI,GAAS,GACT,EAAa,KAAK,gBAAgB,EAAM,EAAW,EAAQ,GAC3D,EAAc,KAAK,WAAW,UAAW,EAAM,UAC/C,EAAc,KAAK,UAAU,KAAK,YAAY,GAAK,cAAgB,KAAK,YAAY,GAAK,oCAE7F,MAAO,CACL,OAAQ,EACR,WAAY,EACZ,KAAM,EACN,WAAY,CAAC,GAAa,OAAO,KAIrC,YAAa,SAAqB,EAAQ,EAAW,EAAQ,CAC3D,GAAI,GAAU,GACV,EAAW,GACX,EAAQ,GACR,EAAM,GACN,EAAa,CAAC,EACd,EAAQ,OAEZ,AAAI,GACF,GAAS,IAGX,EAAQ,KAAO,KAAK,aAAa,GACjC,EAAQ,KAAO,KAAK,WAEhB,KAAK,UACP,GAAQ,QAAU,KAAK,YAErB,KAAK,cACP,GAAQ,UAAY,KAAK,WACzB,EAAQ,aAAe,KAAK,YAG9B,GAAI,GAAU,KAAK,WACf,EAAU,KAAK,WAInB,AAAI,IAAW,IACb,GAAQ,GAAK,GAAW,iBACxB,EAAQ,QAAU,GAAW,kBAM/B,OADI,GAAI,EACD,KACL,EAAQ,KAAK,WACb,EAAO,GAAK,EAER,KAAK,UACP,GAAI,GAAK,KAAK,YAEZ,KAAK,cACP,GAAM,GAAK,KAAK,WAChB,EAAS,GAAK,KAAK,YAIvB,MAAI,IACF,GAAQ,KAAO,KAAK,OAAO,cAAc,IAGvC,KAAK,UACP,GAAQ,IAAM,KAAK,OAAO,cAAc,IAEtC,KAAK,cACP,GAAQ,MAAQ,KAAK,OAAO,cAAc,GAC1C,EAAQ,SAAW,KAAK,OAAO,cAAc,IAG3C,KAAK,QAAQ,MACf,GAAQ,KAAO,QAEb,KAAK,gBACP,GAAQ,YAAc,eAEjB,GAGT,gBAAiB,SAAyB,EAAQ,EAAW,EAAQ,EAAa,CAChF,GAAI,GAAU,KAAK,YAAY,EAAQ,EAAW,GAGlD,MAFA,GAAQ,IAAM,KAAK,UAAU,KAAK,OAAO,iBACzC,EAAU,KAAK,cAAc,GACzB,EACF,MAAK,YAAY,WACjB,EAAO,KAAK,WACL,CAAC,WAAY,IACX,EACT,GAAO,KAAK,GACL,IAEA,IAKZ,UAAY,CAKX,OAJI,GAAiB,wZAAoe,MAAM,KAE3f,EAAgB,EAAmB,eAAiB,GAE/C,EAAI,EAAG,EAAI,EAAc,OAAQ,EAAI,EAAG,IAC/C,EAAc,EAAc,IAAM,MAOtC,EAAmB,8BAAgC,SAAU,EAAM,CACjE,MAAO,CAAC,EAAmB,eAAe,IAAS,6BAA6B,KAAK,IAGvF,WAAsB,EAAiB,EAAU,EAAO,EAAM,CAC5D,GAAI,GAAQ,EAAS,WACjB,EAAI,EACJ,EAAM,EAAM,OAKhB,IAJI,GACF,IAGK,EAAI,EAAK,IACd,EAAQ,EAAS,WAAW,EAAO,EAAM,GAAI,GAG/C,MAAI,GACK,CAAC,EAAS,UAAU,oBAAqB,IAAK,EAAO,KAAM,EAAS,aAAa,EAAM,IAAK,KAAM,KAAK,UAAU,EAAS,OAAO,iBAAkB,MAEnJ,EAIX,EAAQ,QAAa,EACrB,UAAiB,EAAQ,wECnoCzB,aAAqB,GAGrB,WAAgC,EAAK,CAAE,MAAO,IAAO,EAAI,WAAa,EAAM,CAAE,QAAW,GAEzF,GAAI,GAAqBvB,2BAErB,EAAsB,EAAuB,GAI7C,EAAyBqB,YAEzB,EAA0B,EAAuB,GAEjD,EAA0BC,KAE1B,EAA8BC,SAE9B,EAAwCC,2BAExC,EAAyC,EAAuB,GAEhE,EAA6BC,gBAE7B,EAA8B,EAAuB,GAErD,EAAwBM,mBAExB,EAAyB,EAAuB,GAEhD,EAAU,EAAoB,QAAW,OAC7C,YAAkB,CAChB,GAAI,GAAK,IAET,SAAG,QAAU,SAAU,EAAO,EAAS,CACrC,MAAO,GAA4B,QAAQ,EAAO,EAAS,IAE7D,EAAG,WAAa,SAAU,EAAO,EAAS,CACxC,MAAO,GAA4B,WAAW,EAAO,EAAS,IAGhE,EAAG,IAAM,EAAwB,QACjC,EAAG,SAAW,EAA4B,SAC1C,EAAG,mBAAqB,EAAuC,QAC/D,EAAG,OAAS,EAAwB,OACpC,EAAG,MAAQ,EAAwB,MACnC,EAAG,uBAAyB,EAAwB,uBAE7C,EAGT,GAAI,GAAO,IACX,EAAK,OAAS,EAEd,EAAuB,QAAW,GAElC,EAAK,QAAU,EAA4B,QAE3C,EAAK,QAAa,EAElB,EAAQ,QAAa,EACrB,UAAiB,EAAQ,yCC9DzB,GAAI,KAAM,KAAK,GAAK,IAChB,IAAM,IAAM,KAAK,GAYrB,oBAAoB,EAAM,CACtB,GAAI,GAAI,SAAS,EAAK,GAAK,EAAG,EAAK,IAC/B,EAAI,SAAS,EAAK,GAAI,EAAK,IAC3B,EAAI,SAAS,EAAK,GAAK,EAAG,EAAK,IAC/B,EAAI,SAAS,EAAK,GAAI,EAAK,IAC/B,MAAO,CAAC,EAAG,EAAG,EAAG,GAarB,uBAAuB,EAAM,CACzB,GAAI,GAAO,WAAW,GAClB,EAAO,CACP,KAAM,UACN,YAAa,CAAC,CACV,CAAC,EAAK,GAAI,EAAK,IACf,CAAC,EAAK,GAAI,EAAK,IACf,CAAC,EAAK,GAAI,EAAK,IACf,CAAC,EAAK,GAAI,EAAK,IACf,CAAC,EAAK,GAAI,EAAK,OAGvB,MAAO,GAGX,kBAAkB,EAAG,EAAG,CACpB,MAAO,GAAI,KAAK,IAAI,EAAG,GAAK,IAAM,IAGtC,kBAAkB,EAAG,EAAG,CACpB,GAAI,GAAI,KAAK,GAAK,EAAI,KAAK,GAAK,EAAI,KAAK,IAAI,EAAG,GAChD,MAAO,KAAM,KAAK,KAAK,GAAO,MAAK,IAAI,GAAK,KAAK,IAAI,CAAC,KAe1D,qBAAqB,EAAK,EAAK,EAAG,CAC9B,GAAI,GAAO,oBAAoB,EAAK,EAAK,GACzC,SAAK,GAAK,KAAK,MAAM,EAAK,IAC1B,EAAK,GAAK,KAAK,MAAM,EAAK,IACnB,EAaX,qBAAqB,EAAM,CACvB,MAAO,CACH,CAAC,EAAK,GAAK,EAAG,EAAK,GAAK,EAAG,EAAK,GAAK,GACrC,CAAC,EAAK,GAAK,EAAI,EAAG,EAAK,GAAK,EAAG,EAAK,GAAM,GAC1C,CAAC,EAAK,GAAK,EAAI,EAAG,EAAK,GAAK,EAAI,EAAG,EAAK,GAAK,GAC7C,CAAC,EAAK,GAAK,EAAG,EAAK,GAAK,EAAI,EAAG,EAAK,GAAK,IAcjD,mBAAmB,EAAM,CACrB,MAAO,CAAC,EAAK,IAAM,EAAG,EAAK,IAAM,EAAG,EAAK,GAAK,GAGlD,qBAAqB,EAAM,CACvB,MAAO,aAAY,UAAU,IAajC,qBAAqB,EAAM,EAAO,CAE9B,OADI,GAAW,YAAY,GAClB,EAAI,EAAG,EAAI,EAAS,OAAQ,IACjC,GAAI,CAAC,QAAQ,EAAO,EAAS,IAAK,MAAO,GAE7C,MAAO,GAoBX,iBAAiB,EAAO,EAAM,CAC1B,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,IAC9B,GAAI,WAAW,EAAM,GAAI,GAAO,MAAO,GAE3C,MAAO,GAcX,oBAAoB,EAAO,EAAO,CAC9B,MACI,GAAM,KAAO,EAAM,IACnB,EAAM,KAAO,EAAM,IACnB,EAAM,KAAO,EAAM,GAc3B,uBAAuB,EAAM,CAEzB,OADI,GAAQ,GACH,EAAI,EAAK,GAAI,EAAI,EAAG,IAAK,CAC9B,GAAI,GAAI,EACJ,EAAO,GAAM,EAAI,EACrB,AAAK,GAAK,GAAK,IAAU,GAAG,IACvB,GAAK,GAAK,IAAU,GAAG,IAAK,GACjC,GAAS,EAAE,WAEf,MAAO,GAaX,uBAAuB,EAAS,CAK5B,OAJI,GAAI,EACJ,EAAI,EACJ,EAAI,EAAQ,OAEP,EAAI,EAAG,EAAI,EAAG,IAAK,CACxB,GAAI,GAAO,GAAM,EAAI,EACjB,EAAI,CAAC,EAAQ,EAAI,GACrB,AAAI,IAAM,GAAG,IAAK,GACd,IAAM,GAAG,IAAK,GACd,IAAM,GACN,IAAK,EACL,GAAK,GAGb,MAAO,CAAC,EAAG,EAAG,GAalB,oBAAoB,EAAY,CAC5B,GAAI,GAAM,YAAY,EAAW,GAAI,EAAW,GAAI,IAChD,EAAM,YAAY,EAAW,GAAI,EAAW,GAAI,IAChD,EAAO,CAAC,EAAI,GAAI,EAAI,GAAI,EAAI,GAAI,EAAI,IAEpC,EAAI,YAAY,GACpB,GAAI,IAAM,EAAG,MAAO,CAAC,EAAG,EAAG,GAC3B,GAAI,GAAI,EAAK,KAAQ,GAAK,EACtB,EAAI,EAAK,KAAQ,GAAK,EAC1B,MAAO,CAAC,EAAG,EAAG,GAGlB,qBAAqB,EAAM,CAEvB,OADI,GAAW,GACN,EAAI,EAAG,EAAI,EAAU,IAAK,CAC/B,GAAI,GAAO,GAAM,GAAM,GAAI,GAC3B,GAAM,GAAK,GAAK,IAAW,GAAK,GAAK,IAC/B,GAAK,GAAK,IAAW,GAAK,GAAK,GACjC,MAAO,GAIf,MAAO,GAcX,6BAA6B,EAAK,EAAK,EAAG,CACtC,GAAI,GAAM,KAAK,IAAI,EAAM,KACrB,EAAK,KAAK,IAAI,EAAG,GACjB,EAAI,EAAM,GAAM,IAAM,IACtB,EAAI,EAAM,IAAM,IAAO,KAAK,IAAK,GAAI,GAAQ,GAAI,IAAQ,KAAK,IAGlE,SAAI,EAAI,EACJ,EAAI,GAAG,GAAI,EAAI,GACZ,CAAC,EAAG,EAAG,MAGlB,UAAiB,CACb,cACA,WACA,YACA,UACA,YACA,QACA,YACA,WACA,cACA,cACA,YACA,WACA,qBCrSJ,cAAiBY,QAcjB,iBAAe,EAAG,EAAG,CACjB,KAAK,EAAI,EACT,KAAK,EAAI,EAGbA,QAAM,UAAY,CAOd,MAAO,UAAW,CAAE,MAAO,IAAIA,SAAM,KAAK,EAAG,KAAK,IAQlD,IAAS,SAAS,EAAG,CAAE,MAAO,MAAK,QAAQ,KAAK,IAQhD,IAAS,SAAS,EAAG,CAAE,MAAO,MAAK,QAAQ,KAAK,IAQhD,YAAgB,SAAS,EAAG,CAAE,MAAO,MAAK,QAAQ,aAAa,IAQ/D,WAAgB,SAAS,EAAG,CAAE,MAAO,MAAK,QAAQ,YAAY,IAQ9D,KAAS,SAAS,EAAG,CAAE,MAAO,MAAK,QAAQ,MAAM,IAQjD,IAAS,SAAS,EAAG,CAAE,MAAO,MAAK,QAAQ,KAAK,IAQhD,OAAS,SAAS,EAAG,CAAE,MAAO,MAAK,QAAQ,QAAQ,IASnD,aAAe,SAAS,EAAE,EAAG,CAAE,MAAO,MAAK,QAAQ,cAAc,EAAE,IAOnE,QAAS,SAAS,EAAG,CAAE,MAAO,MAAK,QAAQ,SAAS,IASpD,KAAS,UAAW,CAAE,MAAO,MAAK,QAAQ,SAQ1C,KAAS,UAAW,CAAE,MAAO,MAAK,QAAQ,SAO1C,MAAS,UAAW,CAAE,MAAO,MAAK,QAAQ,UAQ1C,IAAK,UAAW,CACZ,MAAO,MAAK,KAAK,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,IASrD,OAAQ,SAAS,EAAO,CACpB,MAAO,MAAK,IAAM,EAAM,GACjB,KAAK,IAAM,EAAM,GAQ5B,KAAM,SAAS,EAAG,CACd,MAAO,MAAK,KAAK,KAAK,QAAQ,KAUlC,QAAS,SAAS,EAAG,CACjB,GAAI,GAAK,EAAE,EAAI,KAAK,EAChB,EAAK,EAAE,EAAI,KAAK,EACpB,MAAO,GAAK,EAAK,EAAK,GAQ1B,MAAO,UAAW,CACd,MAAO,MAAK,MAAM,KAAK,EAAG,KAAK,IAQnC,QAAS,SAAS,EAAG,CACjB,MAAO,MAAK,MAAM,KAAK,EAAI,EAAE,EAAG,KAAK,EAAI,EAAE,IAQ/C,UAAW,SAAS,EAAG,CACnB,MAAO,MAAK,aAAa,EAAE,EAAG,EAAE,IAUpC,aAAc,SAAS,EAAG,EAAG,CACzB,MAAO,MAAK,MACR,KAAK,EAAI,EAAI,KAAK,EAAI,EACtB,KAAK,EAAI,EAAI,KAAK,EAAI,IAG9B,SAAU,SAAS,EAAG,CAClB,GAAI,GAAI,EAAE,GAAK,KAAK,EAAI,EAAE,GAAK,KAAK,EAChC,EAAI,EAAE,GAAK,KAAK,EAAI,EAAE,GAAK,KAAK,EACpC,YAAK,EAAI,EACT,KAAK,EAAI,EACF,MAGX,KAAM,SAAS,EAAG,CACd,YAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACL,MAGX,KAAM,SAAS,EAAG,CACd,YAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACL,MAGX,MAAO,SAAS,EAAG,CACf,YAAK,GAAK,EACV,KAAK,GAAK,EACH,MAGX,KAAM,SAAS,EAAG,CACd,YAAK,GAAK,EACV,KAAK,GAAK,EACH,MAGX,aAAc,SAAS,EAAG,CACtB,YAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACL,MAGX,YAAa,SAAS,EAAG,CACrB,YAAK,GAAK,EAAE,EACZ,KAAK,GAAK,EAAE,EACL,MAGX,MAAO,UAAW,CACd,YAAK,KAAK,KAAK,OACR,MAGX,MAAO,UAAW,CACd,GAAI,GAAI,KAAK,EACb,YAAK,EAAI,KAAK,EACd,KAAK,EAAI,CAAC,EACH,MAGX,QAAS,SAAS,EAAO,CACrB,GAAI,GAAM,KAAK,IAAI,GACf,EAAM,KAAK,IAAI,GACf,EAAI,EAAM,KAAK,EAAI,EAAM,KAAK,EAC9B,EAAI,EAAM,KAAK,EAAI,EAAM,KAAK,EAClC,YAAK,EAAI,EACT,KAAK,EAAI,EACF,MAGX,cAAe,SAAS,EAAO,EAAG,CAC9B,GAAI,GAAM,KAAK,IAAI,GACf,EAAM,KAAK,IAAI,GACf,EAAI,EAAE,EAAI,EAAO,MAAK,EAAI,EAAE,GAAK,EAAO,MAAK,EAAI,EAAE,GACnD,EAAI,EAAE,EAAI,EAAO,MAAK,EAAI,EAAE,GAAK,EAAO,MAAK,EAAI,EAAE,GACvD,YAAK,EAAI,EACT,KAAK,EAAI,EACF,MAGX,OAAQ,UAAW,CACf,YAAK,EAAI,KAAK,MAAM,KAAK,GACzB,KAAK,EAAI,KAAK,MAAM,KAAK,GAClB,OAefA,QAAM,QAAU,SAAU,EAAG,CACzB,MAAI,aAAaA,SACN,EAEP,MAAM,QAAQ,GACP,GAAIA,SAAM,EAAE,GAAI,EAAE,IAEtB,GCpTX,GAAI,OAAQ3C,cAEZ,kBAAiB4C,oBAEjB,6BAA2B,EAAK,EAAK,EAAQ,EAAM,EAAQ,CAEvD,KAAK,WAAa,GAClB,KAAK,OAAS,EACd,KAAK,KAAO,EAGZ,KAAK,KAAO,EACZ,KAAK,UAAY,GACjB,KAAK,MAAQ,EACb,KAAK,QAAU,EAEf,EAAI,WAAW,YAAa,KAAM,GAGtC,qBAAqB,EAAK,EAAS,EAAK,CACpC,AAAI,GAAO,EAAG,EAAQ,GAAK,EAAI,aAC1B,AAAI,GAAO,EAAG,QAAQ,EAAK,GAC3B,AAAI,GAAO,EAAG,EAAQ,KAAO,EAAI,aAC7B,GAAO,GAAG,GAAQ,UAAY,EAAI,KAG/C,iBAAiB,EAAK,EAAS,CAG3B,OAFI,GAAM,EAAI,aAAe,EAAI,IAE1B,EAAI,IAAM,GAAK,CAClB,GAAI,GAAM,EAAQ,MAAM,EAAI,cACxB,EAAQ,EAAQ,QAAQ,EAAI,cAChC,EAAQ,WAAW,GAAO,GAIlCA,oBAAkB,MAAQ,CAAC,UAAW,QAAS,aAAc,WAE7DA,oBAAkB,UAAU,aAAe,UAAW,CAClD,GAAI,GAAM,KAAK,KACf,EAAI,IAAM,KAAK,UAUf,OARI,GAAM,EAAI,aAAe,EAAI,IAC7B,EAAM,EACN,EAAS,EACT,EAAI,EACJ,EAAI,EACJ,EAAQ,GACR,EAEG,EAAI,IAAM,GAAK,CAClB,GAAI,GAAU,EAAG,CACb,GAAI,GAAS,EAAI,aACjB,EAAM,EAAS,EACf,EAAS,GAAU,EAKvB,GAFA,IAEI,IAAQ,GAAK,IAAQ,EACrB,GAAK,EAAI,cACT,GAAK,EAAI,cAEL,IAAQ,GACJ,IAAM,EAAM,KAAK,GACrB,EAAO,IAGX,EAAK,KAAK,GAAI,OAAM,EAAG,YAEhB,IAAQ,EAGf,AAAI,GACA,EAAK,KAAK,EAAK,GAAG,aAItB,MAAM,IAAI,OAAM,mBAAqB,GAI7C,MAAI,IAAM,EAAM,KAAK,GAEd,GAGXA,oBAAkB,UAAU,KAAO,UAAW,CAC1C,GAAI,GAAM,KAAK,KACf,EAAI,IAAM,KAAK,UAYf,OAVI,GAAM,EAAI,aAAe,EAAI,IAC7B,EAAM,EACN,EAAS,EACT,EAAI,EACJ,EAAI,EACJ,EAAK,IACL,EAAK,KACL,EAAK,IACL,EAAK,KAEF,EAAI,IAAM,GAAK,CAClB,GAAI,GAAU,EAAG,CACb,GAAI,GAAS,EAAI,aACjB,EAAM,EAAS,EACf,EAAS,GAAU,EAKvB,GAFA,IAEI,IAAQ,GAAK,IAAQ,EACrB,GAAK,EAAI,cACT,GAAK,EAAI,cACL,EAAI,GAAI,GAAK,GACb,EAAI,GAAI,GAAK,GACb,EAAI,GAAI,GAAK,GACb,EAAI,GAAI,GAAK,WAEV,IAAQ,EACf,KAAM,IAAI,OAAM,mBAAqB,GAI7C,MAAO,CAAC,EAAI,EAAI,EAAI,IAGxBA,oBAAkB,UAAU,UAAY,SAAS,EAAG,EAAG,EAAG,CACtD,GAAI,GAAO,KAAK,OAAS,KAAK,IAAI,EAAG,GACjC,EAAK,KAAK,OAAS,EACnB,EAAK,KAAK,OAAS,EACnB,EAAS,KAAK,eACd,EAAOA,oBAAkB,MAAM,KAAK,MACpC,EAAG,EAEP,WAAiB,EAAM,CACnB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CAClC,GAAI,GAAI,EAAK,GAAI,EAAK,IAAO,GAAE,EAAI,GAAM,IAAM,EAC/C,EAAK,GAAK,CACL,GAAE,EAAI,GAAM,IAAM,EAAO,IAC1B,IAAM,KAAK,GAAK,KAAK,KAAK,KAAK,IAAI,EAAK,KAAK,GAAK,MAAQ,KAKtE,OAAQ,KAAK,UACR,GACD,GAAI,GAAS,GACb,IAAK,EAAI,EAAG,EAAI,EAAO,OAAQ,IAC3B,EAAO,GAAK,EAAO,GAAG,GAE1B,EAAS,EACT,EAAQ,GACR,UAEC,GACD,IAAK,EAAI,EAAG,EAAI,EAAO,OAAQ,IAC3B,EAAQ,EAAO,IAEnB,UAEC,GAED,IADA,EAAS,cAAc,GAClB,EAAI,EAAG,EAAI,EAAO,OAAQ,IAC3B,IAAK,EAAI,EAAG,EAAI,EAAO,GAAG,OAAQ,IAC9B,EAAQ,EAAO,GAAG,IAG1B,MAGJ,AAAI,EAAO,SAAW,EAClB,EAAS,EAAO,GAEhB,EAAO,QAAU,EAGrB,GAAI,GAAS,CACT,KAAM,UACN,SAAU,CACN,KAAM,EACN,YAAa,GAEjB,WAAY,KAAK,YAGrB,MAAI,MAAQ,OACR,GAAO,GAAK,KAAK,IAGd,GAKX,uBAAuB,EAAO,CAC1B,GAAI,GAAM,EAAM,OAEhB,GAAI,GAAO,EAAG,MAAO,CAAC,GAMtB,OAJI,GAAW,GACX,EACA,EAEK,EAAI,EAAG,EAAI,EAAK,IAAK,CAC1B,GAAI,GAAO,WAAW,EAAM,IAC5B,AAAI,IAAS,GAET,KAAQ,QAAW,GAAM,EAAO,GAEpC,AAAI,IAAQ,EAAO,EACX,IAAS,EAAS,KAAK,GAC3B,EAAU,CAAC,EAAM,KAGjB,EAAQ,KAAK,EAAM,KAG3B,MAAI,IAAS,EAAS,KAAK,GAEpB,EAGX,oBAAoB,EAAM,CAEtB,OADI,GAAM,EACD,EAAI,EAAG,EAAM,EAAK,OAAQ,EAAI,EAAM,EAAG,EAAI,EAAI,EAAI,EAAK,EAAI,IACjE,EAAK,EAAK,GACV,EAAK,EAAK,GACV,GAAQ,GAAG,EAAI,EAAG,GAAM,GAAG,EAAI,EAAG,GAEtC,MAAO,GCrOX,GAAI,mBAAoB5C,kBAExB,gBAAiB6C,kBAEjB,2BAAyB,EAAK,EAAK,CAE/B,KAAK,QAAU,EACf,KAAK,KAAO,KACZ,KAAK,OAAS,KACd,KAAK,OAAS,EAGd,KAAK,KAAO,EACZ,KAAK,MAAQ,GACb,KAAK,QAAU,GACf,KAAK,UAAY,GAEjB,EAAI,WAAW,UAAW,KAAM,GAEhC,KAAK,OAAS,KAAK,UAAU,OAGjC,mBAAmB,EAAK,EAAO,EAAK,CAChC,AAAI,IAAQ,GAAI,EAAM,QAAU,EAAI,aAC/B,AAAI,IAAQ,EAAG,EAAM,KAAO,EAAI,aAChC,AAAI,IAAQ,EAAG,EAAM,OAAS,EAAI,aAClC,AAAI,IAAQ,EAAG,EAAM,UAAU,KAAK,EAAI,KACxC,AAAI,IAAQ,EAAG,EAAM,MAAM,KAAK,EAAI,cAChC,IAAQ,GAAG,EAAM,QAAQ,KAAK,iBAAiB,IAG5D,0BAA0B,EAAK,CAI3B,OAHI,GAAQ,KACR,EAAM,EAAI,aAAe,EAAI,IAE1B,EAAI,IAAM,GAAK,CAClB,GAAI,GAAM,EAAI,cAAgB,EAE9B,EAAQ,IAAQ,EAAI,EAAI,aACpB,IAAQ,EAAI,EAAI,YAChB,IAAQ,EAAI,EAAI,aAChB,IAAQ,EAAI,EAAI,eAChB,IAAQ,EAAI,EAAI,aAChB,IAAQ,EAAI,EAAI,cAChB,IAAQ,EAAI,EAAI,cAAgB,KAGxC,MAAO,GAIXA,kBAAgB,UAAU,QAAU,SAAS,EAAG,CAC5C,GAAI,EAAI,GAAK,GAAK,KAAK,UAAU,OAAQ,KAAM,IAAI,OAAM,+BAEzD,KAAK,KAAK,IAAM,KAAK,UAAU,GAE/B,GAAI,GAAM,KAAK,KAAK,aAAe,KAAK,KAAK,IAC7C,MAAO,IAAI,mBAAkB,KAAK,KAAM,EAAK,KAAK,OAAQ,KAAK,MAAO,KAAK,UCzD/E,GAAI,iBAAkB7C,gBAEtB,WAAiB8C,aAEjB,sBAAoB,EAAK,EAAK,CAC1B,KAAK,OAAS,EAAI,WAAW,SAAU,GAAI,GAG/C,kBAAkB,EAAK,EAAQ,EAAK,CAChC,GAAI,IAAQ,EAAG,CACX,GAAI,GAAQ,GAAI,iBAAgB,EAAK,EAAI,aAAe,EAAI,KAC5D,AAAI,EAAM,QAAQ,GAAO,EAAM,MAAQ,mBCbnB9C,gICCb,SAAU,EAAQ,EAAQ,EAAM,EAAM,EAAQ,CAC3D,GAAI,GAAG,EACH,EAAQ,EAAS,EAAK,EAAO,EAC7B,EAAQ,IAAK,GAAQ,EACrB,EAAQ,GAAQ,EAChB,EAAQ,GACR,EAAI,EAAQ,EAAS,EAAK,EAC1B,EAAI,EAAO,GAAK,EAChB,EAAI,EAAO,EAAS,GAOxB,IALA,GAAK,EAEL,EAAI,EAAM,IAAM,CAAC,GAAU,EAC3B,IAAO,CAAC,EACR,GAAS,EACF,EAAQ,EAAG,EAAK,EAAI,IAAO,EAAO,EAAS,GAAI,GAAK,EAAG,GAAS,EAAG,CAK1E,IAHA,EAAI,EAAM,IAAM,CAAC,GAAU,EAC3B,IAAO,CAAC,EACR,GAAS,EACF,EAAQ,EAAG,EAAK,EAAI,IAAO,EAAO,EAAS,GAAI,GAAK,EAAG,GAAS,EAAG,CAE1E,GAAI,IAAM,EACR,EAAI,EAAI,MACH,IAAI,IAAM,EACf,MAAO,GAAI,IAAQ,GAAI,GAAK,GAAK,MAEjC,EAAI,EAAI,KAAK,IAAI,EAAG,GACpB,EAAI,EAAI,EAEV,MAAQ,GAAI,GAAK,GAAK,EAAI,KAAK,IAAI,EAAG,EAAI,oBAG5B,SAAU,EAAQ,EAAO,EAAQ,EAAM,EAAM,EAAQ,CACnE,GAAI,GAAG,EAAG,EACN,EAAQ,EAAS,EAAK,EAAO,EAC7B,EAAQ,IAAK,GAAQ,EACrB,EAAQ,GAAQ,EAChB,EAAM,IAAS,GAAK,KAAK,IAAI,EAAG,KAAO,KAAK,IAAI,EAAG,KAAO,EAC1D,EAAI,EAAO,EAAK,EAAS,EACzB,EAAI,EAAO,EAAI,GACf,EAAI,EAAQ,GAAM,IAAU,GAAK,EAAI,EAAQ,EAAK,EAAI,EAmC1D,IAjCA,EAAQ,KAAK,IAAI,GAEjB,AAAI,MAAM,IAAU,IAAU,IAC5B,GAAI,MAAM,GAAS,EAAI,EACvB,EAAI,GAEJ,GAAI,KAAK,MAAM,KAAK,IAAI,GAAS,KAAK,KAClC,EAAS,GAAI,KAAK,IAAI,EAAG,CAAC,IAAM,GAClC,KACA,GAAK,GAEP,AAAI,EAAI,GAAS,EACf,GAAS,EAAK,EAEd,GAAS,EAAK,KAAK,IAAI,EAAG,EAAI,GAE5B,EAAQ,GAAK,GACf,KACA,GAAK,GAGP,AAAI,EAAI,GAAS,EACf,GAAI,EACJ,EAAI,GACC,AAAI,EAAI,GAAS,EACtB,GAAM,GAAQ,EAAK,GAAK,KAAK,IAAI,EAAG,GACpC,EAAI,EAAI,GAER,GAAI,EAAQ,KAAK,IAAI,EAAG,EAAQ,GAAK,KAAK,IAAI,EAAG,GACjD,EAAI,IAID,GAAQ,EAAG,EAAO,EAAS,GAAK,EAAI,IAAM,GAAK,EAAG,GAAK,IAAK,GAAQ,EAAG,CAI9E,IAFA,EAAK,GAAK,EAAQ,EAClB,GAAQ,EACD,EAAO,EAAG,EAAO,EAAS,GAAK,EAAI,IAAM,GAAK,EAAG,GAAK,IAAK,GAAQ,EAAG,CAE7E,EAAO,EAAS,EAAI,IAAM,EAAI,QCjFhC,KAAiB,IAEb,QAAUA,UAEd,aAAa,EAAK,CACd,KAAK,IAAM,YAAY,QAAU,YAAY,OAAO,GAAO,EAAM,GAAI,YAAW,GAAO,GACvF,KAAK,IAAM,EACX,KAAK,KAAO,EACZ,KAAK,OAAS,KAAK,IAAI,OAG3B,IAAI,OAAU,EACd,IAAI,QAAU,EACd,IAAI,MAAU,EACd,IAAI,QAAU,EAEd,GAAI,eAAiB,IAAK,IAAO,IAAK,IAClC,eAAiB,EAAI,cAIrB,wBAA0B,GAC1B,gBAAkB,MAAO,cAAgB,YAAc,KAAO,GAAI,aAAY,QAElF,IAAI,UAAY,CAEZ,QAAS,UAAW,CAChB,KAAK,IAAM,MAKf,WAAY,SAAS,EAAW,EAAQ,EAAK,CAGzC,IAFA,EAAM,GAAO,KAAK,OAEX,KAAK,IAAM,GAAK,CACnB,GAAI,GAAM,KAAK,aACX,EAAM,GAAO,EACb,EAAW,KAAK,IAEpB,KAAK,KAAO,EAAM,EAClB,EAAU,EAAK,EAAQ,MAEnB,KAAK,MAAQ,GAAU,KAAK,KAAK,GAEzC,MAAO,IAGX,YAAa,SAAS,EAAW,EAAQ,CACrC,MAAO,MAAK,WAAW,EAAW,EAAQ,KAAK,aAAe,KAAK,MAGvE,YAAa,UAAW,CACpB,GAAI,GAAM,WAAW,KAAK,IAAK,KAAK,KACpC,YAAK,KAAO,EACL,GAGX,aAAc,UAAW,CACrB,GAAI,GAAM,UAAU,KAAK,IAAK,KAAK,KACnC,YAAK,KAAO,EACL,GAKX,YAAa,UAAW,CACpB,GAAI,GAAM,WAAW,KAAK,IAAK,KAAK,KAAO,WAAW,KAAK,IAAK,KAAK,IAAM,GAAK,cAChF,YAAK,KAAO,EACL,GAGX,aAAc,UAAW,CACrB,GAAI,GAAM,WAAW,KAAK,IAAK,KAAK,KAAO,UAAU,KAAK,IAAK,KAAK,IAAM,GAAK,cAC/E,YAAK,KAAO,EACL,GAGX,UAAW,UAAW,CAClB,GAAI,GAAM,QAAQ,KAAK,KAAK,IAAK,KAAK,IAAK,GAAM,GAAI,GACrD,YAAK,KAAO,EACL,GAGX,WAAY,UAAW,CACnB,GAAI,GAAM,QAAQ,KAAK,KAAK,IAAK,KAAK,IAAK,GAAM,GAAI,GACrD,YAAK,KAAO,EACL,GAGX,WAAY,SAAS,EAAU,CAC3B,GAAI,GAAM,KAAK,IACX,EAAK,EAKqC,MAH9C,GAAI,EAAI,KAAK,OAAQ,EAAQ,EAAI,IAAiB,EAAI,KACtD,GAAI,EAAI,KAAK,OAAQ,GAAQ,GAAI,MAAS,EAAQ,EAAI,MACtD,GAAI,EAAI,KAAK,OAAQ,GAAQ,GAAI,MAAS,GAAQ,EAAI,MACtD,GAAI,EAAI,KAAK,OAAQ,GAAQ,GAAI,MAAS,GAAQ,EAAI,KAAa,EACnE,GAAI,EAAI,KAAK,KAAQ,GAAQ,GAAI,KAAS,GAEnC,oBAAoB,EAAK,EAAU,QAG9C,aAAc,UAAW,CACrB,MAAO,MAAK,WAAW,KAG3B,YAAa,UAAW,CACpB,GAAI,GAAM,KAAK,aACf,MAAO,GAAM,GAAM,EAAK,GAAM,GAAK,GAAK,EAAM,GAGlD,YAAa,UAAW,CACpB,MAAO,SAAQ,KAAK,eAGxB,WAAY,UAAW,CACnB,GAAI,GAAM,KAAK,aAAe,KAAK,IAC/B,EAAM,KAAK,IAGf,MAFA,MAAK,IAAM,EAEP,EAAM,GAAO,yBAA2B,gBAEjC,oBAAoB,KAAK,IAAK,EAAK,GAGvC,SAAS,KAAK,IAAK,EAAK,IAGnC,UAAW,UAAW,CAClB,GAAI,GAAM,KAAK,aAAe,KAAK,IAC/B,EAAS,KAAK,IAAI,SAAS,KAAK,IAAK,GACzC,YAAK,IAAM,EACJ,GAKX,iBAAkB,SAAS,EAAK,EAAU,CACtC,GAAI,KAAK,OAAS,IAAI,MAAO,MAAO,GAAI,KAAK,KAAK,WAAW,IAC7D,GAAI,GAAM,cAAc,MAExB,IADA,EAAM,GAAO,GACN,KAAK,IAAM,GAAK,EAAI,KAAK,KAAK,WAAW,IAChD,MAAO,IAEX,kBAAmB,SAAS,EAAK,CAC7B,GAAI,KAAK,OAAS,IAAI,MAAO,MAAO,GAAI,KAAK,KAAK,eAClD,GAAI,GAAM,cAAc,MAExB,IADA,EAAM,GAAO,GACN,KAAK,IAAM,GAAK,EAAI,KAAK,KAAK,eACrC,MAAO,IAEX,kBAAmB,SAAS,EAAK,CAC7B,GAAI,KAAK,OAAS,IAAI,MAAO,MAAO,GAAI,KAAK,KAAK,eAClD,GAAI,GAAM,cAAc,MAExB,IADA,EAAM,GAAO,GACN,KAAK,IAAM,GAAK,EAAI,KAAK,KAAK,eACrC,MAAO,IAEX,gBAAiB,SAAS,EAAK,CAC3B,GAAI,KAAK,OAAS,IAAI,MAAO,MAAO,GAAI,KAAK,KAAK,aAClD,GAAI,GAAM,cAAc,MAExB,IADA,EAAM,GAAO,GACN,KAAK,IAAM,GAAK,EAAI,KAAK,KAAK,aACrC,MAAO,IAEX,iBAAkB,SAAS,EAAK,CAC5B,GAAI,KAAK,OAAS,IAAI,MAAO,MAAO,GAAI,KAAK,KAAK,cAClD,GAAI,GAAM,cAAc,MAExB,IADA,EAAM,GAAO,GACN,KAAK,IAAM,GAAK,EAAI,KAAK,KAAK,cACrC,MAAO,IAEX,kBAAmB,SAAS,EAAK,CAC7B,GAAI,KAAK,OAAS,IAAI,MAAO,MAAO,GAAI,KAAK,KAAK,eAClD,GAAI,GAAM,cAAc,MAExB,IADA,EAAM,GAAO,GACN,KAAK,IAAM,GAAK,EAAI,KAAK,KAAK,eACrC,MAAO,IAEX,mBAAoB,SAAS,EAAK,CAC9B,GAAI,KAAK,OAAS,IAAI,MAAO,MAAO,GAAI,KAAK,KAAK,gBAClD,GAAI,GAAM,cAAc,MAExB,IADA,EAAM,GAAO,GACN,KAAK,IAAM,GAAK,EAAI,KAAK,KAAK,gBACrC,MAAO,IAEX,kBAAmB,SAAS,EAAK,CAC7B,GAAI,KAAK,OAAS,IAAI,MAAO,MAAO,GAAI,KAAK,KAAK,eAClD,GAAI,GAAM,cAAc,MAExB,IADA,EAAM,GAAO,GACN,KAAK,IAAM,GAAK,EAAI,KAAK,KAAK,eACrC,MAAO,IAEX,mBAAoB,SAAS,EAAK,CAC9B,GAAI,KAAK,OAAS,IAAI,MAAO,MAAO,GAAI,KAAK,KAAK,gBAClD,GAAI,GAAM,cAAc,MAExB,IADA,EAAM,GAAO,GACN,KAAK,IAAM,GAAK,EAAI,KAAK,KAAK,gBACrC,MAAO,IAGX,KAAM,SAAS,EAAK,CAChB,GAAI,GAAO,EAAM,EACjB,GAAI,IAAS,IAAI,OAAQ,KAAO,KAAK,IAAI,KAAK,OAAS,KAAM,SACpD,IAAS,IAAI,MAAO,KAAK,IAAM,KAAK,aAAe,KAAK,YACxD,IAAS,IAAI,QAAS,KAAK,KAAO,UAClC,IAAS,IAAI,QAAS,KAAK,KAAO,MACtC,MAAM,IAAI,OAAM,uBAAyB,IAKlD,SAAU,SAAS,EAAK,EAAM,CAC1B,KAAK,YAAa,GAAO,EAAK,IAGlC,QAAS,SAAS,EAAK,CAGnB,OAFI,GAAS,KAAK,QAAU,GAErB,EAAS,KAAK,IAAM,GAAK,GAAU,EAE1C,GAAI,IAAW,KAAK,OAAQ,CACxB,GAAI,GAAM,GAAI,YAAW,GACzB,EAAI,IAAI,KAAK,KACb,KAAK,IAAM,EACX,KAAK,OAAS,IAItB,OAAQ,UAAW,CACf,YAAK,OAAS,KAAK,IACnB,KAAK,IAAM,EACJ,KAAK,IAAI,SAAS,EAAG,KAAK,SAGrC,aAAc,SAAS,EAAK,CACxB,KAAK,QAAQ,GACb,WAAW,KAAK,IAAK,EAAK,KAAK,KAC/B,KAAK,KAAO,GAGhB,cAAe,SAAS,EAAK,CACzB,KAAK,QAAQ,GACb,WAAW,KAAK,IAAK,EAAK,KAAK,KAC/B,KAAK,KAAO,GAGhB,aAAc,SAAS,EAAK,CACxB,KAAK,QAAQ,GACb,WAAW,KAAK,IAAK,EAAM,GAAI,KAAK,KACpC,WAAW,KAAK,IAAK,KAAK,MAAM,EAAM,gBAAiB,KAAK,IAAM,GAClE,KAAK,KAAO,GAGhB,cAAe,SAAS,EAAK,CACzB,KAAK,QAAQ,GACb,WAAW,KAAK,IAAK,EAAM,GAAI,KAAK,KACpC,WAAW,KAAK,IAAK,KAAK,MAAM,EAAM,gBAAiB,KAAK,IAAM,GAClE,KAAK,KAAO,GAGhB,YAAa,SAAS,EAAK,CAGvB,GAFA,EAAM,CAAC,GAAO,EAEV,EAAM,WAAa,EAAM,EAAG,CAC5B,eAAe,EAAK,MACpB,OAKoE,AAFxE,KAAK,QAAQ,GAEb,KAAK,IAAI,KAAK,OAAmB,EAAM,IAAS,GAAM,IAAO,IAAO,GAAQ,KAAO,MACnF,MAAK,IAAI,KAAK,OAAW,MAAS,GAAK,IAAS,GAAM,IAAO,IAAO,GAAQ,KAAO,MACnF,MAAK,IAAI,KAAK,OAAW,MAAS,GAAK,IAAS,GAAM,IAAO,IAAO,GAAQ,KAAO,MACnF,MAAK,IAAI,KAAK,OAAY,IAAQ,EAAK,QAG3C,aAAc,SAAS,EAAK,CACxB,KAAK,YAAY,EAAM,EAAI,CAAC,EAAM,EAAI,EAAI,EAAM,IAGpD,aAAc,SAAS,EAAK,CACxB,KAAK,YAAY,QAAQ,KAG7B,YAAa,SAAS,EAAK,CACvB,EAAM,OAAO,GACb,KAAK,QAAQ,EAAI,OAAS,GAE1B,KAAK,MAEL,GAAI,GAAW,KAAK,IAEpB,KAAK,IAAM,UAAU,KAAK,IAAK,EAAK,KAAK,KACzC,GAAI,GAAM,KAAK,IAAM,EAErB,AAAI,GAAO,KAAM,uBAAuB,EAAU,EAAK,MAGvD,KAAK,IAAM,EAAW,EACtB,KAAK,YAAY,GACjB,KAAK,KAAO,GAGhB,WAAY,SAAS,EAAK,CACtB,KAAK,QAAQ,GACb,QAAQ,MAAM,KAAK,IAAK,EAAK,KAAK,IAAK,GAAM,GAAI,GACjD,KAAK,KAAO,GAGhB,YAAa,SAAS,EAAK,CACvB,KAAK,QAAQ,GACb,QAAQ,MAAM,KAAK,IAAK,EAAK,KAAK,IAAK,GAAM,GAAI,GACjD,KAAK,KAAO,GAGhB,WAAY,SAAS,EAAQ,CACzB,GAAI,GAAM,EAAO,OACjB,KAAK,YAAY,GACjB,KAAK,QAAQ,GACb,OAAS,GAAI,EAAG,EAAI,EAAK,IAAK,KAAK,IAAI,KAAK,OAAS,EAAO,IAGhE,gBAAiB,SAAS,EAAI,EAAK,CAC/B,KAAK,MAGL,GAAI,GAAW,KAAK,IACpB,EAAG,EAAK,MACR,GAAI,GAAM,KAAK,IAAM,EAErB,AAAI,GAAO,KAAM,uBAAuB,EAAU,EAAK,MAGvD,KAAK,IAAM,EAAW,EACtB,KAAK,YAAY,GACjB,KAAK,KAAO,GAGhB,aAAc,SAAS,EAAK,EAAI,EAAK,CACjC,KAAK,SAAS,EAAK,IAAI,OACvB,KAAK,gBAAgB,EAAI,IAG7B,kBAAqB,SAAS,EAAK,EAAK,CAAE,AAAI,EAAI,QAAQ,KAAK,aAAa,EAAK,kBAAmB,IACpG,mBAAqB,SAAS,EAAK,EAAK,CAAE,AAAI,EAAI,QAAQ,KAAK,aAAa,EAAK,mBAAoB,IACrG,mBAAqB,SAAS,EAAK,EAAK,CAAE,AAAI,EAAI,QAAQ,KAAK,aAAa,EAAK,mBAAoB,IACrG,iBAAqB,SAAS,EAAK,EAAK,CAAE,AAAI,EAAI,QAAQ,KAAK,aAAa,EAAK,iBAAkB,IACnG,kBAAqB,SAAS,EAAK,EAAK,CAAE,AAAI,EAAI,QAAQ,KAAK,aAAa,EAAK,kBAAmB,IACpG,mBAAqB,SAAS,EAAK,EAAK,CAAE,AAAI,EAAI,QAAQ,KAAK,aAAa,EAAK,mBAAoB,IACrG,oBAAqB,SAAS,EAAK,EAAK,CAAE,AAAI,EAAI,QAAQ,KAAK,aAAa,EAAK,oBAAqB,IACtG,mBAAqB,SAAS,EAAK,EAAK,CAAE,AAAI,EAAI,QAAQ,KAAK,aAAa,EAAK,mBAAoB,IACrG,oBAAqB,SAAS,EAAK,EAAK,CAAE,AAAI,EAAI,QAAQ,KAAK,aAAa,EAAK,oBAAqB,IAEtG,gBAAiB,SAAS,EAAK,EAAQ,CACnC,KAAK,SAAS,EAAK,IAAI,OACvB,KAAK,WAAW,IAEpB,kBAAmB,SAAS,EAAK,EAAK,CAClC,KAAK,SAAS,EAAK,IAAI,SACvB,KAAK,aAAa,IAEtB,mBAAoB,SAAS,EAAK,EAAK,CACnC,KAAK,SAAS,EAAK,IAAI,SACvB,KAAK,cAAc,IAEvB,kBAAmB,SAAS,EAAK,EAAK,CAClC,KAAK,SAAS,EAAK,IAAI,SACvB,KAAK,aAAa,IAEtB,mBAAoB,SAAS,EAAK,EAAK,CACnC,KAAK,SAAS,EAAK,IAAI,SACvB,KAAK,cAAc,IAEvB,iBAAkB,SAAS,EAAK,EAAK,CACjC,KAAK,SAAS,EAAK,IAAI,QACvB,KAAK,YAAY,IAErB,kBAAmB,SAAS,EAAK,EAAK,CAClC,KAAK,SAAS,EAAK,IAAI,QACvB,KAAK,aAAa,IAEtB,iBAAkB,SAAS,EAAK,EAAK,CACjC,KAAK,SAAS,EAAK,IAAI,OACvB,KAAK,YAAY,IAErB,gBAAiB,SAAS,EAAK,EAAK,CAChC,KAAK,SAAS,EAAK,IAAI,SACvB,KAAK,WAAW,IAEpB,iBAAkB,SAAS,EAAK,EAAK,CACjC,KAAK,SAAS,EAAK,IAAI,SACvB,KAAK,YAAY,IAErB,kBAAmB,SAAS,EAAK,EAAK,CAClC,KAAK,iBAAiB,EAAK,QAAQ,MAI3C,6BAA6B,EAAG,EAAG,EAAG,CAClC,GAAI,GAAM,EAAE,IACR,EAAG,EAOkC,GALzC,EAAI,EAAI,EAAE,OAAQ,EAAM,GAAI,MAAS,EAAQ,EAAI,KACjD,GAAI,EAAI,EAAE,OAAQ,GAAM,GAAI,MAAS,EAAQ,EAAI,MACjD,GAAI,EAAI,EAAE,OAAQ,GAAM,GAAI,MAAS,GAAQ,EAAI,MACjD,GAAI,EAAI,EAAE,OAAQ,GAAM,GAAI,MAAS,GAAQ,EAAI,MACjD,GAAI,EAAI,EAAE,OAAQ,GAAM,GAAI,MAAS,GAAQ,EAAI,MACjD,GAAI,EAAI,EAAE,OAAQ,GAAM,GAAI,IAAS,GAAQ,EAAI,KAAM,MAAO,OAAM,EAAG,EAAG,GAE1E,KAAM,IAAI,OAAM,0CAGpB,uBAAuB,EAAK,CACxB,MAAO,GAAI,OAAS,IAAI,MACpB,EAAI,aAAe,EAAI,IAAM,EAAI,IAAM,EAG/C,eAAe,EAAK,EAAM,EAAU,CAChC,MAAI,GACO,EAAO,WAAe,KAAQ,GAGhC,KAAS,GAAK,WAAgB,KAAQ,GAGnD,wBAAwB,EAAK,EAAK,CAC9B,GAAI,GAAK,EAiBT,GAfA,AAAI,GAAO,EACP,GAAQ,EAAM,WAAe,EAC7B,EAAQ,EAAM,WAAe,GAE7B,GAAO,CAAE,EAAC,EAAM,YAChB,EAAO,CAAE,EAAC,EAAM,YAEhB,AAAI,EAAM,WACN,EAAO,EAAM,EAAK,EAElB,GAAM,EACN,EAAQ,EAAO,EAAK,IAIxB,GAAO,qBAAuB,EAAM,qBACpC,KAAM,IAAI,OAAM,0CAGpB,EAAI,QAAQ,IAEZ,kBAAkB,EAAK,EAAM,GAC7B,mBAAmB,EAAM,GAG7B,2BAA2B,EAAK,EAAM,EAAK,CACvC,EAAI,IAAI,EAAI,OAAS,EAAM,IAAO,IAAM,KAAS,EACjD,EAAI,IAAI,EAAI,OAAS,EAAM,IAAO,IAAM,KAAS,EACjD,EAAI,IAAI,EAAI,OAAS,EAAM,IAAO,IAAM,KAAS,EACjD,EAAI,IAAI,EAAI,OAAS,EAAM,IAAO,IAAM,KAAS,EACjD,EAAI,IAAI,EAAI,KAAS,EAAM,IAG/B,4BAA4B,EAAM,EAAK,CACnC,GAAI,GAAO,GAAO,IAAS,EAEqC,AAAhE,EAAI,IAAI,EAAI,QAAU,EAAgB,OAAU,GAAK,IAAO,GAAQ,EAAC,GACrE,GAAI,IAAI,EAAI,OAAU,EAAO,IAAS,OAAU,GAAK,IAAO,GAAQ,EAAC,GACrE,GAAI,IAAI,EAAI,OAAU,EAAO,IAAS,OAAU,GAAK,IAAO,GAAQ,EAAC,GACrE,GAAI,IAAI,EAAI,OAAU,EAAO,IAAS,OAAU,GAAK,IAAO,GAAQ,EAAC,GACrE,GAAI,IAAI,EAAI,OAAU,EAAO,IAAS,OAAU,GAAK,IAAO,GAAQ,EAAC,GACrE,GAAI,IAAI,EAAI,OAAU,EAAO,SAGjC,gCAAgC,EAAU,EAAK,EAAK,CAChD,GAAI,GACA,GAAO,MAAS,EAChB,GAAO,QAAW,EAClB,GAAO,UAAY,EAAI,KAAK,MAAM,KAAK,IAAI,GAAQ,MAAK,IAAM,IAGlE,EAAI,QAAQ,GACZ,OAAS,GAAI,EAAI,IAAM,EAAG,GAAK,EAAU,IAAK,EAAI,IAAI,EAAI,GAAY,EAAI,IAAI,GAGlF,2BAA2B,EAAK,EAAO,CAAE,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,EAAI,YAAY,EAAI,IAClG,4BAA4B,EAAK,EAAM,CAAE,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,EAAI,aAAa,EAAI,IACnG,0BAA0B,EAAK,EAAQ,CAAE,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,EAAI,WAAW,EAAI,IACjG,2BAA2B,EAAK,EAAO,CAAE,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,EAAI,YAAY,EAAI,IAClG,4BAA4B,EAAK,EAAM,CAAE,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,EAAI,aAAa,EAAI,IACnG,4BAA4B,EAAK,EAAM,CAAE,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,EAAI,aAAa,EAAI,IACnG,6BAA6B,EAAK,EAAK,CAAE,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,EAAI,cAAc,EAAI,IACpG,4BAA4B,EAAK,EAAM,CAAE,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,EAAI,aAAa,EAAI,IACnG,6BAA6B,EAAK,EAAK,CAAE,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,EAAI,cAAc,EAAI,IAIpG,oBAAoB,EAAK,EAAK,CAC1B,MAAS,GAAI,GACR,EAAI,EAAM,IAAM,EAChB,EAAI,EAAM,IAAM,IAChB,EAAI,EAAM,GAAK,SAGxB,oBAAoB,EAAK,EAAK,EAAK,CAC/B,EAAI,GAAO,EACX,EAAI,EAAM,GAAM,IAAQ,EACxB,EAAI,EAAM,GAAM,IAAQ,GACxB,EAAI,EAAM,GAAM,IAAQ,GAG5B,mBAAmB,EAAK,EAAK,CACzB,MAAS,GAAI,GACR,EAAI,EAAM,IAAM,EAChB,EAAI,EAAM,IAAM,IAChB,GAAI,EAAM,IAAM,IAGzB,kBAAkB,EAAK,EAAK,EAAK,CAI7B,OAHI,GAAM,GACN,EAAI,EAED,EAAI,GAAK,CACZ,GAAI,GAAK,EAAI,GACT,EAAI,KACJ,EACA,EAAK,IAAO,EACZ,EAAK,IAAO,EACZ,EAAK,IAAO,EAAI,EAEpB,GAAI,EAAI,EAAmB,EAAK,MAEhC,GAAI,GAAI,EAAI,EAEZ,AAAI,IAAqB,EACjB,EAAK,KACL,GAAI,GAEL,AAAI,IAAqB,EAC5B,GAAK,EAAI,EAAI,GACR,GAAK,MAAU,KAChB,GAAK,GAAK,KAAS,EAAO,EAAK,GAC3B,GAAK,KACL,GAAI,QAGT,AAAI,IAAqB,EAC5B,GAAK,EAAI,EAAI,GACb,EAAK,EAAI,EAAI,GACR,GAAK,MAAU,KAAS,GAAK,MAAU,KACxC,GAAK,GAAK,KAAQ,GAAO,GAAK,KAAS,EAAO,EAAK,GAC/C,IAAK,MAAU,GAAK,OAAU,GAAK,QACnC,GAAI,QAGL,IAAqB,GAC5B,GAAK,EAAI,EAAI,GACb,EAAK,EAAI,EAAI,GACb,EAAK,EAAI,EAAI,GACR,GAAK,MAAU,KAAS,GAAK,MAAU,KAAS,GAAK,MAAU,KAChE,GAAK,GAAK,KAAQ,GAAQ,GAAK,KAAS,GAAO,GAAK,KAAS,EAAO,EAAK,GACrE,IAAK,OAAU,GAAK,UACpB,GAAI,QAKhB,AAAI,IAAM,KACN,GAAI,MACJ,EAAmB,GAEZ,EAAI,OACX,IAAK,MACL,GAAO,OAAO,aAAa,IAAM,GAAK,KAAQ,OAC9C,EAAI,MAAS,EAAI,MAGrB,GAAO,OAAO,aAAa,GAC3B,GAAK,EAGT,MAAO,GAGX,6BAA6B,EAAK,EAAK,EAAK,CACxC,MAAO,iBAAgB,OAAO,EAAI,SAAS,EAAK,IAGpD,mBAAmB,EAAK,EAAK,EAAK,CAC9B,OAAS,GAAI,EAAG,EAAG,EAAM,EAAI,EAAI,OAAQ,IAAK,CAG1C,GAFA,EAAI,EAAI,WAAW,GAEf,EAAI,OAAU,EAAI,MAClB,GAAI,EACA,GAAI,EAAI,MAAQ,CACZ,EAAI,KAAS,IACb,EAAI,KAAS,IACb,EAAI,KAAS,IACb,EAAO,EACP,aAEA,GAAI,EAAO,OAAU,GAAK,EAAI,MAAS,MACvC,EAAO,SAER,CACH,AAAI,EAAI,OAAW,EAAI,IAAM,EAAI,OAC7B,GAAI,KAAS,IACb,EAAI,KAAS,IACb,EAAI,KAAS,KAEb,EAAO,EAEX,aAED,AAAI,IACP,GAAI,KAAS,IACb,EAAI,KAAS,IACb,EAAI,KAAS,IACb,EAAO,MAGX,AAAI,EAAI,IACJ,EAAI,KAAS,EAEb,CAAI,EAAI,KACJ,EAAI,KAAS,GAAK,EAAM,IAExB,CAAI,EAAI,MACJ,EAAI,KAAS,GAAK,GAAM,IAExB,GAAI,KAAS,GAAK,GAAO,IACzB,EAAI,KAAS,GAAK,GAAM,GAAO,KAEnC,EAAI,KAAS,GAAK,EAAM,GAAO,KAEnC,EAAI,KAAS,EAAI,GAAO,KAGhC,MAAO,sEChoBX,AAAC,UAAU,EAAQ,EAAS,CACoC,UAAiB,MAG/EI,eAAO,UAAY,CAErB,WAAqB,EAAK,EAAG,EAAM,EAAO,EAAS,CAC/C,EAAgB,EAAK,EAAG,GAAQ,EAAG,GAAU,EAAI,OAAS,EAAI,GAAW,GAG7E,WAAyB,EAAK,EAAG,EAAM,EAAO,EAAS,CAEnD,KAAO,EAAQ,GAAM,CACjB,GAAI,EAAQ,EAAO,IAAK,CACpB,GAAI,GAAI,EAAQ,EAAO,EACnB,EAAI,EAAI,EAAO,EACf,EAAI,KAAK,IAAI,GACb,EAAI,GAAM,KAAK,IAAI,EAAI,EAAI,GAC3B,EAAK,GAAM,KAAK,KAAK,EAAI,EAAK,GAAI,GAAK,GAAM,GAAI,EAAI,EAAI,EAAI,GAAK,GAClE,EAAU,KAAK,IAAI,EAAM,KAAK,MAAM,EAAI,EAAI,EAAI,EAAI,IACpD,EAAW,KAAK,IAAI,EAAO,KAAK,MAAM,EAAK,GAAI,GAAK,EAAI,EAAI,IAChE,EAAgB,EAAK,EAAG,EAAS,EAAU,GAG/C,GAAI,GAAI,EAAI,GACR,EAAI,EACJ,EAAI,EAKR,IAHA,EAAK,EAAK,EAAM,GACZ,EAAQ,EAAI,GAAQ,GAAK,GAAG,EAAK,EAAK,EAAM,GAEzC,EAAI,GAAG,CAIV,IAHA,EAAK,EAAK,EAAG,GACb,IACA,IACO,EAAQ,EAAI,GAAI,GAAK,GAAG,IAC/B,KAAO,EAAQ,EAAI,GAAI,GAAK,GAAG,IAGnC,AAAI,EAAQ,EAAI,GAAO,KAAO,EAAG,EAAK,EAAK,EAAM,GAE7C,KACA,EAAK,EAAK,EAAG,IAGb,GAAK,GAAG,GAAO,EAAI,GACnB,GAAK,GAAG,GAAQ,EAAI,IAIhC,WAAc,EAAK,EAAG,EAAG,CACrB,GAAI,GAAM,EAAI,GACd,EAAI,GAAK,EAAI,GACb,EAAI,GAAK,EAGb,WAAwB,EAAG,EAAG,CAC1B,MAAO,GAAI,EAAI,GAAK,EAAI,EAAI,EAAI,EAGpC,MAAO,sBC1DP2C,gBAAiBC,gCACQA,QAEzB,GAAI,aAAchD,sBAElB,iBAAe,EAAY,EAAQ,CAC/B,GAAI,CAAE,gBAAgBgD,UAAQ,MAAO,IAAIA,SAAM,EAAY,GAG3D,KAAK,YAAc,KAAK,IAAI,EAAG,GAAc,GAC7C,KAAK,YAAc,KAAK,IAAI,EAAG,KAAK,KAAK,KAAK,YAAc,KAExD,GACA,KAAK,YAAY,GAGrB,KAAK,QAGTA,QAAM,UAAY,CAEd,IAAK,UAAY,CACb,MAAO,MAAK,KAAK,KAAK,KAAM,KAGhC,OAAQ,SAAU,EAAM,CAEpB,GAAI,GAAO,KAAK,KACZ,EAAS,GACT,EAAS,KAAK,OAElB,GAAI,CAAC,WAAW,EAAM,GAAO,MAAO,GAKpC,OAHI,GAAgB,GAChB,EAAG,EAAK,EAAO,EAEZ,GAAM,CACT,IAAK,EAAI,EAAG,EAAM,EAAK,SAAS,OAAQ,EAAI,EAAK,IAE7C,EAAQ,EAAK,SAAS,GACtB,EAAY,EAAK,KAAO,EAAO,GAAS,EAEpC,WAAW,EAAM,IACjB,CAAI,EAAK,KAAM,EAAO,KAAK,GACtB,AAAI,SAAS,EAAM,GAAY,KAAK,KAAK,EAAO,GAChD,EAAc,KAAK,IAGhC,EAAO,EAAc,MAGzB,MAAO,IAGX,SAAU,SAAU,EAAM,CAEtB,GAAI,GAAO,KAAK,KACZ,EAAS,KAAK,OAElB,GAAI,CAAC,WAAW,EAAM,GAAO,MAAO,GAKpC,OAHI,GAAgB,GAChB,EAAG,EAAK,EAAO,EAEZ,GAAM,CACT,IAAK,EAAI,EAAG,EAAM,EAAK,SAAS,OAAQ,EAAI,EAAK,IAK7C,GAHA,EAAQ,EAAK,SAAS,GACtB,EAAY,EAAK,KAAO,EAAO,GAAS,EAEpC,WAAW,EAAM,GAAY,CAC7B,GAAI,EAAK,MAAQ,SAAS,EAAM,GAAY,MAAO,GACnD,EAAc,KAAK,GAG3B,EAAO,EAAc,MAGzB,MAAO,IAGX,KAAM,SAAU,EAAM,CAClB,GAAI,CAAE,IAAQ,EAAK,QAAS,MAAO,MAEnC,GAAI,EAAK,OAAS,KAAK,YAAa,CAChC,OAAS,GAAI,EAAG,EAAM,EAAK,OAAQ,EAAI,EAAK,IACxC,KAAK,OAAO,EAAK,IAErB,MAAO,MAIX,GAAI,GAAO,KAAK,OAAO,EAAK,QAAS,EAAG,EAAK,OAAS,EAAG,GAEzD,GAAI,CAAC,KAAK,KAAK,SAAS,OAEpB,KAAK,KAAO,UAEL,KAAK,KAAK,SAAW,EAAK,OAEjC,KAAK,WAAW,KAAK,KAAM,OAExB,CACH,GAAI,KAAK,KAAK,OAAS,EAAK,OAAQ,CAEhC,GAAI,GAAU,KAAK,KACnB,KAAK,KAAO,EACZ,EAAO,EAIX,KAAK,QAAQ,EAAM,KAAK,KAAK,OAAS,EAAK,OAAS,EAAG,IAG3D,MAAO,OAGX,OAAQ,SAAU,EAAM,CACpB,MAAI,IAAM,KAAK,QAAQ,EAAM,KAAK,KAAK,OAAS,GACzC,MAGX,MAAO,UAAY,CACf,YAAK,KAAO,WAAW,IAChB,MAGX,OAAQ,SAAU,EAAM,EAAU,CAC9B,GAAI,CAAC,EAAM,MAAO,MASlB,OAPI,GAAO,KAAK,KACZ,EAAO,KAAK,OAAO,GACnB,EAAO,GACP,EAAU,GACV,EAAG,EAAQ,EAAO,EAGf,GAAQ,EAAK,QAAQ,CASxB,GAPK,GACD,GAAO,EAAK,MACZ,EAAS,EAAK,EAAK,OAAS,GAC5B,EAAI,EAAQ,MACZ,EAAU,IAGV,EAAK,MACL,GAAQ,SAAS,EAAM,EAAK,SAAU,GAElC,IAAU,IAEV,SAAK,SAAS,OAAO,EAAO,GAC5B,EAAK,KAAK,GACV,KAAK,UAAU,GACR,KAIf,AAAI,CAAC,GAAW,CAAC,EAAK,MAAQ,SAAS,EAAM,GACzC,GAAK,KAAK,GACV,EAAQ,KAAK,GACb,EAAI,EACJ,EAAS,EACT,EAAO,EAAK,SAAS,IAElB,AAAI,EACP,KACA,EAAO,EAAO,SAAS,GACvB,EAAU,IAEP,EAAO,KAGlB,MAAO,OAGX,OAAQ,SAAU,EAAM,CAAE,MAAO,IAEjC,YAAa,gBACb,YAAa,gBAEb,OAAQ,UAAY,CAAE,MAAO,MAAK,MAElC,SAAU,SAAU,EAAM,CACtB,YAAK,KAAO,EACL,MAGX,KAAM,SAAU,EAAM,EAAQ,CAE1B,OADI,GAAgB,GACb,GACH,AAAI,EAAK,KAAM,EAAO,KAAK,MAAM,EAAQ,EAAK,UACzC,EAAc,KAAK,MAAM,EAAe,EAAK,UAElD,EAAO,EAAc,MAEzB,MAAO,IAGX,OAAQ,SAAU,EAAO,EAAM,EAAO,EAAQ,CAE1C,GAAI,GAAI,EAAQ,EAAO,EACnB,EAAI,KAAK,YACT,EAEJ,GAAI,GAAK,EAEL,SAAO,WAAW,EAAM,MAAM,EAAM,EAAQ,IAC5C,SAAS,EAAM,KAAK,QACb,EAGX,AAAK,GAED,GAAS,KAAK,KAAK,KAAK,IAAI,GAAK,KAAK,IAAI,IAG1C,EAAI,KAAK,KAAK,EAAI,KAAK,IAAI,EAAG,EAAS,KAG3C,EAAO,WAAW,IAClB,EAAK,KAAO,GACZ,EAAK,OAAS,EAId,GAAI,GAAK,KAAK,KAAK,EAAI,GACnB,EAAK,EAAK,KAAK,KAAK,KAAK,KAAK,IAC9B,EAAG,EAAG,EAAQ,EAIlB,IAFA,YAAY,EAAO,EAAM,EAAO,EAAI,KAAK,aAEpC,EAAI,EAAM,GAAK,EAAO,GAAK,EAM5B,IAJA,EAAS,KAAK,IAAI,EAAI,EAAK,EAAG,GAE9B,YAAY,EAAO,EAAG,EAAQ,EAAI,KAAK,aAElC,EAAI,EAAG,GAAK,EAAQ,GAAK,EAE1B,EAAS,KAAK,IAAI,EAAI,EAAK,EAAG,GAG9B,EAAK,SAAS,KAAK,KAAK,OAAO,EAAO,EAAG,EAAQ,EAAS,IAIlE,gBAAS,EAAM,KAAK,QAEb,GAGX,eAAgB,SAAU,EAAM,EAAM,EAAO,EAAM,CAI/C,OAFI,GAAG,EAAK,EAAO,EAAY,EAAM,EAAa,EAAS,EAGvD,EAAK,KAAK,GAEN,IAAK,MAAQ,EAAK,OAAS,IAAM,IAH5B,CAOT,IAFA,EAAU,EAAiB,IAEtB,EAAI,EAAG,EAAM,EAAK,SAAS,OAAQ,EAAI,EAAK,IAC7C,EAAQ,EAAK,SAAS,GACtB,EAAO,SAAS,GAChB,EAAc,aAAa,EAAM,GAAS,EAG1C,AAAI,EAAc,EACd,GAAiB,EACjB,EAAU,EAAO,EAAU,EAAO,EAClC,EAAa,GAEN,IAAgB,GAEnB,EAAO,GACP,GAAU,EACV,EAAa,GAKzB,EAAO,GAAc,EAAK,SAAS,GAGvC,MAAO,IAGX,QAAS,SAAU,EAAM,EAAO,EAAQ,CAEpC,GAAI,GAAS,KAAK,OACd,EAAO,EAAS,EAAO,EAAO,GAC9B,EAAa,GAGb,EAAO,KAAK,eAAe,EAAM,KAAK,KAAM,EAAO,GAOvD,IAJA,EAAK,SAAS,KAAK,GACnB,OAAO,EAAM,GAGN,GAAS,GACR,EAAW,GAAO,SAAS,OAAS,KAAK,aACzC,KAAK,OAAO,EAAY,GACxB,IAKR,KAAK,oBAAoB,EAAM,EAAY,IAI/C,OAAQ,SAAU,EAAY,EAAO,CAEjC,GAAI,GAAO,EAAW,GAClB,EAAI,EAAK,SAAS,OAClB,EAAI,KAAK,YAEb,KAAK,iBAAiB,EAAM,EAAG,GAE/B,GAAI,GAAa,KAAK,kBAAkB,EAAM,EAAG,GAE7C,EAAU,WAAW,EAAK,SAAS,OAAO,EAAY,EAAK,SAAS,OAAS,IACjF,EAAQ,OAAS,EAAK,OACtB,EAAQ,KAAO,EAAK,KAEpB,SAAS,EAAM,KAAK,QACpB,SAAS,EAAS,KAAK,QAEvB,AAAI,EAAO,EAAW,EAAQ,GAAG,SAAS,KAAK,GAC1C,KAAK,WAAW,EAAM,IAG/B,WAAY,SAAU,EAAM,EAAS,CAEjC,KAAK,KAAO,WAAW,CAAC,EAAM,IAC9B,KAAK,KAAK,OAAS,EAAK,OAAS,EACjC,KAAK,KAAK,KAAO,GACjB,SAAS,KAAK,KAAM,KAAK,SAG7B,kBAAmB,SAAU,EAAM,EAAG,EAAG,CAErC,GAAI,GAAG,EAAO,EAAO,EAAS,EAAM,EAAY,EAAS,EAIzD,IAFA,EAAa,EAAU,IAElB,EAAI,EAAG,GAAK,EAAI,EAAG,IACpB,EAAQ,SAAS,EAAM,EAAG,EAAG,KAAK,QAClC,EAAQ,SAAS,EAAM,EAAG,EAAG,KAAK,QAElC,EAAU,iBAAiB,EAAO,GAClC,EAAO,SAAS,GAAS,SAAS,GAGlC,AAAI,EAAU,EACV,GAAa,EACb,EAAQ,EAER,EAAU,EAAO,EAAU,EAAO,GAE3B,IAAY,GAEf,EAAO,GACP,GAAU,EACV,EAAQ,GAKpB,MAAO,IAIX,iBAAkB,SAAU,EAAM,EAAG,EAAG,CAEpC,GAAI,GAAc,EAAK,KAAO,KAAK,YAAc,gBAC7C,EAAc,EAAK,KAAO,KAAK,YAAc,gBAC7C,EAAU,KAAK,eAAe,EAAM,EAAG,EAAG,GAC1C,EAAU,KAAK,eAAe,EAAM,EAAG,EAAG,GAI9C,AAAI,EAAU,GAAS,EAAK,SAAS,KAAK,IAI9C,eAAgB,SAAU,EAAM,EAAG,EAAG,EAAS,CAE3C,EAAK,SAAS,KAAK,GAEnB,GAAI,GAAS,KAAK,OACd,EAAW,SAAS,EAAM,EAAG,EAAG,GAChC,EAAY,SAAS,EAAM,EAAI,EAAG,EAAG,GACrC,EAAS,WAAW,GAAY,WAAW,GAC3C,EAAG,EAEP,IAAK,EAAI,EAAG,EAAI,EAAI,EAAG,IACnB,EAAQ,EAAK,SAAS,GACtB,OAAO,EAAU,EAAK,KAAO,EAAO,GAAS,GAC7C,GAAU,WAAW,GAGzB,IAAK,EAAI,EAAI,EAAI,EAAG,GAAK,EAAG,IACxB,EAAQ,EAAK,SAAS,GACtB,OAAO,EAAW,EAAK,KAAO,EAAO,GAAS,GAC9C,GAAU,WAAW,GAGzB,MAAO,IAGX,oBAAqB,SAAU,EAAM,EAAM,EAAO,CAE9C,OAAS,GAAI,EAAO,GAAK,EAAG,IACxB,OAAO,EAAK,GAAI,IAIxB,UAAW,SAAU,EAAM,CAEvB,OAAS,GAAI,EAAK,OAAS,EAAG,EAAU,GAAK,EAAG,IAC5C,AAAI,EAAK,GAAG,SAAS,SAAW,EAC5B,AAAI,EAAI,EACJ,GAAW,EAAK,EAAI,GAAG,SACvB,EAAS,OAAO,EAAS,QAAQ,EAAK,IAAK,IAExC,KAAK,QAET,SAAS,EAAK,GAAI,KAAK,SAItC,YAAa,SAAU,EAAQ,CAO3B,GAAI,GAAa,CAAC,WAAY,OAAQ,KAEtC,KAAK,YAAc,GAAI,UAAS,IAAK,IAAK,EAAW,KAAK,EAAO,KACjE,KAAK,YAAc,GAAI,UAAS,IAAK,IAAK,EAAW,KAAK,EAAO,KAEjE,KAAK,OAAS,GAAI,UAAS,IACvB,kBAAoB,EAAO,GAC3B,YAAc,EAAO,GACrB,YAAc,EAAO,GACrB,YAAc,EAAO,GAAK,QAItC,kBAAkB,EAAM,EAAO,EAAU,CACrC,GAAI,CAAC,EAAU,MAAO,GAAM,QAAQ,GAEpC,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,IAC9B,GAAI,EAAS,EAAM,EAAM,IAAK,MAAO,GAEzC,MAAO,GAIX,kBAAkB,EAAM,EAAQ,CAC5B,SAAS,EAAM,EAAG,EAAK,SAAS,OAAQ,EAAQ,GAIpD,kBAAkB,EAAM,EAAG,EAAG,EAAQ,EAAU,CAC5C,AAAK,GAAU,GAAW,WAAW,OACrC,EAAS,KAAO,IAChB,EAAS,KAAO,IAChB,EAAS,KAAO,KAChB,EAAS,KAAO,KAEhB,OAAS,GAAI,EAAG,EAAO,EAAI,EAAG,IAC1B,EAAQ,EAAK,SAAS,GACtB,OAAO,EAAU,EAAK,KAAO,EAAO,GAAS,GAGjD,MAAO,GAGX,gBAAgB,EAAG,EAAG,CAClB,SAAE,KAAO,KAAK,IAAI,EAAE,KAAM,EAAE,MAC5B,EAAE,KAAO,KAAK,IAAI,EAAE,KAAM,EAAE,MAC5B,EAAE,KAAO,KAAK,IAAI,EAAE,KAAM,EAAE,MAC5B,EAAE,KAAO,KAAK,IAAI,EAAE,KAAM,EAAE,MACrB,EAGX,yBAAyB,EAAG,EAAG,CAAE,MAAO,GAAE,KAAO,EAAE,KACnD,yBAAyB,EAAG,EAAG,CAAE,MAAO,GAAE,KAAO,EAAE,KAEnD,kBAAkB,EAAK,CAAE,MAAQ,GAAE,KAAO,EAAE,MAAS,GAAE,KAAO,EAAE,MAChE,oBAAoB,EAAG,CAAE,MAAQ,GAAE,KAAO,EAAE,KAAS,GAAE,KAAO,EAAE,MAEhE,sBAAsB,EAAG,EAAG,CACxB,MAAQ,MAAK,IAAI,EAAE,KAAM,EAAE,MAAQ,KAAK,IAAI,EAAE,KAAM,EAAE,OAC9C,MAAK,IAAI,EAAE,KAAM,EAAE,MAAQ,KAAK,IAAI,EAAE,KAAM,EAAE,OAG1D,0BAA0B,EAAG,EAAG,CAC5B,GAAI,GAAO,KAAK,IAAI,EAAE,KAAM,EAAE,MAC1B,EAAO,KAAK,IAAI,EAAE,KAAM,EAAE,MAC1B,EAAO,KAAK,IAAI,EAAE,KAAM,EAAE,MAC1B,EAAO,KAAK,IAAI,EAAE,KAAM,EAAE,MAE9B,MAAO,MAAK,IAAI,EAAG,EAAO,GACnB,KAAK,IAAI,EAAG,EAAO,GAG9B,kBAAkB,EAAG,EAAG,CACpB,MAAO,GAAE,MAAQ,EAAE,MACZ,EAAE,MAAQ,EAAE,MACZ,EAAE,MAAQ,EAAE,MACZ,EAAE,MAAQ,EAAE,KAGvB,oBAAoB,EAAG,EAAG,CACtB,MAAO,GAAE,MAAQ,EAAE,MACZ,EAAE,MAAQ,EAAE,MACZ,EAAE,MAAQ,EAAE,MACZ,EAAE,MAAQ,EAAE,KAGvB,oBAAoB,EAAU,CAC1B,MAAO,CACH,SAAU,EACV,OAAQ,EACR,KAAM,GACN,KAAM,IACN,KAAM,IACN,KAAM,KACN,KAAM,MAOd,qBAAqB,EAAK,EAAM,EAAO,EAAG,EAAS,CAI/C,OAHI,GAAQ,CAAC,EAAM,GACf,EAEG,EAAM,QAIT,AAHA,EAAQ,EAAM,MACd,EAAO,EAAM,MAET,IAAQ,GAAQ,IAEpB,GAAM,EAAO,KAAK,KAAM,GAAQ,GAAQ,EAAI,GAAK,EACjD,YAAY,EAAK,EAAK,EAAM,EAAO,GAEnC,EAAM,KAAK,EAAM,EAAK,EAAK,OC7iBnC,YAAiBC,WAEjBA,WAAS,SAAWA,WACpBA,WAAS,QAAU,YAMnB,oBAAkB,EAAQ,EAAM,EAAQ,CAEpC,GAAI,GAAM,EAAO,OACb,EAAQ,QAAQ,EAAO,GAAI,GAC3B,EAAO,GACP,EAAG,EAAG,EAAG,EAAO,EAIpB,IAFK,GAAQ,GAAS,IAEjB,EAAI,EAAG,EAAI,EAAK,IAAK,CAKtB,IAJA,EAAI,EAAO,EAAI,GACf,EAAI,EAAO,GACX,EAAQ,EAAW,QAAQ,EAAG,KAI1B,GAAM,EAAQ,EAeP,IAAI,EAAQ,EACf,MAEG,AAAI,EACP,GAAI,UAAU,EAAG,EAAG,EAAO,GAC3B,EAAQ,QAAQ,EAAG,IAGnB,GAAI,UAAU,EAAG,EAAG,EAAO,GAC3B,EAAQ,QAAQ,EAAG,QAxBD,CAClB,EAAK,KAAK,GAEV,AAAI,IAAU,EACV,GAAK,KAAK,GAEN,EAAI,EAAM,GACV,GAAO,KAAK,GACZ,EAAO,KAEJ,IAAM,EAAM,GACnB,EAAK,KAAK,GAEd,MAeR,EAAQ,EAGZ,MAAI,GAAK,QAAQ,EAAO,KAAK,GAEtB,EAKX,qBAAqB,EAAQ,EAAM,CAE/B,GAAI,GAAQ,EAAM,EAAM,EAAY,EAAG,EAAG,EAG1C,IAAK,EAAO,EAAG,GAAQ,EAAG,GAAQ,EAAG,CAKjC,IAJA,EAAS,GACT,EAAO,EAAO,EAAO,OAAS,GAC9B,EAAa,CAAE,SAAQ,EAAM,GAAQ,GAEhC,EAAI,EAAG,EAAI,EAAO,OAAQ,IAC3B,EAAI,EAAO,GACX,EAAS,CAAE,SAAQ,EAAG,GAAQ,GAG1B,IAAW,GAAY,EAAO,KAAK,UAAU,EAAM,EAAG,EAAM,IAE5D,GAAQ,EAAO,KAAK,GAExB,EAAO,EACP,EAAa,EAKjB,GAFA,EAAS,EAEL,CAAC,EAAO,OAAQ,MAGxB,MAAO,GAKX,mBAAmB,EAAG,EAAG,EAAM,EAAM,CACjC,MAAO,GAAO,EAAI,CAAC,EAAE,GAAM,GAAE,GAAK,EAAE,IAAO,GAAK,GAAK,EAAE,IAAO,GAAE,GAAK,EAAE,IAAK,EAAK,IAC1E,EAAO,EAAI,CAAC,EAAE,GAAM,GAAE,GAAK,EAAE,IAAO,GAAK,GAAK,EAAE,IAAO,GAAE,GAAK,EAAE,IAAK,EAAK,IAC1E,EAAO,EAAI,CAAC,EAAK,GAAI,EAAE,GAAM,GAAE,GAAK,EAAE,IAAO,GAAK,GAAK,EAAE,IAAO,GAAE,GAAK,EAAE,KACzE,EAAO,EAAI,CAAC,EAAK,GAAI,EAAE,GAAM,GAAE,GAAK,EAAE,IAAO,GAAK,GAAK,EAAE,IAAO,GAAE,GAAK,EAAE,KACzE,KAUX,iBAAiB,EAAG,EAAM,CACtB,GAAI,GAAO,EAEX,MAAI,GAAE,GAAK,EAAK,GAAI,GAAQ,EACnB,EAAE,GAAK,EAAK,IAAI,IAAQ,GAEjC,AAAI,EAAE,GAAK,EAAK,GAAI,GAAQ,EACnB,EAAE,GAAK,EAAK,IAAI,IAAQ,GAE1B,ECxHX,GAAI,OAAQjD,gBACR,SAAWqB,WAEf,eAAiB,aAEjB,sBAAsB,EAAM,CAExB,OADI,GAAS,GACJ,EAAI,EAAG,EAAI,EAAK,SAAS,OAAQ,IAAK,CAC3C,GAAI,GAAU,EAAK,SAAS,GACxB,EAAS,EAAQ,SAAS,YAE9B,GAAI,EAAQ,SAAS,OAAS,UAC1B,EAAO,KAAK,SAAS,EAAQ,EAAQ,qBAE9B,EAAQ,SAAS,OAAS,eACjC,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,IAC/B,EAAO,KAAK,SAAS,EAAO,GAAI,EAAQ,aAKpD,GAAI,GAAO,QAAQ,KAAK,GAExB,WAAe,EAAG,EAAO,CAQrB,OAPI,GAAS,GACT,EAAS,EAAK,OAAO,CACjB,KAAM,EAAE,GACR,KAAM,EAAE,GACR,KAAM,EAAE,GACR,KAAM,EAAE,KAEP,EAAI,EAAG,EAAI,EAAO,OAAQ,IAC/B,GAAI,cAAc,EAAO,GAAG,OAAQ,GAChC,GAAI,EACA,EAAO,KAAK,EAAO,GAAG,WAEtB,OAAO,GAAO,GAAG,MAG7B,MAAO,IAAS,EAAO,OAAS,EAAS,KAG7C,SAAM,KAAO,EACb,EAAM,KAAO,SAAmB,EAAM,CAQlC,OAPI,GAAS,GACT,EAAS,EAAK,OAAO,CACrB,KAAM,EAAK,GACX,KAAM,EAAK,GACX,KAAM,EAAK,GACX,KAAM,EAAK,KAEN,EAAI,EAAG,EAAI,EAAO,OAAQ,IAC/B,AAAI,sBAAsB,EAAO,GAAG,OAAQ,IACxC,EAAO,KAAK,EAAO,GAAG,OAG9B,MAAO,IAGJ,EAGX,+BAA+B,EAAS,EAAM,CAC1C,GAAI,GAAa,CACZ,GAAK,GAAK,EAAK,IAAM,EACrB,GAAK,GAAK,EAAK,IAAM,GAE1B,GAAI,cAAc,EAAS,GAAa,MAAO,GAC/C,OAAS,GAAI,EAAG,EAAI,EAAQ,OAAQ,IAChC,GAAI,SAAS,EAAQ,GAAI,GAAM,OAAS,EAAG,MAAO,GAEtD,MAAO,GAIX,uBAAuB,EAAO,EAAG,CAE7B,OADI,GAAS,GACJ,EAAI,EAAG,EAAM,EAAM,OAAQ,EAAI,EAAK,IAEzC,OADI,GAAO,EAAM,GACR,EAAI,EAAG,EAAO,EAAK,OAAQ,EAAI,EAAO,EAAG,EAAI,EAAM,EAAI,IAC5D,AAAI,aAAa,EAAG,EAAK,GAAI,EAAK,KAAK,GAAS,CAAC,GAGzD,MAAO,GAGX,sBAAsB,EAAG,EAAI,EAAI,CAC7B,MAAS,GAAG,GAAK,EAAE,IAAS,EAAG,GAAK,EAAE,IAAS,EAAE,GAAM,GAAG,GAAK,EAAG,IAAO,GAAE,GAAK,EAAG,IAAO,GAAG,GAAK,EAAG,IAAM,EAAG,GAGlH,kBAAkB,EAAQ,EAAO,CAU7B,OATI,GAAO,CACP,KAAM,IACN,KAAM,IACN,KAAM,KACN,KAAM,KACN,OAAQ,EACR,MAAO,GAGF,EAAI,EAAG,EAAI,EAAO,GAAG,OAAQ,IAAK,CACvC,GAAI,GAAI,EAAO,GAAG,GAClB,EAAK,KAAO,KAAK,IAAI,EAAK,KAAM,EAAE,IAClC,EAAK,KAAO,KAAK,IAAI,EAAK,KAAM,EAAE,IAClC,EAAK,KAAO,KAAK,IAAI,EAAK,KAAM,EAAE,IAClC,EAAK,KAAO,KAAK,IAAI,EAAK,KAAM,EAAE,IAEtC,MAAO,GCzGX,GAAI,MAAO,oBACP,SAAW,CACb,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,MAAO,OAAQ,UAAW,QAAS,CAAC,UAAW,QAAS,KAAM,OAAQ,CAAC,SAAU,WAAY,MAAO,MAAO,MAAO,UAAW,OAAQ,cAAe,MAAO,eAAgB,KAAM,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,KAAO,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eAC1lD,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,MAAO,OAAQ,WAAY,QAAS,CAAC,UAAW,QAAS,KAAM,OAAQ,CAAC,SAAU,WAAY,MAAO,MAAO,MAAO,UAAW,OAAQ,cAAe,MAAO,eAAgB,KAAM,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,KAAO,UAAW,CAAC,OAAS,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,KAAO,eACljB,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,MAAO,OAAQ,QAAS,QAAS,CAAC,UAAW,QAAS,KAAM,OAAQ,CAAC,SAAU,WAAY,MAAO,MAAO,MAAO,UAAW,OAAQ,cAAe,MAAO,eAAgB,KAAM,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,eACv1C,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,MAAO,OAAQ,mBAAoB,QAAS,CAAC,UAAW,QAAS,KAAM,OAAQ,CAAC,SAAU,WAAY,MAAO,MAAO,MAAO,UAAW,OAAQ,cAAe,MAAO,eAAgB,KAAM,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,eACp+C,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,MAAO,OAAQ,UAAW,QAAS,KAAM,OAAQ,CAAC,KAAM,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eACnnC,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,MAAO,OAAQ,cAAe,QAAS,KAAM,OAAQ,CAAC,KAAM,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,MAAO,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,MAAO,UAAW,CAAC,OAAQ,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAA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,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,UAAW,OAAQ,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,WAAY,CAAC,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,WAAY,CAAC,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,eAChgrB,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,SAAU,OAAQ,UAAW,MAAO,kBAAoB,SAAU,MAC7G,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,SAAU,OAAQ,gBAAiB,QAAS,KAAM,MAAO,kBAAoB,SAAU,MAClI,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,SAAU,OAAQ,kBAAmB,OAAQ,CAAC,UAAW,MAAO,OAAQ,UAAW,OAAQ,aAAc,CAAC,WAAa,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,eACrgE,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,SAAU,OAAQ,WAAY,QAAS,CAAC,SAAU,QAAS,KAAM,OAAQ,CAAC,KAAM,MAAO,MAAO,MAAO,MAAO,eAAgB,aAAc,CAAC,UAAY,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eACjU,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,SAAU,OAAQ,SAAU,QAAS,CAAC,SAAU,QAAS,KAAM,OAAQ,CAAC,WAAY,WAAY,UAAW,KAAM,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,eAC7U,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,SAAU,OAAQ,iBAAkB,QAAS,CAAC,SAAU,QAAS,KAAM,OAAQ,CAAC,KAAM,WAAY,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,eAAgB,cAAe,MAAO,eAAgB,MAAQ,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,eACtX,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,SAAU,OAAQ,UAAW,QAAS,CAAC,QAAS,UAAW,QAAS,KAAM,OAAQ,CAAC,WAAY,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,eAAgB,aAAc,CAAC,UAAY,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,cAC9X,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,SAAU,OAAQ,OAAQ,QAAS,CAAC,QAAS,UAAW,QAAS,KAAM,OAAQ,CAAC,WAAY,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,eAAgB,aAAc,CAAC,UAAY,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,eACrW,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,SAAU,OAAQ,iBAAkB,QAAS,CAAC,QAAS,UAAW,QAAS,KAAM,OAAQ,CAAC,WAAY,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,eAAgB,aAAc,CAAC,UAAY,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,eAC/W,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,SAAU,OAAQ,UAAW,QAAS,CAAC,SAAU,QAAS,KAAM,OAAQ,CAAC,WAAY,WAAY,UAAW,KAAM,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,eAC9U,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,SAAU,OAAQ,cAAe,QAAS,CAAC,SAAU,QAAS,KAAM,OAAQ,CAAC,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,OAAQ,CAAC,SAAU,UAAW,CAAC,SAAU,eACpT,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,SAAU,OAAQ,eAAgB,QAAS,KAAM,OAAQ,CAAC,MAAO,MAAO,aAAc,CAAC,MAAQ,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,UAAW,UAAW,CAAC,WAAY,YAAa,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,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AC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,OAAQ,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,SAAU,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,WAAY,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,WAAY,SAAU,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,SAAU,CAAC,UAAW,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,SAAU,QAAS,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,UAAW,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,SAAU,CAAC,WAAY,SAAU,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,SAAU,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,QAAS,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,UAAW,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,eAC7qP,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,UAAW,OAAQ,YAAa,OAAQ,CAAC,MAAO,OAAQ,MAAO,aAAe,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,eAC7Q,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,UAAW,OAAQ,eAAgB,QAAS,KAAM,OAAQ,CAAC,KAAM,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,gBAAkB,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eACvS,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,UAAW,OAAQ,SAAU,MAAO,kBAAoB,SAAU,MAC7G,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,UAAW,OAAQ,+BAAgC,QAAS,KAAM,MAAO,mBAAqB,SAAU,MACnJ,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,UAAW,OAAQ,kBAAmB,QAAS,KAAM,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,MAAQ,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,YAAa,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,OAAQ,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SA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W,CAAC,OAAQ,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAA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AAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,OAAQ,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,C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C,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,KAAO,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,SAAU,CAAC,OAAS,UAAW,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,OAAS,UAAW,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,OAAQ,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,WAAY,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,YAAa,CAAC,CAAC,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,eACh0N,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,YAAa,OAAQ,kBAAmB,QAAS,KAAM,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAA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,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU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,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,SAAU,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,SAAU,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,SAAU,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,SAAU,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,SAAU,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,SAAU,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,gBACpjJ,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,iBAAkB,QAAS,CAAC,SAAU,QAAS,KAAM,OAAQ,CAAC,WAAY,MAAO,MAAO,MAAO,cAAe,MAAO,eAAgB,KAAM,aAAc,CAAC,UAAY,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,gBACxZ,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,UAAW,OAAQ,CAAC,KAAM,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,OAAQ,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eACxlS,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,aAAe,SAAU,MAChI,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,QAAS,QAAS,CAAC,SAAU,QAAS,KAAM,OAAQ,CAAC,WAAY,MAAO,MAAO,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,OAAQ,CAAC,UAAW,eACtW,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,QAAS,OAAQ,mBAAoB,QAAS,KAAM,OAAQ,CAAC,KAAM,MAAO,MAAO,MAAO,aAAc,CAAC,SAAU,YAAc,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eAClc,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,aAAc,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,WAAY,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,YAAa,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,YAAa,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,QAAS,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,MAAO,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eACx2J,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,yBAA0B,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eACt3I,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,WAAY,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,UAAY,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,eAChV,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,aAAc,OAAQ,CAAC,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,eAClyG,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,UAAW,OAAQ,CAAC,KAAM,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,YAAa,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,MAAO,UAAW,CAAC,QAAS,SAAU,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,OAAQ,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,MAAO,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,OAAQ,UAAW,CAAC,MAAO,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,MAAO,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,Q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CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,SAAU,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,SAAU,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,SAAU,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,SAAU,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,SAAU,WAAY,CAAC,UAAW,WAAY,CAAC,SAAU,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,SAAU,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,SAAU,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,gBACltG,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,wBAAyB,QAAS,MAAQ,SAAU,MAC7J,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,SAAU,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAacACr/N,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,cAAe,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,UAAW,OAAQ,cAAe,MAAO,aAAc,CAAC,UAAY,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,cAC9X,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,SAAU,OAAQ,CAAC,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,eACxwC,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,gBAAiB,QAAS,KAAM,OAAQ,CAAC,MAAO,MAAO,MAAO,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,UAAW,CAAC,QAAS,WAAY,CAAC,QAAS,WAAY,CAAC,QAAS,eAC7S,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,WAAY,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,gBAC/wF,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,UAAW,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,MAAO,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAA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Q,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAU,CAAC,SAAU,QAAU,CAAC,SAAU,QAAU,CAAC,SAAU,QAAU,CAAC,SAAU,SAAW,CAAC,SAAU,SAAW,CAAC,SAAU,SAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,OAAQ,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAW,CAAC,SAAU,QAAU,CAAC,SAAU,SAAW,CAAC,SAAU,SAAW,CAAC,SAAU,SAAW,CAAC,SAAU,SAAW,CAAC,SAAU,SAAW,CAAC,QAAS,QAAU,CAAC,SAAU,QAAU,CAAC,SAAU,QAAU,CAAC,SAAU,QAAU,CAAC,SAAU,QAAU,CAAC,SAAU,QAAU,CAAC,SAAU,QAAU,CAAC,QAAS,QAAU,CAAC,SAAU,QAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,cAC76K,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,2BAA4B,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,OAAQ,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eAC5qG,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,wBAAyB,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,OAAS,CAAC,SAAU,QAAU,CAAC,SAAU,QAAU,CAAC,SAAU,QAAU,CAAC,SAAU,QAAU,CAAC,SAAU,SAAW,CAAC,QAAS,SAAW,CAAC,SAAU,SAAW,CAAC,SAAU,SAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAW,CAAC,SAAU,SAAW,CAAC,SAAU,SAAW,CAAC,SAAU,QAAU,CAAC,SAAU,QAAU,CAAC,SAAU,QAAU,CAAC,SAAU,QAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,cACjiG,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,cAAe,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,QAAS,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,WAAY,CAAC,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,WAAY,CAAC,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,eAC9xQ,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,QAAS,OAAQ,mBAAoB,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,aACr+F,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,eAAgB,QAAS,KAAM,OAAQ,CAAC,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,WAAY,gBACnX,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,QAAS,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAagBACj+E,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,QAAS,OAAQ,WAAY,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,MAAO,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,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SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eACzmO,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,UAAW,OAAQ,CAAC,KAAM,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,YAAa,CAAC,CAAC,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,QAAS,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,MAAO,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,QAAS,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,MAAO,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,MAAO,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,MAAO,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,OAAQ,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UA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CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,KAAO,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,QAAS,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,OAAQ,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,OAAQ,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,MAAO,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,MAAO,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,QAAS,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,SAAU,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,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C,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,QAAS,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,eACjxF,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,aAAc,QAAS,KAAM,OAAQ,CAAC,WAAY,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,cAC/V,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,oBAAqB,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAS,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,cACxkB,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,SAAU,QAAS,CAAC,MAAO,OAAQ,CAAC,KAAM,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,OAAQ,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAA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,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW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,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU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AAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,U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AAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eAC3uI,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAA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W,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,QAAS,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,WAAY,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,CAA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SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,OAAQ,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,eAC9yK,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,WAAY,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,SAAU,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UA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AW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,MAAO,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,MAAO,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eAC3vP,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC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AC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,eAClrH,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,aAAc,OAAQ,CAAC,KAAM,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,OAAQ,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,QAAS,CAAC,QAAS,UAAW,CAAC,OAAQ,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,MAAO,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC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,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU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U,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAU,UAAW,CAAC,QAAU,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,eACtmG,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,UAAW,QAAS,CAAC,QAAS,MAAO,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,MAAO,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,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CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,OAAQ,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,QAAS,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eACxsG,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,SAAU,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,UAAW,CAAC,WAAY,SAAU,CAAC,WAAY,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,UAAW,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,QAAS,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,SAAU,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,SAAU,CAAC,WAAY,SAAU,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,WAAY,SAAU,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,UAAW,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,SAAU,QAAS,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,UAAW,eACr6F,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,YAAc,SAAU,MAC/H,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,QAAS,OAAQ,aAAc,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,UAAW,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,UAAW,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,OAAQ,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAA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OAAS,UAAW,CAAC,OAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,OAAQ,CAAC,OAAQ,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eACvyF,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,iBAAkB,QAAS,KAAM,OAAQ,CAAC,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,UAAY,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,gBAC5V,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,QAAS,OAAQ,UAAW,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,SAAU,CAAC,QAAS,OAAQ,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,MAAO,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,eAC5oH,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,YAAa,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAaeAChqC,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,8BAAgC,SAAU,MACnJ,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,UAAY,SAAU,MAC5H,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,QAAS,OAAQ,CAAC,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,OAAQ,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAA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AC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,cACnhN,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,SAAU,OAAQ,CAAC,KAAM,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,MAAO,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC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AW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,OAAQ,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,eAChqJ,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,SAAU,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,eAC/yK,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,UAAY,SAAU,MAC7H,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,QAAS,OAAQ,SAAU,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,cACnwC,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,eAAgB,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eAChgE,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,kBAAmB,OAAQ,CAAC,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,gBACnd,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,QAAS,OAAQ,aAAc,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,SAAU,CAAC,SAAU,gBACtU,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,QAAS,OAAQ,QAAS,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,MAAO,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,OAAQ,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,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C,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,OAAQ,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,eAC76J,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,UAAW,OAAQ,yBAA0B,QAAS,MAAQ,SAAU,MAC/J,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,WAAY,OAAQ,CAAC,KAAM,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UA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,CAAC,MAAO,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,OAAQ,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU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AAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,S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C,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAA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,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,MAAO,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,OAAQ,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,QAAS,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,OAAQ,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,eAChtP,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,aAAc,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,OAAQ,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,YAAa,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,YAAa,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,eAClgN,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,UAAW,QAAS,KAAM,OAAQ,CAAC,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,SAAU,eACjV,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,aAAc,QAAS,CAAC,cAAe,MAAO,OAAQ,CAAC,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,eAC/5B,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,eAAgB,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,eACx1G,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,UAAW,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,cACxyC,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,QAAS,OAAQ,CAAC,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,WAAY,WAAY,CAAC,KAAM,WAAY,CAAC,KAAM,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,gBACnY,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,SAAU,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,OAAQ,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAA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,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,OAAQ,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC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C,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,OAAQ,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,QAAS,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,OAAQ,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAA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AC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAU,CAAC,SAAU,SAAU,CAAC,UAAW,QAAU,CAAC,UAAW,QAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,eAC59F,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,yBAA0B,QAAS,KAAM,OAAQ,CAAC,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,UAAW,OAAQ,cAAe,MAAO,eAAgB,KAAM,aAAc,CAAC,UAAY,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,eACjd,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,+BAAgC,QAAS,CAAC,SAAU,QAAS,KAAM,OAAQ,CAAC,WAAY,MAAO,MAAO,MAAO,MAAO,MAAO,UAAW,OAAQ,cAAe,MAAO,eAAgB,KAAM,aAAc,CAAC,UAAY,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,eAC/e,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,UAAW,OAAQ,CAAC,MAAO,MAAO,MAAO,aAAc,CAAC,OAAS,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,OAAQ,CAAC,UAAW,UAAW,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,UAAW,eAC/zP,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SA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AAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,OAAQ,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,OAAQ,UAAW,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,QAAS,UAAW,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,gBACnkI,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,SAAU,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,OAAQ,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,UAAW,CAAC,SAAU,SAAU,CAAC,SAAU,eAC3gH,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,WAAY,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,UAAW,OAAQ,aAAc,CAAC,QAAU,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,QAAS,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,UAAW,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC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"}